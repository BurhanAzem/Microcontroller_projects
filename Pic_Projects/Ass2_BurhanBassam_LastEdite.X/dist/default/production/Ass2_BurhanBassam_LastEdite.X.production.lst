

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 09 22:28:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111   000000                     
   112                           ; Generated 09/02/2023 GMT
   113                           ; 
   114                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F4620 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146   000000                     
   147                           	psect	idataBANK0
   148   00534C                     __pidataBANK0:
   149                           	callstack 0
   150                           
   151                           ;initializer for _LCD_INIT_STRING
   152   00534C  28                 	db	40
   153   00534D  0C                 	db	12
   154   00534E  01                 	db	1
   155   00534F  06                 	db	6
   156                           
   157                           	psect	mediumconst
   158   00FE94                     __pmediumconst:
   159                           	callstack 0
   160   00FE94  00                 	db	0
   161   00FE95                     _octpowers:
   162                           	callstack 0
   163   00FE95  0001               	dw	1
   164   00FE97  0000               	dw	0
   165   00FE99  0008               	dw	8
   166   00FE9B  0000               	dw	0
   167   00FE9D  0040               	dw	64
   168   00FE9F  0000               	dw	0
   169   00FEA1  0200               	dw	512
   170   00FEA3  0000               	dw	0
   171   00FEA5  1000               	dw	4096
   172   00FEA7  0000               	dw	0
   173   00FEA9  8000               	dw	32768
   174   00FEAB  0000               	dw	0
   175   00FEAD  0000               	dw	0
   176   00FEAF  0004               	dw	4
   177   00FEB1  0000               	dw	0
   178   00FEB3  0020               	dw	32
   179   00FEB5  0000               	dw	0
   180   00FEB7  0100               	dw	256
   181   00FEB9  0000               	dw	0
   182   00FEBB  0800               	dw	2048
   183   00FEBD  0000               	dw	0
   184   00FEBF  4000               	dw	16384
   185   00FEC1                     __end_of_octpowers:
   186                           	callstack 0
   187   00FEC1                     __powers_:
   188                           	callstack 0
   189   00FEC1  00                 	db	0
   190   00FEC2  80                 	db	128
   191   00FEC3  3F                 	db	63
   192   00FEC4  00                 	db	0
   193   00FEC5  20                 	db	32
   194   00FEC6  41                 	db	65
   195   00FEC7  00                 	db	0
   196   00FEC8  C8                 	db	200
   197   00FEC9  42                 	db	66
   198   00FECA  00                 	db	0
   199   00FECB  7A                 	db	122
   200   00FECC  44                 	db	68
   201   00FECD  40                 	db	64
   202   00FECE  1C                 	db	28
   203   00FECF  46                 	db	70
   204   00FED0  50                 	db	80
   205   00FED1  C3                 	db	195
   206   00FED2  47                 	db	71
   207   00FED3  24                 	db	36
   208   00FED4  74                 	db	116
   209   00FED5  49                 	db	73
   210   00FED6  97                 	db	151
   211   00FED7  18                 	db	24
   212   00FED8  4B                 	db	75
   213   00FED9  BC                 	db	188
   214   00FEDA  BE                 	db	190
   215   00FEDB  4C                 	db	76
   216   00FEDC  6B                 	db	107
   217   00FEDD  6E                 	db	110
   218   00FEDE  4E                 	db	78
   219   00FEDF  03                 	db	3
   220   00FEE0  15                 	db	21
   221   00FEE1  50                 	db	80
   222   00FEE2  79                 	db	121
   223   00FEE3  AD                 	db	173
   224   00FEE4  60                 	db	96
   225   00FEE5  F3                 	db	243
   226   00FEE6  49                 	db	73
   227   00FEE7  71                 	db	113
   228   00FEE8                     __end_of__powers_:
   229                           	callstack 0
   230   00FEE8                     __npowers_:
   231                           	callstack 0
   232   00FEE8  00                 	db	0
   233   00FEE9  80                 	db	128
   234   00FEEA  3F                 	db	63
   235   00FEEB  CD                 	db	205
   236   00FEEC  CC                 	db	204
   237   00FEED  3D                 	db	61
   238   00FEEE  D7                 	db	215
   239   00FEEF  23                 	db	35
   240   00FEF0  3C                 	db	60
   241   00FEF1  12                 	db	18
   242   00FEF2  83                 	db	131
   243   00FEF3  3A                 	db	58
   244   00FEF4  B7                 	db	183
   245   00FEF5  D1                 	db	209
   246   00FEF6  38                 	db	56
   247   00FEF7  C6                 	db	198
   248   00FEF8  27                 	db	39
   249   00FEF9  37                 	db	55
   250   00FEFA  38                 	db	56
   251   00FEFB  86                 	db	134
   252   00FEFC  35                 	db	53
   253   00FEFD  C0                 	db	192
   254   00FEFE  D6                 	db	214
   255   00FEFF  33                 	db	51
   256   00FF00  CC                 	db	204
   257   00FF01  2B                 	db	43
   258   00FF02  32                 	db	50
   259   00FF03  70                 	db	112
   260   00FF04  89                 	db	137
   261   00FF05  30                 	db	48
   262   00FF06  E7                 	db	231
   263   00FF07  DB                 	db	219
   264   00FF08  2E                 	db	46
   265   00FF09  E5                 	db	229
   266   00FF0A  3C                 	db	60
   267   00FF0B  1E                 	db	30
   268   00FF0C  42                 	db	66
   269   00FF0D  A2                 	db	162
   270   00FF0E  0D                 	db	13
   271   00FF0F                     __end_of__npowers_:
   272                           	callstack 0
   273   00FF0F                     _hexpowers:
   274                           	callstack 0
   275   00FF0F  0001               	dw	1
   276   00FF11  0000               	dw	0
   277   00FF13  0010               	dw	16
   278   00FF15  0000               	dw	0
   279   00FF17  0100               	dw	256
   280   00FF19  0000               	dw	0
   281   00FF1B  1000               	dw	4096
   282   00FF1D  0000               	dw	0
   283   00FF1F  0000               	dw	0
   284   00FF21  0001               	dw	1
   285   00FF23  0000               	dw	0
   286   00FF25  0010               	dw	16
   287   00FF27  0000               	dw	0
   288   00FF29  0100               	dw	256
   289   00FF2B  0000               	dw	0
   290   00FF2D  1000               	dw	4096
   291   00FF2F                     __end_of_hexpowers:
   292                           	callstack 0
   293   00FF2F                     _dpowers:
   294                           	callstack 0
   295   00FF2F  0001               	dw	1
   296   00FF31  0000               	dw	0
   297   00FF33  000A               	dw	10
   298   00FF35  0000               	dw	0
   299   00FF37  0064               	dw	100
   300   00FF39  0000               	dw	0
   301   00FF3B  03E8               	dw	1000
   302   00FF3D  0000               	dw	0
   303   00FF3F  2710               	dw	10000
   304   00FF41  0000               	dw	0
   305   00FF43  86A0               	dw	34464
   306   00FF45  0001               	dw	1
   307   00FF47  4240               	dw	16960
   308   00FF49  000F               	dw	15
   309   00FF4B  9680               	dw	38528
   310   00FF4D  0098               	dw	152
   311   00FF4F  E100               	dw	57600
   312   00FF51  05F5               	dw	1525
   313   00FF53  CA00               	dw	51712
   314   00FF55  3B9A               	dw	15258
   315   00FF57                     __end_of_dpowers:
   316                           	callstack 0
   317   000000                     _PORTAbits	set	3968
   318   000000                     _PIE2	set	4000
   319   000000                     _IPR1	set	3999
   320   000000                     _PIR1	set	3998
   321   000000                     _INTCON2	set	4081
   322   000000                     _ADCON1	set	4033
   323   000000                     _PORTBbits	set	3969
   324   000000                     _PORTCbits	set	3970
   325   000000                     _ADRESL	set	4035
   326   000000                     _ADRESH	set	4036
   327   000000                     _PORTEbits	set	3972
   328   000000                     _T3CONbits	set	4017
   329   000000                     _PIR2	set	4001
   330   000000                     _INTCON3	set	4080
   331   000000                     _INTCON	set	4082
   332   000000                     _T0CON	set	4053
   333   000000                     _ADCON0bits	set	4034
   334   000000                     _TRISA	set	3986
   335   000000                     _TRISB	set	3987
   336   000000                     _PIR2bits	set	4001
   337   000000                     _TMR3L	set	4018
   338   000000                     _TMR3H	set	4019
   339   000000                     _CCP1CON	set	4029
   340   000000                     _ADCON2	set	4032
   341   000000                     _ADCON0	set	4034
   342   000000                     _PR2	set	4043
   343   000000                     _T0CONbits	set	4053
   344   000000                     _TMR0L	set	4054
   345   000000                     _TMR0H	set	4055
   346   000000                     _CCPR1L	set	4030
   347   000000                     _INTCON3bits	set	4080
   348   000000                     _INTCONbits	set	4082
   349   000000                     _IPR2	set	4002
   350   000000                     _T3CON	set	4017
   351   000000                     _PIE1	set	3997
   352   000000                     _TRISE	set	3990
   353   000000                     _TRISD	set	3989
   354   000000                     _TRISC	set	3988
   355   00FF57                     STR_1:
   356   00FF57  54                 	db	84	;'T'
   357   00FF58  69                 	db	105	;'i'
   358   00FF59  6D                 	db	109	;'m'
   359   00FF5A  65                 	db	101	;'e'
   360   00FF5B  3A                 	db	58	;':'
   361   00FF5C  20                 	db	32
   362   00FF5D  25                 	db	37
   363   00FF5E  30                 	db	48	;'0'
   364   00FF5F  32                 	db	50	;'2'
   365   00FF60  64                 	db	100	;'d'
   366   00FF61  3A                 	db	58	;':'
   367   00FF62  25                 	db	37
   368   00FF63  30                 	db	48	;'0'
   369   00FF64  32                 	db	50	;'2'
   370   00FF65  64                 	db	100	;'d'
   371   00FF66  3A                 	db	58	;':'
   372   00FF67  25                 	db	37
   373   00FF68  30                 	db	48	;'0'
   374   00FF69  32                 	db	50	;'2'
   375   00FF6A  64                 	db	100	;'d'
   376   00FF6B  20                 	db	32
   377   00FF6C  20                 	db	32
   378   00FF6D  00                 	db	0
   379   00FF6E                     STR_4:
   380   00FF6E  43                 	db	67	;'C'
   381   00FF6F  54                 	db	84	;'T'
   382   00FF70  3A                 	db	58	;':'
   383   00FF71  25                 	db	37
   384   00FF72  30                 	db	48	;'0'
   385   00FF73  33                 	db	51	;'3'
   386   00FF74  2E                 	db	46
   387   00FF75  31                 	db	49	;'1'
   388   00FF76  66                 	db	102	;'f'
   389   00FF77  43                 	db	67	;'C'
   390   00FF78  20                 	db	32
   391   00FF79  43                 	db	67	;'C'
   392   00FF7A  4B                 	db	75	;'K'
   393   00FF7B  3A                 	db	58	;':'
   394   00FF7C  25                 	db	37
   395   00FF7D  33                 	db	51	;'3'
   396   00FF7E  73                 	db	115	;'s'
   397   00FF7F  00                 	db	0
   398   00FF80                     STR_7:
   399   00FF80  53                 	db	83	;'S'
   400   00FF81  50                 	db	80	;'P'
   401   00FF82  3A                 	db	58	;':'
   402   00FF83  25                 	db	37
   403   00FF84  30                 	db	48	;'0'
   404   00FF85  33                 	db	51	;'3'
   405   00FF86  2E                 	db	46
   406   00FF87  31                 	db	49	;'1'
   407   00FF88  66                 	db	102	;'f'
   408   00FF89  43                 	db	67	;'C'
   409   00FF8A  20                 	db	32
   410   00FF8B  48                 	db	72	;'H'
   411   00FF8C  54                 	db	84	;'T'
   412   00FF8D  3A                 	db	58	;':'
   413   00FF8E  25                 	db	37
   414   00FF8F  33                 	db	51	;'3'
   415   00FF90  73                 	db	115	;'s'
   416   00FF91  00                 	db	0
   417   00FF92                     STR_20:
   418   00FF92  30                 	db	48	;'0'
   419   00FF93  31                 	db	49	;'1'
   420   00FF94  32                 	db	50	;'2'
   421   00FF95  33                 	db	51	;'3'
   422   00FF96  34                 	db	52	;'4'
   423   00FF97  35                 	db	53	;'5'
   424   00FF98  36                 	db	54	;'6'
   425   00FF99  37                 	db	55	;'7'
   426   00FF9A  38                 	db	56	;'8'
   427   00FF9B  39                 	db	57	;'9'
   428   00FF9C  41                 	db	65	;'A'
   429   00FF9D  42                 	db	66	;'B'
   430   00FF9E  43                 	db	67	;'C'
   431   00FF9F  44                 	db	68	;'D'
   432   00FFA0  45                 	db	69	;'E'
   433   00FFA1  46                 	db	70	;'F'
   434   00FFA2  00                 	db	0
   435   00FFA3                     STR_21:
   436   00FFA3  30                 	db	48	;'0'
   437   00FFA4  31                 	db	49	;'1'
   438   00FFA5  32                 	db	50	;'2'
   439   00FFA6  33                 	db	51	;'3'
   440   00FFA7  34                 	db	52	;'4'
   441   00FFA8  35                 	db	53	;'5'
   442   00FFA9  36                 	db	54	;'6'
   443   00FFAA  37                 	db	55	;'7'
   444   00FFAB  38                 	db	56	;'8'
   445   00FFAC  39                 	db	57	;'9'
   446   00FFAD  61                 	db	97	;'a'
   447   00FFAE  62                 	db	98	;'b'
   448   00FFAF  63                 	db	99	;'c'
   449   00FFB0  64                 	db	100	;'d'
   450   00FFB1  65                 	db	101	;'e'
   451   00FFB2  66                 	db	102	;'f'
   452   00FFB3  00                 	db	0
   453   00FFB4                     STR_17:
   454   00FFB4  4D                 	db	77	;'M'
   455   00FFB5  44                 	db	68	;'D'
   456   00FFB6  3A                 	db	58	;':'
   457   00FFB7  25                 	db	37
   458   00FFB8  73                 	db	115	;'s'
   459   00FFB9  20                 	db	32
   460   00FFBA  50                 	db	80	;'P'
   461   00FFBB  3A                 	db	58	;':'
   462   00FFBC  25                 	db	37
   463   00FFBD  64                 	db	100	;'d'
   464   00FFBE  20                 	db	32
   465   00FFBF  20                 	db	32
   466   00FFC0  48                 	db	72	;'H'
   467   00FFC1  3A                 	db	58	;':'
   468   00FFC2  25                 	db	37
   469   00FFC3  64                 	db	100	;'d'
   470   00FFC4  00                 	db	0
   471   00FFC5                     STR_18:
   472   00FFC5  4D                 	db	77	;'M'
   473   00FFC6  44                 	db	68	;'D'
   474   00FFC7  3A                 	db	58	;':'
   475   00FFC8  25                 	db	37
   476   00FFC9  73                 	db	115	;'s'
   477   00FFCA  20                 	db	32
   478   00FFCB  50                 	db	80	;'P'
   479   00FFCC  3A                 	db	58	;':'
   480   00FFCD  41                 	db	65	;'A'
   481   00FFCE  75                 	db	117	;'u'
   482   00FFCF  74                 	db	116	;'t'
   483   00FFD0  20                 	db	32
   484   00FFD1  48                 	db	72	;'H'
   485   00FFD2  3A                 	db	58	;':'
   486   00FFD3  25                 	db	37
   487   00FFD4  64                 	db	100	;'d'
   488   00FFD5  00                 	db	0
   489   00FFD6                     STR_19:
   490   00FFD6  28                 	db	40
   491   00FFD7  6E                 	db	110	;'n'
   492   00FFD8  75                 	db	117	;'u'
   493   00FFD9  6C                 	db	108	;'l'
   494   00FFDA  6C                 	db	108	;'l'
   495   00FFDB  29                 	db	41
   496   00FFDC  00                 	db	0
   497   00FFDD                     STR_16:
   498   00FFDD  48                 	db	72	;'H'
   499   00FFDE  54                 	db	84	;'T'
   500   00FFDF  25                 	db	37
   501   00FFE0  00                 	db	0
   502   00FFE1                     STR_2:
   503   00FFE1  4F                 	db	79	;'O'
   504   00FFE2  46                 	db	70	;'F'
   505   00FFE3  46                 	db	70	;'F'
   506   00FFE4  00                 	db	0
   507   00FFE5                     STR_13:
   508   00FFE5  31                 	db	49	;'1'
   509   00FFE6  30                 	db	48	;'0'
   510   00FFE7  4D                 	db	77	;'M'
   511   00FFE8  00                 	db	0
   512   00FFE9                     STR_11:
   513   00FFE9  31                 	db	49	;'1'
   514   00FFEA  30                 	db	48	;'0'
   515   00FFEB  53                 	db	83	;'S'
   516   00FFEC  00                 	db	0
   517   00FFED                     STR_15:
   518   00FFED  48                 	db	72	;'H'
   519   00FFEE  59                 	db	89	;'Y'
   520   00FFEF  53                 	db	83	;'S'
   521   00FFF0  00                 	db	0
   522   00FFF1                     STR_10:
   523   00FFF1  53                 	db	83	;'S'
   524   00FFF2  65                 	db	101	;'e'
   525   00FFF3  63                 	db	99	;'c'
   526   00FFF4  00                 	db	0
   527   00FFF5                     STR_12:
   528   00FFF5  4D                 	db	77	;'M'
   529   00FFF6  69                 	db	105	;'i'
   530   00FFF7  6E                 	db	110	;'n'
   531   00FFF8  00                 	db	0
   532   00FFF9                     STR_3:
   533   00FFF9  4F                 	db	79	;'O'
   534   00FFFA  4E                 	db	78	;'N'
   535   00FFFB  00                 	db	0
   536   00FFFC                     STR_14:
   537   00FFFC  48                 	db	72	;'H'
   538   00FFFD  52                 	db	82	;'R'
   539   00FFFE  00                 	db	0
   540   00FFFF  00                 	db	0	; dummy byte at the end
   541   000000                     
   542                           ; #config settings
   543                           
   544                           	psect	cinit
   545   004CE2                     __pcinit:
   546                           	callstack 0
   547   004CE2                     start_initialization:
   548                           	callstack 0
   549   004CE2                     __initialization:
   550                           	callstack 0
   551                           
   552                           ; Initialize objects allocated to BANK0 (4 bytes)
   553                           ; load TBLPTR registers with __pidataBANK0
   554   004CE2  0E4C               	movlw	low __pidataBANK0
   555   004CE4  6EF6               	movwf	tblptrl,c
   556   004CE6  0E53               	movlw	high __pidataBANK0
   557   004CE8  6EF7               	movwf	tblptrh,c
   558   004CEA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   559   004CEC  6EF8               	movwf	tblptru,c
   560   004CEE  EE00  F0D2         	lfsr	0,__pdataBANK0
   561   004CF2  EE10 F004          	lfsr	1,4
   562   004CF6                     copy_data0:
   563   004CF6  0009               	tblrd		*+
   564   004CF8  CFF5 FFEE          	movff	tablat,postinc0
   565   004CFC  50E5               	movf	postdec1,w,c
   566   004CFE  50E1               	movf	fsr1l,w,c
   567   004D00  E1FA               	bnz	copy_data0
   568                           
   569                           ; Clear objects allocated to BANK1 (16 bytes)
   570   004D02  EE01  F07F         	lfsr	0,__pbssBANK1
   571   004D06  0E10               	movlw	16
   572   004D08                     clear_0:
   573   004D08  6AEE               	clrf	postinc0,c
   574   004D0A  06E8               	decf	wreg,f,c
   575   004D0C  E1FD               	bnz	clear_0
   576                           
   577                           ; Clear objects allocated to BANK0 (19 bytes)
   578   004D0E  EE00  F0BF         	lfsr	0,__pbssBANK0
   579   004D12  0E13               	movlw	19
   580   004D14                     clear_1:
   581   004D14  6AEE               	clrf	postinc0,c
   582   004D16  06E8               	decf	wreg,f,c
   583   004D18  E1FD               	bnz	clear_1
   584                           
   585                           ; Clear objects allocated to COMRAM (2 bytes)
   586   004D1A  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   587   004D1C  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   588   004D1E                     end_of_initialization:
   589                           	callstack 0
   590   004D1E                     __end_of__initialization:
   591                           	callstack 0
   592   004D1E  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   593   004D20  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   594   004D22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   595   004D24  6EF8               	movwf	tblptru,c
   596   004D26  0100               	movlb	0
   597   004D28  EF7C  F012         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssCOMRAM
   600   00007D                     __pbssCOMRAM:
   601                           	callstack 0
   602   00007D                     _Cooking_Mode:
   603                           	callstack 0
   604   00007D                     	ds	2
   605                           
   606                           	psect	bssBANK0
   607   0000BF                     __pbssBANK0:
   608                           	callstack 0
   609   0000BF                     _AN:
   610                           	callstack 0
   611   0000BF                     	ds	9
   612   0000C8                     _Int_Heat_Counter:
   613                           	callstack 0
   614   0000C8                     	ds	2
   615   0000CA                     _count_hour:
   616                           	callstack 0
   617   0000CA                     	ds	2
   618   0000CC                     _count_min:
   619                           	callstack 0
   620   0000CC                     	ds	2
   621   0000CE                     _count_sec:
   622                           	callstack 0
   623   0000CE                     	ds	2
   624   0000D0                     _Buzzer_ON:
   625                           	callstack 0
   626   0000D0                     	ds	2
   627                           
   628                           	psect	dataBANK0
   629   0000D2                     __pdataBANK0:
   630                           	callstack 0
   631   0000D2                     _LCD_INIT_STRING:
   632                           	callstack 0
   633   0000D2                     	ds	4
   634                           
   635                           	psect	bssBANK1
   636   00017F                     __pbssBANK1:
   637                           	callstack 0
   638   00017F                     _SetUp_Point:
   639                           	callstack 0
   640   00017F                     	ds	3
   641   000182                     _Cooking_Temp:
   642                           	callstack 0
   643   000182                     	ds	3
   644   000185                     _Percent_Heat_Counter:
   645                           	callstack 0
   646   000185                     	ds	2
   647   000187                     _Hysteresis:
   648                           	callstack 0
   649   000187                     	ds	2
   650   000189                     _Heating:
   651                           	callstack 0
   652   000189                     	ds	2
   653   00018B                     _Cooking:
   654                           	callstack 0
   655   00018B                     	ds	2
   656   00018D                     _Setting_Mode:
   657                           	callstack 0
   658   00018D                     	ds	2
   659                           
   660                           	psect	cstackBANK1
   661   000100                     __pcstackBANK1:
   662                           	callstack 0
   663   000100                     ??___ftmul:
   664   000100                     ___llmod@counter:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x0
   668   000100                     	ds	3
   669   000103                     ___ftmul@exp:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x3
   673   000103                     	ds	1
   674   000104                     ___ftmul@f3_as_product:
   675                           	callstack 0
   676                           
   677                           ; 3 bytes @ 0x4
   678   000104                     	ds	3
   679   000107                     ___ftmul@cntr:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x7
   683   000107                     	ds	1
   684   000108                     ___ftmul@sign:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x8
   688   000108                     	ds	1
   689   000109                     ?___ftdiv:
   690                           	callstack 0
   691   000109                     ?_fround:
   692                           	callstack 0
   693   000109                     ?_scale:
   694                           	callstack 0
   695   000109                     ___ftdiv@f1:
   696                           	callstack 0
   697                           
   698                           ; 3 bytes @ 0x9
   699   000109                     	ds	3
   700   00010C                     ??_fround:
   701   00010C                     ___ftdiv@f2:
   702                           	callstack 0
   703   00010C                     _scale$1739:
   704                           	callstack 0
   705                           
   706                           ; 3 bytes @ 0xC
   707   00010C                     	ds	2
   708   00010E                     _fround$1738:
   709                           	callstack 0
   710                           
   711                           ; 3 bytes @ 0xE
   712   00010E                     	ds	1
   713   00010F                     ??___ftdiv:
   714   00010F                     scale@scl:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0xF
   718   00010F                     	ds	1
   719   000110                     ?___fttol:
   720                           	callstack 0
   721   000110                     ___fttol@f1:
   722                           	callstack 0
   723                           
   724                           ; 3 bytes @ 0x10
   725   000110                     	ds	1
   726   000111                     _fround$1737:
   727                           	callstack 0
   728                           
   729                           ; 3 bytes @ 0x11
   730   000111                     	ds	1
   731   000112                     ___ftdiv@cntr:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x12
   735   000112                     	ds	1
   736   000113                     ___ftdiv@f3:
   737                           	callstack 0
   738                           
   739                           ; 3 bytes @ 0x13
   740   000113                     	ds	1
   741   000114                     ??___fttol:
   742   000114                     fround@prec:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x14
   746   000114                     	ds	1
   747   000115                     ?___ftadd:
   748                           	callstack 0
   749   000115                     ___ftadd@f1:
   750                           	callstack 0
   751                           
   752                           ; 3 bytes @ 0x15
   753   000115                     	ds	1
   754   000116                     ___ftdiv@exp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x16
   758   000116                     	ds	1
   759   000117                     ___ftdiv@sign:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x17
   763   000117                     	ds	1
   764   000118                     ?_read_adc_voltage:
   765                           	callstack 0
   766   000118                     ___ftadd@f2:
   767                           	callstack 0
   768                           
   769                           ; 3 bytes @ 0x18
   770   000118                     	ds	1
   771   000119                     ___fttol@sign1:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x19
   775   000119                     	ds	1
   776   00011A                     ___fttol@lval:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x1A
   780   00011A                     	ds	1
   781   00011B                     ??___ftadd:
   782   00011B                     read_adc_voltage@voltage:
   783                           	callstack 0
   784                           
   785                           ; 3 bytes @ 0x1B
   786   00011B                     	ds	3
   787   00011E                     read_adc_voltage@channel:
   788                           	callstack 0
   789   00011E                     ___ftadd@sign:
   790                           	callstack 0
   791   00011E                     ___fttol@exp1:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x1E
   795   00011E                     	ds	1
   796   00011F                     ___ftadd@exp2:
   797                           	callstack 0
   798   00011F                     read_adc_voltage@raw_value:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x1F
   802   00011F                     	ds	1
   803   000120                     ___ftadd@exp1:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x20
   807   000120                     	ds	1
   808   000121                     ?___ftsub:
   809                           	callstack 0
   810   000121                     ___ftsub@f1:
   811                           	callstack 0
   812                           
   813                           ; 3 bytes @ 0x21
   814   000121                     	ds	3
   815   000124                     ___ftsub@f2:
   816                           	callstack 0
   817                           
   818                           ; 3 bytes @ 0x24
   819   000124                     	ds	3
   820   000127                     ?_sprintf:
   821                           	callstack 0
   822   000127                     sprintf@sp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x27
   826   000127                     	ds	2
   827   000129                     sprintf@f:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x29
   831   000129                     	ds	8
   832   000131                     ??_sprintf:
   833                           
   834                           ; 1 bytes @ 0x31
   835   000131                     	ds	6
   836   000137                     _sprintf$1740:
   837                           	callstack 0
   838                           
   839                           ; 3 bytes @ 0x37
   840   000137                     	ds	3
   841   00013A                     sprintf@idx:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x3A
   845   00013A                     	ds	1
   846   00013B                     _sprintf$1025:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x3B
   850   00013B                     	ds	2
   851   00013D                     _sprintf$1026:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3D
   855   00013D                     	ds	2
   856   00013F                     _sprintf$1027:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x3F
   860   00013F                     	ds	2
   861   000141                     _sprintf$1028:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x41
   865   000141                     	ds	2
   866   000143                     _sprintf$1034:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x43
   870   000143                     	ds	2
   871   000145                     sprintf@cp:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x45
   875   000145                     	ds	2
   876   000147                     sprintf@len:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x47
   880   000147                     	ds	2
   881   000149                     sprintf@ccnt:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x49
   885   000149                     	ds	2
   886   00014B                     sprintf@ap:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x4B
   890   00014B                     	ds	2
   891   00014D                     sprintf@tmpval:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x4D
   895   00014D                     	ds	4
   896   000151                     sprintf@eexp:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x51
   900   000151                     	ds	2
   901   000153                     sprintf@fval:
   902                           	callstack 0
   903                           
   904                           ; 3 bytes @ 0x53
   905   000153                     	ds	3
   906   000156                     sprintf@val:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x56
   910   000156                     	ds	4
   911   00015A                     sprintf@width:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x5A
   915   00015A                     	ds	2
   916   00015C                     sprintf@prec:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x5C
   920   00015C                     	ds	2
   921   00015E                     sprintf@c:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x5E
   925   00015E                     	ds	1
   926   00015F                     sprintf@flag:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x5F
   930   00015F                     	ds	2
   931   000161                     ??_update_lcd_Line4:
   932   000161                     update_lcd_Line1@ss:
   933                           	callstack 0
   934   000161                     update_lcd_Line2@CT:
   935                           	callstack 0
   936   000161                     update_lcd_Line3@SP:
   937                           	callstack 0
   938                           
   939                           ; 3 bytes @ 0x61
   940   000161                     	ds	2
   941   000163                     update_lcd_Line1@mm:
   942                           	callstack 0
   943   000163                     _update_lcd_Line4$1736:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x63
   947   000163                     	ds	1
   948   000164                     update_lcd_Line2@CK:
   949                           	callstack 0
   950   000164                     update_lcd_Line3@HT:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x64
   954   000164                     	ds	1
   955   000165                     update_lcd_Line1@hh:
   956                           	callstack 0
   957   000165                     update_lcd_Line4@Buffer:
   958                           	callstack 0
   959                           
   960                           ; 16 bytes @ 0x65
   961   000165                     	ds	1
   962   000166                     update_lcd_Line2@Buffer:
   963                           	callstack 0
   964   000166                     update_lcd_Line3@Buffer:
   965                           	callstack 0
   966                           
   967                           ; 16 bytes @ 0x66
   968   000166                     	ds	1
   969   000167                     update_lcd_Line1@Buffer:
   970                           	callstack 0
   971                           
   972                           ; 16 bytes @ 0x67
   973   000167                     	ds	14
   974   000175                     update_lcd_Line4@H:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x75
   978   000175                     	ds	2
   979   000177                     update_lcd_Line4@MD:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x77
   983   000177                     	ds	2
   984   000179                     ??_main:
   985                           
   986                           ; 1 bytes @ 0x79
   987   000179                     	ds	2
   988   00017B                     main@voltage:
   989                           	callstack 0
   990                           
   991                           ; 3 bytes @ 0x7B
   992   00017B                     	ds	3
   993   00017E                     main@channel:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x7E
   997   00017E                     	ds	1
   998                           
   999                           	psect	cstackBANK0
  1000   000080                     __pcstackBANK0:
  1001                           	callstack 0
  1002   000080                     i2_sprintf$2008:
  1003                           	callstack 0
  1004                           
  1005                           ; 3 bytes @ 0x0
  1006   000080                     	ds	3
  1007   000083                     i2_sprintf$1025:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x3
  1011   000083                     	ds	2
  1012   000085                     i2_sprintf$1026:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x5
  1016   000085                     	ds	2
  1017   000087                     i2_sprintf$1027:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x7
  1021   000087                     	ds	2
  1022   000089                     i2_sprintf$1028:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x9
  1026   000089                     	ds	2
  1027   00008B                     i2_sprintf$1034:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xB
  1031   00008B                     	ds	2
  1032   00008D                     i2sprintf@idx:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0xD
  1036   00008D                     	ds	1
  1037   00008E                     i2sprintf@cp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xE
  1041   00008E                     	ds	2
  1042   000090                     i2sprintf@len:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x10
  1046   000090                     	ds	2
  1047   000092                     i2sprintf@ccnt:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x12
  1051   000092                     	ds	2
  1052   000094                     i2sprintf@ap:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x14
  1056   000094                     	ds	2
  1057   000096                     i2sprintf@tmpval:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x16
  1061   000096                     	ds	4
  1062   00009A                     i2sprintf@eexp:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x1A
  1066   00009A                     	ds	2
  1067   00009C                     i2sprintf@fval:
  1068                           	callstack 0
  1069                           
  1070                           ; 3 bytes @ 0x1C
  1071   00009C                     	ds	3
  1072   00009F                     i2sprintf@val:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x1F
  1076   00009F                     	ds	4
  1077   0000A3                     i2sprintf@width:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x23
  1081   0000A3                     	ds	2
  1082   0000A5                     i2sprintf@prec:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x25
  1086   0000A5                     	ds	2
  1087   0000A7                     i2sprintf@c:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x27
  1091   0000A7                     	ds	1
  1092   0000A8                     i2sprintf@flag:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x28
  1096   0000A8                     	ds	2
  1097   0000AA                     ??_isdigit:
  1098   0000AA                     ??_delay_cycles:
  1099   0000AA                     ?_read_adc_raw_no_lib:
  1100                           	callstack 0
  1101   0000AA                     ?___wmul:
  1102                           	callstack 0
  1103   0000AA                     ?___awmod:
  1104                           	callstack 0
  1105   0000AA                     ?___ftpack:
  1106                           	callstack 0
  1107   0000AA                     ?___ftneg:
  1108                           	callstack 0
  1109   0000AA                     ?__tdiv_to_l_:
  1110                           	callstack 0
  1111   0000AA                     ?__div_to_l_:
  1112                           	callstack 0
  1113   0000AA                     ?___lldiv:
  1114                           	callstack 0
  1115   0000AA                     ___lbmod@divisor:
  1116                           	callstack 0
  1117   0000AA                     delay_ms@n:
  1118                           	callstack 0
  1119   0000AA                     ___wmul@multiplier:
  1120                           	callstack 0
  1121   0000AA                     ___awmod@dividend:
  1122                           	callstack 0
  1123   0000AA                     __div_to_l_@f1:
  1124                           	callstack 0
  1125   0000AA                     ___ftpack@arg:
  1126                           	callstack 0
  1127   0000AA                     __tdiv_to_l_@f1:
  1128                           	callstack 0
  1129   0000AA                     ___ftge@ff1:
  1130                           	callstack 0
  1131   0000AA                     ___ftneg@f1:
  1132                           	callstack 0
  1133   0000AA                     ___lldiv@dividend:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x2A
  1137   0000AA                     	ds	1
  1138   0000AB                     ___lbmod@dividend:
  1139                           	callstack 0
  1140   0000AB                     _isdigit$1486:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x2B
  1144   0000AB                     	ds	1
  1145   0000AC                     ??_read_adc_raw_no_lib:
  1146   0000AC                     ___lbmod@counter:
  1147                           	callstack 0
  1148   0000AC                     isdigit@c:
  1149                           	callstack 0
  1150   0000AC                     delay_ms@x:
  1151                           	callstack 0
  1152   0000AC                     ___wmul@multiplicand:
  1153                           	callstack 0
  1154   0000AC                     ___awmod@divisor:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x2C
  1158   0000AC                     	ds	1
  1159   0000AD                     delay_cycles@n:
  1160                           	callstack 0
  1161   0000AD                     ___ftpack@exp:
  1162                           	callstack 0
  1163   0000AD                     ___lbmod@rem:
  1164                           	callstack 0
  1165   0000AD                     __div_to_l_@f2:
  1166                           	callstack 0
  1167   0000AD                     __tdiv_to_l_@f2:
  1168                           	callstack 0
  1169   0000AD                     ___ftge@ff2:
  1170                           	callstack 0
  1171                           
  1172                           ; 3 bytes @ 0x2D
  1173   0000AD                     	ds	1
  1174   0000AE                     ___awmod@counter:
  1175                           	callstack 0
  1176   0000AE                     ___ftpack@sign:
  1177                           	callstack 0
  1178   0000AE                     ___lbdiv@divisor:
  1179                           	callstack 0
  1180   0000AE                     delay_cycles@x:
  1181                           	callstack 0
  1182   0000AE                     read_adc_raw_no_lib@raw_value:
  1183                           	callstack 0
  1184   0000AE                     ___wmul@product:
  1185                           	callstack 0
  1186   0000AE                     ___lldiv@divisor:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x2E
  1190   0000AE                     	ds	1
  1191   0000AF                     ??___ftpack:
  1192   0000AF                     ___awmod@sign:
  1193                           	callstack 0
  1194   0000AF                     ___lbdiv@dividend:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x2F
  1198   0000AF                     	ds	1
  1199   0000B0                     ??__tdiv_to_l_:
  1200   0000B0                     ??_lcd_send_nibble:
  1201   0000B0                     ??___ftge:
  1202   0000B0                     ?___awdiv:
  1203                           	callstack 0
  1204   0000B0                     read_adc_raw_no_lib@channel:
  1205                           	callstack 0
  1206   0000B0                     ___lbdiv@counter:
  1207                           	callstack 0
  1208   0000B0                     ___awdiv@dividend:
  1209                           	callstack 0
  1210   0000B0                     __div_to_l_@quot:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x30
  1214   0000B0                     	ds	1
  1215   0000B1                     lcd_send_nibble@n:
  1216                           	callstack 0
  1217   0000B1                     ___lbdiv@quotient:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x31
  1221   0000B1                     	ds	1
  1222   0000B2                     ?___awtoft:
  1223                           	callstack 0
  1224   0000B2                     ?___lltoft:
  1225                           	callstack 0
  1226   0000B2                     lcd_send_byte@n:
  1227                           	callstack 0
  1228   0000B2                     ___awdiv@divisor:
  1229                           	callstack 0
  1230   0000B2                     ___awtoft@c:
  1231                           	callstack 0
  1232   0000B2                     ___lldiv@quotient:
  1233                           	callstack 0
  1234   0000B2                     ___lltoft@c:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x32
  1238   0000B2                     	ds	1
  1239   0000B3                     lcd_send_byte@cm_data:
  1240                           	callstack 0
  1241   0000B3                     __tdiv_to_l_@quot:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x33
  1245   0000B3                     	ds	1
  1246   0000B4                     lcd_init@i:
  1247                           	callstack 0
  1248   0000B4                     lcd_gotoxy@y:
  1249                           	callstack 0
  1250   0000B4                     ___awdiv@counter:
  1251                           	callstack 0
  1252   0000B4                     __div_to_l_@cntr:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x34
  1256   0000B4                     	ds	1
  1257   0000B5                     lcd_gotoxy@x:
  1258                           	callstack 0
  1259   0000B5                     ___awdiv@sign:
  1260                           	callstack 0
  1261   0000B5                     ___awtoft@sign:
  1262                           	callstack 0
  1263   0000B5                     __div_to_l_@exp1:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x35
  1267   0000B5                     	ds	1
  1268   0000B6                     ??___lltoft:
  1269   0000B6                     lcd_gotoxy@address:
  1270                           	callstack 0
  1271   0000B6                     ___lldiv@counter:
  1272                           	callstack 0
  1273   0000B6                     ___awdiv@quotient:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x36
  1277   0000B6                     	ds	1
  1278   0000B7                     ?___llmod:
  1279                           	callstack 0
  1280   0000B7                     lcd_putc@c:
  1281                           	callstack 0
  1282   0000B7                     __tdiv_to_l_@cntr:
  1283                           	callstack 0
  1284   0000B7                     ___llmod@dividend:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x37
  1288   0000B7                     	ds	1
  1289   0000B8                     ?___ftmul:
  1290                           	callstack 0
  1291   0000B8                     __tdiv_to_l_@exp1:
  1292                           	callstack 0
  1293   0000B8                     lcd_puts@s:
  1294                           	callstack 0
  1295   0000B8                     ___ftmul@f1:
  1296                           	callstack 0
  1297                           
  1298                           ; 3 bytes @ 0x38
  1299   0000B8                     	ds	2
  1300   0000BA                     ___lltoft@exp:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x3A
  1304   0000BA                     	ds	1
  1305   0000BB                     ___ftmul@f2:
  1306                           	callstack 0
  1307   0000BB                     ___llmod@divisor:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x3B
  1311   0000BB                     	ds	3
  1312   0000BE                     
  1313                           ; 1 bytes @ 0x3E
  1314   0000BE                     	ds	1
  1315   0000BF                     
  1316                           ; 1 bytes @ 0x3F
  1317                           
  1318                           	psect	cstackCOMRAM
  1319   000001                     __pcstackCOMRAM:
  1320                           	callstack 0
  1321   000001                     ??i2_delay_cycles:
  1322   000001                     ??i2_isdigit:
  1323   000001                     ?i2___wmul:
  1324                           	callstack 0
  1325   000001                     ?i2___awmod:
  1326                           	callstack 0
  1327   000001                     ?i2___ftpack:
  1328                           	callstack 0
  1329   000001                     ?i2___ftneg:
  1330                           	callstack 0
  1331   000001                     ?i2___lldiv:
  1332                           	callstack 0
  1333   000001                     ?i2__div_to_l_:
  1334                           	callstack 0
  1335   000001                     ?i2__tdiv_to_l_:
  1336                           	callstack 0
  1337   000001                     i2___lbmod@divisor:
  1338                           	callstack 0
  1339   000001                     i2delay_ms@n:
  1340                           	callstack 0
  1341   000001                     i2___wmul@multiplier:
  1342                           	callstack 0
  1343   000001                     i2___awmod@dividend:
  1344                           	callstack 0
  1345   000001                     i2__div_to_l_@f1:
  1346                           	callstack 0
  1347   000001                     i2___ftpack@arg:
  1348                           	callstack 0
  1349   000001                     i2__tdiv_to_l_@f1:
  1350                           	callstack 0
  1351   000001                     i2___ftneg@f1:
  1352                           	callstack 0
  1353   000001                     i2___lldiv@dividend:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x0
  1357   000001                     	ds	1
  1358   000002                     i2___lbmod@dividend:
  1359                           	callstack 0
  1360   000002                     i2_isdigit$1486:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x1
  1364   000002                     	ds	1
  1365   000003                     i2___lbmod@counter:
  1366                           	callstack 0
  1367   000003                     i2isdigit@c:
  1368                           	callstack 0
  1369   000003                     i2delay_ms@x:
  1370                           	callstack 0
  1371   000003                     i2___wmul@multiplicand:
  1372                           	callstack 0
  1373   000003                     i2___awmod@divisor:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x2
  1377   000003                     	ds	1
  1378   000004                     i2delay_cycles@n:
  1379                           	callstack 0
  1380   000004                     i2___ftpack@exp:
  1381                           	callstack 0
  1382   000004                     i2___lbmod@rem:
  1383                           	callstack 0
  1384   000004                     i2__div_to_l_@f2:
  1385                           	callstack 0
  1386   000004                     i2__tdiv_to_l_@f2:
  1387                           	callstack 0
  1388                           
  1389                           ; 3 bytes @ 0x3
  1390   000004                     	ds	1
  1391   000005                     i2___awmod@counter:
  1392                           	callstack 0
  1393   000005                     i2___ftpack@sign:
  1394                           	callstack 0
  1395   000005                     i2___lbdiv@divisor:
  1396                           	callstack 0
  1397   000005                     i2delay_cycles@x:
  1398                           	callstack 0
  1399   000005                     i2___wmul@product:
  1400                           	callstack 0
  1401   000005                     i2___lldiv@divisor:
  1402                           	callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x4
  1405   000005                     	ds	1
  1406   000006                     ??i2___ftpack:
  1407   000006                     i2___awmod@sign:
  1408                           	callstack 0
  1409   000006                     i2___lbdiv@dividend:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x5
  1413   000006                     	ds	1
  1414   000007                     ??i2_lcd_send_nibble:
  1415   000007                     ??i2__tdiv_to_l_:
  1416   000007                     ?i2___awdiv:
  1417                           	callstack 0
  1418   000007                     i2___lbdiv@counter:
  1419                           	callstack 0
  1420   000007                     i2___awdiv@dividend:
  1421                           	callstack 0
  1422   000007                     i2__div_to_l_@quot:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x6
  1426   000007                     	ds	1
  1427   000008                     i2lcd_send_nibble@n:
  1428                           	callstack 0
  1429   000008                     i2___lbdiv@quotient:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x7
  1433   000008                     	ds	1
  1434   000009                     ?___lwtoft:
  1435                           	callstack 0
  1436   000009                     ?i2___lltoft:
  1437                           	callstack 0
  1438   000009                     i2lcd_send_byte@n:
  1439                           	callstack 0
  1440   000009                     ___lwtoft@c:
  1441                           	callstack 0
  1442   000009                     i2___awdiv@divisor:
  1443                           	callstack 0
  1444   000009                     i2___lldiv@quotient:
  1445                           	callstack 0
  1446   000009                     i2___lltoft@c:
  1447                           	callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x8
  1450   000009                     	ds	1
  1451   00000A                     i2lcd_send_byte@cm_data:
  1452                           	callstack 0
  1453   00000A                     i2__tdiv_to_l_@quot:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x9
  1457   00000A                     	ds	1
  1458   00000B                     i2lcd_gotoxy@y:
  1459                           	callstack 0
  1460   00000B                     i2___awdiv@counter:
  1461                           	callstack 0
  1462   00000B                     i2__div_to_l_@cntr:
  1463                           	callstack 0
  1464                           
  1465                           ; 1 bytes @ 0xA
  1466   00000B                     	ds	1
  1467   00000C                     i2lcd_gotoxy@x:
  1468                           	callstack 0
  1469   00000C                     i2___awdiv@sign:
  1470                           	callstack 0
  1471   00000C                     i2__div_to_l_@exp1:
  1472                           	callstack 0
  1473                           
  1474                           ; 1 bytes @ 0xB
  1475   00000C                     	ds	1
  1476   00000D                     ??i2___lltoft:
  1477   00000D                     i2lcd_gotoxy@address:
  1478                           	callstack 0
  1479   00000D                     i2___lldiv@counter:
  1480                           	callstack 0
  1481   00000D                     i2___awdiv@quotient:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0xC
  1485   00000D                     	ds	1
  1486   00000E                     ?i2___llmod:
  1487                           	callstack 0
  1488   00000E                     i2lcd_putc@c:
  1489                           	callstack 0
  1490   00000E                     i2__tdiv_to_l_@cntr:
  1491                           	callstack 0
  1492   00000E                     i2___llmod@dividend:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0xD
  1496   00000E                     	ds	1
  1497   00000F                     ?i2___ftmul:
  1498                           	callstack 0
  1499   00000F                     i2__tdiv_to_l_@exp1:
  1500                           	callstack 0
  1501   00000F                     i2lcd_puts@s:
  1502                           	callstack 0
  1503   00000F                     i2___ftmul@f1:
  1504                           	callstack 0
  1505                           
  1506                           ; 3 bytes @ 0xE
  1507   00000F                     	ds	2
  1508   000011                     i2___lltoft@exp:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0x10
  1512   000011                     	ds	1
  1513   000012                     i2___ftmul@f2:
  1514                           	callstack 0
  1515   000012                     i2___llmod@divisor:
  1516                           	callstack 0
  1517                           
  1518                           ; 4 bytes @ 0x11
  1519   000012                     	ds	3
  1520   000015                     ??i2___ftmul:
  1521                           
  1522                           ; 1 bytes @ 0x14
  1523   000015                     	ds	1
  1524   000016                     i2___llmod@counter:
  1525                           	callstack 0
  1526                           
  1527                           ; 1 bytes @ 0x15
  1528   000016                     	ds	2
  1529   000018                     i2___ftmul@exp:
  1530                           	callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x17
  1533   000018                     	ds	1
  1534   000019                     i2___ftmul@f3_as_product:
  1535                           	callstack 0
  1536                           
  1537                           ; 3 bytes @ 0x18
  1538   000019                     	ds	3
  1539   00001C                     i2___ftmul@cntr:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x1B
  1543   00001C                     	ds	1
  1544   00001D                     i2___ftmul@sign:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x1C
  1548   00001D                     	ds	1
  1549   00001E                     ?i2_fround:
  1550                           	callstack 0
  1551   00001E                     ?i2_scale:
  1552                           	callstack 0
  1553                           
  1554                           ; 3 bytes @ 0x1D
  1555   00001E                     	ds	3
  1556   000021                     ??i2_fround:
  1557   000021                     i2_scale$2007:
  1558                           	callstack 0
  1559                           
  1560                           ; 3 bytes @ 0x20
  1561   000021                     	ds	2
  1562   000023                     i2_fround$2006:
  1563                           	callstack 0
  1564                           
  1565                           ; 3 bytes @ 0x22
  1566   000023                     	ds	1
  1567   000024                     i2scale@scl:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x23
  1571   000024                     	ds	2
  1572   000026                     i2_fround$2005:
  1573                           	callstack 0
  1574                           
  1575                           ; 3 bytes @ 0x25
  1576   000026                     	ds	3
  1577   000029                     i2fround@prec:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x28
  1581   000029                     	ds	1
  1582   00002A                     ?i2___ftadd:
  1583                           	callstack 0
  1584   00002A                     i2___ftadd@f1:
  1585                           	callstack 0
  1586                           
  1587                           ; 3 bytes @ 0x29
  1588   00002A                     	ds	3
  1589   00002D                     i2___ftadd@f2:
  1590                           	callstack 0
  1591                           
  1592                           ; 3 bytes @ 0x2C
  1593   00002D                     	ds	3
  1594   000030                     ??i2___ftadd:
  1595                           
  1596                           ; 1 bytes @ 0x2F
  1597   000030                     	ds	3
  1598   000033                     i2___ftadd@sign:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x32
  1602   000033                     	ds	1
  1603   000034                     i2___ftadd@exp2:
  1604                           	callstack 0
  1605                           
  1606                           ; 1 bytes @ 0x33
  1607   000034                     	ds	1
  1608   000035                     i2___ftadd@exp1:
  1609                           	callstack 0
  1610                           
  1611                           ; 1 bytes @ 0x34
  1612   000035                     	ds	1
  1613   000036                     ?i2___ftsub:
  1614                           	callstack 0
  1615   000036                     i2___ftge@ff1:
  1616                           	callstack 0
  1617   000036                     i2___ftsub@f1:
  1618                           	callstack 0
  1619                           
  1620                           ; 3 bytes @ 0x35
  1621   000036                     	ds	3
  1622   000039                     i2___ftge@ff2:
  1623                           	callstack 0
  1624   000039                     i2___ftsub@f2:
  1625                           	callstack 0
  1626                           
  1627                           ; 3 bytes @ 0x38
  1628   000039                     	ds	3
  1629   00003C                     ??i2___ftge:
  1630   00003C                     ?i2___fttol:
  1631                           	callstack 0
  1632   00003C                     i2___fttol@f1:
  1633                           	callstack 0
  1634                           
  1635                           ; 3 bytes @ 0x3B
  1636   00003C                     	ds	4
  1637   000040                     ??i2___fttol:
  1638                           
  1639                           ; 1 bytes @ 0x3F
  1640   000040                     	ds	5
  1641   000045                     i2___fttol@sign1:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x44
  1645   000045                     	ds	1
  1646   000046                     i2___fttol@lval:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x45
  1650   000046                     	ds	4
  1651   00004A                     i2___fttol@exp1:
  1652                           	callstack 0
  1653                           
  1654                           ; 1 bytes @ 0x49
  1655   00004A                     	ds	1
  1656   00004B                     ?i2_sprintf:
  1657                           	callstack 0
  1658   00004B                     Timer3_Int_Handling@error:
  1659                           	callstack 0
  1660   00004B                     i2sprintf@sp:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x4A
  1664   00004B                     	ds	2
  1665   00004D                     i2sprintf@f:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x4C
  1669   00004D                     	ds	8
  1670   000055                     ??i2_sprintf:
  1671                           
  1672                           ; 1 bytes @ 0x54
  1673   000055                     	ds	6
  1674   00005B                     ??i2_update_lcd_Line4:
  1675   00005B                     i2update_lcd_Line1@Buffer:
  1676                           	callstack 0
  1677   00005B                     i2update_lcd_Line2@Buffer:
  1678                           	callstack 0
  1679   00005B                     i2update_lcd_Line3@Buffer:
  1680                           	callstack 0
  1681                           
  1682                           ; 16 bytes @ 0x5A
  1683   00005B                     	ds	2
  1684   00005D                     i2update_lcd_Line4@Buffer:
  1685                           	callstack 0
  1686                           
  1687                           ; 16 bytes @ 0x5C
  1688   00005D                     	ds	14
  1689   00006B                     i2update_lcd_Line1@ss:
  1690                           	callstack 0
  1691   00006B                     i2update_lcd_Line2@CT:
  1692                           	callstack 0
  1693   00006B                     i2update_lcd_Line3@SP:
  1694                           	callstack 0
  1695                           
  1696                           ; 3 bytes @ 0x6A
  1697   00006B                     	ds	2
  1698   00006D                     i2update_lcd_Line1@mm:
  1699                           	callstack 0
  1700   00006D                     i2_update_lcd_Line4$2004:
  1701                           	callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x6C
  1704   00006D                     	ds	1
  1705   00006E                     i2update_lcd_Line2@CK:
  1706                           	callstack 0
  1707   00006E                     i2update_lcd_Line3@HT:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x6D
  1711   00006E                     	ds	1
  1712   00006F                     i2update_lcd_Line1@hh:
  1713                           	callstack 0
  1714   00006F                     i2update_lcd_Line4@H:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x6E
  1718   00006F                     	ds	2
  1719   000071                     i2update_lcd_Line4@MD:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x70
  1723   000071                     	ds	2
  1724   000073                     ??_highIsr:
  1725   000073                     
  1726                           ; 1 bytes @ 0x72
  1727   000073                     	ds	10
  1728                           
  1729 ;;
  1730 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1731 ;;
  1732 ;; *************** function _main *****************
  1733 ;; Defined at:
  1734 ;;		line 421 in file "Cooking_Main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  Buffer         32    0        unsigned char [32]
  1739 ;;  voltage         3  123[BANK1 ] float 
  1740 ;;  raw_val         2    0        int 
  1741 ;;  channel         1  126[BANK1 ] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 3F/1
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        6 bytes
  1756 ;; Hardware stack levels required when called: 18
  1757 ;; This function calls:
  1758 ;;		___ftdiv
  1759 ;;		___ftmul
  1760 ;;		_delay_ms
  1761 ;;		_initTimers
  1762 ;;		_init_adc_no_lib
  1763 ;;		_init_pwm1
  1764 ;;		_lcd_init
  1765 ;;		_lcd_putc
  1766 ;;		_read_adc_voltage
  1767 ;;		_set_baoundares
  1768 ;;		_setupPorts
  1769 ;;		_update_lcd
  1770 ;; This function is called by:
  1771 ;;		Startup code after reset
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text0
  1776   0024F8                     __ptext0:
  1777                           	callstack 0
  1778   0024F8                     _main:
  1779                           	callstack 13
  1780                           
  1781                           ;Cooking_Main.c: 423: char Buffer[32];;Cooking_Main.c: 424: int raw_val;;Cooking_Main.c:
      +                           425: unsigned char channel;;Cooking_Main.c: 426: float voltage;;Cooking_Main.c: 428: se
      +                          tupPorts();
  1782                           
  1783                           ;incstack = 0
  1784   0024F8  EC58  F029         	call	_setupPorts	;wreg free
  1785                           
  1786                           ;Cooking_Main.c: 429: lcd_init();
  1787   0024FC  EC67  F025         	call	_lcd_init	;wreg free
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;Cooking_Main.c: 430: init_adc_no_lib();
  1791   002500  EC88  F029         	call	_init_adc_no_lib	;wreg free
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;Cooking_Main.c: 431: init_pwm1();
  1795   002504  ECA2  F029         	call	_init_pwm1	;wreg free
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;Cooking_Main.c: 432: initTimers();
  1799   002508  ECD7  F027         	call	_initTimers	;wreg free
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;Cooking_Main.c: 434: lcd_putc('\f');
  1803   00250C  0E0C               	movlw	12
  1804   00250E  ECF1  F025         	call	_lcd_putc
  1805   002512                     l336:
  1806   002512  0004               	clrwdt		;# 
  1807                           
  1808                           ;Cooking_Main.c: 437: delay_ms(200);
  1809   002514  0E00               	movlw	0
  1810   002516  0100               	movlb	0	; () banked
  1811   002518  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  1812   00251A  0EC8               	movlw	200
  1813   00251C  6FAA               	movwf	delay_ms@n& (0+255),b
  1814   00251E  EC66  F028         	call	_delay_ms	;wreg free
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;Cooking_Main.c: 438: update_lcd();
  1818   002522  EC76  F029         	call	_update_lcd	;wreg free
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;Cooking_Main.c: 439: set_baoundares();
  1822   002526  ECAC  F01D         	call	_set_baoundares	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;Cooking_Main.c: 440: for (channel = 0; channel < 3; channel++)
  1826   00252A  0E00               	movlw	0
  1827   00252C  0101               	movlb	1	; () banked
  1828   00252E  6F7E               	movwf	main@channel& (0+255),b
  1829   002530  D04D               	goto	l9884
  1830   002532                     l9874:
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;Cooking_Main.c: 446: voltage = read_adc_voltage((unsigned char) channel);
  1834   002532  517E               	movf	main@channel& (0+255),w,b
  1835   002534  EC3C  F024         	call	_read_adc_voltage
  1836   002538  C118  F17B         	movff	?_read_adc_voltage,main@voltage
  1837   00253C  C119  F17C         	movff	?_read_adc_voltage+1,main@voltage+1
  1838   002540  C11A  F17D         	movff	?_read_adc_voltage+2,main@voltage+2
  1839                           
  1840                           ;Cooking_Main.c: 447: SetUp_Point = (voltage * 300) / 5.0;
  1841   002544  0E00               	movlw	0
  1842   002546  0100               	movlb	0	; () banked
  1843   002548  6FBB               	movwf	___ftmul@f2& (0+255),b
  1844   00254A  0E96               	movlw	150
  1845   00254C  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  1846   00254E  0E43               	movlw	67
  1847   002550  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  1848   002552  C17B  F0B8         	movff	main@voltage,___ftmul@f1
  1849   002556  C17C  F0B9         	movff	main@voltage+1,___ftmul@f1+1
  1850   00255A  C17D  F0BA         	movff	main@voltage+2,___ftmul@f1+2
  1851   00255E  EC8D  F019         	call	___ftmul	;wreg free
  1852   002562  C0B8  F109         	movff	?___ftmul,___ftdiv@f1
  1853   002566  C0B9  F10A         	movff	?___ftmul+1,___ftdiv@f1+1
  1854   00256A  C0BA  F10B         	movff	?___ftmul+2,___ftdiv@f1+2
  1855   00256E  0E00               	movlw	0
  1856   002570  0101               	movlb	1	; () banked
  1857   002572  6F0C               	movwf	___ftdiv@f2& (0+255),b
  1858   002574  0EA0               	movlw	160
  1859   002576  6F0D               	movwf	(___ftdiv@f2+1)& (0+255),b
  1860   002578  0E40               	movlw	64
  1861   00257A  6F0E               	movwf	(___ftdiv@f2+2)& (0+255),b
  1862   00257C  EC96  F01E         	call	___ftdiv	;wreg free
  1863   002580  C109  F17F         	movff	?___ftdiv,_SetUp_Point
  1864   002584  C10A  F180         	movff	?___ftdiv+1,_SetUp_Point+1
  1865   002588  C10B  F181         	movff	?___ftdiv+2,_SetUp_Point+2
  1866                           
  1867                           ;Cooking_Main.c: 448: break;
  1868   00258C  D026               	goto	l9886
  1869   00258E                     l9878:
  1870                           
  1871                           ; BSR set to: 1
  1872                           ;Cooking_Main.c: 450: voltage = read_adc_voltage((unsigned char) channel);
  1873   00258E  517E               	movf	main@channel& (0+255),w,b
  1874   002590  EC3C  F024         	call	_read_adc_voltage
  1875   002594  C118  F17B         	movff	?_read_adc_voltage,main@voltage
  1876   002598  C119  F17C         	movff	?_read_adc_voltage+1,main@voltage+1
  1877   00259C  C11A  F17D         	movff	?_read_adc_voltage+2,main@voltage+2
  1878                           
  1879                           ;Cooking_Main.c: 451: Cooking_Temp = voltage * 300;
  1880   0025A0  C17B  F0B8         	movff	main@voltage,___ftmul@f1
  1881   0025A4  C17C  F0B9         	movff	main@voltage+1,___ftmul@f1+1
  1882   0025A8  C17D  F0BA         	movff	main@voltage+2,___ftmul@f1+2
  1883   0025AC  0E00               	movlw	0
  1884   0025AE  0100               	movlb	0	; () banked
  1885   0025B0  6FBB               	movwf	___ftmul@f2& (0+255),b
  1886   0025B2  0E96               	movlw	150
  1887   0025B4  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  1888   0025B6  0E43               	movlw	67
  1889   0025B8  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  1890   0025BA  EC8D  F019         	call	___ftmul	;wreg free
  1891   0025BE  C0B8  F182         	movff	?___ftmul,_Cooking_Temp
  1892   0025C2  C0B9  F183         	movff	?___ftmul+1,_Cooking_Temp+1
  1893   0025C6  C0BA  F184         	movff	?___ftmul+2,_Cooking_Temp+2
  1894                           
  1895                           ;Cooking_Main.c: 452: break;
  1896   0025CA  D007               	goto	l9886
  1897   0025CC                     l9884:
  1898                           
  1899                           ; BSR set to: 1
  1900   0025CC  517E               	movf	main@channel& (0+255),w,b
  1901                           
  1902                           ; Switch size 1, requested type "simple"
  1903                           ; Number of cases is 2, Range of values is 0 to 2
  1904                           ; switch strategies available:
  1905                           ; Name         Instructions Cycles
  1906                           ; simple_byte            7     4 (average)
  1907                           ;	Chosen strategy is simple_byte
  1908   0025CE  0A00               	xorlw	0	; case 0
  1909   0025D0  B4D8               	btfsc	status,2,c
  1910   0025D2  D7AF               	goto	l9874
  1911   0025D4  0A02               	xorlw	2	; case 2
  1912   0025D6  B4D8               	btfsc	status,2,c
  1913   0025D8  D7DA               	goto	l9878
  1914   0025DA                     l9886:
  1915   0025DA  0101               	movlb	1	; () banked
  1916   0025DC  2B7E               	incf	main@channel& (0+255),f,b
  1917                           
  1918                           ; BSR set to: 1
  1919   0025DE  0E02               	movlw	2
  1920   0025E0  657E               	cpfsgt	main@channel& (0+255),b
  1921   0025E2  D7F4               	goto	l9884
  1922                           
  1923                           ; BSR set to: 1
  1924                           ;Cooking_Main.c: 455: };Cooking_Main.c: 457: if(!PORTBbits.RB5)
  1925   0025E4  BA81               	btfsc	129,5,c	;volatile
  1926   0025E6  D009               	goto	l9894
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;Cooking_Main.c: 458: {;Cooking_Main.c: 459: Cooking = 0;
  1930   0025E8  0E00               	movlw	0
  1931   0025EA  6F8C               	movwf	(_Cooking+1)& (0+255),b
  1932   0025EC  0E00               	movlw	0
  1933   0025EE  6F8B               	movwf	_Cooking& (0+255),b
  1934                           
  1935                           ;Cooking_Main.c: 460: Heating = 0;
  1936   0025F0  0E00               	movlw	0
  1937   0025F2  6F8A               	movwf	(_Heating+1)& (0+255),b
  1938   0025F4  0E00               	movlw	0
  1939   0025F6  6F89               	movwf	_Heating& (0+255),b
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;Cooking_Main.c: 461: T0CONbits.TMR0ON = 0;
  1943   0025F8  9ED5               	bcf	213,7,c	;volatile
  1944   0025FA                     l9894:
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;Cooking_Main.c: 462: };Cooking_Main.c: 464: if(!PORTAbits.RA5)
  1948   0025FA  BA80               	btfsc	128,5,c	;volatile
  1949   0025FC  D00C               	goto	l9902
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;Cooking_Main.c: 465: {;Cooking_Main.c: 466: if(Cooking_Mode)
  1953   0025FE  507D               	movf	_Cooking_Mode^0,w,c
  1954   002600  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  1955   002602  B4D8               	btfsc	status,2,c
  1956   002604  D004               	goto	l9900
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;Cooking_Main.c: 467: Cooking_Mode = 0;
  1960   002606  0E00               	movlw	0
  1961   002608  6E7E               	movwf	(_Cooking_Mode+1)^0,c
  1962   00260A  0E00               	movlw	0
  1963   00260C  D003               	goto	L1
  1964   00260E                     l9900:
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;Cooking_Main.c: 468: else;Cooking_Main.c: 469: Cooking_Mode = 1;
  1968   00260E  0E00               	movlw	0
  1969   002610  6E7E               	movwf	(_Cooking_Mode+1)^0,c
  1970   002612  0E01               	movlw	1
  1971   002614                     L1:
  1972   002614  6E7D               	movwf	_Cooking_Mode^0,c
  1973   002616                     l9902:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;Cooking_Main.c: 470: };Cooking_Main.c: 472: if(Cooking == 0)
  1977   002616  518B               	movf	_Cooking& (0+255),w,b
  1978   002618  118C               	iorwf	(_Cooking+1)& (0+255),w,b
  1979   00261A  A4D8               	btfss	status,2,c
  1980   00261C  D007               	goto	l347
  1981                           
  1982                           ; BSR set to: 1
  1983                           ;Cooking_Main.c: 473: {;Cooking_Main.c: 474: T3CONbits.TMR3ON = 0;
  1984   00261E  90B1               	bcf	177,0,c	;volatile
  1985                           
  1986                           ;Cooking_Main.c: 475: T0CONbits.TMR0ON = 0;
  1987   002620  9ED5               	bcf	213,7,c	;volatile
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;Cooking_Main.c: 476: Heating = 0;
  1991   002622  0E00               	movlw	0
  1992   002624  6F8A               	movwf	(_Heating+1)& (0+255),b
  1993   002626  0E00               	movlw	0
  1994   002628  6F89               	movwf	_Heating& (0+255),b
  1995                           
  1996                           ;Cooking_Main.c: 477: }
  1997   00262A  D002               	goto	l348
  1998   00262C                     l347:
  1999                           
  2000                           ; BSR set to: 1
  2001                           ;Cooking_Main.c: 478: else;Cooking_Main.c: 479: {;Cooking_Main.c: 480: T3CONbits.TMR3ON 
      +                          = 1;
  2002   00262C  80B1               	bsf	177,0,c	;volatile
  2003                           
  2004                           ;Cooking_Main.c: 481: T0CONbits.TMR0ON = 1;
  2005   00262E  8ED5               	bsf	213,7,c	;volatile
  2006   002630                     l348:
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;Cooking_Main.c: 482: };Cooking_Main.c: 484: if(PORTCbits.RC5 == 0)
  2010   002630  BA82               	btfsc	130,5,c	;volatile
  2011   002632  D004               	goto	l9910
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;Cooking_Main.c: 485: {;Cooking_Main.c: 486: Heating = 0;
  2015   002634  0E00               	movlw	0
  2016   002636  6F8A               	movwf	(_Heating+1)& (0+255),b
  2017   002638  0E00               	movlw	0
  2018   00263A  D003               	goto	L2
  2019   00263C                     l9910:
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;Cooking_Main.c: 488: else;Cooking_Main.c: 489: {;Cooking_Main.c: 490: Heating = 1;
  2023   00263C  0E00               	movlw	0
  2024   00263E  6F8A               	movwf	(_Heating+1)& (0+255),b
  2025   002640  0E01               	movlw	1
  2026   002642                     L2:
  2027   002642  6F89               	movwf	_Heating& (0+255),b
  2028   002644  D0FA               	goto	l10050
  2029   002646                     l352:
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;Cooking_Main.c: 496: if(!PORTBbits.RB3){
  2033   002646  B681               	btfsc	129,3,c	;volatile
  2034   002648  D00D               	goto	l9920
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;Cooking_Main.c: 497: delay_ms(250);
  2038   00264A  0E00               	movlw	0
  2039   00264C  0100               	movlb	0	; () banked
  2040   00264E  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2041   002650  0EFA               	movlw	250
  2042   002652  6FAA               	movwf	delay_ms@n& (0+255),b
  2043   002654  EC66  F028         	call	_delay_ms	;wreg free
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;Cooking_Main.c: 498: if(!PORTBbits.RB3)
  2047   002658  B681               	btfsc	129,3,c	;volatile
  2048   00265A  D002               	goto	l9918
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Cooking_Main.c: 499: {;Cooking_Main.c: 500: count_sec ++;
  2052   00265C  4BCE               	infsnz	_count_sec& (0+255),f,b
  2053   00265E  2BCF               	incf	(_count_sec+1)& (0+255),f,b
  2054   002660                     l9918:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;Cooking_Main.c: 501: };Cooking_Main.c: 502: update_lcd();
  2058   002660  EC76  F029         	call	_update_lcd	;wreg free
  2059   002664                     l9920:
  2060                           
  2061                           ;Cooking_Main.c: 503: };Cooking_Main.c: 504: if(!PORTBbits.RB4){
  2062   002664  B881               	btfsc	129,4,c	;volatile
  2063   002666  D755               	goto	l336
  2064                           
  2065                           ;Cooking_Main.c: 505: delay_ms(250);
  2066   002668  0E00               	movlw	0
  2067   00266A  0100               	movlb	0	; () banked
  2068   00266C  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2069   00266E  0EFA               	movlw	250
  2070   002670  6FAA               	movwf	delay_ms@n& (0+255),b
  2071   002672  EC66  F028         	call	_delay_ms	;wreg free
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;Cooking_Main.c: 506: if(!PORTBbits.RB4)
  2075   002676  B881               	btfsc	129,4,c	;volatile
  2076   002678  D003               	goto	l9928
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;Cooking_Main.c: 507: {;Cooking_Main.c: 508: count_sec --;
  2080   00267A  07CE               	decf	_count_sec& (0+255),f,b
  2081   00267C  A0D8               	btfss	status,0,c
  2082   00267E  07CF               	decf	(_count_sec+1)& (0+255),f,b
  2083   002680                     l9928:
  2084                           
  2085                           ;Cooking_Main.c: 509: };Cooking_Main.c: 510: update_lcd();
  2086   002680  EC76  F029         	call	_update_lcd	;wreg free
  2087   002684  D746               	goto	l336
  2088   002686                     l358:
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;Cooking_Main.c: 514: if(!PORTBbits.RB3){
  2092   002686  B681               	btfsc	129,3,c	;volatile
  2093   002688  D00F               	goto	l9938
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;Cooking_Main.c: 515: delay_ms(250);
  2097   00268A  0E00               	movlw	0
  2098   00268C  0100               	movlb	0	; () banked
  2099   00268E  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2100   002690  0EFA               	movlw	250
  2101   002692  6FAA               	movwf	delay_ms@n& (0+255),b
  2102   002694  EC66  F028         	call	_delay_ms	;wreg free
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;Cooking_Main.c: 516: if(!PORTBbits.RB3)
  2106   002698  B681               	btfsc	129,3,c	;volatile
  2107   00269A  D004               	goto	l9936
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;Cooking_Main.c: 517: {;Cooking_Main.c: 518: count_sec += 10;
  2111   00269C  0E0A               	movlw	10
  2112   00269E  27CE               	addwf	_count_sec& (0+255),f,b
  2113   0026A0  0E00               	movlw	0
  2114   0026A2  23CF               	addwfc	(_count_sec+1)& (0+255),f,b
  2115   0026A4                     l9936:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;Cooking_Main.c: 519: };Cooking_Main.c: 520: update_lcd();
  2119   0026A4  EC76  F029         	call	_update_lcd	;wreg free
  2120   0026A8                     l9938:
  2121                           
  2122                           ;Cooking_Main.c: 521: };Cooking_Main.c: 522: if(!PORTBbits.RB4){
  2123   0026A8  B881               	btfsc	129,4,c	;volatile
  2124   0026AA  D733               	goto	l336
  2125                           
  2126                           ;Cooking_Main.c: 523: delay_ms(250);
  2127   0026AC  0E00               	movlw	0
  2128   0026AE  0100               	movlb	0	; () banked
  2129   0026B0  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2130   0026B2  0EFA               	movlw	250
  2131   0026B4  6FAA               	movwf	delay_ms@n& (0+255),b
  2132   0026B6  EC66  F028         	call	_delay_ms	;wreg free
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;Cooking_Main.c: 524: if(!PORTBbits.RB4)
  2136   0026BA  B881               	btfsc	129,4,c	;volatile
  2137   0026BC  D7E1               	goto	l9928
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;Cooking_Main.c: 525: {;Cooking_Main.c: 526: count_sec -= 10;
  2141   0026BE  0EF6               	movlw	246
  2142   0026C0  27CE               	addwf	_count_sec& (0+255),f,b
  2143   0026C2  0EFF               	movlw	255
  2144   0026C4  23CF               	addwfc	(_count_sec+1)& (0+255),f,b
  2145   0026C6  D7DC               	goto	l9928
  2146   0026C8                     l363:
  2147                           
  2148                           ; BSR set to: 1
  2149                           ;Cooking_Main.c: 532: if(!PORTBbits.RB3){
  2150   0026C8  B681               	btfsc	129,3,c	;volatile
  2151   0026CA  D00D               	goto	l9956
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;Cooking_Main.c: 533: delay_ms(250);
  2155   0026CC  0E00               	movlw	0
  2156   0026CE  0100               	movlb	0	; () banked
  2157   0026D0  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2158   0026D2  0EFA               	movlw	250
  2159   0026D4  6FAA               	movwf	delay_ms@n& (0+255),b
  2160   0026D6  EC66  F028         	call	_delay_ms	;wreg free
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;Cooking_Main.c: 534: if(!PORTBbits.RB3)
  2164   0026DA  B681               	btfsc	129,3,c	;volatile
  2165   0026DC  D002               	goto	l9954
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;Cooking_Main.c: 535: {;Cooking_Main.c: 536: count_min ++;
  2169   0026DE  4BCC               	infsnz	_count_min& (0+255),f,b
  2170   0026E0  2BCD               	incf	(_count_min+1)& (0+255),f,b
  2171   0026E2                     l9954:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;Cooking_Main.c: 537: };Cooking_Main.c: 538: update_lcd();
  2175   0026E2  EC76  F029         	call	_update_lcd	;wreg free
  2176   0026E6                     l9956:
  2177                           
  2178                           ;Cooking_Main.c: 539: };Cooking_Main.c: 540: if(!PORTBbits.RB4){
  2179   0026E6  B881               	btfsc	129,4,c	;volatile
  2180   0026E8  D714               	goto	l336
  2181                           
  2182                           ;Cooking_Main.c: 541: delay_ms(250);
  2183   0026EA  0E00               	movlw	0
  2184   0026EC  0100               	movlb	0	; () banked
  2185   0026EE  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2186   0026F0  0EFA               	movlw	250
  2187   0026F2  6FAA               	movwf	delay_ms@n& (0+255),b
  2188   0026F4  EC66  F028         	call	_delay_ms	;wreg free
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;Cooking_Main.c: 542: if(!PORTBbits.RB4)
  2192   0026F8  B881               	btfsc	129,4,c	;volatile
  2193   0026FA  D7C2               	goto	l9928
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;Cooking_Main.c: 543: {;Cooking_Main.c: 544: count_min --;
  2197   0026FC  07CC               	decf	_count_min& (0+255),f,b
  2198   0026FE  A0D8               	btfss	status,0,c
  2199   002700  07CD               	decf	(_count_min+1)& (0+255),f,b
  2200   002702  D7BE               	goto	l9928
  2201   002704                     l368:
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;Cooking_Main.c: 550: if(!PORTBbits.RB3){
  2205   002704  B681               	btfsc	129,3,c	;volatile
  2206   002706  D00F               	goto	l9974
  2207                           
  2208                           ; BSR set to: 1
  2209                           ;Cooking_Main.c: 551: delay_ms(250);
  2210   002708  0E00               	movlw	0
  2211   00270A  0100               	movlb	0	; () banked
  2212   00270C  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2213   00270E  0EFA               	movlw	250
  2214   002710  6FAA               	movwf	delay_ms@n& (0+255),b
  2215   002712  EC66  F028         	call	_delay_ms	;wreg free
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;Cooking_Main.c: 552: if(!PORTBbits.RB3)
  2219   002716  B681               	btfsc	129,3,c	;volatile
  2220   002718  D004               	goto	l9972
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;Cooking_Main.c: 553: {;Cooking_Main.c: 554: count_min += 10;
  2224   00271A  0E0A               	movlw	10
  2225   00271C  27CC               	addwf	_count_min& (0+255),f,b
  2226   00271E  0E00               	movlw	0
  2227   002720  23CD               	addwfc	(_count_min+1)& (0+255),f,b
  2228   002722                     l9972:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;Cooking_Main.c: 555: };Cooking_Main.c: 556: update_lcd();
  2232   002722  EC76  F029         	call	_update_lcd	;wreg free
  2233   002726                     l9974:
  2234                           
  2235                           ;Cooking_Main.c: 557: };Cooking_Main.c: 558: if(!PORTBbits.RB4){
  2236   002726  B881               	btfsc	129,4,c	;volatile
  2237   002728  D6F4               	goto	l336
  2238                           
  2239                           ;Cooking_Main.c: 559: delay_ms(250);
  2240   00272A  0E00               	movlw	0
  2241   00272C  0100               	movlb	0	; () banked
  2242   00272E  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2243   002730  0EFA               	movlw	250
  2244   002732  6FAA               	movwf	delay_ms@n& (0+255),b
  2245   002734  EC66  F028         	call	_delay_ms	;wreg free
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;Cooking_Main.c: 560: if(!PORTBbits.RB4)
  2249   002738  B881               	btfsc	129,4,c	;volatile
  2250   00273A  D7A2               	goto	l9928
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;Cooking_Main.c: 561: {;Cooking_Main.c: 562: count_min -= 10;
  2254   00273C  0EF6               	movlw	246
  2255   00273E  27CC               	addwf	_count_min& (0+255),f,b
  2256   002740  0EFF               	movlw	255
  2257   002742  23CD               	addwfc	(_count_min+1)& (0+255),f,b
  2258   002744  D79D               	goto	l9928
  2259   002746                     l373:
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;Cooking_Main.c: 568: if(!PORTBbits.RB3){
  2263   002746  B681               	btfsc	129,3,c	;volatile
  2264   002748  D00D               	goto	l9992
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;Cooking_Main.c: 569: delay_ms(250);
  2268   00274A  0E00               	movlw	0
  2269   00274C  0100               	movlb	0	; () banked
  2270   00274E  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2271   002750  0EFA               	movlw	250
  2272   002752  6FAA               	movwf	delay_ms@n& (0+255),b
  2273   002754  EC66  F028         	call	_delay_ms	;wreg free
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;Cooking_Main.c: 570: if(!PORTBbits.RB3)
  2277   002758  B681               	btfsc	129,3,c	;volatile
  2278   00275A  D002               	goto	l9990
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;Cooking_Main.c: 571: {;Cooking_Main.c: 572: count_hour ++;
  2282   00275C  4BCA               	infsnz	_count_hour& (0+255),f,b
  2283   00275E  2BCB               	incf	(_count_hour+1)& (0+255),f,b
  2284   002760                     l9990:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;Cooking_Main.c: 573: };Cooking_Main.c: 574: update_lcd();
  2288   002760  EC76  F029         	call	_update_lcd	;wreg free
  2289   002764                     l9992:
  2290                           
  2291                           ;Cooking_Main.c: 575: };Cooking_Main.c: 577: if(!PORTBbits.RB4){
  2292   002764  B881               	btfsc	129,4,c	;volatile
  2293   002766  D6D5               	goto	l336
  2294                           
  2295                           ;Cooking_Main.c: 578: delay_ms(250);
  2296   002768  0E00               	movlw	0
  2297   00276A  0100               	movlb	0	; () banked
  2298   00276C  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2299   00276E  0EFA               	movlw	250
  2300   002770  6FAA               	movwf	delay_ms@n& (0+255),b
  2301   002772  EC66  F028         	call	_delay_ms	;wreg free
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;Cooking_Main.c: 579: if(!PORTBbits.RB4)
  2305   002776  B881               	btfsc	129,4,c	;volatile
  2306   002778  D783               	goto	l9928
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;Cooking_Main.c: 580: {;Cooking_Main.c: 581: count_hour --;
  2310   00277A  07CA               	decf	_count_hour& (0+255),f,b
  2311   00277C  A0D8               	btfss	status,0,c
  2312   00277E  07CB               	decf	(_count_hour+1)& (0+255),f,b
  2313   002780  D77F               	goto	l9928
  2314   002782                     l378:
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;Cooking_Main.c: 587: if(!PORTBbits.RB3){
  2318   002782  B681               	btfsc	129,3,c	;volatile
  2319   002784  D014               	goto	l10012
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;Cooking_Main.c: 588: delay_ms(250);
  2323   002786  0E00               	movlw	0
  2324   002788  0100               	movlb	0	; () banked
  2325   00278A  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2326   00278C  0EFA               	movlw	250
  2327   00278E  6FAA               	movwf	delay_ms@n& (0+255),b
  2328   002790  EC66  F028         	call	_delay_ms	;wreg free
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;Cooking_Main.c: 589: if(!PORTBbits.RB3)
  2332   002794  B681               	btfsc	129,3,c	;volatile
  2333   002796  D009               	goto	l10010
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;Cooking_Main.c: 590: {;Cooking_Main.c: 591: if(Hysteresis >= 0 && Hysteresis <= 4)
  2337   002798  0101               	movlb	1	; () banked
  2338   00279A  5188               	movf	(_Hysteresis+1)& (0+255),w,b
  2339   00279C  E106               	bnz	l10010
  2340   00279E  0E05               	movlw	5
  2341   0027A0  5D87               	subwf	_Hysteresis& (0+255),w,b
  2342   0027A2  B0D8               	btfsc	status,0,c
  2343   0027A4  D002               	goto	l10010
  2344                           
  2345                           ; BSR set to: 1
  2346                           ;Cooking_Main.c: 592: Hysteresis ++;
  2347   0027A6  4B87               	infsnz	_Hysteresis& (0+255),f,b
  2348   0027A8  2B88               	incf	(_Hysteresis+1)& (0+255),f,b
  2349   0027AA                     l10010:
  2350                           
  2351                           ;Cooking_Main.c: 593: };Cooking_Main.c: 594: update_lcd();
  2352   0027AA  EC76  F029         	call	_update_lcd	;wreg free
  2353   0027AE                     l10012:
  2354                           
  2355                           ;Cooking_Main.c: 595: };Cooking_Main.c: 597: if(!PORTBbits.RB4){
  2356   0027AE  B881               	btfsc	129,4,c	;volatile
  2357   0027B0  D6B0               	goto	l336
  2358                           
  2359                           ;Cooking_Main.c: 598: delay_ms(250);
  2360   0027B2  0E00               	movlw	0
  2361   0027B4  0100               	movlb	0	; () banked
  2362   0027B6  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2363   0027B8  0EFA               	movlw	250
  2364   0027BA  6FAA               	movwf	delay_ms@n& (0+255),b
  2365   0027BC  EC66  F028         	call	_delay_ms	;wreg free
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;Cooking_Main.c: 599: if(!PORTBbits.RB4)
  2369   0027C0  B881               	btfsc	129,4,c	;volatile
  2370   0027C2  D75E               	goto	l9928
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;Cooking_Main.c: 600: {;Cooking_Main.c: 601: if(Hysteresis >= 0 && Hysteresis <= 4)
  2374   0027C4  0101               	movlb	1	; () banked
  2375   0027C6  5188               	movf	(_Hysteresis+1)& (0+255),w,b
  2376   0027C8  E103               	bnz	u12711
  2377   0027CA  0E05               	movlw	5
  2378   0027CC  5D87               	subwf	_Hysteresis& (0+255),w,b
  2379   0027CE  B0D8               	btfsc	status,0,c
  2380   0027D0                     u12711:
  2381   0027D0  D757               	goto	l9928
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;Cooking_Main.c: 602: Hysteresis --;
  2385   0027D2  0787               	decf	_Hysteresis& (0+255),f,b
  2386   0027D4  A0D8               	btfss	status,0,c
  2387   0027D6  0788               	decf	(_Hysteresis+1)& (0+255),f,b
  2388   0027D8  D753               	goto	l9928
  2389   0027DA                     l385:
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;Cooking_Main.c: 608: if(!PORTBbits.RB3){
  2393   0027DA  B681               	btfsc	129,3,c	;volatile
  2394   0027DC  D014               	goto	l10034
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;Cooking_Main.c: 609: delay_ms(250);
  2398   0027DE  0E00               	movlw	0
  2399   0027E0  0100               	movlb	0	; () banked
  2400   0027E2  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2401   0027E4  0EFA               	movlw	250
  2402   0027E6  6FAA               	movwf	delay_ms@n& (0+255),b
  2403   0027E8  EC66  F028         	call	_delay_ms	;wreg free
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;Cooking_Main.c: 610: if(!PORTBbits.RB3)
  2407   0027EC  B681               	btfsc	129,3,c	;volatile
  2408   0027EE  D009               	goto	l10032
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;Cooking_Main.c: 611: {;Cooking_Main.c: 612: if(Percent_Heat_Counter >= 0 && Percent_Hea
      +                          t_Counter < 10)
  2412   0027F0  0101               	movlb	1	; () banked
  2413   0027F2  5186               	movf	(_Percent_Heat_Counter+1)& (0+255),w,b
  2414   0027F4  E106               	bnz	l10032
  2415   0027F6  0E0A               	movlw	10
  2416   0027F8  5D85               	subwf	_Percent_Heat_Counter& (0+255),w,b
  2417   0027FA  B0D8               	btfsc	status,0,c
  2418   0027FC  D002               	goto	l10032
  2419                           
  2420                           ; BSR set to: 1
  2421                           ;Cooking_Main.c: 613: Percent_Heat_Counter ++;
  2422   0027FE  4B85               	infsnz	_Percent_Heat_Counter& (0+255),f,b
  2423   002800  2B86               	incf	(_Percent_Heat_Counter+1)& (0+255),f,b
  2424   002802                     l10032:
  2425                           
  2426                           ;Cooking_Main.c: 614: };Cooking_Main.c: 615: update_lcd();
  2427   002802  EC76  F029         	call	_update_lcd	;wreg free
  2428   002806                     l10034:
  2429                           
  2430                           ;Cooking_Main.c: 616: };Cooking_Main.c: 618: if(!PORTBbits.RB4){
  2431   002806  B881               	btfsc	129,4,c	;volatile
  2432   002808  D684               	goto	l336
  2433                           
  2434                           ;Cooking_Main.c: 619: delay_ms(250);
  2435   00280A  0E00               	movlw	0
  2436   00280C  0100               	movlb	0	; () banked
  2437   00280E  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  2438   002810  0EFA               	movlw	250
  2439   002812  6FAA               	movwf	delay_ms@n& (0+255),b
  2440   002814  EC66  F028         	call	_delay_ms	;wreg free
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;Cooking_Main.c: 620: if(!PORTBbits.RB4)
  2444   002818  B881               	btfsc	129,4,c	;volatile
  2445   00281A  D732               	goto	l9928
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;Cooking_Main.c: 621: {;Cooking_Main.c: 622: if(Percent_Heat_Counter > 0 && Percent_Heat
      +                          _Counter <= 10)
  2449   00281C  0101               	movlb	1	; () banked
  2450   00281E  5185               	movf	_Percent_Heat_Counter& (0+255),w,b
  2451   002820  1186               	iorwf	(_Percent_Heat_Counter+1)& (0+255),w,b
  2452   002822  B4D8               	btfsc	status,2,c
  2453   002824  D72D               	goto	l9928
  2454                           
  2455                           ; BSR set to: 1
  2456   002826  5186               	movf	(_Percent_Heat_Counter+1)& (0+255),w,b
  2457   002828  E103               	bnz	u12781
  2458   00282A  0E0B               	movlw	11
  2459   00282C  5D85               	subwf	_Percent_Heat_Counter& (0+255),w,b
  2460   00282E  B0D8               	btfsc	status,0,c
  2461   002830                     u12781:
  2462   002830  D727               	goto	l9928
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;Cooking_Main.c: 623: Percent_Heat_Counter --;
  2466   002832  0785               	decf	_Percent_Heat_Counter& (0+255),f,b
  2467   002834  A0D8               	btfss	status,0,c
  2468   002836  0786               	decf	(_Percent_Heat_Counter+1)& (0+255),f,b
  2469   002838  D723               	goto	l9928
  2470   00283A                     l10050:
  2471                           
  2472                           ; BSR set to: 1
  2473   00283A  C18D  F179         	movff	_Setting_Mode,??_main
  2474   00283E  C18E  F17A         	movff	_Setting_Mode+1,??_main+1
  2475                           
  2476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2477                           ; Switch size 1, requested type "simple"
  2478                           ; Number of cases is 1, Range of values is 0 to 0
  2479                           ; switch strategies available:
  2480                           ; Name         Instructions Cycles
  2481                           ; simple_byte            4     3 (average)
  2482                           ;	Chosen strategy is simple_byte
  2483   002842  517A               	movf	(??_main+1)& (0+255),w,b
  2484   002844  0A00               	xorlw	0	; case 0
  2485   002846  A4D8               	btfss	status,2,c
  2486   002848  D664               	goto	l336
  2487                           
  2488                           ; BSR set to: 1
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 7, Range of values is 0 to 6
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           22    12 (average)
  2494                           ;	Chosen strategy is simple_byte
  2495   00284A  5179               	movf	??_main& (0+255),w,b
  2496   00284C  0A00               	xorlw	0	; case 0
  2497   00284E  B4D8               	btfsc	status,2,c
  2498   002850  D6FA               	goto	l352
  2499   002852  0A01               	xorlw	1	; case 1
  2500   002854  B4D8               	btfsc	status,2,c
  2501   002856  D717               	goto	l358
  2502   002858  0A03               	xorlw	3	; case 2
  2503   00285A  B4D8               	btfsc	status,2,c
  2504   00285C  D735               	goto	l363
  2505   00285E  0A01               	xorlw	1	; case 3
  2506   002860  B4D8               	btfsc	status,2,c
  2507   002862  D750               	goto	l368
  2508   002864  0A07               	xorlw	7	; case 4
  2509   002866  B4D8               	btfsc	status,2,c
  2510   002868  D76E               	goto	l373
  2511   00286A  0A01               	xorlw	1	; case 5
  2512   00286C  B4D8               	btfsc	status,2,c
  2513   00286E  D789               	goto	l378
  2514   002870  0A03               	xorlw	3	; case 6
  2515   002872  B4D8               	btfsc	status,2,c
  2516   002874  D7B2               	goto	l385
  2517   002876  D64D               	goto	l336
  2518   002878                     __end_of_main:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _update_lcd *****************
  2522 ;; Defined at:
  2523 ;;		line 414 in file "Cooking_Main.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 3F/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 17
  2544 ;; This function calls:
  2545 ;;		_update_lcd_Line1
  2546 ;;		_update_lcd_Line2
  2547 ;;		_update_lcd_Line3
  2548 ;;		_update_lcd_Line4
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text1
  2555   0052EC                     __ptext1:
  2556                           	callstack 0
  2557   0052EC                     _update_lcd:
  2558                           	callstack 13
  2559                           
  2560                           ;Cooking_Main.c: 415: update_lcd_Line1();
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;incstack = 0
  2564   0052EC  ECA4  F024         	call	_update_lcd_Line1	;wreg free
  2565                           
  2566                           ;Cooking_Main.c: 416: update_lcd_Line2();
  2567   0052F0  EC06  F024         	call	_update_lcd_Line2	;wreg free
  2568                           
  2569                           ;Cooking_Main.c: 417: update_lcd_Line3();
  2570   0052F4  ECD0  F023         	call	_update_lcd_Line3	;wreg free
  2571                           
  2572                           ;Cooking_Main.c: 418: update_lcd_Line4();
  2573   0052F8  EC22  F01A         	call	_update_lcd_Line4	;wreg free
  2574                           
  2575                           ; BSR set to: 0
  2576   0052FC  0012               	return		;funcret
  2577   0052FE                     __end_of_update_lcd:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _update_lcd_Line4 *****************
  2581 ;; Defined at:
  2582 ;;		line 363 in file "Cooking_Main.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  Buffer         16  101[BANK1 ] unsigned char [16]
  2587 ;;  P               3    0        PTR unsigned char 
  2588 ;;  MD              2  119[BANK1 ] PTR unsigned char 
  2589 ;;		 -> STR_16(4), STR_15(4), STR_14(3), STR_13(4), 
  2590 ;;		 -> STR_12(4), STR_11(4), STR_10(4), 
  2591 ;;  H               2  117[BANK1 ] int 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 3F/0
  2598 ;;		On exit  : 3F/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:       24 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 16
  2608 ;; This function calls:
  2609 ;;		___wmul
  2610 ;;		_lcd_gotoxy
  2611 ;;		_lcd_puts
  2612 ;;		_sprintf
  2613 ;; This function is called by:
  2614 ;;		_update_lcd
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text2
  2619   003444                     __ptext2:
  2620                           	callstack 0
  2621   003444                     _update_lcd_Line4:
  2622                           	callstack 13
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;Cooking_Main.c: 364: unsigned char Buffer[16];;Cooking_Main.c: 365: int H = Hysteresis;
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;incstack = 0
  2629   003444  C187  F175         	movff	_Hysteresis,update_lcd_Line4@H
  2630   003448  C188  F176         	movff	_Hysteresis+1,update_lcd_Line4@H+1
  2631                           
  2632                           ;Cooking_Main.c: 366: unsigned char *MD;;Cooking_Main.c: 367: unsigned char *P;;Cooking_
      +                          Main.c: 369: switch(Setting_Mode)
  2633   00344C  D01D               	goto	l9702
  2634   00344E                     l9686:
  2635                           
  2636                           ; BSR set to: 1
  2637                           ;Cooking_Main.c: 372: MD = "Sec";
  2638   00344E  0EF1               	movlw	low STR_10
  2639   003450  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2640   003452  0EFF               	movlw	high STR_10
  2641   003454  D017               	goto	L8
  2642   003456                     l9688:
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;Cooking_Main.c: 375: MD = "10S";
  2646   003456  0EE9               	movlw	low STR_11
  2647   003458  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2648   00345A  0EFF               	movlw	high STR_11
  2649   00345C  D013               	goto	L8
  2650   00345E                     l9690:
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;Cooking_Main.c: 378: MD = "Min";
  2654   00345E  0EF5               	movlw	low STR_12
  2655   003460  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2656   003462  0EFF               	movlw	high STR_12
  2657   003464  D00F               	goto	L8
  2658   003466                     l9692:
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;Cooking_Main.c: 381: MD = "10M";
  2662   003466  0EE5               	movlw	low STR_13
  2663   003468  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2664   00346A  0EFF               	movlw	high STR_13
  2665   00346C  D00B               	goto	L8
  2666   00346E                     l9694:
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;Cooking_Main.c: 384: MD = "HR";
  2670   00346E  0EFC               	movlw	low STR_14
  2671   003470  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2672   003472  0EFF               	movlw	high STR_14
  2673   003474  D007               	goto	L8
  2674   003476                     l9696:
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;Cooking_Main.c: 387: MD = "HYS";
  2678   003476  0EED               	movlw	low STR_15
  2679   003478  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2680   00347A  0EFF               	movlw	high STR_15
  2681   00347C  D003               	goto	L8
  2682   00347E                     l9698:
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;Cooking_Main.c: 390: MD = "HT%";
  2686   00347E  0EDD               	movlw	low STR_16
  2687   003480  6F77               	movwf	update_lcd_Line4@MD& (0+255),b
  2688   003482  0EFF               	movlw	high STR_16
  2689   003484                     L8:
  2690   003484  6F78               	movwf	(update_lcd_Line4@MD+1)& (0+255),b
  2691                           
  2692                           ;Cooking_Main.c: 391: break;
  2693   003486  D01F               	goto	l9704
  2694   003488                     l9702:
  2695                           
  2696                           ; BSR set to: 0
  2697   003488  C18D  F161         	movff	_Setting_Mode,??_update_lcd_Line4
  2698   00348C  C18E  F162         	movff	_Setting_Mode+1,??_update_lcd_Line4+1
  2699                           
  2700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2701                           ; Switch size 1, requested type "simple"
  2702                           ; Number of cases is 1, Range of values is 0 to 0
  2703                           ; switch strategies available:
  2704                           ; Name         Instructions Cycles
  2705                           ; simple_byte            4     3 (average)
  2706                           ;	Chosen strategy is simple_byte
  2707   003490  0101               	movlb	1	; () banked
  2708   003492  5162               	movf	(??_update_lcd_Line4+1)& (0+255),w,b
  2709   003494  0A00               	xorlw	0	; case 0
  2710   003496  A4D8               	btfss	status,2,c
  2711   003498  D016               	goto	l9704
  2712                           
  2713                           ; BSR set to: 1
  2714                           ; Switch size 1, requested type "simple"
  2715                           ; Number of cases is 7, Range of values is 0 to 6
  2716                           ; switch strategies available:
  2717                           ; Name         Instructions Cycles
  2718                           ; simple_byte           22    12 (average)
  2719                           ;	Chosen strategy is simple_byte
  2720   00349A  5161               	movf	??_update_lcd_Line4& (0+255),w,b
  2721   00349C  0A00               	xorlw	0	; case 0
  2722   00349E  B4D8               	btfsc	status,2,c
  2723   0034A0  D7D6               	goto	l9686
  2724   0034A2  0A01               	xorlw	1	; case 1
  2725   0034A4  B4D8               	btfsc	status,2,c
  2726   0034A6  D7D7               	goto	l9688
  2727   0034A8  0A03               	xorlw	3	; case 2
  2728   0034AA  B4D8               	btfsc	status,2,c
  2729   0034AC  D7D8               	goto	l9690
  2730   0034AE  0A01               	xorlw	1	; case 3
  2731   0034B0  B4D8               	btfsc	status,2,c
  2732   0034B2  D7D9               	goto	l9692
  2733   0034B4  0A07               	xorlw	7	; case 4
  2734   0034B6  B4D8               	btfsc	status,2,c
  2735   0034B8  D7DA               	goto	l9694
  2736   0034BA  0A01               	xorlw	1	; case 5
  2737   0034BC  B4D8               	btfsc	status,2,c
  2738   0034BE  D7DB               	goto	l9696
  2739   0034C0  0A03               	xorlw	3	; case 6
  2740   0034C2  B4D8               	btfsc	status,2,c
  2741   0034C4  D7DC               	goto	l9698
  2742   0034C6                     l9704:
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;Cooking_Main.c: 394: if(!Cooking_Mode){
  2746   0034C6  507D               	movf	_Cooking_Mode^0,w,c
  2747   0034C8  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  2748   0034CA  A4D8               	btfss	status,2,c
  2749   0034CC  D034               	goto	l9714
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;Cooking_Main.c: 395: lcd_gotoxy(1, 4);
  2753   0034CE  0E04               	movlw	4
  2754   0034D0  0100               	movlb	0	; () banked
  2755   0034D2  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  2756   0034D4  0E01               	movlw	1
  2757   0034D6  ECBA  F026         	call	_lcd_gotoxy
  2758                           
  2759                           ;Cooking_Main.c: 396: sprintf(Buffer, "MD:%s P:%d  H:%d", MD, Percent_Heat_Counter * 10,
      +                           H);
  2760   0034DA  C185  F0AA         	movff	_Percent_Heat_Counter,___wmul@multiplier
  2761   0034DE  C186  F0AB         	movff	_Percent_Heat_Counter+1,___wmul@multiplier+1
  2762   0034E2  0E00               	movlw	0
  2763   0034E4  0100               	movlb	0	; () banked
  2764   0034E6  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2765   0034E8  0E0A               	movlw	10
  2766   0034EA  6FAC               	movwf	___wmul@multiplicand& (0+255),b
  2767   0034EC  ECB4  F028         	call	___wmul	;wreg free
  2768   0034F0  C0AA  F163         	movff	?___wmul,_update_lcd_Line4$1736
  2769   0034F4  C0AB  F164         	movff	?___wmul+1,_update_lcd_Line4$1736+1
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;Cooking_Main.c: 396: sprintf(Buffer, "MD:%s P:%d  H:%d", MD, Percent_Heat_Counter * 10,
      +                           H);
  2773   0034F8  0E65               	movlw	low update_lcd_Line4@Buffer
  2774   0034FA  0101               	movlb	1	; () banked
  2775   0034FC  6F27               	movwf	sprintf@sp& (0+255),b
  2776   0034FE  0E01               	movlw	high update_lcd_Line4@Buffer
  2777   003500  6F28               	movwf	(sprintf@sp+1)& (0+255),b
  2778   003502  0EB4               	movlw	low STR_17
  2779   003504  6F29               	movwf	sprintf@f& (0+255),b
  2780   003506  0EFF               	movlw	high STR_17
  2781   003508  6F2A               	movwf	(sprintf@f+1)& (0+255),b
  2782   00350A  C177  F12B         	movff	update_lcd_Line4@MD,?_sprintf+4
  2783   00350E  C178  F12C         	movff	update_lcd_Line4@MD+1,?_sprintf+5
  2784   003512  C163  F12D         	movff	_update_lcd_Line4$1736,?_sprintf+6
  2785   003516  C164  F12E         	movff	_update_lcd_Line4$1736+1,?_sprintf+7
  2786   00351A  C175  F12F         	movff	update_lcd_Line4@H,?_sprintf+8
  2787   00351E  C176  F130         	movff	update_lcd_Line4@H+1,?_sprintf+9
  2788   003522  EC09  F000         	call	_sprintf	;wreg free
  2789   003526                     l9712:
  2790                           
  2791                           ; BSR set to: 1
  2792                           ;Cooking_Main.c: 397: lcd_puts(Buffer);
  2793   003526  0E65               	movlw	low update_lcd_Line4@Buffer
  2794   003528  0100               	movlb	0	; () banked
  2795   00352A  6FB8               	movwf	lcd_puts@s& (0+255),b
  2796   00352C  0E01               	movlw	high update_lcd_Line4@Buffer
  2797   00352E  6FB9               	movwf	(lcd_puts@s+1)& (0+255),b
  2798   003530  ECA1  F028         	call	_lcd_puts	;wreg free
  2799                           
  2800                           ;Cooking_Main.c: 405: }
  2801   003534  0012               	return	
  2802   003536                     l9714:
  2803                           
  2804                           ; BSR set to: 1
  2805                           ;Cooking_Main.c: 406: else{;Cooking_Main.c: 408: lcd_gotoxy(1, 4);
  2806   003536  0E04               	movlw	4
  2807   003538  0100               	movlb	0	; () banked
  2808   00353A  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  2809   00353C  0E01               	movlw	1
  2810   00353E  ECBA  F026         	call	_lcd_gotoxy
  2811                           
  2812                           ;Cooking_Main.c: 409: sprintf(Buffer, "MD:%s P:Aut H:%d", MD, H);
  2813   003542  0E65               	movlw	low update_lcd_Line4@Buffer
  2814   003544  0101               	movlb	1	; () banked
  2815   003546  6F27               	movwf	sprintf@sp& (0+255),b
  2816   003548  0E01               	movlw	high update_lcd_Line4@Buffer
  2817   00354A  6F28               	movwf	(sprintf@sp+1)& (0+255),b
  2818   00354C  0EC5               	movlw	low STR_18
  2819   00354E  6F29               	movwf	sprintf@f& (0+255),b
  2820   003550  0EFF               	movlw	high STR_18
  2821   003552  6F2A               	movwf	(sprintf@f+1)& (0+255),b
  2822   003554  C177  F12B         	movff	update_lcd_Line4@MD,?_sprintf+4
  2823   003558  C178  F12C         	movff	update_lcd_Line4@MD+1,?_sprintf+5
  2824   00355C  C175  F12D         	movff	update_lcd_Line4@H,?_sprintf+6
  2825   003560  C176  F12E         	movff	update_lcd_Line4@H+1,?_sprintf+7
  2826   003564  EC09  F000         	call	_sprintf	;wreg free
  2827   003568  D7DE               	goto	l9712
  2828   00356A                     __end_of_update_lcd_Line4:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _update_lcd_Line3 *****************
  2832 ;; Defined at:
  2833 ;;		line 337 in file "Cooking_Main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  Buffer         16  102[BANK1 ] unsigned char [16]
  2838 ;;  SP              3   97[BANK1 ] float 
  2839 ;;  HT              2  100[BANK1 ] PTR unsigned char 
  2840 ;;		 -> STR_6(3), STR_5(4), 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 3F/0
  2847 ;;		On exit  : 3F/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:       21 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 16
  2857 ;; This function calls:
  2858 ;;		_lcd_gotoxy
  2859 ;;		_lcd_puts
  2860 ;;		_sprintf
  2861 ;; This function is called by:
  2862 ;;		_update_lcd
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text3
  2867   0047A0                     __ptext3:
  2868                           	callstack 0
  2869   0047A0                     _update_lcd_Line3:
  2870                           	callstack 13
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;Cooking_Main.c: 338: unsigned char Buffer[16];;Cooking_Main.c: 339: float SP = SetUp_Po
      +                          int;
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;incstack = 0
  2877   0047A0  C17F  F161         	movff	_SetUp_Point,update_lcd_Line3@SP
  2878   0047A4  C180  F162         	movff	_SetUp_Point+1,update_lcd_Line3@SP+1
  2879   0047A8  C181  F163         	movff	_SetUp_Point+2,update_lcd_Line3@SP+2
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;Cooking_Main.c: 340: unsigned char *HT;;Cooking_Main.c: 341: if(!Heating){
  2883   0047AC  0101               	movlb	1	; () banked
  2884   0047AE  5189               	movf	_Heating& (0+255),w,b
  2885   0047B0  118A               	iorwf	(_Heating+1)& (0+255),w,b
  2886   0047B2  A4D8               	btfss	status,2,c
  2887   0047B4  D004               	goto	l9676
  2888                           
  2889                           ; BSR set to: 1
  2890                           ;Cooking_Main.c: 342: HT = "OFF";
  2891   0047B6  0EE1               	movlw	low STR_2
  2892   0047B8  6F64               	movwf	update_lcd_Line3@HT& (0+255),b
  2893   0047BA  0EFF               	movlw	high STR_2
  2894   0047BC  D003               	goto	L9
  2895   0047BE                     l9676:
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;Cooking_Main.c: 344: else{;Cooking_Main.c: 345: HT = "ON";
  2899   0047BE  0EF9               	movlw	low STR_3
  2900   0047C0  6F64               	movwf	update_lcd_Line3@HT& (0+255),b
  2901   0047C2  0EFF               	movlw	high STR_3
  2902   0047C4                     L9:
  2903   0047C4  6F65               	movwf	(update_lcd_Line3@HT+1)& (0+255),b
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;Cooking_Main.c: 346: };Cooking_Main.c: 347: lcd_gotoxy(1, 3);
  2907   0047C6  0E03               	movlw	3
  2908   0047C8  0100               	movlb	0	; () banked
  2909   0047CA  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  2910   0047CC  0E01               	movlw	1
  2911   0047CE  ECBA  F026         	call	_lcd_gotoxy
  2912                           
  2913                           ;Cooking_Main.c: 348: sprintf(Buffer, "SP:%03.1fC HT:%3s", SP, HT);
  2914   0047D2  0E66               	movlw	low update_lcd_Line3@Buffer
  2915   0047D4  0101               	movlb	1	; () banked
  2916   0047D6  6F27               	movwf	sprintf@sp& (0+255),b
  2917   0047D8  0E01               	movlw	high update_lcd_Line3@Buffer
  2918   0047DA  6F28               	movwf	(sprintf@sp+1)& (0+255),b
  2919   0047DC  0E80               	movlw	low STR_7
  2920   0047DE  6F29               	movwf	sprintf@f& (0+255),b
  2921   0047E0  0EFF               	movlw	high STR_7
  2922   0047E2  6F2A               	movwf	(sprintf@f+1)& (0+255),b
  2923   0047E4  C161  F12B         	movff	update_lcd_Line3@SP,?_sprintf+4
  2924   0047E8  C162  F12C         	movff	update_lcd_Line3@SP+1,?_sprintf+5
  2925   0047EC  C163  F12D         	movff	update_lcd_Line3@SP+2,?_sprintf+6
  2926   0047F0  C164  F12E         	movff	update_lcd_Line3@HT,?_sprintf+7
  2927   0047F4  C165  F12F         	movff	update_lcd_Line3@HT+1,?_sprintf+8
  2928   0047F8  EC09  F000         	call	_sprintf	;wreg free
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;Cooking_Main.c: 349: lcd_puts(Buffer);
  2932   0047FC  0E66               	movlw	low update_lcd_Line3@Buffer
  2933   0047FE  0100               	movlb	0	; () banked
  2934   004800  6FB8               	movwf	lcd_puts@s& (0+255),b
  2935   004802  0E01               	movlw	high update_lcd_Line3@Buffer
  2936   004804  6FB9               	movwf	(lcd_puts@s+1)& (0+255),b
  2937   004806  ECA1  F028         	call	_lcd_puts	;wreg free
  2938                           
  2939                           ; BSR set to: 0
  2940   00480A  0012               	return		;funcret
  2941   00480C                     __end_of_update_lcd_Line3:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _update_lcd_Line2 *****************
  2945 ;; Defined at:
  2946 ;;		line 322 in file "Cooking_Main.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  Buffer         16  102[BANK1 ] unsigned char [16]
  2951 ;;  CT              3   97[BANK1 ] float 
  2952 ;;  CK              2  100[BANK1 ] PTR unsigned char 
  2953 ;;		 -> STR_3(3), STR_2(4), 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 3F/0
  2960 ;;		On exit  : 3F/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:       21 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 16
  2970 ;; This function calls:
  2971 ;;		_lcd_gotoxy
  2972 ;;		_lcd_puts
  2973 ;;		_sprintf
  2974 ;; This function is called by:
  2975 ;;		_update_lcd
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text4
  2980   00480C                     __ptext4:
  2981                           	callstack 0
  2982   00480C                     _update_lcd_Line2:
  2983                           	callstack 13
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;Cooking_Main.c: 323: unsigned char Buffer[16];;Cooking_Main.c: 324: float CT = Cooking_
      +                          Temp;
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;incstack = 0
  2990   00480C  C182  F161         	movff	_Cooking_Temp,update_lcd_Line2@CT
  2991   004810  C183  F162         	movff	_Cooking_Temp+1,update_lcd_Line2@CT+1
  2992   004814  C184  F163         	movff	_Cooking_Temp+2,update_lcd_Line2@CT+2
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;Cooking_Main.c: 325: unsigned char *CK;;Cooking_Main.c: 326: if(!Cooking){
  2996   004818  0101               	movlb	1	; () banked
  2997   00481A  518B               	movf	_Cooking& (0+255),w,b
  2998   00481C  118C               	iorwf	(_Cooking+1)& (0+255),w,b
  2999   00481E  A4D8               	btfss	status,2,c
  3000   004820  D004               	goto	l9662
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;Cooking_Main.c: 327: CK = "OFF";
  3004   004822  0EE1               	movlw	low STR_2
  3005   004824  6F64               	movwf	update_lcd_Line2@CK& (0+255),b
  3006   004826  0EFF               	movlw	high STR_2
  3007   004828  D003               	goto	L10
  3008   00482A                     l9662:
  3009                           
  3010                           ; BSR set to: 1
  3011                           ;Cooking_Main.c: 329: else{;Cooking_Main.c: 330: CK = "ON";
  3012   00482A  0EF9               	movlw	low STR_3
  3013   00482C  6F64               	movwf	update_lcd_Line2@CK& (0+255),b
  3014   00482E  0EFF               	movlw	high STR_3
  3015   004830                     L10:
  3016   004830  6F65               	movwf	(update_lcd_Line2@CK+1)& (0+255),b
  3017                           
  3018                           ; BSR set to: 1
  3019                           ;Cooking_Main.c: 331: };Cooking_Main.c: 332: lcd_gotoxy(1, 2);
  3020   004832  0E02               	movlw	2
  3021   004834  0100               	movlb	0	; () banked
  3022   004836  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  3023   004838  0E01               	movlw	1
  3024   00483A  ECBA  F026         	call	_lcd_gotoxy
  3025                           
  3026                           ;Cooking_Main.c: 333: sprintf(Buffer, "CT:%03.1fC CK:%3s", CT, CK);
  3027   00483E  0E66               	movlw	low update_lcd_Line2@Buffer
  3028   004840  0101               	movlb	1	; () banked
  3029   004842  6F27               	movwf	sprintf@sp& (0+255),b
  3030   004844  0E01               	movlw	high update_lcd_Line2@Buffer
  3031   004846  6F28               	movwf	(sprintf@sp+1)& (0+255),b
  3032   004848  0E6E               	movlw	low STR_4
  3033   00484A  6F29               	movwf	sprintf@f& (0+255),b
  3034   00484C  0EFF               	movlw	high STR_4
  3035   00484E  6F2A               	movwf	(sprintf@f+1)& (0+255),b
  3036   004850  C161  F12B         	movff	update_lcd_Line2@CT,?_sprintf+4
  3037   004854  C162  F12C         	movff	update_lcd_Line2@CT+1,?_sprintf+5
  3038   004858  C163  F12D         	movff	update_lcd_Line2@CT+2,?_sprintf+6
  3039   00485C  C164  F12E         	movff	update_lcd_Line2@CK,?_sprintf+7
  3040   004860  C165  F12F         	movff	update_lcd_Line2@CK+1,?_sprintf+8
  3041   004864  EC09  F000         	call	_sprintf	;wreg free
  3042                           
  3043                           ; BSR set to: 1
  3044                           ;Cooking_Main.c: 334: lcd_puts(Buffer);
  3045   004868  0E66               	movlw	low update_lcd_Line2@Buffer
  3046   00486A  0100               	movlb	0	; () banked
  3047   00486C  6FB8               	movwf	lcd_puts@s& (0+255),b
  3048   00486E  0E01               	movlw	high update_lcd_Line2@Buffer
  3049   004870  6FB9               	movwf	(lcd_puts@s+1)& (0+255),b
  3050   004872  ECA1  F028         	call	_lcd_puts	;wreg free
  3051                           
  3052                           ; BSR set to: 0
  3053   004876  0012               	return		;funcret
  3054   004878                     __end_of_update_lcd_Line2:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _update_lcd_Line1 *****************
  3058 ;; Defined at:
  3059 ;;		line 310 in file "Cooking_Main.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  Buffer         16  103[BANK1 ] unsigned char [16]
  3064 ;;  hh              2  101[BANK1 ] int 
  3065 ;;  mm              2   99[BANK1 ] int 
  3066 ;;  ss              2   97[BANK1 ] int 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 3F/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;Total ram usage:       22 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 16
  3083 ;; This function calls:
  3084 ;;		_lcd_gotoxy
  3085 ;;		_lcd_puts
  3086 ;;		_set_baoundares
  3087 ;;		_sprintf
  3088 ;; This function is called by:
  3089 ;;		_update_lcd
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text5
  3094   004948                     __ptext5:
  3095                           	callstack 0
  3096   004948                     _update_lcd_Line1:
  3097                           	callstack 13
  3098                           
  3099                           ;Cooking_Main.c: 311: unsigned char Buffer[16];;Cooking_Main.c: 312: set_baoundares();
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;incstack = 0
  3103   004948  ECAC  F01D         	call	_set_baoundares	;wreg free
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;Cooking_Main.c: 313: int ss = count_sec;
  3107   00494C  C0CE  F161         	movff	_count_sec,update_lcd_Line1@ss
  3108   004950  C0CF  F162         	movff	_count_sec+1,update_lcd_Line1@ss+1
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;Cooking_Main.c: 314: int mm = count_min;
  3112   004954  C0CC  F163         	movff	_count_min,update_lcd_Line1@mm
  3113   004958  C0CD  F164         	movff	_count_min+1,update_lcd_Line1@mm+1
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;Cooking_Main.c: 315: int hh = count_hour;
  3117   00495C  C0CA  F165         	movff	_count_hour,update_lcd_Line1@hh
  3118   004960  C0CB  F166         	movff	_count_hour+1,update_lcd_Line1@hh+1
  3119                           
  3120                           ;Cooking_Main.c: 317: lcd_gotoxy(1, 1);
  3121   004964  0E01               	movlw	1
  3122   004966  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  3123   004968  0E01               	movlw	1
  3124   00496A  ECBA  F026         	call	_lcd_gotoxy
  3125                           
  3126                           ;Cooking_Main.c: 318: sprintf(Buffer, "Time: %02d:%02d:%02d  ", hh, mm, ss);
  3127   00496E  0E67               	movlw	low update_lcd_Line1@Buffer
  3128   004970  0101               	movlb	1	; () banked
  3129   004972  6F27               	movwf	sprintf@sp& (0+255),b
  3130   004974  0E01               	movlw	high update_lcd_Line1@Buffer
  3131   004976  6F28               	movwf	(sprintf@sp+1)& (0+255),b
  3132   004978  0E57               	movlw	low STR_1
  3133   00497A  6F29               	movwf	sprintf@f& (0+255),b
  3134   00497C  0EFF               	movlw	high STR_1
  3135   00497E  6F2A               	movwf	(sprintf@f+1)& (0+255),b
  3136   004980  C165  F12B         	movff	update_lcd_Line1@hh,?_sprintf+4
  3137   004984  C166  F12C         	movff	update_lcd_Line1@hh+1,?_sprintf+5
  3138   004988  C163  F12D         	movff	update_lcd_Line1@mm,?_sprintf+6
  3139   00498C  C164  F12E         	movff	update_lcd_Line1@mm+1,?_sprintf+7
  3140   004990  C161  F12F         	movff	update_lcd_Line1@ss,?_sprintf+8
  3141   004994  C162  F130         	movff	update_lcd_Line1@ss+1,?_sprintf+9
  3142   004998  EC09  F000         	call	_sprintf	;wreg free
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;Cooking_Main.c: 319: lcd_puts(Buffer);
  3146   00499C  0E67               	movlw	low update_lcd_Line1@Buffer
  3147   00499E  0100               	movlb	0	; () banked
  3148   0049A0  6FB8               	movwf	lcd_puts@s& (0+255),b
  3149   0049A2  0E01               	movlw	high update_lcd_Line1@Buffer
  3150   0049A4  6FB9               	movwf	(lcd_puts@s+1)& (0+255),b
  3151   0049A6  ECA1  F028         	call	_lcd_puts	;wreg free
  3152                           
  3153                           ; BSR set to: 0
  3154   0049AA  0012               	return		;funcret
  3155   0049AC                     __end_of_update_lcd_Line1:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function _sprintf *****************
  3159 ;; Defined at:
  3160 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  sp              2   39[BANK1 ] PTR unsigned char 
  3163 ;;		 -> RAM(3967), update_lcd_Line4@Buffer(16), NULL(0), update_lcd_Line3@Buffer(16), 
  3164 ;;		 -> update_lcd_Line2@Buffer(16), update_lcd_Line1@Buffer(16), 
  3165 ;;  f               2   41[BANK1 ] PTR const unsigned char 
  3166 ;;		 -> STR_18(17), STR_17(17), STR_9(3), NULL(0), 
  3167 ;;		 -> STR_7(18), STR_4(18), STR_1(23), 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  idx             1   58[BANK1 ] unsigned char 
  3170 ;;  val             4   86[BANK1 ] unsigned long 
  3171 ;;  tmpval          4   77[BANK1 ] struct .
  3172 ;;  fval            3   83[BANK1 ] struct .
  3173 ;;  flag            2   95[BANK1 ] unsigned short 
  3174 ;;  prec            2   92[BANK1 ] int 
  3175 ;;  width           2   90[BANK1 ] int 
  3176 ;;  eexp            2   81[BANK1 ] int 
  3177 ;;  ap              2   75[BANK1 ] PTR void [1]
  3178 ;;		 -> ?_sprintf(2), 
  3179 ;;  ccnt            2   73[BANK1 ] int 
  3180 ;;  len             2   71[BANK1 ] unsigned int 
  3181 ;;  cp              2   69[BANK1 ] PTR const unsigned char 
  3182 ;;		 -> STR_19(7), sprintf@c(1), ?_sprintf(2), STR_16(4), 
  3183 ;;		 -> STR_15(4), STR_14(3), STR_13(4), STR_12(4), 
  3184 ;;		 -> STR_11(4), STR_10(4), STR_8(3), STR_6(3), 
  3185 ;;		 -> STR_5(4), STR_3(3), STR_2(4), 
  3186 ;;  c               1   94[BANK1 ] unsigned char 
  3187 ;;  d               1    0        unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2   39[BANK1 ] int 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 3F/1
  3194 ;;		On exit  : 3F/1
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:       58 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 13
  3204 ;; This function calls:
  3205 ;;		___awdiv
  3206 ;;		___ftadd
  3207 ;;		___ftge
  3208 ;;		___ftmul
  3209 ;;		___ftneg
  3210 ;;		___ftsub
  3211 ;;		___fttol
  3212 ;;		___lldiv
  3213 ;;		___llmod
  3214 ;;		___lltoft
  3215 ;;		___wmul
  3216 ;;		__div_to_l_
  3217 ;;		__tdiv_to_l_
  3218 ;;		_fround
  3219 ;;		_isdigit
  3220 ;;		_scale
  3221 ;; This function is called by:
  3222 ;;		_update_lcd_Line1
  3223 ;;		_update_lcd_Line2
  3224 ;;		_update_lcd_Line3
  3225 ;;		_update_lcd_Line4
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text6
  3230   000012                     __ptext6:
  3231                           	callstack 0
  3232   000012                     _sprintf:
  3233                           	callstack 15
  3234                           
  3235                           ; BSR set to: 1
  3236                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;incstack = 0
  3240   000012  0E00               	movlw	0
  3241   000014  6F4A               	movwf	(sprintf@ccnt+1)& (0+255),b
  3242   000016  0E00               	movlw	0
  3243   000018  6F49               	movwf	sprintf@ccnt& (0+255),b
  3244                           
  3245                           ; BSR set to: 1
  3246                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
  3247   00001A  0E2B               	movlw	low (?_sprintf+4)
  3248   00001C  6F4B               	movwf	sprintf@ap& (0+255),b
  3249   00001E  0E01               	movlw	high (?_sprintf+4)
  3250   000020  6F4C               	movwf	(sprintf@ap+1)& (0+255),b
  3251                           
  3252                           ;doprnt.c: 553: while((c = *f++)) {
  3253   000022  EF49  F008         	goto	u12150
  3254   000026                     l8908:
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;doprnt.c: 555: if(c != '%')
  3258   000026  0E25               	movlw	37
  3259   000028  195E               	xorwf	sprintf@c& (0+255),w,b
  3260   00002A  B4D8               	btfsc	status,2,c
  3261   00002C  D00C               	goto	l8916
  3262                           
  3263                           ; BSR set to: 1
  3264                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
  3265   00002E  C127  FFD9         	movff	sprintf@sp,fsr2l
  3266   000032  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  3267   000036  C15E  FFDF         	movff	sprintf@c,indf2
  3268                           
  3269                           ; BSR set to: 1
  3270   00003A  4B27               	infsnz	sprintf@sp& (0+255),f,b
  3271   00003C  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  3272                           
  3273                           ; BSR set to: 1
  3274   00003E  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  3275   000040  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3276                           
  3277                           ;doprnt.c: 559: continue;
  3278   000042  EF49  F008         	goto	u12150
  3279   000046                     l8916:
  3280                           
  3281                           ; BSR set to: 1
  3282                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  3283   000046  0E00               	movlw	0
  3284   000048  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  3285   00004A  0E00               	movlw	0
  3286   00004C  6F5A               	movwf	sprintf@width& (0+255),b
  3287                           
  3288                           ;doprnt.c: 565: flag = 0;
  3289   00004E  0E00               	movlw	0
  3290   000050  6F60               	movwf	(sprintf@flag+1)& (0+255),b
  3291   000052  0E00               	movlw	0
  3292   000054  6F5F               	movwf	sprintf@flag& (0+255),b
  3293   000056  D009               	goto	l8928
  3294   000058                     l8918:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 571: flag |= 0x08;
  3298   000058  875F               	bsf	sprintf@flag& (0+255),3,b
  3299   00005A  D005               	goto	L11
  3300   00005C                     l8920:
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;doprnt.c: 578: flag |= 0x01;
  3304   00005C  815F               	bsf	sprintf@flag& (0+255),0,b
  3305   00005E  D003               	goto	L11
  3306   000060                     l8922:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;doprnt.c: 591: flag |= 0x800;
  3310   000060  8760               	bsf	(sprintf@flag+1)& (0+255),3,b
  3311   000062  D001               	goto	L11
  3312   000064                     l8924:
  3313                           
  3314                           ; BSR set to: 1
  3315                           ;doprnt.c: 597: flag |= 0x04;
  3316   000064  855F               	bsf	sprintf@flag& (0+255),2,b
  3317   000066                     L11:
  3318                           
  3319                           ;doprnt.c: 598: f++;
  3320   000066  4B29               	infsnz	sprintf@f& (0+255),f,b
  3321   000068  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3322   00006A                     l8928:
  3323                           
  3324                           ; BSR set to: 1
  3325   00006A  C129  FFF6         	movff	sprintf@f,tblptrl
  3326   00006E  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3327   000072                     	if	0	;tblptru may be non-zero
  3328   000072                     	endif
  3329   000072                     	if	0	;tblptru may be non-zero
  3330   000072                     	endif
  3331   000072  0008               	tblrd		*
  3332   000074  50F5               	movf	tablat,w,c
  3333                           
  3334                           ; Switch size 1, requested type "simple"
  3335                           ; Number of cases is 4, Range of values is 32 to 48
  3336                           ; switch strategies available:
  3337                           ; Name         Instructions Cycles
  3338                           ; simple_byte           13     7 (average)
  3339                           ;	Chosen strategy is simple_byte
  3340   000076  0A20               	xorlw	32	; case 32
  3341   000078  B4D8               	btfsc	status,2,c
  3342   00007A  D7F0               	goto	l8920
  3343   00007C  0A03               	xorlw	3	; case 35
  3344   00007E  B4D8               	btfsc	status,2,c
  3345   000080  D7EF               	goto	l8922
  3346   000082  0A0E               	xorlw	14	; case 45
  3347   000084  B4D8               	btfsc	status,2,c
  3348   000086  D7E8               	goto	l8918
  3349   000088  0A1D               	xorlw	29	; case 48
  3350   00008A  B4D8               	btfsc	status,2,c
  3351   00008C  D7EB               	goto	l8924
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;doprnt.c: 610: if(flag & 0x08)
  3355   00008E  B75F               	btfsc	sprintf@flag& (0+255),3,b
  3356                           
  3357                           ; BSR set to: 1
  3358                           ;doprnt.c: 611: flag &= ~0x04;
  3359   000090  955F               	bcf	sprintf@flag& (0+255),2,b
  3360                           
  3361                           ; BSR set to: 1
  3362                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  3363   000092  C129  FFF6         	movff	sprintf@f,tblptrl
  3364   000096  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3365   00009A                     	if	0	;tblptru may be non-zero
  3366   00009A                     	endif
  3367   00009A                     	if	0	;tblptru may be non-zero
  3368   00009A                     	endif
  3369   00009A  0008               	tblrd		*
  3370   00009C  50F5               	movf	tablat,w,c
  3371   00009E  EC36  F029         	call	_isdigit
  3372   0000A2  A0D8               	btfss	status,0,c
  3373   0000A4  D033               	goto	l8944
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;doprnt.c: 615: width = 0;
  3377   0000A6  0E00               	movlw	0
  3378   0000A8  0101               	movlb	1	; () banked
  3379   0000AA  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  3380   0000AC  0E00               	movlw	0
  3381   0000AE  6F5A               	movwf	sprintf@width& (0+255),b
  3382   0000B0                     l8936:
  3383                           
  3384                           ;doprnt.c: 617: width *= 10;
  3385   0000B0  C15A  F0AA         	movff	sprintf@width,___wmul@multiplier
  3386   0000B4  C15B  F0AB         	movff	sprintf@width+1,___wmul@multiplier+1
  3387   0000B8  0E00               	movlw	0
  3388   0000BA  0100               	movlb	0	; () banked
  3389   0000BC  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3390   0000BE  0E0A               	movlw	10
  3391   0000C0  6FAC               	movwf	___wmul@multiplicand& (0+255),b
  3392   0000C2  ECB4  F028         	call	___wmul	;wreg free
  3393   0000C6  C0AA  F15A         	movff	?___wmul,sprintf@width
  3394   0000CA  C0AB  F15B         	movff	?___wmul+1,sprintf@width+1
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;doprnt.c: 618: width += *f++ - '0';
  3398   0000CE  C129  FFF6         	movff	sprintf@f,tblptrl
  3399   0000D2  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3400   0000D6                     	if	0	;tblptru may be non-zero
  3401   0000D6                     	endif
  3402   0000D6                     	if	0	;tblptru may be non-zero
  3403   0000D6                     	endif
  3404   0000D6  0008               	tblrd		*
  3405   0000D8  CFF5 F131          	movff	tablat,??_sprintf
  3406   0000DC  0ED0               	movlw	208
  3407   0000DE  0101               	movlb	1	; () banked
  3408   0000E0  2531               	addwf	??_sprintf& (0+255),w,b
  3409   0000E2  6F32               	movwf	(??_sprintf+1)& (0+255),b
  3410   0000E4  6B33               	clrf	(??_sprintf+2)& (0+255),b
  3411   0000E6  0EFF               	movlw	255
  3412   0000E8  2333               	addwfc	(??_sprintf+2)& (0+255),f,b
  3413   0000EA  5132               	movf	(??_sprintf+1)& (0+255),w,b
  3414   0000EC  275A               	addwf	sprintf@width& (0+255),f,b
  3415   0000EE  5133               	movf	(??_sprintf+2)& (0+255),w,b
  3416   0000F0  235B               	addwfc	(sprintf@width+1)& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 1
  3419   0000F2  4B29               	infsnz	sprintf@f& (0+255),f,b
  3420   0000F4  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3421                           
  3422                           ; BSR set to: 1
  3423                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  3424   0000F6  C129  FFF6         	movff	sprintf@f,tblptrl
  3425   0000FA  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3426   0000FE                     	if	0	;tblptru may be non-zero
  3427   0000FE                     	endif
  3428   0000FE                     	if	0	;tblptru may be non-zero
  3429   0000FE                     	endif
  3430   0000FE  0008               	tblrd		*
  3431   000100  50F5               	movf	tablat,w,c
  3432   000102  EC36  F029         	call	_isdigit
  3433   000106  A0D8               	btfss	status,0,c
  3434   000108  D019               	goto	l8952
  3435   00010A  D7D2               	goto	l8936
  3436   00010C                     l8944:
  3437                           
  3438                           ; BSR set to: 0
  3439   00010C  C129  FFF6         	movff	sprintf@f,tblptrl
  3440   000110  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3441   000114                     	if	0	;tblptru may be non-zero
  3442   000114                     	endif
  3443   000114                     	if	0	;tblptru may be non-zero
  3444   000114                     	endif
  3445   000114  0008               	tblrd		*
  3446   000116  50F5               	movf	tablat,w,c
  3447   000118  0A2A               	xorlw	42
  3448   00011A  A4D8               	btfss	status,2,c
  3449   00011C  D00F               	goto	l8952
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  3453   00011E  C14B  FFD9         	movff	sprintf@ap,fsr2l
  3454   000122  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  3455   000126  CFDE F15A          	movff	postinc2,sprintf@width
  3456   00012A  CFDD F15B          	movff	postdec2,sprintf@width+1
  3457                           
  3458                           ; BSR set to: 0
  3459   00012E  0E02               	movlw	2
  3460   000130  0101               	movlb	1	; () banked
  3461   000132  274B               	addwf	sprintf@ap& (0+255),f,b
  3462   000134  0E00               	movlw	0
  3463   000136  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3464                           
  3465                           ; BSR set to: 1
  3466                           ;doprnt.c: 623: f++;
  3467   000138  4B29               	infsnz	sprintf@f& (0+255),f,b
  3468   00013A  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3469   00013C                     l8952:
  3470                           
  3471                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  3472   00013C  C129  FFF6         	movff	sprintf@f,tblptrl
  3473   000140  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3474   000144                     	if	0	;tblptru may be non-zero
  3475   000144                     	endif
  3476   000144                     	if	0	;tblptru may be non-zero
  3477   000144                     	endif
  3478   000144  0008               	tblrd		*
  3479   000146  50F5               	movf	tablat,w,c
  3480   000148  0A2E               	xorlw	46
  3481   00014A  A4D8               	btfss	status,2,c
  3482   00014C  D056               	goto	l8982
  3483                           
  3484                           ;doprnt.c: 629: flag |= 0x4000;
  3485   00014E  0101               	movlb	1	; () banked
  3486   000150  8D60               	bsf	(sprintf@flag+1)& (0+255),6,b
  3487                           
  3488                           ;doprnt.c: 630: f++;
  3489   000152  4B29               	infsnz	sprintf@f& (0+255),f,b
  3490   000154  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3491                           
  3492                           ; BSR set to: 1
  3493                           ;doprnt.c: 632: if(*f == '*') {
  3494   000156  C129  FFF6         	movff	sprintf@f,tblptrl
  3495   00015A  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3496   00015E                     	if	0	;tblptru may be non-zero
  3497   00015E                     	endif
  3498   00015E                     	if	0	;tblptru may be non-zero
  3499   00015E                     	endif
  3500   00015E  0008               	tblrd		*
  3501   000160  50F5               	movf	tablat,w,c
  3502   000162  0A2A               	xorlw	42
  3503   000164  A4D8               	btfss	status,2,c
  3504   000166  D017               	goto	l8972
  3505                           
  3506                           ; BSR set to: 1
  3507                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  3508   000168  C14B  FFD9         	movff	sprintf@ap,fsr2l
  3509   00016C  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  3510   000170  CFDE F15C          	movff	postinc2,sprintf@prec
  3511   000174  CFDD F15D          	movff	postdec2,sprintf@prec+1
  3512                           
  3513                           ; BSR set to: 1
  3514   000178  0E02               	movlw	2
  3515   00017A  274B               	addwf	sprintf@ap& (0+255),f,b
  3516   00017C  0E00               	movlw	0
  3517   00017E  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;doprnt.c: 634: if (prec < 0) {
  3521   000180  AF5D               	btfss	(sprintf@prec+1)& (0+255),7,b
  3522   000182  D006               	goto	l8970
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;doprnt.c: 635: prec = 0;
  3526   000184  0E00               	movlw	0
  3527   000186  6F5D               	movwf	(sprintf@prec+1)& (0+255),b
  3528   000188  0E00               	movlw	0
  3529   00018A  6F5C               	movwf	sprintf@prec& (0+255),b
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;doprnt.c: 636: flag &= ~0x4000;
  3533   00018C  9D60               	bcf	(sprintf@flag+1)& (0+255),6,b
  3534                           
  3535                           ; BSR set to: 1
  3536                           ;doprnt.c: 638: flag |= 0x1000;
  3537   00018E  8960               	bsf	(sprintf@flag+1)& (0+255),4,b
  3538   000190                     l8970:
  3539                           
  3540                           ; BSR set to: 1
  3541                           ;doprnt.c: 640: };doprnt.c: 641: f++;
  3542   000190  4B29               	infsnz	sprintf@f& (0+255),f,b
  3543   000192  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3544                           
  3545                           ;doprnt.c: 642: } else
  3546   000194  D102               	goto	l9062
  3547   000196                     l8972:
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  3551   000196  0E00               	movlw	0
  3552   000198  6F5D               	movwf	(sprintf@prec+1)& (0+255),b
  3553   00019A  0E00               	movlw	0
  3554   00019C  6F5C               	movwf	sprintf@prec& (0+255),b
  3555                           
  3556                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  3557   00019E  D022               	goto	l8980
  3558   0001A0                     l8974:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;doprnt.c: 647: prec *= 10;
  3562   0001A0  C15C  F0AA         	movff	sprintf@prec,___wmul@multiplier
  3563   0001A4  C15D  F0AB         	movff	sprintf@prec+1,___wmul@multiplier+1
  3564   0001A8  0E00               	movlw	0
  3565   0001AA  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3566   0001AC  0E0A               	movlw	10
  3567   0001AE  6FAC               	movwf	___wmul@multiplicand& (0+255),b
  3568   0001B0  ECB4  F028         	call	___wmul	;wreg free
  3569   0001B4  C0AA  F15C         	movff	?___wmul,sprintf@prec
  3570   0001B8  C0AB  F15D         	movff	?___wmul+1,sprintf@prec+1
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;doprnt.c: 648: prec += *f++ - '0';
  3574   0001BC  C129  FFF6         	movff	sprintf@f,tblptrl
  3575   0001C0  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3576   0001C4                     	if	0	;tblptru may be non-zero
  3577   0001C4                     	endif
  3578   0001C4                     	if	0	;tblptru may be non-zero
  3579   0001C4                     	endif
  3580   0001C4  0008               	tblrd		*
  3581   0001C6  CFF5 F131          	movff	tablat,??_sprintf
  3582   0001CA  0ED0               	movlw	208
  3583   0001CC  0101               	movlb	1	; () banked
  3584   0001CE  2531               	addwf	??_sprintf& (0+255),w,b
  3585   0001D0  6F32               	movwf	(??_sprintf+1)& (0+255),b
  3586   0001D2  6B33               	clrf	(??_sprintf+2)& (0+255),b
  3587   0001D4  0EFF               	movlw	255
  3588   0001D6  2333               	addwfc	(??_sprintf+2)& (0+255),f,b
  3589   0001D8  5132               	movf	(??_sprintf+1)& (0+255),w,b
  3590   0001DA  275C               	addwf	sprintf@prec& (0+255),f,b
  3591   0001DC  5133               	movf	(??_sprintf+2)& (0+255),w,b
  3592   0001DE  235D               	addwfc	(sprintf@prec+1)& (0+255),f,b
  3593                           
  3594                           ; BSR set to: 1
  3595   0001E0  4B29               	infsnz	sprintf@f& (0+255),f,b
  3596   0001E2  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3597   0001E4                     l8980:
  3598                           
  3599                           ; BSR set to: 1
  3600   0001E4  C129  FFF6         	movff	sprintf@f,tblptrl
  3601   0001E8  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3602   0001EC                     	if	0	;tblptru may be non-zero
  3603   0001EC                     	endif
  3604   0001EC                     	if	0	;tblptru may be non-zero
  3605   0001EC                     	endif
  3606   0001EC  0008               	tblrd		*
  3607   0001EE  50F5               	movf	tablat,w,c
  3608   0001F0  EC36  F029         	call	_isdigit
  3609   0001F4  A0D8               	btfss	status,0,c
  3610   0001F6  D0D1               	goto	l9062
  3611   0001F8  D7D3               	goto	l8974
  3612   0001FA                     l8982:
  3613                           
  3614                           ;doprnt.c: 652: prec = 0;
  3615   0001FA  0E00               	movlw	0
  3616   0001FC  0101               	movlb	1	; () banked
  3617   0001FE  6F5D               	movwf	(sprintf@prec+1)& (0+255),b
  3618   000200  0E00               	movlw	0
  3619   000202  6F5C               	movwf	sprintf@prec& (0+255),b
  3620                           
  3621                           ; BSR set to: 1
  3622                           ;doprnt.c: 654: flag |= 0x1000;
  3623   000204  8960               	bsf	(sprintf@flag+1)& (0+255),4,b
  3624   000206  D0C9               	goto	l9062
  3625   000208                     l8986:
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;doprnt.c: 689: flag |= 0x400;
  3629   000208  8560               	bsf	(sprintf@flag+1)& (0+255),2,b
  3630                           
  3631                           ;doprnt.c: 690: break;
  3632   00020A  D0F5               	goto	l9064
  3633   00020C                     l8988:
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;doprnt.c: 717: flag |= 0x40;
  3637   00020C  8D5F               	bsf	sprintf@flag& (0+255),6,b
  3638                           
  3639                           ;doprnt.c: 719: break;
  3640   00020E  D0F3               	goto	l9064
  3641   000210                     l8990:
  3642                           
  3643                           ; BSR set to: 1
  3644                           ;doprnt.c: 733: flag |= 0x2000;
  3645   000210  8B60               	bsf	(sprintf@flag+1)& (0+255),5,b
  3646   000212                     l468:
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;doprnt.c: 740: flag |= 0x20;
  3650   000212  8B5F               	bsf	sprintf@flag& (0+255),5,b
  3651   000214                     l469:
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;doprnt.c: 747: flag |= 0x80;
  3655   000214  8F5F               	bsf	sprintf@flag& (0+255),7,b
  3656                           
  3657                           ;doprnt.c: 749: break;
  3658   000216  D0EF               	goto	l9064
  3659   000218                     l8992:
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3663   000218  C14B  FFD9         	movff	sprintf@ap,fsr2l
  3664   00021C  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  3665   000220  CFDE F145          	movff	postinc2,sprintf@cp
  3666   000224  CFDD F146          	movff	postdec2,sprintf@cp+1
  3667                           
  3668                           ; BSR set to: 1
  3669   000228  0E02               	movlw	2
  3670   00022A  274B               	addwf	sprintf@ap& (0+255),f,b
  3671   00022C  0E00               	movlw	0
  3672   00022E  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;doprnt.c: 766: if(!cp)
  3676   000230  5145               	movf	sprintf@cp& (0+255),w,b
  3677   000232  1146               	iorwf	(sprintf@cp+1)& (0+255),w,b
  3678   000234  A4D8               	btfss	status,2,c
  3679   000236  D004               	goto	l9000
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;doprnt.c: 767: cp = "(null)";
  3683   000238  0ED6               	movlw	low STR_19
  3684   00023A  6F45               	movwf	sprintf@cp& (0+255),b
  3685   00023C  0EFF               	movlw	high STR_19
  3686   00023E  6F46               	movwf	(sprintf@cp+1)& (0+255),b
  3687   000240                     l9000:
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;doprnt.c: 771: len = 0;
  3691   000240  0E00               	movlw	0
  3692   000242  6F48               	movwf	(sprintf@len+1)& (0+255),b
  3693   000244  0E00               	movlw	0
  3694   000246  6F47               	movwf	sprintf@len& (0+255),b
  3695                           
  3696                           ;doprnt.c: 772: while(cp[len])
  3697   000248  D003               	goto	l9004
  3698   00024A                     l9002:
  3699                           
  3700                           ;doprnt.c: 773: len++;
  3701   00024A  0101               	movlb	1	; () banked
  3702   00024C  4B47               	infsnz	sprintf@len& (0+255),f,b
  3703   00024E  2B48               	incf	(sprintf@len+1)& (0+255),f,b
  3704   000250                     l9004:
  3705                           
  3706                           ; BSR set to: 1
  3707   000250  5147               	movf	sprintf@len& (0+255),w,b
  3708   000252  2545               	addwf	sprintf@cp& (0+255),w,b
  3709   000254  6F31               	movwf	??_sprintf& (0+255),b
  3710   000256  5148               	movf	(sprintf@len+1)& (0+255),w,b
  3711   000258  2146               	addwfc	(sprintf@cp+1)& (0+255),w,b
  3712   00025A  6F32               	movwf	(??_sprintf+1)& (0+255),b
  3713   00025C  C131  FFF6         	movff	??_sprintf,tblptrl
  3714   000260  C132  FFF7         	movff	??_sprintf+1,tblptrh
  3715   000264  0E00               	movlw	low (__mediumconst shr (0+16))
  3716   000266  6EF8               	movwf	tblptru,c
  3717   000268  0E0F               	movlw	(high __ramtop+-1)
  3718   00026A  64F7               	cpfsgt	tblptrh,c
  3719   00026C  D003               	bra	u11247
  3720   00026E  0008               	tblrd		*
  3721   000270  50F5               	movf	tablat,w,c
  3722   000272  D005               	bra	u11240
  3723   000274                     u11247:
  3724   000274  CFF6 FFE1          	movff	tblptrl,fsr1l
  3725   000278  CFF7 FFE2          	movff	tblptrh,fsr1h
  3726   00027C  50E7               	movf	indf1,w,c
  3727   00027E                     u11240:
  3728   00027E  0900               	iorlw	0
  3729   000280  A4D8               	btfss	status,2,c
  3730   000282  D7E3               	goto	l9002
  3731   000284                     u11250:
  3732                           
  3733                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  3734   000284  0101               	movlb	1	; () banked
  3735   000286  515C               	movf	sprintf@prec& (0+255),w,b
  3736   000288  115D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3737   00028A  B4D8               	btfsc	status,2,c
  3738   00028C  D00E               	goto	l9012
  3739                           
  3740                           ; BSR set to: 1
  3741   00028E  5147               	movf	sprintf@len& (0+255),w,b
  3742   000290  5D5C               	subwf	sprintf@prec& (0+255),w,b
  3743   000292  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  3744   000294  0A80               	xorlw	128
  3745   000296  6F31               	movwf	??_sprintf& (0+255),b
  3746   000298  5148               	movf	(sprintf@len+1)& (0+255),w,b
  3747   00029A  0A80               	xorlw	128
  3748   00029C  5931               	subwfb	??_sprintf& (0+255),w,b
  3749   00029E  B0D8               	btfsc	status,0,c
  3750   0002A0  D004               	goto	l9012
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;doprnt.c: 780: len = (unsigned int)prec;
  3754   0002A2  C15C  F147         	movff	sprintf@prec,sprintf@len
  3755   0002A6  C15D  F148         	movff	sprintf@prec+1,sprintf@len+1
  3756   0002AA                     l9012:
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;doprnt.c: 783: if(((unsigned)width) > len)
  3760   0002AA  515A               	movf	sprintf@width& (0+255),w,b
  3761   0002AC  5D47               	subwf	sprintf@len& (0+255),w,b
  3762   0002AE  515B               	movf	(sprintf@width+1)& (0+255),w,b
  3763   0002B0  5948               	subwfb	(sprintf@len+1)& (0+255),w,b
  3764   0002B2  B0D8               	btfsc	status,0,c
  3765   0002B4  D005               	goto	l9016
  3766                           
  3767                           ; BSR set to: 1
  3768                           ;doprnt.c: 784: width -= len;
  3769   0002B6  5147               	movf	sprintf@len& (0+255),w,b
  3770   0002B8  5F5A               	subwf	sprintf@width& (0+255),f,b
  3771   0002BA  5148               	movf	(sprintf@len+1)& (0+255),w,b
  3772   0002BC  5B5B               	subwfb	(sprintf@width+1)& (0+255),f,b
  3773   0002BE  D004               	goto	l9018
  3774   0002C0                     l9016:
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  3778   0002C0  0E00               	movlw	0
  3779   0002C2  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  3780   0002C4  0E00               	movlw	0
  3781   0002C6  6F5A               	movwf	sprintf@width& (0+255),b
  3782   0002C8                     l9018:
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;doprnt.c: 788: if(!(flag & 0x08))
  3786   0002C8  A75F               	btfss	sprintf@flag& (0+255),3,b
  3787   0002CA  D00B               	goto	l9028
  3788   0002CC  D030               	goto	l9038
  3789   0002CE                     l9022:
  3790                           
  3791                           ; BSR set to: 1
  3792                           ;doprnt.c: 791: ((*sp++ = (' ')),(++ccnt));
  3793   0002CE  C127  FFD9         	movff	sprintf@sp,fsr2l
  3794   0002D2  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  3795   0002D6  0E20               	movlw	32
  3796   0002D8  6EDF               	movwf	indf2,c
  3797                           
  3798                           ; BSR set to: 1
  3799   0002DA  4B27               	infsnz	sprintf@sp& (0+255),f,b
  3800   0002DC  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  3801                           
  3802                           ; BSR set to: 1
  3803   0002DE  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  3804   0002E0  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3805   0002E2                     l9028:
  3806                           
  3807                           ; BSR set to: 1
  3808   0002E2  075A               	decf	sprintf@width& (0+255),f,b
  3809   0002E4  A0D8               	btfss	status,0,c
  3810   0002E6  075B               	decf	(sprintf@width+1)& (0+255),f,b
  3811   0002E8  295A               	incf	sprintf@width& (0+255),w,b
  3812   0002EA  E1F1               	bnz	l9022
  3813   0002EC  295B               	incf	(sprintf@width+1)& (0+255),w,b
  3814   0002EE  B4D8               	btfsc	status,2,c
  3815   0002F0  D01E               	goto	l9038
  3816   0002F2  D7ED               	goto	l9022
  3817   0002F4                     l9030:
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;doprnt.c: 794: ((*sp++ = (*cp++)),(++ccnt));
  3821   0002F4  C145  FFF6         	movff	sprintf@cp,tblptrl
  3822   0002F8  C146  FFF7         	movff	sprintf@cp+1,tblptrh
  3823   0002FC  0E00               	movlw	low (__mediumconst shr (0+16))
  3824   0002FE  6EF8               	movwf	tblptru,c
  3825   000300  C127  FFD9         	movff	sprintf@sp,fsr2l
  3826   000304  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  3827   000308  0E0F               	movlw	(high __ramtop+-1)
  3828   00030A  64F7               	cpfsgt	tblptrh,c
  3829   00030C  D003               	bra	u11317
  3830   00030E  0008               	tblrd		*
  3831   000310  50F5               	movf	tablat,w,c
  3832   000312  D005               	bra	u11310
  3833   000314                     u11317:
  3834   000314  CFF6 FFE1          	movff	tblptrl,fsr1l
  3835   000318  CFF7 FFE2          	movff	tblptrh,fsr1h
  3836   00031C  50E7               	movf	indf1,w,c
  3837   00031E                     u11310:
  3838   00031E  6EDF               	movwf	indf2,c
  3839   000320  0101               	movlb	1	; () banked
  3840   000322  4B45               	infsnz	sprintf@cp& (0+255),f,b
  3841   000324  2B46               	incf	(sprintf@cp+1)& (0+255),f,b
  3842                           
  3843                           ; BSR set to: 1
  3844   000326  4B27               	infsnz	sprintf@sp& (0+255),f,b
  3845   000328  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 1
  3848   00032A  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  3849   00032C  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3850   00032E                     l9038:
  3851                           
  3852                           ; BSR set to: 1
  3853   00032E  0747               	decf	sprintf@len& (0+255),f,b
  3854   000330  A0D8               	btfss	status,0,c
  3855   000332  0748               	decf	(sprintf@len+1)& (0+255),f,b
  3856   000334  2947               	incf	sprintf@len& (0+255),w,b
  3857   000336  E1DE               	bnz	l9030
  3858   000338  2948               	incf	(sprintf@len+1)& (0+255),w,b
  3859   00033A  A4D8               	btfss	status,2,c
  3860   00033C  D7DB               	goto	l9030
  3861                           
  3862                           ; BSR set to: 1
  3863                           ;doprnt.c: 796: if(flag & 0x08)
  3864   00033E  B75F               	btfsc	sprintf@flag& (0+255),3,b
  3865   000340  D00C               	goto	l9048
  3866   000342  EF49  F008         	goto	u12150
  3867   000346                     l9042:
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;doprnt.c: 798: ((*sp++ = (' ')),(++ccnt));
  3871   000346  C127  FFD9         	movff	sprintf@sp,fsr2l
  3872   00034A  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  3873   00034E  0E20               	movlw	32
  3874   000350  6EDF               	movwf	indf2,c
  3875                           
  3876                           ; BSR set to: 1
  3877   000352  4B27               	infsnz	sprintf@sp& (0+255),f,b
  3878   000354  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 1
  3881   000356  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  3882   000358  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3883   00035A                     l9048:
  3884                           
  3885                           ; BSR set to: 1
  3886   00035A  075A               	decf	sprintf@width& (0+255),f,b
  3887   00035C  A0D8               	btfss	status,0,c
  3888   00035E  075B               	decf	(sprintf@width+1)& (0+255),f,b
  3889   000360  295A               	incf	sprintf@width& (0+255),w,b
  3890   000362  E1F1               	bnz	l9042
  3891   000364  295B               	incf	(sprintf@width+1)& (0+255),w,b
  3892   000366  B4D8               	btfsc	status,2,c
  3893   000368  EF49  F008         	goto	u12150
  3894   00036C  D7EC               	goto	l9042
  3895   00036E                     l9050:
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  3899   00036E  C14B  FFD9         	movff	sprintf@ap,fsr2l
  3900   000372  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  3901   000376  50DF               	movf	indf2,w,c
  3902   000378  6F5E               	movwf	sprintf@c& (0+255),b
  3903                           
  3904                           ; BSR set to: 1
  3905   00037A  0E02               	movlw	2
  3906   00037C  274B               	addwf	sprintf@ap& (0+255),f,b
  3907   00037E  0E00               	movlw	0
  3908   000380  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3909   000382                     l9054:
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;doprnt.c: 831: cp = (char *)&c;
  3913   000382  0E5E               	movlw	low sprintf@c
  3914   000384  6F45               	movwf	sprintf@cp& (0+255),b
  3915   000386  0E01               	movlw	high sprintf@c
  3916   000388  6F46               	movwf	(sprintf@cp+1)& (0+255),b
  3917                           
  3918                           ; BSR set to: 1
  3919                           ;doprnt.c: 832: len = 1;
  3920   00038A  0E00               	movlw	0
  3921   00038C  6F48               	movwf	(sprintf@len+1)& (0+255),b
  3922   00038E  0E01               	movlw	1
  3923   000390  6F47               	movwf	sprintf@len& (0+255),b
  3924                           
  3925                           ;doprnt.c: 833: goto dostring;
  3926   000392  D778               	goto	u11250
  3927   000394                     l9058:
  3928                           
  3929                           ; BSR set to: 1
  3930                           ;doprnt.c: 844: flag |= 0xC0;
  3931   000394  0EC0               	movlw	192
  3932   000396  135F               	iorwf	sprintf@flag& (0+255),f,b
  3933                           
  3934                           ;doprnt.c: 845: break;
  3935   000398  D02E               	goto	l9064
  3936   00039A                     l9062:
  3937   00039A  C129  FFF6         	movff	sprintf@f,tblptrl
  3938   00039E  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  3939   0003A2  0101               	movlb	1	; () banked
  3940   0003A4  4B29               	infsnz	sprintf@f& (0+255),f,b
  3941   0003A6  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  3942   0003A8                     	if	0	;tblptru may be non-zero
  3943   0003A8                     	endif
  3944   0003A8                     	if	0	;tblptru may be non-zero
  3945   0003A8                     	endif
  3946   0003A8  0008               	tblrd		*
  3947   0003AA  CFF5 F15E          	movff	tablat,sprintf@c
  3948   0003AE  515E               	movf	sprintf@c& (0+255),w,b
  3949                           
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 11, Range of values is 0 to 120
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           34    18 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956   0003B0  0A00               	xorlw	0	; case 0
  3957   0003B2  B4D8               	btfsc	status,2,c
  3958   0003B4  EF56  F008         	goto	u12160
  3959   0003B8  0A58               	xorlw	88	; case 88
  3960   0003BA  B4D8               	btfsc	status,2,c
  3961   0003BC  D72A               	goto	l468
  3962   0003BE  0A3B               	xorlw	59	; case 99
  3963   0003C0  B4D8               	btfsc	status,2,c
  3964   0003C2  D7D5               	goto	l9050
  3965   0003C4  0A07               	xorlw	7	; case 100
  3966   0003C6  B4D8               	btfsc	status,2,c
  3967   0003C8  D016               	goto	l9064
  3968   0003CA  0A02               	xorlw	2	; case 102
  3969   0003CC  B4D8               	btfsc	status,2,c
  3970   0003CE  D71C               	goto	l8986
  3971   0003D0  0A0F               	xorlw	15	; case 105
  3972   0003D2  B4D8               	btfsc	status,2,c
  3973   0003D4  D010               	goto	l9064
  3974   0003D6  0A06               	xorlw	6	; case 111
  3975   0003D8  B4D8               	btfsc	status,2,c
  3976   0003DA  D718               	goto	l8988
  3977   0003DC  0A1F               	xorlw	31	; case 112
  3978   0003DE  B4D8               	btfsc	status,2,c
  3979   0003E0  D717               	goto	l8990
  3980   0003E2  0A03               	xorlw	3	; case 115
  3981   0003E4  B4D8               	btfsc	status,2,c
  3982   0003E6  D718               	goto	l8992
  3983   0003E8  0A06               	xorlw	6	; case 117
  3984   0003EA  B4D8               	btfsc	status,2,c
  3985   0003EC  D7D3               	goto	l9058
  3986   0003EE  0A0D               	xorlw	13	; case 120
  3987   0003F0  B4D8               	btfsc	status,2,c
  3988   0003F2  D710               	goto	l469
  3989   0003F4  D7C6               	goto	l9054
  3990   0003F6                     l9064:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;doprnt.c: 851: if(flag & (0x700)) {
  3994   0003F6  0E07               	movlw	7
  3995   0003F8  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  3996   0003FA  B4D8               	btfsc	status,2,c
  3997   0003FC  D370               	goto	l9306
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;doprnt.c: 853: if(flag & 0x1000)
  4001   0003FE  A960               	btfss	(sprintf@flag+1)& (0+255),4,b
  4002   000400  D004               	goto	l9070
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;doprnt.c: 855: prec = 6;
  4006   000402  0E00               	movlw	0
  4007   000404  6F5D               	movwf	(sprintf@prec+1)& (0+255),b
  4008   000406  0E06               	movlw	6
  4009   000408  6F5C               	movwf	sprintf@prec& (0+255),b
  4010   00040A                     l9070:
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4014   00040A  C14B  FFD9         	movff	sprintf@ap,fsr2l
  4015   00040E  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  4016   000412  CFDE F153          	movff	postinc2,sprintf@fval
  4017   000416  CFDE F154          	movff	postinc2,sprintf@fval+1
  4018   00041A  CFDD F155          	movff	postdec2,sprintf@fval+2
  4019                           
  4020                           ; BSR set to: 1
  4021   00041E  0E03               	movlw	3
  4022   000420  274B               	addwf	sprintf@ap& (0+255),f,b
  4023   000422  0E00               	movlw	0
  4024   000424  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;doprnt.c: 857: if(fval < 0.0) {
  4028   000426  AF55               	btfss	(sprintf@fval+2)& (0+255),7,b
  4029   000428  D011               	goto	l9080
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;doprnt.c: 858: fval = -fval;
  4033   00042A  C153  F0AA         	movff	sprintf@fval,___ftneg@f1
  4034   00042E  C154  F0AB         	movff	sprintf@fval+1,___ftneg@f1+1
  4035   000432  C155  F0AC         	movff	sprintf@fval+2,___ftneg@f1+2
  4036   000436  EC8E  F028         	call	___ftneg	;wreg free
  4037   00043A  C0AA  F153         	movff	?___ftneg,sprintf@fval
  4038   00043E  C0AB  F154         	movff	?___ftneg+1,sprintf@fval+1
  4039   000442  C0AC  F155         	movff	?___ftneg+2,sprintf@fval+2
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;doprnt.c: 859: flag |= 0x03;
  4043   000446  0E03               	movlw	3
  4044   000448  0101               	movlb	1	; () banked
  4045   00044A  135F               	iorwf	sprintf@flag& (0+255),f,b
  4046   00044C                     l9080:
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4050   00044C  0E00               	movlw	0
  4051   00044E  6F52               	movwf	(sprintf@eexp+1)& (0+255),b
  4052   000450  0E00               	movlw	0
  4053   000452  6F51               	movwf	sprintf@eexp& (0+255),b
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;doprnt.c: 862: if( fval!=0) {
  4057   000454  5153               	movf	sprintf@fval& (0+255),w,b
  4058   000456  1154               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4059   000458  1155               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4060   00045A  B4D8               	btfsc	status,2,c
  4061   00045C  D087               	goto	l9108
  4062                           
  4063                           ; BSR set to: 1
  4064                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4065   00045E  0E82               	movlw	130
  4066   000460  6F31               	movwf	??_sprintf& (0+255),b
  4067   000462  0EFF               	movlw	255
  4068   000464  6F32               	movwf	(??_sprintf+1)& (0+255),b
  4069   000466  C153  F133         	movff	sprintf@fval,??_sprintf+2
  4070   00046A  C154  F134         	movff	sprintf@fval+1,??_sprintf+3
  4071   00046E  C155  F135         	movff	sprintf@fval+2,??_sprintf+4
  4072   000472  C156  F136         	movff	sprintf@fval+3,??_sprintf+5
  4073   000476  0E10               	movlw	16
  4074   000478  D005               	goto	u11390
  4075   00047A                     u11395:
  4076   00047A  90D8               	bcf	status,0,c
  4077   00047C  3336               	rrcf	(??_sprintf+5)& (0+255),f,b
  4078   00047E  3335               	rrcf	(??_sprintf+4)& (0+255),f,b
  4079   000480  3334               	rrcf	(??_sprintf+3)& (0+255),f,b
  4080   000482  3333               	rrcf	(??_sprintf+2)& (0+255),f,b
  4081   000484                     u11390:
  4082   000484  2EE8               	decfsz	wreg,f,c
  4083   000486  D7F9               	goto	u11395
  4084   000488  5133               	movf	(??_sprintf+2)& (0+255),w,b
  4085   00048A  2531               	addwf	??_sprintf& (0+255),w,b
  4086   00048C  6F51               	movwf	sprintf@eexp& (0+255),b
  4087   00048E  0E00               	movlw	0
  4088   000490  2132               	addwfc	(??_sprintf+1)& (0+255),w,b
  4089   000492  6F52               	movwf	(sprintf@eexp+1)& (0+255),b
  4090                           
  4091                           ; BSR set to: 1
  4092                           ;doprnt.c: 864: eexp--;
  4093   000494  0751               	decf	sprintf@eexp& (0+255),f,b
  4094   000496  A0D8               	btfss	status,0,c
  4095   000498  0752               	decf	(sprintf@eexp+1)& (0+255),f,b
  4096                           
  4097                           ; BSR set to: 1
  4098                           ;doprnt.c: 865: eexp *= 3;
  4099   00049A  C151  F0AA         	movff	sprintf@eexp,___wmul@multiplier
  4100   00049E  C152  F0AB         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4101   0004A2  0E00               	movlw	0
  4102   0004A4  0100               	movlb	0	; () banked
  4103   0004A6  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4104   0004A8  0E03               	movlw	3
  4105   0004AA  6FAC               	movwf	___wmul@multiplicand& (0+255),b
  4106   0004AC  ECB4  F028         	call	___wmul	;wreg free
  4107   0004B0  C0AA  F151         	movff	?___wmul,sprintf@eexp
  4108   0004B4  C0AB  F152         	movff	?___wmul+1,sprintf@eexp+1
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;doprnt.c: 866: eexp /= 10;
  4112   0004B8  C151  F0B0         	movff	sprintf@eexp,___awdiv@dividend
  4113   0004BC  C152  F0B1         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4114   0004C0  0E00               	movlw	0
  4115   0004C2  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  4116   0004C4  0E0A               	movlw	10
  4117   0004C6  6FB2               	movwf	___awdiv@divisor& (0+255),b
  4118   0004C8  ECFA  F020         	call	___awdiv	;wreg free
  4119   0004CC  C0B0  F151         	movff	?___awdiv,sprintf@eexp
  4120   0004D0  C0B1  F152         	movff	?___awdiv+1,sprintf@eexp+1
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;doprnt.c: 867: if(eexp < 0)
  4124   0004D4  0101               	movlb	1	; () banked
  4125   0004D6  AF52               	btfss	(sprintf@eexp+1)& (0+255),7,b
  4126   0004D8  D003               	goto	l9096
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;doprnt.c: 868: eexp--;
  4130   0004DA  0751               	decf	sprintf@eexp& (0+255),f,b
  4131   0004DC  A0D8               	btfss	status,0,c
  4132   0004DE  0752               	decf	(sprintf@eexp+1)& (0+255),f,b
  4133   0004E0                     l9096:
  4134                           
  4135                           ; BSR set to: 1
  4136                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4137   0004E0  5151               	movf	sprintf@eexp& (0+255),w,b
  4138   0004E2  0800               	sublw	0
  4139   0004E4  ECAF  F010         	call	_scale
  4140   0004E8  C109  F14D         	movff	?_scale,sprintf@tmpval
  4141   0004EC  C10A  F14E         	movff	?_scale+1,sprintf@tmpval+1
  4142   0004F0  C10B  F14F         	movff	?_scale+2,sprintf@tmpval+2
  4143                           
  4144                           ;doprnt.c: 873: tmpval.integ *= fval;
  4145   0004F4  C14D  F0B8         	movff	sprintf@tmpval,___ftmul@f1
  4146   0004F8  C14E  F0B9         	movff	sprintf@tmpval+1,___ftmul@f1+1
  4147   0004FC  C14F  F0BA         	movff	sprintf@tmpval+2,___ftmul@f1+2
  4148   000500  C153  F0BB         	movff	sprintf@fval,___ftmul@f2
  4149   000504  C154  F0BC         	movff	sprintf@fval+1,___ftmul@f2+1
  4150   000508  C155  F0BD         	movff	sprintf@fval+2,___ftmul@f2+2
  4151   00050C  EC8D  F019         	call	___ftmul	;wreg free
  4152   000510  C0B8  F14D         	movff	?___ftmul,sprintf@tmpval
  4153   000514  C0B9  F14E         	movff	?___ftmul+1,sprintf@tmpval+1
  4154   000518  C0BA  F14F         	movff	?___ftmul+2,sprintf@tmpval+2
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4158   00051C  C14D  F0AA         	movff	sprintf@tmpval,___ftge@ff1
  4159   000520  C14E  F0AB         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4160   000524  C14F  F0AC         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4161   000528  0E00               	movlw	0
  4162   00052A  6FAD               	movwf	___ftge@ff2& (0+255),b
  4163   00052C  0E80               	movlw	128
  4164   00052E  6FAE               	movwf	(___ftge@ff2+1)& (0+255),b
  4165   000530  0E3F               	movlw	63
  4166   000532  6FAF               	movwf	(___ftge@ff2+2)& (0+255),b
  4167   000534  EC3F  F022         	call	___ftge	;wreg free
  4168   000538  B0D8               	btfsc	status,0,c
  4169   00053A  D005               	goto	l9104
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;doprnt.c: 875: eexp--;
  4173   00053C  0101               	movlb	1	; () banked
  4174   00053E  0751               	decf	sprintf@eexp& (0+255),f,b
  4175   000540  A0D8               	btfss	status,0,c
  4176   000542  0752               	decf	(sprintf@eexp+1)& (0+255),f,b
  4177   000544  D013               	goto	l9108
  4178   000546                     l9104:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4182   000546  C14D  F0AA         	movff	sprintf@tmpval,___ftge@ff1
  4183   00054A  C14E  F0AB         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4184   00054E  C14F  F0AC         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4185   000552  0E00               	movlw	0
  4186   000554  6FAD               	movwf	___ftge@ff2& (0+255),b
  4187   000556  0E20               	movlw	32
  4188   000558  6FAE               	movwf	(___ftge@ff2+1)& (0+255),b
  4189   00055A  0E41               	movlw	65
  4190   00055C  6FAF               	movwf	(___ftge@ff2+2)& (0+255),b
  4191   00055E  EC3F  F022         	call	___ftge	;wreg free
  4192   000562  A0D8               	btfss	status,0,c
  4193   000564  D003               	goto	l9108
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;doprnt.c: 877: eexp++;
  4197   000566  0101               	movlb	1	; () banked
  4198   000568  4B51               	infsnz	sprintf@eexp& (0+255),f,b
  4199   00056A  2B52               	incf	(sprintf@eexp+1)& (0+255),f,b
  4200   00056C                     l9108:
  4201                           
  4202                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4203   00056C  0101               	movlb	1	; () banked
  4204   00056E  BF5D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4205   000570  D006               	goto	u11430
  4206   000572  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  4207   000574  E11B               	bnz	l9112
  4208   000576  0E0D               	movlw	13
  4209   000578  5D5C               	subwf	sprintf@prec& (0+255),w,b
  4210   00057A  B0D8               	btfsc	status,0,c
  4211   00057C  D017               	goto	l9112
  4212   00057E                     u11430:
  4213                           
  4214                           ; BSR set to: 1
  4215                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4216   00057E  C153  F115         	movff	sprintf@fval,___ftadd@f1
  4217   000582  C154  F116         	movff	sprintf@fval+1,___ftadd@f1+1
  4218   000586  C155  F117         	movff	sprintf@fval+2,___ftadd@f1+2
  4219   00058A  515C               	movf	sprintf@prec& (0+255),w,b
  4220   00058C  ECF0  F015         	call	_fround
  4221   000590  C109  F118         	movff	?_fround,___ftadd@f2
  4222   000594  C10A  F119         	movff	?_fround+1,___ftadd@f2+1
  4223   000598  C10B  F11A         	movff	?_fround+2,___ftadd@f2+2
  4224   00059C  ECE4  F017         	call	___ftadd	;wreg free
  4225   0005A0  C115  F153         	movff	?___ftadd,sprintf@fval
  4226   0005A4  C116  F154         	movff	?___ftadd+1,sprintf@fval+1
  4227   0005A8  C117  F155         	movff	?___ftadd+2,sprintf@fval+2
  4228   0005AC                     l9112:
  4229                           
  4230                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4231   0005AC  0101               	movlb	1	; () banked
  4232   0005AE  BF52               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4233   0005B0  D006               	goto	u11440
  4234   0005B2  5152               	movf	(sprintf@eexp+1)& (0+255),w,b
  4235   0005B4  E11E               	bnz	l9120
  4236   0005B6  0E0A               	movlw	10
  4237   0005B8  5D51               	subwf	sprintf@eexp& (0+255),w,b
  4238   0005BA  B0D8               	btfsc	status,0,c
  4239   0005BC  D01A               	goto	u11470
  4240   0005BE                     u11440:
  4241                           
  4242                           ; BSR set to: 1
  4243   0005BE  5153               	movf	sprintf@fval& (0+255),w,b
  4244   0005C0  1154               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4245   0005C2  1155               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4246   0005C4  B4D8               	btfsc	status,2,c
  4247   0005C6  D055               	goto	l9134
  4248                           
  4249                           ; BSR set to: 1
  4250   0005C8  C153  F110         	movff	sprintf@fval,___fttol@f1
  4251   0005CC  C154  F111         	movff	sprintf@fval+1,___fttol@f1+1
  4252   0005D0  C155  F112         	movff	sprintf@fval+2,___fttol@f1+2
  4253   0005D4  EC77  F01F         	call	___fttol	;wreg free
  4254   0005D8  5110               	movf	?___fttol& (0+255),w,b
  4255   0005DA  1111               	iorwf	(?___fttol+1)& (0+255),w,b
  4256   0005DC  1112               	iorwf	(?___fttol+2)& (0+255),w,b
  4257   0005DE  1113               	iorwf	(?___fttol+3)& (0+255),w,b
  4258   0005E0  B4D8               	btfsc	status,2,c
  4259                           
  4260                           ; BSR set to: 1
  4261   0005E2  BF52               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4262   0005E4  D046               	goto	l9134
  4263   0005E6  5152               	movf	(sprintf@eexp+1)& (0+255),w,b
  4264   0005E8  E104               	bnz	u11470
  4265   0005EA  0E02               	movlw	2
  4266   0005EC  5D51               	subwf	sprintf@eexp& (0+255),w,b
  4267   0005EE  A0D8               	btfss	status,0,c
  4268   0005F0  D040               	goto	l9134
  4269   0005F2                     u11470:
  4270   0005F2                     l9120:
  4271                           
  4272                           ; BSR set to: 1
  4273                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4274   0005F2  C14D  F0AA         	movff	sprintf@tmpval,___ftge@ff1
  4275   0005F6  C14E  F0AB         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4276   0005FA  C14F  F0AC         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4277   0005FE  0E70               	movlw	112
  4278   000600  0100               	movlb	0	; () banked
  4279   000602  6FAD               	movwf	___ftge@ff2& (0+255),b
  4280   000604  0E89               	movlw	137
  4281   000606  6FAE               	movwf	(___ftge@ff2+1)& (0+255),b
  4282   000608  0E40               	movlw	64
  4283   00060A  6FAF               	movwf	(___ftge@ff2+2)& (0+255),b
  4284   00060C  EC3F  F022         	call	___ftge	;wreg free
  4285   000610  B0D8               	btfsc	status,0,c
  4286   000612  D003               	goto	l9124
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4290   000614  0101               	movlb	1	; () banked
  4291   000616  0EF7               	movlw	247
  4292   000618  D002               	goto	L12
  4293   00061A                     l9124:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4297   00061A  0101               	movlb	1	; () banked
  4298   00061C  0EF8               	movlw	248
  4299   00061E                     L12:
  4300   00061E  2751               	addwf	sprintf@eexp& (0+255),f,b
  4301   000620  0EFF               	movlw	255
  4302   000622  2352               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  4306   000624  5151               	movf	sprintf@eexp& (0+255),w,b
  4307   000626  ECAF  F010         	call	_scale
  4308   00062A  C109  F14D         	movff	?_scale,sprintf@tmpval
  4309   00062E  C10A  F14E         	movff	?_scale+1,sprintf@tmpval+1
  4310   000632  C10B  F14F         	movff	?_scale+2,sprintf@tmpval+2
  4311                           
  4312                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4313   000636  C153  F0AA         	movff	sprintf@fval,__tdiv_to_l_@f1
  4314   00063A  C154  F0AB         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  4315   00063E  C155  F0AC         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  4316   000642  C14D  F0AD         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  4317   000646  C14E  F0AE         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  4318   00064A  C14F  F0AF         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  4319   00064E  EC3E  F01B         	call	__tdiv_to_l_	;wreg free
  4320   000652  C0AA  F156         	movff	?__tdiv_to_l_,sprintf@val
  4321   000656  C0AB  F157         	movff	?__tdiv_to_l_+1,sprintf@val+1
  4322   00065A  C0AC  F158         	movff	?__tdiv_to_l_+2,sprintf@val+2
  4323   00065E  C0AD  F159         	movff	?__tdiv_to_l_+3,sprintf@val+3
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;doprnt.c: 1155: fval = 0.0;
  4327   000662  0E00               	movlw	0
  4328   000664  0101               	movlb	1	; () banked
  4329   000666  6F53               	movwf	sprintf@fval& (0+255),b
  4330   000668  0E00               	movlw	0
  4331   00066A  6F54               	movwf	(sprintf@fval+1)& (0+255),b
  4332   00066C  0E00               	movlw	0
  4333   00066E  6F55               	movwf	(sprintf@fval+2)& (0+255),b
  4334                           
  4335                           ;doprnt.c: 1156: } else {
  4336   000670  D033               	goto	l9138
  4337   000672                     l9134:
  4338                           
  4339                           ; BSR set to: 1
  4340                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4341   000672  C153  F110         	movff	sprintf@fval,___fttol@f1
  4342   000676  C154  F111         	movff	sprintf@fval+1,___fttol@f1+1
  4343   00067A  C155  F112         	movff	sprintf@fval+2,___fttol@f1+2
  4344   00067E  EC77  F01F         	call	___fttol	;wreg free
  4345   000682  C110  F156         	movff	?___fttol,sprintf@val
  4346   000686  C111  F157         	movff	?___fttol+1,sprintf@val+1
  4347   00068A  C112  F158         	movff	?___fttol+2,sprintf@val+2
  4348   00068E  C113  F159         	movff	?___fttol+3,sprintf@val+3
  4349                           
  4350                           ;doprnt.c: 1158: fval -= (double)val;
  4351   000692  C153  F121         	movff	sprintf@fval,___ftsub@f1
  4352   000696  C154  F122         	movff	sprintf@fval+1,___ftsub@f1+1
  4353   00069A  C155  F123         	movff	sprintf@fval+2,___ftsub@f1+2
  4354   00069E  C156  F0B2         	movff	sprintf@val,___lltoft@c
  4355   0006A2  C157  F0B3         	movff	sprintf@val+1,___lltoft@c+1
  4356   0006A6  C158  F0B4         	movff	sprintf@val+2,___lltoft@c+2
  4357   0006AA  C159  F0B5         	movff	sprintf@val+3,___lltoft@c+3
  4358   0006AE  EC38  F025         	call	___lltoft	;wreg free
  4359   0006B2  C0B2  F124         	movff	?___lltoft,___ftsub@f2
  4360   0006B6  C0B3  F125         	movff	?___lltoft+1,___ftsub@f2+1
  4361   0006BA  C0B4  F126         	movff	?___lltoft+2,___ftsub@f2+2
  4362   0006BE  ECDC  F026         	call	___ftsub	;wreg free
  4363   0006C2  C121  F153         	movff	?___ftsub,sprintf@fval
  4364   0006C6  C122  F154         	movff	?___ftsub+1,sprintf@fval+1
  4365   0006CA  C123  F155         	movff	?___ftsub+2,sprintf@fval+2
  4366                           
  4367                           ;doprnt.c: 1159: eexp = 0;
  4368   0006CE  0E00               	movlw	0
  4369   0006D0  0101               	movlb	1	; () banked
  4370   0006D2  6F52               	movwf	(sprintf@eexp+1)& (0+255),b
  4371   0006D4  0E00               	movlw	0
  4372   0006D6  6F51               	movwf	sprintf@eexp& (0+255),b
  4373   0006D8                     l9138:
  4374                           
  4375                           ; BSR set to: 1
  4376                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4377   0006D8  0E01               	movlw	1
  4378   0006DA  6F5E               	movwf	sprintf@c& (0+255),b
  4379   0006DC                     l9140:
  4380                           
  4381                           ; BSR set to: 1
  4382   0006DC  0E0A               	movlw	10
  4383   0006DE  195E               	xorwf	sprintf@c& (0+255),w,b
  4384   0006E0  B4D8               	btfsc	status,2,c
  4385   0006E2  D018               	goto	l9152
  4386                           
  4387                           ; BSR set to: 1
  4388                           ;doprnt.c: 1163: if(val < dpowers[c])
  4389   0006E4  515E               	movf	sprintf@c& (0+255),w,b
  4390   0006E6  0D04               	mullw	4
  4391   0006E8  0E2F               	movlw	low _dpowers
  4392   0006EA  24F3               	addwf	243,w,c
  4393   0006EC  6EF6               	movwf	tblptrl,c
  4394   0006EE  0EFF               	movlw	high _dpowers
  4395   0006F0  20F4               	addwfc	244,w,c
  4396   0006F2  6EF7               	movwf	tblptrh,c
  4397   0006F4                     	if	0	;There are less than 3 active tblptr bytes
  4398   0006F4                     	endif
  4399   0006F4  0009               	tblrd		*+
  4400   0006F6  50F5               	movf	tablat,w,c
  4401   0006F8  5D56               	subwf	sprintf@val& (0+255),w,b
  4402   0006FA  0009               	tblrd		*+
  4403   0006FC  50F5               	movf	tablat,w,c
  4404   0006FE  5957               	subwfb	(sprintf@val+1)& (0+255),w,b
  4405   000700  0009               	tblrd		*+
  4406   000702  50F5               	movf	tablat,w,c
  4407   000704  5958               	subwfb	(sprintf@val+2)& (0+255),w,b
  4408   000706  0009               	tblrd		*+
  4409   000708  50F5               	movf	tablat,w,c
  4410   00070A  5959               	subwfb	(sprintf@val+3)& (0+255),w,b
  4411   00070C  A0D8               	btfss	status,0,c
  4412   00070E  D002               	goto	l9152
  4413                           
  4414                           ; BSR set to: 1
  4415   000710  2B5E               	incf	sprintf@c& (0+255),f,b
  4416   000712  D7E4               	goto	l9140
  4417   000714                     l9152:
  4418                           
  4419                           ; BSR set to: 1
  4420                           ;doprnt.c: 1168: width -= prec + c + eexp;
  4421   000714  515E               	movf	sprintf@c& (0+255),w,b
  4422   000716  255C               	addwf	sprintf@prec& (0+255),w,b
  4423   000718  6F31               	movwf	??_sprintf& (0+255),b
  4424   00071A  0E00               	movlw	0
  4425   00071C  215D               	addwfc	(sprintf@prec+1)& (0+255),w,b
  4426   00071E  6F32               	movwf	(??_sprintf+1)& (0+255),b
  4427   000720  5151               	movf	sprintf@eexp& (0+255),w,b
  4428   000722  2731               	addwf	??_sprintf& (0+255),f,b
  4429   000724  5152               	movf	(sprintf@eexp+1)& (0+255),w,b
  4430   000726  2332               	addwfc	(??_sprintf+1)& (0+255),f,b
  4431   000728  5131               	movf	??_sprintf& (0+255),w,b
  4432   00072A  5F5A               	subwf	sprintf@width& (0+255),f,b
  4433   00072C  5132               	movf	(??_sprintf+1)& (0+255),w,b
  4434   00072E  5B5B               	subwfb	(sprintf@width+1)& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;doprnt.c: 1169: if(;doprnt.c: 1171: flag & 0x800 ||;doprnt.c: 1173: prec)
  4438   000730  B760               	btfsc	(sprintf@flag+1)& (0+255),3,b
  4439   000732  D004               	goto	u11520
  4440                           
  4441                           ; BSR set to: 1
  4442   000734  515C               	movf	sprintf@prec& (0+255),w,b
  4443   000736  115D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4444   000738  B4D8               	btfsc	status,2,c
  4445   00073A  D003               	goto	l9160
  4446   00073C                     u11520:
  4447                           
  4448                           ; BSR set to: 1
  4449                           ;doprnt.c: 1174: width--;
  4450   00073C  075A               	decf	sprintf@width& (0+255),f,b
  4451   00073E  A0D8               	btfss	status,0,c
  4452   000740  075B               	decf	(sprintf@width+1)& (0+255),f,b
  4453   000742                     l9160:
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;doprnt.c: 1175: if(flag & 0x03)
  4457   000742  C15F  F131         	movff	sprintf@flag,??_sprintf
  4458   000746  0E03               	movlw	3
  4459   000748  1731               	andwf	??_sprintf& (0+255),f,b
  4460   00074A  B4D8               	btfsc	status,2,c
  4461   00074C  D003               	goto	l9164
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;doprnt.c: 1176: width--;
  4465   00074E  075A               	decf	sprintf@width& (0+255),f,b
  4466   000750  A0D8               	btfss	status,0,c
  4467   000752  075B               	decf	(sprintf@width+1)& (0+255),f,b
  4468   000754                     l9164:
  4469                           
  4470                           ; BSR set to: 1
  4471                           ;doprnt.c: 1179: if(flag & 0x04) {
  4472   000754  A55F               	btfss	sprintf@flag& (0+255),2,b
  4473   000756  D03C               	goto	l519
  4474                           
  4475                           ; BSR set to: 1
  4476                           ;doprnt.c: 1183: if(flag & 0x03)
  4477   000758  C15F  F131         	movff	sprintf@flag,??_sprintf
  4478   00075C  0E03               	movlw	3
  4479   00075E  1731               	andwf	??_sprintf& (0+255),f,b
  4480   000760  B4D8               	btfsc	status,2,c
  4481   000762  D014               	goto	l9180
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;doprnt.c: 1185: ((*sp++ = (flag & 0x01 ? '-' : '+')),(++ccnt));
  4485   000764  B15F               	btfsc	sprintf@flag& (0+255),0,b
  4486   000766  D004               	goto	l9172
  4487                           
  4488                           ; BSR set to: 1
  4489   000768  0E00               	movlw	0
  4490   00076A  6F3C               	movwf	(_sprintf$1025+1)& (0+255),b
  4491   00076C  0E2B               	movlw	43
  4492   00076E  D003               	goto	L13
  4493   000770                     l9172:
  4494                           
  4495                           ; BSR set to: 1
  4496   000770  0E00               	movlw	0
  4497   000772  6F3C               	movwf	(_sprintf$1025+1)& (0+255),b
  4498   000774  0E2D               	movlw	45
  4499   000776                     L13:
  4500   000776  6F3B               	movwf	_sprintf$1025& (0+255),b
  4501                           
  4502                           ; BSR set to: 1
  4503   000778  C127  FFD9         	movff	sprintf@sp,fsr2l
  4504   00077C  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4505   000780  C13B  FFDF         	movff	_sprintf$1025,indf2
  4506                           
  4507                           ; BSR set to: 1
  4508   000784  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4509   000786  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4510                           
  4511                           ; BSR set to: 1
  4512   000788  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4513   00078A  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4514   00078C                     l9180:
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;doprnt.c: 1190: if(flag & 0x01)
  4518   00078C  A15F               	btfss	sprintf@flag& (0+255),0,b
  4519   00078E  D018               	goto	l9196
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;doprnt.c: 1191: ((*sp++ = (' ')),(++ccnt));
  4523   000790  C127  FFD9         	movff	sprintf@sp,fsr2l
  4524   000794  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4525   000798  0E20               	movlw	32
  4526   00079A  6EDF               	movwf	indf2,c
  4527                           
  4528                           ; BSR set to: 1
  4529   00079C  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4530   00079E  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 1
  4533   0007A0  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4534   0007A2  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4535   0007A4  D00D               	goto	l9196
  4536   0007A6                     l9188:
  4537                           
  4538                           ; BSR set to: 1
  4539                           ;doprnt.c: 1195: ((*sp++ = ('0')),(++ccnt));
  4540   0007A6  C127  FFD9         	movff	sprintf@sp,fsr2l
  4541   0007AA  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4542   0007AE  0E30               	movlw	48
  4543   0007B0  6EDF               	movwf	indf2,c
  4544                           
  4545                           ; BSR set to: 1
  4546   0007B2  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4547   0007B4  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4548                           
  4549                           ; BSR set to: 1
  4550   0007B6  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4551   0007B8  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 1
  4554                           ;doprnt.c: 1196: width--;
  4555   0007BA  075A               	decf	sprintf@width& (0+255),f,b
  4556   0007BC  A0D8               	btfss	status,0,c
  4557   0007BE  075B               	decf	(sprintf@width+1)& (0+255),f,b
  4558   0007C0                     l9196:
  4559                           
  4560                           ; BSR set to: 1
  4561   0007C0  BF5B               	btfsc	(sprintf@width+1)& (0+255),7,b
  4562   0007C2  D089               	goto	l9240
  4563   0007C4  515B               	movf	(sprintf@width+1)& (0+255),w,b
  4564   0007C6  E1EF               	bnz	l9188
  4565   0007C8  055A               	decf	sprintf@width& (0+255),w,b
  4566   0007CA  A0D8               	btfss	status,0,c
  4567   0007CC  D084               	goto	l9240
  4568   0007CE  D7EB               	goto	l9188
  4569   0007D0                     l519:
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;doprnt.c: 1201: {;doprnt.c: 1203: if(!(flag & 0x08))
  4573   0007D0  A75F               	btfss	sprintf@flag& (0+255),3,b
  4574   0007D2  D00E               	goto	l9208
  4575   0007D4  D014               	goto	u11600
  4576   0007D6                     l9200:
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;doprnt.c: 1207: ((*sp++ = (' ')),(++ccnt));
  4580   0007D6  C127  FFD9         	movff	sprintf@sp,fsr2l
  4581   0007DA  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4582   0007DE  0E20               	movlw	32
  4583   0007E0  6EDF               	movwf	indf2,c
  4584                           
  4585                           ; BSR set to: 1
  4586   0007E2  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4587   0007E4  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4588                           
  4589                           ; BSR set to: 1
  4590   0007E6  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4591   0007E8  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4592                           
  4593                           ; BSR set to: 1
  4594                           ;doprnt.c: 1208: width--;
  4595   0007EA  075A               	decf	sprintf@width& (0+255),f,b
  4596   0007EC  A0D8               	btfss	status,0,c
  4597   0007EE  075B               	decf	(sprintf@width+1)& (0+255),f,b
  4598   0007F0                     l9208:
  4599                           
  4600                           ; BSR set to: 1
  4601   0007F0  BF5B               	btfsc	(sprintf@width+1)& (0+255),7,b
  4602   0007F2  D005               	goto	u11600
  4603   0007F4  515B               	movf	(sprintf@width+1)& (0+255),w,b
  4604   0007F6  E1EF               	bnz	l9200
  4605   0007F8  055A               	decf	sprintf@width& (0+255),w,b
  4606   0007FA  B0D8               	btfsc	status,0,c
  4607   0007FC  D7EC               	goto	l9200
  4608   0007FE                     u11600:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  4612   0007FE  C15F  F131         	movff	sprintf@flag,??_sprintf
  4613   000802  0E03               	movlw	3
  4614   000804  1731               	andwf	??_sprintf& (0+255),f,b
  4615   000806  B4D8               	btfsc	status,2,c
  4616   000808  D015               	goto	l534
  4617                           
  4618                           ; BSR set to: 1
  4619                           ;doprnt.c: 1216: ((*sp++ = (flag & 0x01 ? '-' : '+')),(++ccnt));
  4620   00080A  B15F               	btfsc	sprintf@flag& (0+255),0,b
  4621   00080C  D004               	goto	l9216
  4622                           
  4623                           ; BSR set to: 1
  4624   00080E  0E00               	movlw	0
  4625   000810  6F3E               	movwf	(_sprintf$1026+1)& (0+255),b
  4626   000812  0E2B               	movlw	43
  4627   000814  D003               	goto	L14
  4628   000816                     l9216:
  4629                           
  4630                           ; BSR set to: 1
  4631   000816  0E00               	movlw	0
  4632   000818  6F3E               	movwf	(_sprintf$1026+1)& (0+255),b
  4633   00081A  0E2D               	movlw	45
  4634   00081C                     L14:
  4635   00081C  6F3D               	movwf	_sprintf$1026& (0+255),b
  4636                           
  4637                           ; BSR set to: 1
  4638   00081E  C127  FFD9         	movff	sprintf@sp,fsr2l
  4639   000822  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4640   000826  C13D  FFDF         	movff	_sprintf$1026,indf2
  4641   00082A                     l9220:
  4642                           
  4643                           ; BSR set to: 1
  4644   00082A  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4645   00082C  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4646                           
  4647                           ; BSR set to: 1
  4648   00082E  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4649   000830  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4650   000832  D051               	goto	l9240
  4651   000834                     l534:
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;doprnt.c: 1218: else if(flag & 0x01)
  4655   000834  A15F               	btfss	sprintf@flag& (0+255),0,b
  4656   000836  D04F               	goto	l9240
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;doprnt.c: 1219: ((*sp++ = (' ')),(++ccnt));
  4660   000838  C127  FFD9         	movff	sprintf@sp,fsr2l
  4661   00083C  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4662   000840  0E20               	movlw	32
  4663   000842  D047               	goto	L15
  4664   000844                     l9230:
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4668   000844  C156  F0AA         	movff	sprintf@val,___lldiv@dividend
  4669   000848  C157  F0AB         	movff	sprintf@val+1,___lldiv@dividend+1
  4670   00084C  C158  F0AC         	movff	sprintf@val+2,___lldiv@dividend+2
  4671   000850  C159  F0AD         	movff	sprintf@val+3,___lldiv@dividend+3
  4672   000854  515E               	movf	sprintf@c& (0+255),w,b
  4673   000856  0D04               	mullw	4
  4674   000858  0E2F               	movlw	low _dpowers
  4675   00085A  24F3               	addwf	243,w,c
  4676   00085C  6EF6               	movwf	tblptrl,c
  4677   00085E  0EFF               	movlw	high _dpowers
  4678   000860  20F4               	addwfc	244,w,c
  4679   000862  6EF7               	movwf	tblptrh,c
  4680   000864                     	if	0	;There are less than 3 active tblptr bytes
  4681   000864                     	endif
  4682   000864  0009               	tblrd		*+
  4683   000866  CFF5 F0AE          	movff	tablat,___lldiv@divisor
  4684   00086A  0009               	tblrd		*+
  4685   00086C  CFF5 F0AF          	movff	tablat,___lldiv@divisor+1
  4686   000870  0009               	tblrd		*+
  4687   000872  CFF5 F0B0          	movff	tablat,___lldiv@divisor+2
  4688   000876  000A               	tblrd		*-
  4689   000878  CFF5 F0B1          	movff	tablat,___lldiv@divisor+3
  4690   00087C  EC3C  F021         	call	___lldiv	;wreg free
  4691   000880  C0AA  F14D         	movff	?___lldiv,sprintf@tmpval
  4692   000884  C0AB  F14E         	movff	?___lldiv+1,sprintf@tmpval+1
  4693   000888  C0AC  F14F         	movff	?___lldiv+2,sprintf@tmpval+2
  4694   00088C  C0AD  F150         	movff	?___lldiv+3,sprintf@tmpval+3
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4698   000890  C14D  F0B7         	movff	sprintf@tmpval,___llmod@dividend
  4699   000894  C14E  F0B8         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4700   000898  C14F  F0B9         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4701   00089C  C150  F0BA         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4702   0008A0  0E0A               	movlw	10
  4703   0008A2  6FBB               	movwf	___llmod@divisor& (0+255),b
  4704   0008A4  0E00               	movlw	0
  4705   0008A6  6FBC               	movwf	(___llmod@divisor+1)& (0+255),b
  4706   0008A8  0E00               	movlw	0
  4707   0008AA  6FBD               	movwf	(___llmod@divisor+2)& (0+255),b
  4708   0008AC  0E00               	movlw	0
  4709   0008AE  6FBE               	movwf	(___llmod@divisor+3)& (0+255),b
  4710   0008B0  EC27  F023         	call	___llmod	;wreg free
  4711   0008B4  C0B7  F14D         	movff	?___llmod,sprintf@tmpval
  4712   0008B8  C0B8  F14E         	movff	?___llmod+1,sprintf@tmpval+1
  4713   0008BC  C0B9  F14F         	movff	?___llmod+2,sprintf@tmpval+2
  4714   0008C0  C0BA  F150         	movff	?___llmod+3,sprintf@tmpval+3
  4715                           
  4716                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
  4717   0008C4  0101               	movlb	1	; () banked
  4718   0008C6  514D               	movf	sprintf@tmpval& (0+255),w,b
  4719   0008C8  0F30               	addlw	48
  4720   0008CA  C127  FFD9         	movff	sprintf@sp,fsr2l
  4721   0008CE  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4722   0008D2                     L15:
  4723   0008D2  6EDF               	movwf	indf2,c
  4724   0008D4  D7AA               	goto	l9220
  4725   0008D6                     l9240:
  4726                           
  4727                           ; BSR set to: 1
  4728   0008D6  075E               	decf	sprintf@c& (0+255),f,b
  4729   0008D8  295E               	incf	sprintf@c& (0+255),w,b
  4730   0008DA  B4D8               	btfsc	status,2,c
  4731   0008DC  D00E               	goto	l9250
  4732   0008DE  D7B2               	goto	l9230
  4733   0008E0                     l9242:
  4734                           
  4735                           ; BSR set to: 1
  4736                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
  4737   0008E0  C127  FFD9         	movff	sprintf@sp,fsr2l
  4738   0008E4  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4739   0008E8  0E30               	movlw	48
  4740   0008EA  6EDF               	movwf	indf2,c
  4741                           
  4742                           ; BSR set to: 1
  4743   0008EC  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4744   0008EE  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 1
  4747   0008F0  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4748   0008F2  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;doprnt.c: 1235: eexp--;
  4752   0008F4  0751               	decf	sprintf@eexp& (0+255),f,b
  4753   0008F6  A0D8               	btfss	status,0,c
  4754   0008F8  0752               	decf	(sprintf@eexp+1)& (0+255),f,b
  4755   0008FA                     l9250:
  4756                           
  4757                           ; BSR set to: 1
  4758   0008FA  BF52               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4759   0008FC  D005               	goto	u11650
  4760   0008FE  5152               	movf	(sprintf@eexp+1)& (0+255),w,b
  4761   000900  E1EF               	bnz	l9242
  4762   000902  0551               	decf	sprintf@eexp& (0+255),w,b
  4763   000904  B0D8               	btfsc	status,0,c
  4764   000906  D7EC               	goto	l9242
  4765   000908                     u11650:
  4766                           
  4767                           ; BSR set to: 1
  4768                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4769   000908  BF5D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4770   00090A  D009               	goto	l547
  4771   00090C  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  4772   00090E  E104               	bnz	u11660
  4773   000910  0E09               	movlw	9
  4774   000912  5D5C               	subwf	sprintf@prec& (0+255),w,b
  4775   000914  A0D8               	btfss	status,0,c
  4776   000916  D003               	goto	l547
  4777   000918                     u11660:
  4778                           
  4779                           ; BSR set to: 1
  4780                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4781   000918  0E08               	movlw	8
  4782   00091A  6F5E               	movwf	sprintf@c& (0+255),b
  4783   00091C  D002               	goto	l9256
  4784   00091E                     l547:
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4788   00091E  C15C  F15E         	movff	sprintf@prec,sprintf@c
  4789   000922                     l9256:
  4790                           
  4791                           ; BSR set to: 1
  4792                           ;doprnt.c: 1241: prec -= (int)c;
  4793   000922  515E               	movf	sprintf@c& (0+255),w,b
  4794   000924  5F5C               	subwf	sprintf@prec& (0+255),f,b
  4795   000926  0E00               	movlw	0
  4796   000928  5B5D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4797                           
  4798                           ; BSR set to: 1
  4799                           ;doprnt.c: 1243: if(c || flag & 0x800)
  4800   00092A  515E               	movf	sprintf@c& (0+255),w,b
  4801   00092C  A4D8               	btfss	status,2,c
  4802   00092E  D002               	goto	u11680
  4803                           
  4804                           ; BSR set to: 1
  4805   000930  A760               	btfss	(sprintf@flag+1)& (0+255),3,b
  4806   000932  D00A               	goto	l9268
  4807   000934                     u11680:
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
  4811   000934  C127  FFD9         	movff	sprintf@sp,fsr2l
  4812   000938  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4813   00093C  0E2E               	movlw	46
  4814   00093E  6EDF               	movwf	indf2,c
  4815                           
  4816                           ; BSR set to: 1
  4817   000940  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4818   000942  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4819                           
  4820                           ; BSR set to: 1
  4821   000944  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4822   000946  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4823   000948                     l9268:
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4827   000948  515E               	movf	sprintf@c& (0+255),w,b
  4828   00094A  ECAF  F010         	call	_scale
  4829   00094E  C109  F137         	movff	?_scale,_sprintf$1740
  4830   000952  C10A  F138         	movff	?_scale+1,_sprintf$1740+1
  4831   000956  C10B  F139         	movff	?_scale+2,_sprintf$1740+2
  4832                           
  4833                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4834   00095A  C153  F0BB         	movff	sprintf@fval,___ftmul@f2
  4835   00095E  C154  F0BC         	movff	sprintf@fval+1,___ftmul@f2+1
  4836   000962  C155  F0BD         	movff	sprintf@fval+2,___ftmul@f2+2
  4837   000966  C137  F0B8         	movff	_sprintf$1740,___ftmul@f1
  4838   00096A  C138  F0B9         	movff	_sprintf$1740+1,___ftmul@f1+1
  4839   00096E  C139  F0BA         	movff	_sprintf$1740+2,___ftmul@f1+2
  4840   000972  EC8D  F019         	call	___ftmul	;wreg free
  4841   000976  C0B8  F110         	movff	?___ftmul,___fttol@f1
  4842   00097A  C0B9  F111         	movff	?___ftmul+1,___fttol@f1+1
  4843   00097E  C0BA  F112         	movff	?___ftmul+2,___fttol@f1+2
  4844   000982  EC77  F01F         	call	___fttol	;wreg free
  4845   000986  C110  F156         	movff	?___fttol,sprintf@val
  4846   00098A  C111  F157         	movff	?___fttol+1,sprintf@val+1
  4847   00098E  C112  F158         	movff	?___fttol+2,sprintf@val+2
  4848   000992  C113  F159         	movff	?___fttol+3,sprintf@val+3
  4849                           
  4850                           ;doprnt.c: 1254: while(c--) {
  4851   000996  D072               	goto	l9284
  4852   000998                     l9272:
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4856   000998  C156  F0AA         	movff	sprintf@val,___lldiv@dividend
  4857   00099C  C157  F0AB         	movff	sprintf@val+1,___lldiv@dividend+1
  4858   0009A0  C158  F0AC         	movff	sprintf@val+2,___lldiv@dividend+2
  4859   0009A4  C159  F0AD         	movff	sprintf@val+3,___lldiv@dividend+3
  4860   0009A8  515E               	movf	sprintf@c& (0+255),w,b
  4861   0009AA  0D04               	mullw	4
  4862   0009AC  0E2F               	movlw	low _dpowers
  4863   0009AE  24F3               	addwf	243,w,c
  4864   0009B0  6EF6               	movwf	tblptrl,c
  4865   0009B2  0EFF               	movlw	high _dpowers
  4866   0009B4  20F4               	addwfc	244,w,c
  4867   0009B6  6EF7               	movwf	tblptrh,c
  4868   0009B8                     	if	0	;There are less than 3 active tblptr bytes
  4869   0009B8                     	endif
  4870   0009B8  0009               	tblrd		*+
  4871   0009BA  CFF5 F0AE          	movff	tablat,___lldiv@divisor
  4872   0009BE  0009               	tblrd		*+
  4873   0009C0  CFF5 F0AF          	movff	tablat,___lldiv@divisor+1
  4874   0009C4  0009               	tblrd		*+
  4875   0009C6  CFF5 F0B0          	movff	tablat,___lldiv@divisor+2
  4876   0009CA  000A               	tblrd		*-
  4877   0009CC  CFF5 F0B1          	movff	tablat,___lldiv@divisor+3
  4878   0009D0  EC3C  F021         	call	___lldiv	;wreg free
  4879   0009D4  C0AA  F14D         	movff	?___lldiv,sprintf@tmpval
  4880   0009D8  C0AB  F14E         	movff	?___lldiv+1,sprintf@tmpval+1
  4881   0009DC  C0AC  F14F         	movff	?___lldiv+2,sprintf@tmpval+2
  4882   0009E0  C0AD  F150         	movff	?___lldiv+3,sprintf@tmpval+3
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4886   0009E4  C14D  F0B7         	movff	sprintf@tmpval,___llmod@dividend
  4887   0009E8  C14E  F0B8         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4888   0009EC  C14F  F0B9         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4889   0009F0  C150  F0BA         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4890   0009F4  0E0A               	movlw	10
  4891   0009F6  6FBB               	movwf	___llmod@divisor& (0+255),b
  4892   0009F8  0E00               	movlw	0
  4893   0009FA  6FBC               	movwf	(___llmod@divisor+1)& (0+255),b
  4894   0009FC  0E00               	movlw	0
  4895   0009FE  6FBD               	movwf	(___llmod@divisor+2)& (0+255),b
  4896   000A00  0E00               	movlw	0
  4897   000A02  6FBE               	movwf	(___llmod@divisor+3)& (0+255),b
  4898   000A04  EC27  F023         	call	___llmod	;wreg free
  4899   000A08  C0B7  F14D         	movff	?___llmod,sprintf@tmpval
  4900   000A0C  C0B8  F14E         	movff	?___llmod+1,sprintf@tmpval+1
  4901   000A10  C0B9  F14F         	movff	?___llmod+2,sprintf@tmpval+2
  4902   000A14  C0BA  F150         	movff	?___llmod+3,sprintf@tmpval+3
  4903                           
  4904                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
  4905   000A18  0101               	movlb	1	; () banked
  4906   000A1A  514D               	movf	sprintf@tmpval& (0+255),w,b
  4907   000A1C  0F30               	addlw	48
  4908   000A1E  C127  FFD9         	movff	sprintf@sp,fsr2l
  4909   000A22  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4910   000A26  6EDF               	movwf	indf2,c
  4911                           
  4912                           ; BSR set to: 1
  4913   000A28  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4914   000A2A  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4915                           
  4916                           ; BSR set to: 1
  4917   000A2C  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4918   000A2E  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4919                           
  4920                           ; BSR set to: 1
  4921                           ;doprnt.c: 1258: val %= dpowers[c];
  4922   000A30  C156  F0B7         	movff	sprintf@val,___llmod@dividend
  4923   000A34  C157  F0B8         	movff	sprintf@val+1,___llmod@dividend+1
  4924   000A38  C158  F0B9         	movff	sprintf@val+2,___llmod@dividend+2
  4925   000A3C  C159  F0BA         	movff	sprintf@val+3,___llmod@dividend+3
  4926   000A40  515E               	movf	sprintf@c& (0+255),w,b
  4927   000A42  0D04               	mullw	4
  4928   000A44  0E2F               	movlw	low _dpowers
  4929   000A46  24F3               	addwf	243,w,c
  4930   000A48  6EF6               	movwf	tblptrl,c
  4931   000A4A  0EFF               	movlw	high _dpowers
  4932   000A4C  20F4               	addwfc	244,w,c
  4933   000A4E  6EF7               	movwf	tblptrh,c
  4934   000A50                     	if	0	;There are less than 3 active tblptr bytes
  4935   000A50                     	endif
  4936   000A50  0009               	tblrd		*+
  4937   000A52  CFF5 F0BB          	movff	tablat,___llmod@divisor
  4938   000A56  0009               	tblrd		*+
  4939   000A58  CFF5 F0BC          	movff	tablat,___llmod@divisor+1
  4940   000A5C  0009               	tblrd		*+
  4941   000A5E  CFF5 F0BD          	movff	tablat,___llmod@divisor+2
  4942   000A62  000A               	tblrd		*-
  4943   000A64  CFF5 F0BE          	movff	tablat,___llmod@divisor+3
  4944   000A68  EC27  F023         	call	___llmod	;wreg free
  4945   000A6C  C0B7  F156         	movff	?___llmod,sprintf@val
  4946   000A70  C0B8  F157         	movff	?___llmod+1,sprintf@val+1
  4947   000A74  C0B9  F158         	movff	?___llmod+2,sprintf@val+2
  4948   000A78  C0BA  F159         	movff	?___llmod+3,sprintf@val+3
  4949   000A7C                     l9284:
  4950   000A7C  0101               	movlb	1	; () banked
  4951   000A7E  075E               	decf	sprintf@c& (0+255),f,b
  4952   000A80  295E               	incf	sprintf@c& (0+255),w,b
  4953   000A82  B4D8               	btfsc	status,2,c
  4954   000A84  D00E               	goto	l9294
  4955   000A86  D788               	goto	l9272
  4956   000A88                     l9286:
  4957                           
  4958                           ; BSR set to: 1
  4959                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
  4960   000A88  C127  FFD9         	movff	sprintf@sp,fsr2l
  4961   000A8C  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  4962   000A90  0E30               	movlw	48
  4963   000A92  6EDF               	movwf	indf2,c
  4964                           
  4965                           ; BSR set to: 1
  4966   000A94  4B27               	infsnz	sprintf@sp& (0+255),f,b
  4967   000A96  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  4968                           
  4969                           ; BSR set to: 1
  4970   000A98  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  4971   000A9A  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4972                           
  4973                           ; BSR set to: 1
  4974                           ;doprnt.c: 1263: prec--;
  4975   000A9C  075C               	decf	sprintf@prec& (0+255),f,b
  4976   000A9E  A0D8               	btfss	status,0,c
  4977   000AA0  075D               	decf	(sprintf@prec+1)& (0+255),f,b
  4978   000AA2                     l9294:
  4979                           
  4980                           ; BSR set to: 1
  4981   000AA2  515C               	movf	sprintf@prec& (0+255),w,b
  4982   000AA4  115D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4983   000AA6  A4D8               	btfss	status,2,c
  4984   000AA8  D7EF               	goto	l9286
  4985                           
  4986                           ; BSR set to: 1
  4987                           ;doprnt.c: 1264: };doprnt.c: 1266: if((flag & 0x08) && width > 0)
  4988   000AAA  B75F               	btfsc	sprintf@flag& (0+255),3,b
  4989                           
  4990                           ; BSR set to: 1
  4991   000AAC  BF5B               	btfsc	(sprintf@width+1)& (0+255),7,b
  4992   000AAE  D2F1               	goto	u12150
  4993   000AB0  515B               	movf	(sprintf@width+1)& (0+255),w,b
  4994   000AB2  E103               	bnz	u11720
  4995   000AB4  055A               	decf	sprintf@width& (0+255),w,b
  4996   000AB6  A0D8               	btfss	status,0,c
  4997   000AB8  D2EC               	goto	u12150
  4998   000ABA                     u11720:
  4999                           
  5000                           ; BSR set to: 1
  5001                           ;doprnt.c: 1268: ((*sp++ = (' ')),(++ccnt));
  5002   000ABA  C127  FFD9         	movff	sprintf@sp,fsr2l
  5003   000ABE  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5004   000AC2  0E20               	movlw	32
  5005   000AC4  6EDF               	movwf	indf2,c
  5006                           
  5007                           ; BSR set to: 1
  5008   000AC6  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5009   000AC8  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5010                           
  5011                           ; BSR set to: 1
  5012   000ACA  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5013   000ACC  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5014                           
  5015                           ; BSR set to: 1
  5016                           ;doprnt.c: 1269: while(--width);
  5017   000ACE  075A               	decf	sprintf@width& (0+255),f,b
  5018   000AD0  A0D8               	btfss	status,0,c
  5019   000AD2  075B               	decf	(sprintf@width+1)& (0+255),f,b
  5020   000AD4  515A               	movf	sprintf@width& (0+255),w,b
  5021   000AD6  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5022   000AD8  B4D8               	btfsc	status,2,c
  5023   000ADA  D2DB               	goto	u12150
  5024   000ADC  D7EE               	goto	u11720
  5025   000ADE                     l9306:
  5026                           
  5027                           ; BSR set to: 1
  5028                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
  5029   000ADE  C15F  F131         	movff	sprintf@flag,??_sprintf
  5030   000AE2  0EC0               	movlw	192
  5031   000AE4  1731               	andwf	??_sprintf& (0+255),f,b
  5032   000AE6  A4D8               	btfss	status,2,c
  5033   000AE8  D01E               	goto	l561
  5034                           
  5035                           ; BSR set to: 1
  5036                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)ap),
      +                           (int)0));
  5037   000AEA  C14B  FFD9         	movff	sprintf@ap,fsr2l
  5038   000AEE  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  5039   000AF2  CFDE F156          	movff	postinc2,sprintf@val
  5040   000AF6  CFDD F157          	movff	postdec2,sprintf@val+1
  5041   000AFA  0E00               	movlw	0
  5042   000AFC  BF57               	btfsc	(sprintf@val+1)& (0+255),7,b
  5043   000AFE  0EFF               	movlw	-1
  5044   000B00  6F58               	movwf	(sprintf@val+2)& (0+255),b
  5045   000B02  6F59               	movwf	(sprintf@val+3)& (0+255),b
  5046                           
  5047                           ; BSR set to: 1
  5048   000B04  0E02               	movlw	2
  5049   000B06  274B               	addwf	sprintf@ap& (0+255),f,b
  5050   000B08  0E00               	movlw	0
  5051   000B0A  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5052                           
  5053                           ; BSR set to: 1
  5054                           ;doprnt.c: 1287: if((long)val < 0) {
  5055   000B0C  AF59               	btfss	(sprintf@val+3)& (0+255),7,b
  5056   000B0E  D01D               	goto	l9326
  5057                           
  5058                           ; BSR set to: 1
  5059                           ;doprnt.c: 1288: flag |= 0x03;
  5060   000B10  0E03               	movlw	3
  5061   000B12  135F               	iorwf	sprintf@flag& (0+255),f,b
  5062                           
  5063                           ; BSR set to: 1
  5064                           ;doprnt.c: 1289: val = -val;
  5065   000B14  1F59               	comf	(sprintf@val+3)& (0+255),f,b
  5066   000B16  1F58               	comf	(sprintf@val+2)& (0+255),f,b
  5067   000B18  1F57               	comf	(sprintf@val+1)& (0+255),f,b
  5068   000B1A  6D56               	negf	sprintf@val& (0+255),b
  5069   000B1C  0E00               	movlw	0
  5070   000B1E  2357               	addwfc	(sprintf@val+1)& (0+255),f,b
  5071   000B20  2358               	addwfc	(sprintf@val+2)& (0+255),f,b
  5072   000B22  2359               	addwfc	(sprintf@val+3)& (0+255),f,b
  5073   000B24  D012               	goto	l9326
  5074   000B26                     l561:
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;doprnt.c: 1304: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5078                           
  5079                           ; BSR set to: 1
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;doprnt.c: 1303: val = (unsigned long)(*(__far char * *)__va_arg((*(__far char * **)ap),
      +                           (__far char *)0));
  5083                           
  5084                           ; BSR set to: 1
  5085                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1302: if(flag & 0x2000)
  5086   000B26  C14B  FFD9         	movff	sprintf@ap,fsr2l
  5087   000B2A  C14C  FFDA         	movff	sprintf@ap+1,fsr2h
  5088   000B2E  CFDE F131          	movff	postinc2,??_sprintf
  5089   000B32  CFDD F132          	movff	postdec2,??_sprintf+1
  5090   000B36  C131  F156         	movff	??_sprintf,sprintf@val
  5091   000B3A  C132  F157         	movff	??_sprintf+1,sprintf@val+1
  5092   000B3E  6B58               	clrf	(sprintf@val+2)& (0+255),b
  5093   000B40  6B59               	clrf	(sprintf@val+3)& (0+255),b
  5094                           
  5095                           ; BSR set to: 1
  5096   000B42  0E02               	movlw	2
  5097   000B44  274B               	addwf	sprintf@ap& (0+255),f,b
  5098   000B46  0E00               	movlw	0
  5099   000B48  234C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5100   000B4A                     l9326:
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5104   000B4A  515C               	movf	sprintf@prec& (0+255),w,b
  5105   000B4C  115D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5106   000B4E  A4D8               	btfss	status,2,c
  5107   000B50  D063               	goto	l9376
  5108                           
  5109                           ; BSR set to: 1
  5110   000B52  5156               	movf	sprintf@val& (0+255),w,b
  5111   000B54  1157               	iorwf	(sprintf@val+1)& (0+255),w,b
  5112   000B56  1158               	iorwf	(sprintf@val+2)& (0+255),w,b
  5113   000B58  1159               	iorwf	(sprintf@val+3)& (0+255),w,b
  5114   000B5A  A4D8               	btfss	status,2,c
  5115   000B5C  D05D               	goto	l9376
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;doprnt.c: 1317: prec++;
  5119   000B5E  4B5C               	infsnz	sprintf@prec& (0+255),f,b
  5120   000B60  2B5D               	incf	(sprintf@prec+1)& (0+255),f,b
  5121   000B62  D05A               	goto	l9376
  5122   000B64                     l9332:
  5123                           
  5124                           ; BSR set to: 1
  5125                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  5126   000B64  0E01               	movlw	1
  5127   000B66  6F5E               	movwf	sprintf@c& (0+255),b
  5128   000B68                     l9334:
  5129                           
  5130                           ; BSR set to: 1
  5131   000B68  0E0A               	movlw	10
  5132   000B6A  195E               	xorwf	sprintf@c& (0+255),w,b
  5133   000B6C  B4D8               	btfsc	status,2,c
  5134   000B6E  D062               	goto	l9378
  5135                           
  5136                           ; BSR set to: 1
  5137                           ;doprnt.c: 1332: if(val < dpowers[c])
  5138   000B70  515E               	movf	sprintf@c& (0+255),w,b
  5139   000B72  0D04               	mullw	4
  5140   000B74  0E2F               	movlw	low _dpowers
  5141   000B76  24F3               	addwf	243,w,c
  5142   000B78  6EF6               	movwf	tblptrl,c
  5143   000B7A  0EFF               	movlw	high _dpowers
  5144   000B7C  20F4               	addwfc	244,w,c
  5145   000B7E  6EF7               	movwf	tblptrh,c
  5146   000B80                     	if	0	;There are less than 3 active tblptr bytes
  5147   000B80                     	endif
  5148   000B80  0009               	tblrd		*+
  5149   000B82  50F5               	movf	tablat,w,c
  5150   000B84  5D56               	subwf	sprintf@val& (0+255),w,b
  5151   000B86  0009               	tblrd		*+
  5152   000B88  50F5               	movf	tablat,w,c
  5153   000B8A  5957               	subwfb	(sprintf@val+1)& (0+255),w,b
  5154   000B8C  0009               	tblrd		*+
  5155   000B8E  50F5               	movf	tablat,w,c
  5156   000B90  5958               	subwfb	(sprintf@val+2)& (0+255),w,b
  5157   000B92  0009               	tblrd		*+
  5158   000B94  50F5               	movf	tablat,w,c
  5159   000B96  5959               	subwfb	(sprintf@val+3)& (0+255),w,b
  5160   000B98  A0D8               	btfss	status,0,c
  5161   000B9A  D04C               	goto	l9378
  5162                           
  5163                           ; BSR set to: 1
  5164   000B9C  2B5E               	incf	sprintf@c& (0+255),f,b
  5165   000B9E  D7E4               	goto	l9334
  5166   000BA0                     l9346:
  5167                           
  5168                           ; BSR set to: 1
  5169                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5170   000BA0  0E01               	movlw	1
  5171   000BA2  6F5E               	movwf	sprintf@c& (0+255),b
  5172   000BA4                     l9348:
  5173                           
  5174                           ; BSR set to: 1
  5175   000BA4  0E08               	movlw	8
  5176   000BA6  195E               	xorwf	sprintf@c& (0+255),w,b
  5177   000BA8  B4D8               	btfsc	status,2,c
  5178   000BAA  D044               	goto	l9378
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5182   000BAC  515E               	movf	sprintf@c& (0+255),w,b
  5183   000BAE  0D04               	mullw	4
  5184   000BB0  0E0F               	movlw	low _hexpowers
  5185   000BB2  24F3               	addwf	243,w,c
  5186   000BB4  6EF6               	movwf	tblptrl,c
  5187   000BB6  0EFF               	movlw	high _hexpowers
  5188   000BB8  20F4               	addwfc	244,w,c
  5189   000BBA  6EF7               	movwf	tblptrh,c
  5190   000BBC                     	if	0	;There are less than 3 active tblptr bytes
  5191   000BBC                     	endif
  5192   000BBC  0009               	tblrd		*+
  5193   000BBE  50F5               	movf	tablat,w,c
  5194   000BC0  5D56               	subwf	sprintf@val& (0+255),w,b
  5195   000BC2  0009               	tblrd		*+
  5196   000BC4  50F5               	movf	tablat,w,c
  5197   000BC6  5957               	subwfb	(sprintf@val+1)& (0+255),w,b
  5198   000BC8  0009               	tblrd		*+
  5199   000BCA  50F5               	movf	tablat,w,c
  5200   000BCC  5958               	subwfb	(sprintf@val+2)& (0+255),w,b
  5201   000BCE  0009               	tblrd		*+
  5202   000BD0  50F5               	movf	tablat,w,c
  5203   000BD2  5959               	subwfb	(sprintf@val+3)& (0+255),w,b
  5204   000BD4  A0D8               	btfss	status,0,c
  5205   000BD6  D02E               	goto	l9378
  5206                           
  5207                           ; BSR set to: 1
  5208   000BD8  2B5E               	incf	sprintf@c& (0+255),f,b
  5209   000BDA  D7E4               	goto	l9348
  5210   000BDC                     l9360:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  5214   000BDC  0E01               	movlw	1
  5215   000BDE  6F5E               	movwf	sprintf@c& (0+255),b
  5216   000BE0                     l9362:
  5217                           
  5218                           ; BSR set to: 1
  5219   000BE0  0E0B               	movlw	11
  5220   000BE2  195E               	xorwf	sprintf@c& (0+255),w,b
  5221   000BE4  B4D8               	btfsc	status,2,c
  5222   000BE6  D026               	goto	l9378
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;doprnt.c: 1355: if(val < octpowers[c])
  5226   000BE8  515E               	movf	sprintf@c& (0+255),w,b
  5227   000BEA  0D04               	mullw	4
  5228   000BEC  0E95               	movlw	low _octpowers
  5229   000BEE  24F3               	addwf	243,w,c
  5230   000BF0  6EF6               	movwf	tblptrl,c
  5231   000BF2  0EFE               	movlw	high _octpowers
  5232   000BF4  20F4               	addwfc	244,w,c
  5233   000BF6  6EF7               	movwf	tblptrh,c
  5234   000BF8                     	if	0	;There are less than 3 active tblptr bytes
  5235   000BF8                     	endif
  5236   000BF8  0009               	tblrd		*+
  5237   000BFA  50F5               	movf	tablat,w,c
  5238   000BFC  5D56               	subwf	sprintf@val& (0+255),w,b
  5239   000BFE  0009               	tblrd		*+
  5240   000C00  50F5               	movf	tablat,w,c
  5241   000C02  5957               	subwfb	(sprintf@val+1)& (0+255),w,b
  5242   000C04  0009               	tblrd		*+
  5243   000C06  50F5               	movf	tablat,w,c
  5244   000C08  5958               	subwfb	(sprintf@val+2)& (0+255),w,b
  5245   000C0A  0009               	tblrd		*+
  5246   000C0C  50F5               	movf	tablat,w,c
  5247   000C0E  5959               	subwfb	(sprintf@val+3)& (0+255),w,b
  5248   000C10  A0D8               	btfss	status,0,c
  5249   000C12  D010               	goto	l9378
  5250                           
  5251                           ; BSR set to: 1
  5252   000C14  2B5E               	incf	sprintf@c& (0+255),f,b
  5253   000C16  D7E4               	goto	l9362
  5254   000C18                     l9376:
  5255                           
  5256                           ; BSR set to: 1
  5257   000C18  515F               	movf	sprintf@flag& (0+255),w,b
  5258   000C1A  0BC0               	andlw	192
  5259                           
  5260                           ; Switch size 1, requested type "simple"
  5261                           ; Number of cases is 4, Range of values is 0 to 192
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte           13     7 (average)
  5265                           ;	Chosen strategy is simple_byte
  5266   000C1C  0A00               	xorlw	0	; case 0
  5267   000C1E  B4D8               	btfsc	status,2,c
  5268   000C20  D7A1               	goto	l9332
  5269   000C22  0A40               	xorlw	64	; case 64
  5270   000C24  B4D8               	btfsc	status,2,c
  5271   000C26  D7DA               	goto	l9360
  5272   000C28  0AC0               	xorlw	192	; case 128
  5273   000C2A  B4D8               	btfsc	status,2,c
  5274   000C2C  D7B9               	goto	l9346
  5275   000C2E  0A40               	xorlw	64	; case 192
  5276   000C30  B4D8               	btfsc	status,2,c
  5277   000C32  D798               	goto	l9332
  5278   000C34                     l9378:
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;doprnt.c: 1365: if(c < prec)
  5282   000C34  515E               	movf	sprintf@c& (0+255),w,b
  5283   000C36  6F31               	movwf	??_sprintf& (0+255),b
  5284   000C38  6B32               	clrf	(??_sprintf+1)& (0+255),b
  5285   000C3A  515C               	movf	sprintf@prec& (0+255),w,b
  5286   000C3C  5D31               	subwf	??_sprintf& (0+255),w,b
  5287   000C3E  5132               	movf	(??_sprintf+1)& (0+255),w,b
  5288   000C40  0A80               	xorlw	128
  5289   000C42  6F33               	movwf	(??_sprintf+2)& (0+255),b
  5290   000C44  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  5291   000C46  0A80               	xorlw	128
  5292   000C48  5933               	subwfb	(??_sprintf+2)& (0+255),w,b
  5293   000C4A  B0D8               	btfsc	status,0,c
  5294   000C4C  D003               	goto	l9382
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;doprnt.c: 1366: c = (char)prec;
  5298   000C4E  C15C  F15E         	movff	sprintf@prec,sprintf@c
  5299   000C52  D010               	goto	l9386
  5300   000C54                     l9382:
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;doprnt.c: 1367: else if(prec < c)
  5304   000C54  515E               	movf	sprintf@c& (0+255),w,b
  5305   000C56  6F31               	movwf	??_sprintf& (0+255),b
  5306   000C58  6B32               	clrf	(??_sprintf+1)& (0+255),b
  5307   000C5A  5131               	movf	??_sprintf& (0+255),w,b
  5308   000C5C  5D5C               	subwf	sprintf@prec& (0+255),w,b
  5309   000C5E  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  5310   000C60  0A80               	xorlw	128
  5311   000C62  6F33               	movwf	(??_sprintf+2)& (0+255),b
  5312   000C64  5132               	movf	(??_sprintf+1)& (0+255),w,b
  5313   000C66  0A80               	xorlw	128
  5314   000C68  5933               	subwfb	(??_sprintf+2)& (0+255),w,b
  5315   000C6A  B0D8               	btfsc	status,0,c
  5316   000C6C  D003               	goto	l9386
  5317                           
  5318                           ; BSR set to: 1
  5319                           ;doprnt.c: 1368: prec = c;
  5320   000C6E  C15E  F15C         	movff	sprintf@c,sprintf@prec
  5321   000C72  6B5D               	clrf	(sprintf@prec+1)& (0+255),b
  5322   000C74                     l9386:
  5323                           
  5324                           ; BSR set to: 1
  5325                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5326   000C74  515A               	movf	sprintf@width& (0+255),w,b
  5327   000C76  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5328   000C78  B4D8               	btfsc	status,2,c
  5329   000C7A  D009               	goto	l9392
  5330                           
  5331                           ; BSR set to: 1
  5332   000C7C  C15F  F131         	movff	sprintf@flag,??_sprintf
  5333   000C80  0E03               	movlw	3
  5334   000C82  1731               	andwf	??_sprintf& (0+255),f,b
  5335   000C84  B4D8               	btfsc	status,2,c
  5336   000C86  D003               	goto	l9392
  5337                           
  5338                           ; BSR set to: 1
  5339                           ;doprnt.c: 1372: width--;
  5340   000C88  075A               	decf	sprintf@width& (0+255),f,b
  5341   000C8A  A0D8               	btfss	status,0,c
  5342   000C8C  075B               	decf	(sprintf@width+1)& (0+255),f,b
  5343   000C8E                     l9392:
  5344                           
  5345                           ; BSR set to: 1
  5346                           ;doprnt.c: 1374: if(flag & 0x4000) {
  5347   000C8E  AD60               	btfss	(sprintf@flag+1)& (0+255),6,b
  5348   000C90  D013               	goto	l9400
  5349                           
  5350                           ; BSR set to: 1
  5351                           ;doprnt.c: 1375: if(width > prec)
  5352   000C92  515A               	movf	sprintf@width& (0+255),w,b
  5353   000C94  5D5C               	subwf	sprintf@prec& (0+255),w,b
  5354   000C96  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  5355   000C98  0A80               	xorlw	128
  5356   000C9A  6F31               	movwf	??_sprintf& (0+255),b
  5357   000C9C  515B               	movf	(sprintf@width+1)& (0+255),w,b
  5358   000C9E  0A80               	xorlw	128
  5359   000CA0  5931               	subwfb	??_sprintf& (0+255),w,b
  5360   000CA2  B0D8               	btfsc	status,0,c
  5361   000CA4  D005               	goto	l9398
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;doprnt.c: 1376: width -= prec;
  5365   000CA6  515C               	movf	sprintf@prec& (0+255),w,b
  5366   000CA8  5F5A               	subwf	sprintf@width& (0+255),f,b
  5367   000CAA  515D               	movf	(sprintf@prec+1)& (0+255),w,b
  5368   000CAC  5B5B               	subwfb	(sprintf@width+1)& (0+255),f,b
  5369   000CAE  D004               	goto	l9400
  5370   000CB0                     l9398:
  5371                           
  5372                           ; BSR set to: 1
  5373                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  5374   000CB0  0E00               	movlw	0
  5375   000CB2  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  5376   000CB4  0E00               	movlw	0
  5377   000CB6  6F5A               	movwf	sprintf@width& (0+255),b
  5378   000CB8                     l9400:
  5379                           
  5380                           ; BSR set to: 1
  5381                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
  5382   000CB8  0EC4               	movlw	196
  5383   000CBA  155F               	andwf	sprintf@flag& (0+255),w,b
  5384   000CBC  6F31               	movwf	??_sprintf& (0+255),b
  5385   000CBE  0E08               	movlw	8
  5386   000CC0  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  5387   000CC2  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5388   000CC4  0E40               	movlw	64
  5389   000CC6  1931               	xorwf	??_sprintf& (0+255),w,b
  5390   000CC8  E10C               	bnz	l9406
  5391   000CCA  0E08               	movlw	8
  5392   000CCC  1932               	xorwf	(??_sprintf+1)& (0+255),w,b
  5393   000CCE  A4D8               	btfss	status,2,c
  5394   000CD0  D008               	goto	l9406
  5395                           
  5396                           ; BSR set to: 1
  5397                           ;doprnt.c: 1388: if(width)
  5398   000CD2  515A               	movf	sprintf@width& (0+255),w,b
  5399   000CD4  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5400   000CD6  B4D8               	btfsc	status,2,c
  5401   000CD8  D022               	goto	l9414
  5402                           
  5403                           ; BSR set to: 1
  5404                           ;doprnt.c: 1389: width--;
  5405   000CDA  075A               	decf	sprintf@width& (0+255),f,b
  5406   000CDC  A0D8               	btfss	status,0,c
  5407   000CDE  075B               	decf	(sprintf@width+1)& (0+255),f,b
  5408   000CE0  D01E               	goto	l9414
  5409   000CE2                     l9406:
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  5413   000CE2  0EC0               	movlw	192
  5414   000CE4  155F               	andwf	sprintf@flag& (0+255),w,b
  5415   000CE6  6F31               	movwf	??_sprintf& (0+255),b
  5416   000CE8  0E08               	movlw	8
  5417   000CEA  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  5418   000CEC  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5419   000CEE  0E80               	movlw	128
  5420   000CF0  1931               	xorwf	??_sprintf& (0+255),w,b
  5421   000CF2  E115               	bnz	l9414
  5422   000CF4  0E08               	movlw	8
  5423   000CF6  1932               	xorwf	(??_sprintf+1)& (0+255),w,b
  5424   000CF8  A4D8               	btfss	status,2,c
  5425   000CFA  D011               	goto	l9414
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;doprnt.c: 1398: if(width > 2)
  5429   000CFC  BF5B               	btfsc	(sprintf@width+1)& (0+255),7,b
  5430   000CFE  D00B               	goto	l9412
  5431   000D00  515B               	movf	(sprintf@width+1)& (0+255),w,b
  5432   000D02  E104               	bnz	u11940
  5433   000D04  0E03               	movlw	3
  5434   000D06  5D5A               	subwf	sprintf@width& (0+255),w,b
  5435   000D08  A0D8               	btfss	status,0,c
  5436   000D0A  D005               	goto	l9412
  5437   000D0C                     u11940:
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;doprnt.c: 1399: width -= 2;
  5441   000D0C  0EFE               	movlw	254
  5442   000D0E  275A               	addwf	sprintf@width& (0+255),f,b
  5443   000D10  0EFF               	movlw	255
  5444   000D12  235B               	addwfc	(sprintf@width+1)& (0+255),f,b
  5445   000D14  D004               	goto	l9414
  5446   000D16                     l9412:
  5447                           
  5448                           ; BSR set to: 1
  5449                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
  5450   000D16  0E00               	movlw	0
  5451   000D18  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  5452   000D1A  0E00               	movlw	0
  5453   000D1C  6F5A               	movwf	sprintf@width& (0+255),b
  5454   000D1E                     l9414:
  5455                           
  5456                           ; BSR set to: 1
  5457                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
  5458   000D1E  515E               	movf	sprintf@c& (0+255),w,b
  5459   000D20  6F31               	movwf	??_sprintf& (0+255),b
  5460   000D22  6B32               	clrf	(??_sprintf+1)& (0+255),b
  5461   000D24  515A               	movf	sprintf@width& (0+255),w,b
  5462   000D26  5D31               	subwf	??_sprintf& (0+255),w,b
  5463   000D28  5132               	movf	(??_sprintf+1)& (0+255),w,b
  5464   000D2A  0A80               	xorlw	128
  5465   000D2C  6F33               	movwf	(??_sprintf+2)& (0+255),b
  5466   000D2E  515B               	movf	(sprintf@width+1)& (0+255),w,b
  5467   000D30  0A80               	xorlw	128
  5468   000D32  5933               	subwfb	(??_sprintf+2)& (0+255),w,b
  5469   000D34  B0D8               	btfsc	status,0,c
  5470   000D36  D005               	goto	l9418
  5471                           
  5472                           ; BSR set to: 1
  5473                           ;doprnt.c: 1408: width -= c;
  5474   000D38  515E               	movf	sprintf@c& (0+255),w,b
  5475   000D3A  5F5A               	subwf	sprintf@width& (0+255),f,b
  5476   000D3C  0E00               	movlw	0
  5477   000D3E  5B5B               	subwfb	(sprintf@width+1)& (0+255),f,b
  5478   000D40  D004               	goto	l9420
  5479   000D42                     l9418:
  5480                           
  5481                           ; BSR set to: 1
  5482                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5483   000D42  0E00               	movlw	0
  5484   000D44  6F5B               	movwf	(sprintf@width+1)& (0+255),b
  5485   000D46  0E00               	movlw	0
  5486   000D48  6F5A               	movwf	sprintf@width& (0+255),b
  5487   000D4A                     l9420:
  5488                           
  5489                           ; BSR set to: 1
  5490                           ;doprnt.c: 1413: if(flag & 0x04) {
  5491   000D4A  A55F               	btfss	sprintf@flag& (0+255),2,b
  5492   000D4C  D053               	goto	l9466
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;doprnt.c: 1418: if(flag & 0x03)
  5496   000D4E  C15F  F131         	movff	sprintf@flag,??_sprintf
  5497   000D52  0E03               	movlw	3
  5498   000D54  1731               	andwf	??_sprintf& (0+255),f,b
  5499   000D56  B4D8               	btfsc	status,2,c
  5500   000D58  D00B               	goto	l598
  5501                           
  5502                           ; BSR set to: 1
  5503                           ;doprnt.c: 1419: ((*sp++ = ('-')),(++ccnt));
  5504   000D5A  C127  FFD9         	movff	sprintf@sp,fsr2l
  5505   000D5E  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5506   000D62  0E2D               	movlw	45
  5507   000D64  6EDF               	movwf	indf2,c
  5508   000D66                     l9426:
  5509                           
  5510                           ; BSR set to: 1
  5511   000D66  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5512   000D68  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5513                           
  5514                           ; BSR set to: 1
  5515   000D6A  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5516   000D6C  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5517   000D6E  D030               	goto	l9456
  5518   000D70                     l598:
  5519                           
  5520                           ; BSR set to: 1
  5521                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
  5522   000D70  A15F               	btfss	sprintf@flag& (0+255),0,b
  5523   000D72  D006               	goto	l9436
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;doprnt.c: 1426: ((*sp++ = (' ')),(++ccnt));
  5527   000D74  C127  FFD9         	movff	sprintf@sp,fsr2l
  5528   000D78  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5529   000D7C  0E20               	movlw	32
  5530   000D7E  D7F2               	goto	L16
  5531   000D80                     l9436:
  5532                           
  5533                           ; BSR set to: 1
  5534                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  5535   000D80  0EC0               	movlw	192
  5536   000D82  155F               	andwf	sprintf@flag& (0+255),w,b
  5537   000D84  6F31               	movwf	??_sprintf& (0+255),b
  5538   000D86  0E08               	movlw	8
  5539   000D88  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  5540   000D8A  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5541   000D8C  0E80               	movlw	128
  5542   000D8E  1931               	xorwf	??_sprintf& (0+255),w,b
  5543   000D90  E11F               	bnz	l9456
  5544   000D92  0E08               	movlw	8
  5545   000D94  1932               	xorwf	(??_sprintf+1)& (0+255),w,b
  5546   000D96  A4D8               	btfss	status,2,c
  5547   000D98  D01B               	goto	l9456
  5548                           
  5549                           ; BSR set to: 1
  5550                           ;doprnt.c: 1430: ((*sp++ = ('0')),(++ccnt));
  5551   000D9A  C127  FFD9         	movff	sprintf@sp,fsr2l
  5552   000D9E  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5553   000DA2  0E30               	movlw	48
  5554   000DA4  6EDF               	movwf	indf2,c
  5555                           
  5556                           ; BSR set to: 1
  5557   000DA6  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5558   000DA8  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5559                           
  5560                           ; BSR set to: 1
  5561   000DAA  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5562   000DAC  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;doprnt.c: 1432: ((*sp++ = (flag & 0x20 ? 'X' : 'x')),(++ccnt));
  5566   000DAE  BB5F               	btfsc	sprintf@flag& (0+255),5,b
  5567   000DB0  D004               	goto	l9448
  5568                           
  5569                           ; BSR set to: 1
  5570   000DB2  0E00               	movlw	0
  5571   000DB4  6F40               	movwf	(_sprintf$1027+1)& (0+255),b
  5572   000DB6  0E78               	movlw	120
  5573   000DB8  D003               	goto	L17
  5574   000DBA                     l9448:
  5575                           
  5576                           ; BSR set to: 1
  5577   000DBA  0E00               	movlw	0
  5578   000DBC  6F40               	movwf	(_sprintf$1027+1)& (0+255),b
  5579   000DBE  0E58               	movlw	88
  5580   000DC0                     L17:
  5581   000DC0  6F3F               	movwf	_sprintf$1027& (0+255),b
  5582                           
  5583                           ; BSR set to: 1
  5584   000DC2  C127  FFD9         	movff	sprintf@sp,fsr2l
  5585   000DC6  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5586   000DCA  C13F  FFDF         	movff	_sprintf$1027,indf2
  5587   000DCE  D7CB               	goto	l9426
  5588   000DD0                     l9456:
  5589                           
  5590                           ; BSR set to: 1
  5591                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
  5592   000DD0  515A               	movf	sprintf@width& (0+255),w,b
  5593   000DD2  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5594   000DD4  B4D8               	btfsc	status,2,c
  5595   000DD6  D13C               	goto	l9544
  5596                           
  5597                           ; BSR set to: 1
  5598                           ;doprnt.c: 1443: ((*sp++ = ('0')),(++ccnt));
  5599   000DD8  C127  FFD9         	movff	sprintf@sp,fsr2l
  5600   000DDC  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5601   000DE0  0E30               	movlw	48
  5602   000DE2  6EDF               	movwf	indf2,c
  5603                           
  5604                           ; BSR set to: 1
  5605   000DE4  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5606   000DE6  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5607                           
  5608                           ; BSR set to: 1
  5609   000DE8  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5610   000DEA  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5611                           
  5612                           ; BSR set to: 1
  5613                           ;doprnt.c: 1444: while(--width);
  5614   000DEC  075A               	decf	sprintf@width& (0+255),f,b
  5615   000DEE  A0D8               	btfss	status,0,c
  5616   000DF0  075B               	decf	(sprintf@width+1)& (0+255),f,b
  5617   000DF2  D7EE               	goto	l9456
  5618   000DF4                     l9466:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
  5622   000DF4  515A               	movf	sprintf@width& (0+255),w,b
  5623   000DF6  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5624   000DF8  A4D8               	btfss	status,2,c
  5625                           
  5626                           ; BSR set to: 1
  5627   000DFA  B75F               	btfsc	sprintf@flag& (0+255),3,b
  5628   000DFC  D011               	goto	u12050
  5629   000DFE                     u12040:
  5630                           
  5631                           ; BSR set to: 1
  5632                           ;doprnt.c: 1456: ((*sp++ = (' ')),(++ccnt));
  5633   000DFE  C127  FFD9         	movff	sprintf@sp,fsr2l
  5634   000E02  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5635   000E06  0E20               	movlw	32
  5636   000E08  6EDF               	movwf	indf2,c
  5637                           
  5638                           ; BSR set to: 1
  5639   000E0A  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5640   000E0C  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5641                           
  5642                           ; BSR set to: 1
  5643   000E0E  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5644   000E10  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5645                           
  5646                           ; BSR set to: 1
  5647                           ;doprnt.c: 1457: while(--width);
  5648   000E12  075A               	decf	sprintf@width& (0+255),f,b
  5649   000E14  A0D8               	btfss	status,0,c
  5650   000E16  075B               	decf	(sprintf@width+1)& (0+255),f,b
  5651   000E18  515A               	movf	sprintf@width& (0+255),w,b
  5652   000E1A  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5653   000E1C  A4D8               	btfss	status,2,c
  5654   000E1E  D7EF               	goto	u12040
  5655   000E20                     u12050:
  5656                           
  5657                           ; BSR set to: 1
  5658                           ;doprnt.c: 1464: if(flag & 0x03)
  5659   000E20  C15F  F131         	movff	sprintf@flag,??_sprintf
  5660   000E24  0E03               	movlw	3
  5661   000E26  1731               	andwf	??_sprintf& (0+255),f,b
  5662   000E28  B4D8               	btfsc	status,2,c
  5663   000E2A  D00B               	goto	l614
  5664                           
  5665                           ; BSR set to: 1
  5666                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
  5667   000E2C  C127  FFD9         	movff	sprintf@sp,fsr2l
  5668   000E30  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5669   000E34  0E2D               	movlw	45
  5670   000E36  6EDF               	movwf	indf2,c
  5671                           
  5672                           ; BSR set to: 1
  5673   000E38  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5674   000E3A  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5675                           
  5676                           ; BSR set to: 1
  5677   000E3C  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5678   000E3E  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5679   000E40  D008               	goto	l9492
  5680   000E42                     l614:
  5681                           
  5682                           ; BSR set to: 1
  5683                           ;doprnt.c: 1469: else if(flag & 0x01)
  5684   000E42  A15F               	btfss	sprintf@flag& (0+255),0,b
  5685   000E44  D006               	goto	l9492
  5686                           
  5687                           ; BSR set to: 1
  5688                           ;doprnt.c: 1470: ((*sp++ = (' ')),(++ccnt));
  5689   000E46  C127  FFD9         	movff	sprintf@sp,fsr2l
  5690   000E4A  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5691   000E4E  0E20               	movlw	32
  5692   000E50  D7F2               	goto	L18
  5693   000E52                     l9492:
  5694                           
  5695                           ; BSR set to: 1
  5696                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
  5697   000E52  0EC0               	movlw	192
  5698   000E54  155F               	andwf	sprintf@flag& (0+255),w,b
  5699   000E56  6F31               	movwf	??_sprintf& (0+255),b
  5700   000E58  0E08               	movlw	8
  5701   000E5A  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  5702   000E5C  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5703   000E5E  0E40               	movlw	64
  5704   000E60  1931               	xorwf	??_sprintf& (0+255),w,b
  5705   000E62  E10F               	bnz	l9500
  5706   000E64  0E08               	movlw	8
  5707   000E66  1932               	xorwf	(??_sprintf+1)& (0+255),w,b
  5708   000E68  A4D8               	btfss	status,2,c
  5709   000E6A  D00B               	goto	l9500
  5710                           
  5711                           ; BSR set to: 1
  5712                           ;doprnt.c: 1475: ((*sp++ = ('0')),(++ccnt));
  5713   000E6C  C127  FFD9         	movff	sprintf@sp,fsr2l
  5714   000E70  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5715   000E74  0E30               	movlw	48
  5716   000E76  6EDF               	movwf	indf2,c
  5717   000E78                     l9496:
  5718                           
  5719                           ; BSR set to: 1
  5720   000E78  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5721   000E7A  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5722                           
  5723                           ; BSR set to: 1
  5724   000E7C  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5725   000E7E  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5726   000E80  D0E7               	goto	l9544
  5727   000E82                     l9500:
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  5731   000E82  0EC0               	movlw	192
  5732   000E84  155F               	andwf	sprintf@flag& (0+255),w,b
  5733   000E86  6F31               	movwf	??_sprintf& (0+255),b
  5734   000E88  0E08               	movlw	8
  5735   000E8A  1560               	andwf	(sprintf@flag+1)& (0+255),w,b
  5736   000E8C  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5737   000E8E  0E80               	movlw	128
  5738   000E90  1931               	xorwf	??_sprintf& (0+255),w,b
  5739   000E92  E11F               	bnz	l610
  5740   000E94  0E08               	movlw	8
  5741   000E96  1932               	xorwf	(??_sprintf+1)& (0+255),w,b
  5742   000E98  A4D8               	btfss	status,2,c
  5743   000E9A  D0DA               	goto	l9544
  5744                           
  5745                           ; BSR set to: 1
  5746                           ;doprnt.c: 1484: ((*sp++ = ('0')),(++ccnt));
  5747   000E9C  C127  FFD9         	movff	sprintf@sp,fsr2l
  5748   000EA0  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5749   000EA4  0E30               	movlw	48
  5750   000EA6  6EDF               	movwf	indf2,c
  5751                           
  5752                           ; BSR set to: 1
  5753   000EA8  4B27               	infsnz	sprintf@sp& (0+255),f,b
  5754   000EAA  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  5755                           
  5756                           ; BSR set to: 1
  5757   000EAC  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  5758   000EAE  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;doprnt.c: 1486: ((*sp++ = (flag & 0x20 ? 'X' : 'x')),(++ccnt));
  5762   000EB0  BB5F               	btfsc	sprintf@flag& (0+255),5,b
  5763   000EB2  D004               	goto	l9512
  5764                           
  5765                           ; BSR set to: 1
  5766   000EB4  0E00               	movlw	0
  5767   000EB6  6F42               	movwf	(_sprintf$1028+1)& (0+255),b
  5768   000EB8  0E78               	movlw	120
  5769   000EBA  D003               	goto	L19
  5770   000EBC                     l9512:
  5771                           
  5772                           ; BSR set to: 1
  5773   000EBC  0E00               	movlw	0
  5774   000EBE  6F42               	movwf	(_sprintf$1028+1)& (0+255),b
  5775   000EC0  0E58               	movlw	88
  5776   000EC2                     L19:
  5777   000EC2  6F41               	movwf	_sprintf$1028& (0+255),b
  5778                           
  5779                           ; BSR set to: 1
  5780   000EC4  C127  FFD9         	movff	sprintf@sp,fsr2l
  5781   000EC8  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5782   000ECC  C141  FFDF         	movff	_sprintf$1028,indf2
  5783   000ED0  D7D3               	goto	l9496
  5784   000ED2                     l610:
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
  5788   000ED2  D0BE               	goto	l9544
  5789   000ED4                     l9520:
  5790                           
  5791                           ; BSR set to: 1
  5792                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10
      +                           + '0';
  5793   000ED4  C15C  F131         	movff	sprintf@prec,??_sprintf
  5794   000ED8  C15D  F132         	movff	sprintf@prec+1,??_sprintf+1
  5795   000EDC  90D8               	bcf	status,0,c
  5796   000EDE  3731               	rlcf	??_sprintf& (0+255),f,b
  5797   000EE0  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5798   000EE2  90D8               	bcf	status,0,c
  5799   000EE4  3731               	rlcf	??_sprintf& (0+255),f,b
  5800   000EE6  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5801   000EE8  0E2F               	movlw	low _dpowers
  5802   000EEA  2531               	addwf	??_sprintf& (0+255),w,b
  5803   000EEC  6EF6               	movwf	tblptrl,c
  5804   000EEE  0EFF               	movlw	high _dpowers
  5805   000EF0  2132               	addwfc	(??_sprintf+1)& (0+255),w,b
  5806   000EF2  6EF7               	movwf	tblptrh,c
  5807   000EF4                     	if	0	;There are less than 3 active tblptr bytes
  5808   000EF4                     	endif
  5809   000EF4  0009               	tblrd		*+
  5810   000EF6  CFF5 F0AE          	movff	tablat,___lldiv@divisor
  5811   000EFA  0009               	tblrd		*+
  5812   000EFC  CFF5 F0AF          	movff	tablat,___lldiv@divisor+1
  5813   000F00  0009               	tblrd		*+
  5814   000F02  CFF5 F0B0          	movff	tablat,___lldiv@divisor+2
  5815   000F06  000A               	tblrd		*-
  5816   000F08  CFF5 F0B1          	movff	tablat,___lldiv@divisor+3
  5817   000F0C  C156  F0AA         	movff	sprintf@val,___lldiv@dividend
  5818   000F10  C157  F0AB         	movff	sprintf@val+1,___lldiv@dividend+1
  5819   000F14  C158  F0AC         	movff	sprintf@val+2,___lldiv@dividend+2
  5820   000F18  C159  F0AD         	movff	sprintf@val+3,___lldiv@dividend+3
  5821   000F1C  EC3C  F021         	call	___lldiv	;wreg free
  5822   000F20  C0AA  F0B7         	movff	?___lldiv,___llmod@dividend
  5823   000F24  C0AB  F0B8         	movff	?___lldiv+1,___llmod@dividend+1
  5824   000F28  C0AC  F0B9         	movff	?___lldiv+2,___llmod@dividend+2
  5825   000F2C  C0AD  F0BA         	movff	?___lldiv+3,___llmod@dividend+3
  5826   000F30  0E0A               	movlw	10
  5827   000F32  6FBB               	movwf	___llmod@divisor& (0+255),b
  5828   000F34  0E00               	movlw	0
  5829   000F36  6FBC               	movwf	(___llmod@divisor+1)& (0+255),b
  5830   000F38  0E00               	movlw	0
  5831   000F3A  6FBD               	movwf	(___llmod@divisor+2)& (0+255),b
  5832   000F3C  0E00               	movlw	0
  5833   000F3E  6FBE               	movwf	(___llmod@divisor+3)& (0+255),b
  5834   000F40  EC27  F023         	call	___llmod	;wreg free
  5835   000F44  0100               	movlb	0	; () banked
  5836   000F46  51B7               	movf	?___llmod& (0+255),w,b
  5837   000F48  D06A               	goto	L20
  5838   000F4A                     l9522:
  5839                           
  5840                           ; BSR set to: 1
  5841                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  5842   000F4A  C156  F0AA         	movff	sprintf@val,___lldiv@dividend
  5843   000F4E  C157  F0AB         	movff	sprintf@val+1,___lldiv@dividend+1
  5844   000F52  C158  F0AC         	movff	sprintf@val+2,___lldiv@dividend+2
  5845   000F56  C159  F0AD         	movff	sprintf@val+3,___lldiv@dividend+3
  5846   000F5A  C15C  F131         	movff	sprintf@prec,??_sprintf
  5847   000F5E  C15D  F132         	movff	sprintf@prec+1,??_sprintf+1
  5848   000F62  90D8               	bcf	status,0,c
  5849   000F64  3731               	rlcf	??_sprintf& (0+255),f,b
  5850   000F66  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5851   000F68  90D8               	bcf	status,0,c
  5852   000F6A  3731               	rlcf	??_sprintf& (0+255),f,b
  5853   000F6C  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5854   000F6E  0E0F               	movlw	low _hexpowers
  5855   000F70  2531               	addwf	??_sprintf& (0+255),w,b
  5856   000F72  6EF6               	movwf	tblptrl,c
  5857   000F74  0EFF               	movlw	high _hexpowers
  5858   000F76  2132               	addwfc	(??_sprintf+1)& (0+255),w,b
  5859   000F78  6EF7               	movwf	tblptrh,c
  5860   000F7A                     	if	0	;There are less than 3 active tblptr bytes
  5861   000F7A                     	endif
  5862   000F7A  0009               	tblrd		*+
  5863   000F7C  CFF5 F0AE          	movff	tablat,___lldiv@divisor
  5864   000F80  0009               	tblrd		*+
  5865   000F82  CFF5 F0AF          	movff	tablat,___lldiv@divisor+1
  5866   000F86  0009               	tblrd		*+
  5867   000F88  CFF5 F0B0          	movff	tablat,___lldiv@divisor+2
  5868   000F8C  000A               	tblrd		*-
  5869   000F8E  CFF5 F0B1          	movff	tablat,___lldiv@divisor+3
  5870   000F92  EC3C  F021         	call	___lldiv	;wreg free
  5871   000F96  51AA               	movf	?___lldiv& (0+255),w,b
  5872   000F98  0B0F               	andlw	15
  5873   000F9A  0101               	movlb	1	; () banked
  5874   000F9C  6F3A               	movwf	sprintf@idx& (0+255),b
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5878   000F9E  BB5F               	btfsc	sprintf@flag& (0+255),5,b
  5879   000FA0  D004               	goto	l9528
  5880                           
  5881                           ; BSR set to: 1
  5882   000FA2  0EA3               	movlw	low STR_21
  5883   000FA4  6F43               	movwf	_sprintf$1034& (0+255),b
  5884   000FA6  0EFF               	movlw	high STR_21
  5885   000FA8  D003               	goto	L21
  5886   000FAA                     l9528:
  5887                           
  5888                           ; BSR set to: 1
  5889   000FAA  0E92               	movlw	low STR_20
  5890   000FAC  6F43               	movwf	_sprintf$1034& (0+255),b
  5891   000FAE  0EFF               	movlw	high STR_20
  5892   000FB0                     L21:
  5893   000FB0  6F44               	movwf	(_sprintf$1034+1)& (0+255),b
  5894                           
  5895                           ; BSR set to: 1
  5896   000FB2  513A               	movf	sprintf@idx& (0+255),w,b
  5897   000FB4  2543               	addwf	_sprintf$1034& (0+255),w,b
  5898   000FB6  6F31               	movwf	??_sprintf& (0+255),b
  5899   000FB8  0E00               	movlw	0
  5900   000FBA  2144               	addwfc	(_sprintf$1034+1)& (0+255),w,b
  5901   000FBC  6F32               	movwf	(??_sprintf+1)& (0+255),b
  5902   000FBE  C131  FFF6         	movff	??_sprintf,tblptrl
  5903   000FC2  C132  FFF7         	movff	??_sprintf+1,tblptrh
  5904   000FC6                     	if	0	;tblptru may be non-zero
  5905   000FC6                     	endif
  5906   000FC6                     	if	0	;tblptru may be non-zero
  5907   000FC6                     	endif
  5908   000FC6  0008               	tblrd		*
  5909   000FC8  CFF5 F15E          	movff	tablat,sprintf@c
  5910                           
  5911                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5912   000FCC  D03A               	goto	l9538
  5913   000FCE                     l9532:
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned int)prec]) & 07) + '0';
  5917   000FCE  C156  F0AA         	movff	sprintf@val,___lldiv@dividend
  5918   000FD2  C157  F0AB         	movff	sprintf@val+1,___lldiv@dividend+1
  5919   000FD6  C158  F0AC         	movff	sprintf@val+2,___lldiv@dividend+2
  5920   000FDA  C159  F0AD         	movff	sprintf@val+3,___lldiv@dividend+3
  5921   000FDE  C15C  F131         	movff	sprintf@prec,??_sprintf
  5922   000FE2  C15D  F132         	movff	sprintf@prec+1,??_sprintf+1
  5923   000FE6  90D8               	bcf	status,0,c
  5924   000FE8  3731               	rlcf	??_sprintf& (0+255),f,b
  5925   000FEA  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5926   000FEC  90D8               	bcf	status,0,c
  5927   000FEE  3731               	rlcf	??_sprintf& (0+255),f,b
  5928   000FF0  3732               	rlcf	(??_sprintf+1)& (0+255),f,b
  5929   000FF2  0E95               	movlw	low _octpowers
  5930   000FF4  2531               	addwf	??_sprintf& (0+255),w,b
  5931   000FF6  6EF6               	movwf	tblptrl,c
  5932   000FF8  0EFE               	movlw	high _octpowers
  5933   000FFA  2132               	addwfc	(??_sprintf+1)& (0+255),w,b
  5934   000FFC  6EF7               	movwf	tblptrh,c
  5935   000FFE                     	if	0	;There are less than 3 active tblptr bytes
  5936   000FFE                     	endif
  5937   000FFE  0009               	tblrd		*+
  5938   001000  CFF5 F0AE          	movff	tablat,___lldiv@divisor
  5939   001004  0009               	tblrd		*+
  5940   001006  CFF5 F0AF          	movff	tablat,___lldiv@divisor+1
  5941   00100A  0009               	tblrd		*+
  5942   00100C  CFF5 F0B0          	movff	tablat,___lldiv@divisor+2
  5943   001010  000A               	tblrd		*-
  5944   001012  CFF5 F0B1          	movff	tablat,___lldiv@divisor+3
  5945   001016  EC3C  F021         	call	___lldiv	;wreg free
  5946   00101A  51AA               	movf	?___lldiv& (0+255),w,b
  5947   00101C  0B07               	andlw	7
  5948   00101E                     L20:
  5949   00101E  0F30               	addlw	48
  5950   001020  0101               	movlb	1	; () banked
  5951   001022  6F5E               	movwf	sprintf@c& (0+255),b
  5952                           
  5953                           ;doprnt.c: 1546: break;
  5954   001024  D00E               	goto	l9538
  5955   001026                     l9536:
  5956                           
  5957                           ; BSR set to: 1
  5958   001026  515F               	movf	sprintf@flag& (0+255),w,b
  5959   001028  0BC0               	andlw	192
  5960                           
  5961                           ; Switch size 1, requested type "simple"
  5962                           ; Number of cases is 4, Range of values is 0 to 192
  5963                           ; switch strategies available:
  5964                           ; Name         Instructions Cycles
  5965                           ; simple_byte           13     7 (average)
  5966                           ;	Chosen strategy is simple_byte
  5967   00102A  0A00               	xorlw	0	; case 0
  5968   00102C  B4D8               	btfsc	status,2,c
  5969   00102E  D752               	goto	l9520
  5970   001030  0A40               	xorlw	64	; case 64
  5971   001032  B4D8               	btfsc	status,2,c
  5972   001034  D7CC               	goto	l9532
  5973   001036  0AC0               	xorlw	192	; case 128
  5974   001038  B4D8               	btfsc	status,2,c
  5975   00103A  D787               	goto	l9522
  5976   00103C  0A40               	xorlw	64	; case 192
  5977   00103E  B4D8               	btfsc	status,2,c
  5978   001040  D749               	goto	l9520
  5979   001042                     l9538:
  5980                           
  5981                           ; BSR set to: 1
  5982                           ;doprnt.c: 1550: ((*sp++ = (c)),(++ccnt));
  5983   001042  C127  FFD9         	movff	sprintf@sp,fsr2l
  5984   001046  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  5985   00104A  C15E  FFDF         	movff	sprintf@c,indf2
  5986   00104E  D714               	goto	l9496
  5987   001050                     l9544:
  5988                           
  5989                           ; BSR set to: 1
  5990   001050  075C               	decf	sprintf@prec& (0+255),f,b
  5991   001052  A0D8               	btfss	status,0,c
  5992   001054  075D               	decf	(sprintf@prec+1)& (0+255),f,b
  5993   001056  295C               	incf	sprintf@prec& (0+255),w,b
  5994   001058  E1E6               	bnz	l9536
  5995   00105A  295D               	incf	(sprintf@prec+1)& (0+255),w,b
  5996   00105C  A4D8               	btfss	status,2,c
  5997   00105E  D7E3               	goto	l9536
  5998                           
  5999                           ; BSR set to: 1
  6000                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
  6001   001060  B75F               	btfsc	sprintf@flag& (0+255),3,b
  6002                           
  6003                           ; BSR set to: 1
  6004   001062  BF5B               	btfsc	(sprintf@width+1)& (0+255),7,b
  6005   001064  D016               	goto	u12150
  6006   001066  515B               	movf	(sprintf@width+1)& (0+255),w,b
  6007   001068  E103               	bnz	u12140
  6008   00106A  055A               	decf	sprintf@width& (0+255),w,b
  6009   00106C  A0D8               	btfss	status,0,c
  6010   00106E  D011               	goto	u12150
  6011   001070                     u12140:
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;doprnt.c: 1556: ((*sp++ = (' ')),(++ccnt));
  6015   001070  C127  FFD9         	movff	sprintf@sp,fsr2l
  6016   001074  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  6017   001078  0E20               	movlw	32
  6018   00107A  6EDF               	movwf	indf2,c
  6019                           
  6020                           ; BSR set to: 1
  6021   00107C  4B27               	infsnz	sprintf@sp& (0+255),f,b
  6022   00107E  2B28               	incf	(sprintf@sp+1)& (0+255),f,b
  6023                           
  6024                           ; BSR set to: 1
  6025   001080  4B49               	infsnz	sprintf@ccnt& (0+255),f,b
  6026   001082  2B4A               	incf	(sprintf@ccnt+1)& (0+255),f,b
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;doprnt.c: 1557: while(--width);
  6030   001084  075A               	decf	sprintf@width& (0+255),f,b
  6031   001086  A0D8               	btfss	status,0,c
  6032   001088  075B               	decf	(sprintf@width+1)& (0+255),f,b
  6033   00108A  515A               	movf	sprintf@width& (0+255),w,b
  6034   00108C  115B               	iorwf	(sprintf@width+1)& (0+255),w,b
  6035   00108E  A4D8               	btfss	status,2,c
  6036   001090  D7EF               	goto	u12140
  6037   001092                     u12150:
  6038                           
  6039                           ; BSR set to: 1
  6040   001092  C129  FFF6         	movff	sprintf@f,tblptrl
  6041   001096  C12A  FFF7         	movff	sprintf@f+1,tblptrh
  6042   00109A  4B29               	infsnz	sprintf@f& (0+255),f,b
  6043   00109C  2B2A               	incf	(sprintf@f+1)& (0+255),f,b
  6044   00109E                     	if	0	;tblptru may be non-zero
  6045   00109E                     	endif
  6046   00109E                     	if	0	;tblptru may be non-zero
  6047   00109E                     	endif
  6048   00109E  0008               	tblrd		*
  6049   0010A0  CFF5 F15E          	movff	tablat,sprintf@c
  6050   0010A4  515E               	movf	sprintf@c& (0+255),w,b
  6051   0010A6  A4D8               	btfss	status,2,c
  6052   0010A8  EF13  F000         	goto	l8908
  6053   0010AC                     u12160:
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;doprnt.c: 1564: *sp = 0;
  6057   0010AC  C127  FFD9         	movff	sprintf@sp,fsr2l
  6058   0010B0  C128  FFDA         	movff	sprintf@sp+1,fsr2h
  6059   0010B4  6ADF               	clrf	indf2,c
  6060                           
  6061                           ; BSR set to: 1
  6062                           ;doprnt.c: 1566: return ccnt;
  6063   0010B6  C149  F127         	movff	sprintf@ccnt,?_sprintf
  6064   0010BA  C14A  F128         	movff	sprintf@ccnt+1,?_sprintf+1
  6065                           
  6066                           ; BSR set to: 1
  6067   0010BE  0012               	return		;funcret
  6068   0010C0                     __end_of_sprintf:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function _scale *****************
  6072 ;; Defined at:
  6073 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  scl             1    wreg     char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  scl             1   15[BANK1 ] char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  3    9[BANK1 ] char 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 3F/1
  6084 ;;		On exit  : 3E/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:        7 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 12
  6094 ;; This function calls:
  6095 ;;		___awdiv
  6096 ;;		___awmod
  6097 ;;		___ftmul
  6098 ;; This function is called by:
  6099 ;;		_sprintf
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text7
  6104   00215E                     __ptext7:
  6105                           	callstack 0
  6106   00215E                     _scale:
  6107                           	callstack 15
  6108                           
  6109                           ; BSR set to: 1
  6110                           ;incstack = 0
  6111                           ;scale@scl stored from wreg
  6112   00215E  6F0F               	movwf	scale@scl& (0+255),b
  6113                           
  6114                           ;doprnt.c: 436: if(scl < 0) {
  6115   002160  0101               	movlb	1	; () banked
  6116   002162  AF0F               	btfss	scale@scl& (0+255),7,b
  6117   002164  D0E5               	goto	l8790
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;doprnt.c: 437: scl = -scl;
  6121   002166  6D0F               	negf	scale@scl& (0+255),b
  6122                           
  6123                           ;doprnt.c: 438: if(scl>=110)
  6124   002168  510F               	movf	scale@scl& (0+255),w,b
  6125   00216A  0A80               	xorlw	128
  6126   00216C  0F12               	addlw	-238
  6127   00216E  A0D8               	btfss	status,0,c
  6128   002170  D080               	goto	l8780
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6132   002172  0E00               	movlw	0
  6133   002174  0100               	movlb	0	; () banked
  6134   002176  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6135   002178  0E0A               	movlw	10
  6136   00217A  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6137   00217C  0E00               	movlw	0
  6138   00217E  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6139   002180  0E64               	movlw	100
  6140   002182  6FAC               	movwf	___awmod@divisor& (0+255),b
  6141   002184  0101               	movlb	1	; () banked
  6142   002186  510F               	movf	scale@scl& (0+255),w,b
  6143   002188  0100               	movlb	0	; () banked
  6144   00218A  6FAA               	movwf	___awmod@dividend& (0+255),b
  6145   00218C  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6146   00218E  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6147   002190  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6148   002192  EC60  F023         	call	___awmod	;wreg free
  6149   002196  C0AA  F0B0         	movff	?___awmod,___awdiv@dividend
  6150   00219A  C0AB  F0B1         	movff	?___awmod+1,___awdiv@dividend+1
  6151   00219E  ECFA  F020         	call	___awdiv	;wreg free
  6152   0021A2  0E09               	movlw	9
  6153   0021A4  27B0               	addwf	?___awdiv& (0+255),f,b
  6154   0021A6  51B0               	movf	?___awdiv& (0+255),w,b
  6155   0021A8  0D03               	mullw	3
  6156   0021AA  0EE8               	movlw	low __npowers_
  6157   0021AC  24F3               	addwf	243,w,c
  6158   0021AE  6EF6               	movwf	tblptrl,c
  6159   0021B0  0EFE               	movlw	high __npowers_
  6160   0021B2  20F4               	addwfc	244,w,c
  6161   0021B4  6EF7               	movwf	tblptrh,c
  6162   0021B6                     	if	0	;There are less than 3 active tblptr bytes
  6163   0021B6                     	endif
  6164   0021B6  0009               	tblrd		*+
  6165   0021B8  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6166   0021BC  0009               	tblrd		*+
  6167   0021BE  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6168   0021C2  000A               	tblrd		*-
  6169   0021C4  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6170   0021C8  0E00               	movlw	0
  6171   0021CA  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6172   0021CC  0E64               	movlw	100
  6173   0021CE  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6174   0021D0  0101               	movlb	1	; () banked
  6175   0021D2  510F               	movf	scale@scl& (0+255),w,b
  6176   0021D4  0100               	movlb	0	; () banked
  6177   0021D6  6FB0               	movwf	___awdiv@dividend& (0+255),b
  6178   0021D8  6BB1               	clrf	(___awdiv@dividend+1)& (0+255),b
  6179   0021DA  BFB0               	btfsc	___awdiv@dividend& (0+255),7,b
  6180   0021DC  07B1               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6181   0021DE  ECFA  F020         	call	___awdiv	;wreg free
  6182   0021E2  0E12               	movlw	18
  6183   0021E4  27B0               	addwf	?___awdiv& (0+255),f,b
  6184   0021E6  51B0               	movf	?___awdiv& (0+255),w,b
  6185   0021E8  0D03               	mullw	3
  6186   0021EA  0EE8               	movlw	low __npowers_
  6187   0021EC  24F3               	addwf	243,w,c
  6188   0021EE  6EF6               	movwf	tblptrl,c
  6189   0021F0  0EFE               	movlw	high __npowers_
  6190   0021F2  20F4               	addwfc	244,w,c
  6191   0021F4  6EF7               	movwf	tblptrh,c
  6192   0021F6                     	if	0	;There are less than 3 active tblptr bytes
  6193   0021F6                     	endif
  6194   0021F6  0009               	tblrd		*+
  6195   0021F8  CFF5 F0B8          	movff	tablat,___ftmul@f1
  6196   0021FC  0009               	tblrd		*+
  6197   0021FE  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  6198   002202  000A               	tblrd		*-
  6199   002204  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  6200   002208  EC8D  F019         	call	___ftmul	;wreg free
  6201   00220C  C0B8  F10C         	movff	?___ftmul,_scale$1739
  6202   002210  C0B9  F10D         	movff	?___ftmul+1,_scale$1739+1
  6203   002214  C0BA  F10E         	movff	?___ftmul+2,_scale$1739+2
  6204                           
  6205                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6206   002218  C10C  F0B8         	movff	_scale$1739,___ftmul@f1
  6207   00221C  C10D  F0B9         	movff	_scale$1739+1,___ftmul@f1+1
  6208   002220  C10E  F0BA         	movff	_scale$1739+2,___ftmul@f1+2
  6209   002224  0E00               	movlw	0
  6210   002226  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6211   002228  0E0A               	movlw	10
  6212   00222A  6FAC               	movwf	___awmod@divisor& (0+255),b
  6213   00222C  0101               	movlb	1	; () banked
  6214   00222E  510F               	movf	scale@scl& (0+255),w,b
  6215   002230  0100               	movlb	0	; () banked
  6216   002232  6FAA               	movwf	___awmod@dividend& (0+255),b
  6217   002234  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6218   002236  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6219   002238  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6220   00223A  EC60  F023         	call	___awmod	;wreg free
  6221   00223E  51AA               	movf	?___awmod& (0+255),w,b
  6222   002240  0D03               	mullw	3
  6223   002242  0EE8               	movlw	low __npowers_
  6224   002244  24F3               	addwf	243,w,c
  6225   002246  6EF6               	movwf	tblptrl,c
  6226   002248  0EFE               	movlw	high __npowers_
  6227   00224A  20F4               	addwfc	244,w,c
  6228   00224C  6EF7               	movwf	tblptrh,c
  6229   00224E                     	if	0	;There are less than 3 active tblptr bytes
  6230   00224E                     	endif
  6231   00224E  0009               	tblrd		*+
  6232   002250  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6233   002254  0009               	tblrd		*+
  6234   002256  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6235   00225A  000A               	tblrd		*-
  6236   00225C  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6237   002260  EC8D  F019         	call	___ftmul	;wreg free
  6238   002264  C0B8  F109         	movff	?___ftmul,?_scale
  6239   002268  C0B9  F10A         	movff	?___ftmul+1,?_scale+1
  6240   00226C  C0BA  F10B         	movff	?___ftmul+2,?_scale+2
  6241   002270  0012               	return	
  6242   002272                     l8780:
  6243                           
  6244                           ; BSR set to: 1
  6245                           ;doprnt.c: 440: else if(scl > 10)
  6246   002272  510F               	movf	scale@scl& (0+255),w,b
  6247   002274  0A80               	xorlw	128
  6248   002276  0F75               	addlw	-139
  6249   002278  A0D8               	btfss	status,0,c
  6250   00227A  D048               	goto	l8786
  6251                           
  6252                           ; BSR set to: 1
  6253                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6254   00227C  0E00               	movlw	0
  6255   00227E  0100               	movlb	0	; () banked
  6256   002280  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6257   002282  0E0A               	movlw	10
  6258   002284  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6259   002286  0101               	movlb	1	; () banked
  6260   002288  510F               	movf	scale@scl& (0+255),w,b
  6261   00228A  0100               	movlb	0	; () banked
  6262   00228C  6FB0               	movwf	___awdiv@dividend& (0+255),b
  6263   00228E  6BB1               	clrf	(___awdiv@dividend+1)& (0+255),b
  6264   002290  BFB0               	btfsc	___awdiv@dividend& (0+255),7,b
  6265   002292  07B1               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6266   002294  ECFA  F020         	call	___awdiv	;wreg free
  6267   002298  0E09               	movlw	9
  6268   00229A  27B0               	addwf	?___awdiv& (0+255),f,b
  6269   00229C  51B0               	movf	?___awdiv& (0+255),w,b
  6270   00229E  0D03               	mullw	3
  6271   0022A0  0EE8               	movlw	low __npowers_
  6272   0022A2  24F3               	addwf	243,w,c
  6273   0022A4  6EF6               	movwf	tblptrl,c
  6274   0022A6  0EFE               	movlw	high __npowers_
  6275   0022A8  20F4               	addwfc	244,w,c
  6276   0022AA  6EF7               	movwf	tblptrh,c
  6277   0022AC                     	if	0	;There are less than 3 active tblptr bytes
  6278   0022AC                     	endif
  6279   0022AC  0009               	tblrd		*+
  6280   0022AE  CFF5 F0B8          	movff	tablat,___ftmul@f1
  6281   0022B2  0009               	tblrd		*+
  6282   0022B4  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  6283   0022B8  000A               	tblrd		*-
  6284   0022BA  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  6285   0022BE  0E00               	movlw	0
  6286   0022C0  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6287   0022C2  0E0A               	movlw	10
  6288   0022C4  6FAC               	movwf	___awmod@divisor& (0+255),b
  6289   0022C6  0101               	movlb	1	; () banked
  6290   0022C8  510F               	movf	scale@scl& (0+255),w,b
  6291   0022CA  0100               	movlb	0	; () banked
  6292   0022CC  6FAA               	movwf	___awmod@dividend& (0+255),b
  6293   0022CE  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6294   0022D0  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6295   0022D2  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6296   0022D4  EC60  F023         	call	___awmod	;wreg free
  6297   0022D8  51AA               	movf	?___awmod& (0+255),w,b
  6298   0022DA  0D03               	mullw	3
  6299   0022DC  0EE8               	movlw	low __npowers_
  6300   0022DE  24F3               	addwf	243,w,c
  6301   0022E0  6EF6               	movwf	tblptrl,c
  6302   0022E2  0EFE               	movlw	high __npowers_
  6303   0022E4  20F4               	addwfc	244,w,c
  6304   0022E6  6EF7               	movwf	tblptrh,c
  6305   0022E8                     	if	0	;There are less than 3 active tblptr bytes
  6306   0022E8                     	endif
  6307   0022E8  0009               	tblrd		*+
  6308   0022EA  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6309   0022EE  0009               	tblrd		*+
  6310   0022F0  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6311   0022F4  000A               	tblrd		*-
  6312   0022F6  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6313   0022FA  EC8D  F019         	call	___ftmul	;wreg free
  6314   0022FE  C0B8  F109         	movff	?___ftmul,?_scale
  6315   002302  C0B9  F10A         	movff	?___ftmul+1,?_scale+1
  6316   002306  C0BA  F10B         	movff	?___ftmul+2,?_scale+2
  6317   00230A  0012               	return	
  6318   00230C                     l8786:
  6319                           
  6320                           ; BSR set to: 1
  6321                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6322   00230C  510F               	movf	scale@scl& (0+255),w,b
  6323   00230E  0D03               	mullw	3
  6324   002310  0EE8               	movlw	low __npowers_
  6325   002312  24F3               	addwf	243,w,c
  6326   002314  6EF6               	movwf	tblptrl,c
  6327   002316  0EFE               	movlw	high __npowers_
  6328   002318  20F4               	addwfc	244,w,c
  6329   00231A  6EF7               	movwf	tblptrh,c
  6330   00231C                     	if	0	;There are less than 3 active tblptr bytes
  6331   00231C                     	endif
  6332   00231C  0009               	tblrd		*+
  6333   00231E  CFF5 F109          	movff	tablat,?_scale
  6334   002322  0009               	tblrd		*+
  6335   002324  CFF5 F10A          	movff	tablat,?_scale+1
  6336   002328  000A               	tblrd		*-
  6337   00232A  CFF5 F10B          	movff	tablat,?_scale+2
  6338   00232E  0012               	return	
  6339   002330                     l8790:
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6343   002330  510F               	movf	scale@scl& (0+255),w,b
  6344   002332  0A80               	xorlw	128
  6345   002334  0F12               	addlw	-238
  6346   002336  A0D8               	btfss	status,0,c
  6347   002338  D080               	goto	l8798
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6351   00233A  0E00               	movlw	0
  6352   00233C  0100               	movlb	0	; () banked
  6353   00233E  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6354   002340  0E0A               	movlw	10
  6355   002342  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6356   002344  0E00               	movlw	0
  6357   002346  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6358   002348  0E64               	movlw	100
  6359   00234A  6FAC               	movwf	___awmod@divisor& (0+255),b
  6360   00234C  0101               	movlb	1	; () banked
  6361   00234E  510F               	movf	scale@scl& (0+255),w,b
  6362   002350  0100               	movlb	0	; () banked
  6363   002352  6FAA               	movwf	___awmod@dividend& (0+255),b
  6364   002354  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6365   002356  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6366   002358  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6367   00235A  EC60  F023         	call	___awmod	;wreg free
  6368   00235E  C0AA  F0B0         	movff	?___awmod,___awdiv@dividend
  6369   002362  C0AB  F0B1         	movff	?___awmod+1,___awdiv@dividend+1
  6370   002366  ECFA  F020         	call	___awdiv	;wreg free
  6371   00236A  0E09               	movlw	9
  6372   00236C  27B0               	addwf	?___awdiv& (0+255),f,b
  6373   00236E  51B0               	movf	?___awdiv& (0+255),w,b
  6374   002370  0D03               	mullw	3
  6375   002372  0EC1               	movlw	low __powers_
  6376   002374  24F3               	addwf	243,w,c
  6377   002376  6EF6               	movwf	tblptrl,c
  6378   002378  0EFE               	movlw	high __powers_
  6379   00237A  20F4               	addwfc	244,w,c
  6380   00237C  6EF7               	movwf	tblptrh,c
  6381   00237E                     	if	0	;There are less than 3 active tblptr bytes
  6382   00237E                     	endif
  6383   00237E  0009               	tblrd		*+
  6384   002380  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6385   002384  0009               	tblrd		*+
  6386   002386  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6387   00238A  000A               	tblrd		*-
  6388   00238C  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6389   002390  0E00               	movlw	0
  6390   002392  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6391   002394  0E64               	movlw	100
  6392   002396  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6393   002398  0101               	movlb	1	; () banked
  6394   00239A  510F               	movf	scale@scl& (0+255),w,b
  6395   00239C  0100               	movlb	0	; () banked
  6396   00239E  6FB0               	movwf	___awdiv@dividend& (0+255),b
  6397   0023A0  6BB1               	clrf	(___awdiv@dividend+1)& (0+255),b
  6398   0023A2  BFB0               	btfsc	___awdiv@dividend& (0+255),7,b
  6399   0023A4  07B1               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6400   0023A6  ECFA  F020         	call	___awdiv	;wreg free
  6401   0023AA  0E12               	movlw	18
  6402   0023AC  27B0               	addwf	?___awdiv& (0+255),f,b
  6403   0023AE  51B0               	movf	?___awdiv& (0+255),w,b
  6404   0023B0  0D03               	mullw	3
  6405   0023B2  0EC1               	movlw	low __powers_
  6406   0023B4  24F3               	addwf	243,w,c
  6407   0023B6  6EF6               	movwf	tblptrl,c
  6408   0023B8  0EFE               	movlw	high __powers_
  6409   0023BA  20F4               	addwfc	244,w,c
  6410   0023BC  6EF7               	movwf	tblptrh,c
  6411   0023BE                     	if	0	;There are less than 3 active tblptr bytes
  6412   0023BE                     	endif
  6413   0023BE  0009               	tblrd		*+
  6414   0023C0  CFF5 F0B8          	movff	tablat,___ftmul@f1
  6415   0023C4  0009               	tblrd		*+
  6416   0023C6  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  6417   0023CA  000A               	tblrd		*-
  6418   0023CC  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  6419   0023D0  EC8D  F019         	call	___ftmul	;wreg free
  6420   0023D4  C0B8  F10C         	movff	?___ftmul,_scale$1739
  6421   0023D8  C0B9  F10D         	movff	?___ftmul+1,_scale$1739+1
  6422   0023DC  C0BA  F10E         	movff	?___ftmul+2,_scale$1739+2
  6423                           
  6424                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6425   0023E0  C10C  F0B8         	movff	_scale$1739,___ftmul@f1
  6426   0023E4  C10D  F0B9         	movff	_scale$1739+1,___ftmul@f1+1
  6427   0023E8  C10E  F0BA         	movff	_scale$1739+2,___ftmul@f1+2
  6428   0023EC  0E00               	movlw	0
  6429   0023EE  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6430   0023F0  0E0A               	movlw	10
  6431   0023F2  6FAC               	movwf	___awmod@divisor& (0+255),b
  6432   0023F4  0101               	movlb	1	; () banked
  6433   0023F6  510F               	movf	scale@scl& (0+255),w,b
  6434   0023F8  0100               	movlb	0	; () banked
  6435   0023FA  6FAA               	movwf	___awmod@dividend& (0+255),b
  6436   0023FC  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6437   0023FE  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6438   002400  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6439   002402  EC60  F023         	call	___awmod	;wreg free
  6440   002406  51AA               	movf	?___awmod& (0+255),w,b
  6441   002408  0D03               	mullw	3
  6442   00240A  0EC1               	movlw	low __powers_
  6443   00240C  24F3               	addwf	243,w,c
  6444   00240E  6EF6               	movwf	tblptrl,c
  6445   002410  0EFE               	movlw	high __powers_
  6446   002412  20F4               	addwfc	244,w,c
  6447   002414  6EF7               	movwf	tblptrh,c
  6448   002416                     	if	0	;There are less than 3 active tblptr bytes
  6449   002416                     	endif
  6450   002416  0009               	tblrd		*+
  6451   002418  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6452   00241C  0009               	tblrd		*+
  6453   00241E  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6454   002422  000A               	tblrd		*-
  6455   002424  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6456   002428  EC8D  F019         	call	___ftmul	;wreg free
  6457   00242C  C0B8  F109         	movff	?___ftmul,?_scale
  6458   002430  C0B9  F10A         	movff	?___ftmul+1,?_scale+1
  6459   002434  C0BA  F10B         	movff	?___ftmul+2,?_scale+2
  6460   002438  0012               	return	
  6461   00243A                     l8798:
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;doprnt.c: 446: else if(scl > 10)
  6465   00243A  510F               	movf	scale@scl& (0+255),w,b
  6466   00243C  0A80               	xorlw	128
  6467   00243E  0F75               	addlw	-139
  6468   002440  A0D8               	btfss	status,0,c
  6469   002442  D048               	goto	l8804
  6470                           
  6471                           ; BSR set to: 1
  6472                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6473   002444  0E00               	movlw	0
  6474   002446  0100               	movlb	0	; () banked
  6475   002448  6FB3               	movwf	(___awdiv@divisor+1)& (0+255),b
  6476   00244A  0E0A               	movlw	10
  6477   00244C  6FB2               	movwf	___awdiv@divisor& (0+255),b
  6478   00244E  0101               	movlb	1	; () banked
  6479   002450  510F               	movf	scale@scl& (0+255),w,b
  6480   002452  0100               	movlb	0	; () banked
  6481   002454  6FB0               	movwf	___awdiv@dividend& (0+255),b
  6482   002456  6BB1               	clrf	(___awdiv@dividend+1)& (0+255),b
  6483   002458  BFB0               	btfsc	___awdiv@dividend& (0+255),7,b
  6484   00245A  07B1               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6485   00245C  ECFA  F020         	call	___awdiv	;wreg free
  6486   002460  0E09               	movlw	9
  6487   002462  27B0               	addwf	?___awdiv& (0+255),f,b
  6488   002464  51B0               	movf	?___awdiv& (0+255),w,b
  6489   002466  0D03               	mullw	3
  6490   002468  0EC1               	movlw	low __powers_
  6491   00246A  24F3               	addwf	243,w,c
  6492   00246C  6EF6               	movwf	tblptrl,c
  6493   00246E  0EFE               	movlw	high __powers_
  6494   002470  20F4               	addwfc	244,w,c
  6495   002472  6EF7               	movwf	tblptrh,c
  6496   002474                     	if	0	;There are less than 3 active tblptr bytes
  6497   002474                     	endif
  6498   002474  0009               	tblrd		*+
  6499   002476  CFF5 F0B8          	movff	tablat,___ftmul@f1
  6500   00247A  0009               	tblrd		*+
  6501   00247C  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  6502   002480  000A               	tblrd		*-
  6503   002482  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  6504   002486  0E00               	movlw	0
  6505   002488  6FAD               	movwf	(___awmod@divisor+1)& (0+255),b
  6506   00248A  0E0A               	movlw	10
  6507   00248C  6FAC               	movwf	___awmod@divisor& (0+255),b
  6508   00248E  0101               	movlb	1	; () banked
  6509   002490  510F               	movf	scale@scl& (0+255),w,b
  6510   002492  0100               	movlb	0	; () banked
  6511   002494  6FAA               	movwf	___awmod@dividend& (0+255),b
  6512   002496  6BAB               	clrf	(___awmod@dividend+1)& (0+255),b
  6513   002498  BFAA               	btfsc	___awmod@dividend& (0+255),7,b
  6514   00249A  07AB               	decf	(___awmod@dividend+1)& (0+255),f,b
  6515   00249C  EC60  F023         	call	___awmod	;wreg free
  6516   0024A0  51AA               	movf	?___awmod& (0+255),w,b
  6517   0024A2  0D03               	mullw	3
  6518   0024A4  0EC1               	movlw	low __powers_
  6519   0024A6  24F3               	addwf	243,w,c
  6520   0024A8  6EF6               	movwf	tblptrl,c
  6521   0024AA  0EFE               	movlw	high __powers_
  6522   0024AC  20F4               	addwfc	244,w,c
  6523   0024AE  6EF7               	movwf	tblptrh,c
  6524   0024B0                     	if	0	;There are less than 3 active tblptr bytes
  6525   0024B0                     	endif
  6526   0024B0  0009               	tblrd		*+
  6527   0024B2  CFF5 F0BB          	movff	tablat,___ftmul@f2
  6528   0024B6  0009               	tblrd		*+
  6529   0024B8  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  6530   0024BC  000A               	tblrd		*-
  6531   0024BE  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  6532   0024C2  EC8D  F019         	call	___ftmul	;wreg free
  6533   0024C6  C0B8  F109         	movff	?___ftmul,?_scale
  6534   0024CA  C0B9  F10A         	movff	?___ftmul+1,?_scale+1
  6535   0024CE  C0BA  F10B         	movff	?___ftmul+2,?_scale+2
  6536   0024D2  0012               	return	
  6537   0024D4                     l8804:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6541   0024D4  510F               	movf	scale@scl& (0+255),w,b
  6542   0024D6  0D03               	mullw	3
  6543   0024D8  0EC1               	movlw	low __powers_
  6544   0024DA  24F3               	addwf	243,w,c
  6545   0024DC  6EF6               	movwf	tblptrl,c
  6546   0024DE  0EFE               	movlw	high __powers_
  6547   0024E0  20F4               	addwfc	244,w,c
  6548   0024E2  6EF7               	movwf	tblptrh,c
  6549   0024E4                     	if	0	;There are less than 3 active tblptr bytes
  6550   0024E4                     	endif
  6551   0024E4  0009               	tblrd		*+
  6552   0024E6  CFF5 F109          	movff	tablat,?_scale
  6553   0024EA  0009               	tblrd		*+
  6554   0024EC  CFF5 F10A          	movff	tablat,?_scale+1
  6555   0024F0  000A               	tblrd		*-
  6556   0024F2  CFF5 F10B          	movff	tablat,?_scale+2
  6557   0024F6  0012               	return		;funcret
  6558   0024F8                     __end_of_scale:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function ___awmod *****************
  6562 ;; Defined at:
  6563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  dividend        2   42[BANK0 ] int 
  6566 ;;  divisor         2   44[BANK0 ] int 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  sign            1   47[BANK0 ] unsigned char 
  6569 ;;  counter         1   46[BANK0 ] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2   42[BANK0 ] int 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 3F/0
  6576 ;;		On exit  : 3F/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;Total ram usage:        6 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; Hardware stack levels required when called: 10
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_scale
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text8
  6594   0046C0                     __ptext8:
  6595                           	callstack 0
  6596   0046C0                     ___awmod:
  6597                           	callstack 16
  6598                           
  6599                           ; BSR set to: 0
  6600                           
  6601                           ;incstack = 0
  6602   0046C0  0E00               	movlw	0
  6603   0046C2  6FAF               	movwf	___awmod@sign& (0+255),b
  6604                           
  6605                           ; BSR set to: 0
  6606   0046C4  AFAB               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6607   0046C6  D006               	goto	l8678
  6608                           
  6609                           ; BSR set to: 0
  6610   0046C8  6DAA               	negf	___awmod@dividend& (0+255),b
  6611   0046CA  1FAB               	comf	(___awmod@dividend+1)& (0+255),f,b
  6612   0046CC  B0D8               	btfsc	status,0,c
  6613   0046CE  2BAB               	incf	(___awmod@dividend+1)& (0+255),f,b
  6614                           
  6615                           ; BSR set to: 0
  6616   0046D0  0E01               	movlw	1
  6617   0046D2  6FAF               	movwf	___awmod@sign& (0+255),b
  6618   0046D4                     l8678:
  6619                           
  6620                           ; BSR set to: 0
  6621   0046D4  AFAD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6622   0046D6  D004               	goto	l8682
  6623                           
  6624                           ; BSR set to: 0
  6625   0046D8  6DAC               	negf	___awmod@divisor& (0+255),b
  6626   0046DA  1FAD               	comf	(___awmod@divisor+1)& (0+255),f,b
  6627   0046DC  B0D8               	btfsc	status,0,c
  6628   0046DE  2BAD               	incf	(___awmod@divisor+1)& (0+255),f,b
  6629   0046E0                     l8682:
  6630                           
  6631                           ; BSR set to: 0
  6632   0046E0  51AC               	movf	___awmod@divisor& (0+255),w,b
  6633   0046E2  11AD               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6634   0046E4  B4D8               	btfsc	status,2,c
  6635   0046E6  D018               	goto	l8698
  6636                           
  6637                           ; BSR set to: 0
  6638   0046E8  0E01               	movlw	1
  6639   0046EA  6FAE               	movwf	___awmod@counter& (0+255),b
  6640   0046EC  D004               	goto	l8688
  6641   0046EE                     l8686:
  6642                           
  6643                           ; BSR set to: 0
  6644   0046EE  90D8               	bcf	status,0,c
  6645   0046F0  37AC               	rlcf	___awmod@divisor& (0+255),f,b
  6646   0046F2  37AD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6647   0046F4  2BAE               	incf	___awmod@counter& (0+255),f,b
  6648   0046F6                     l8688:
  6649                           
  6650                           ; BSR set to: 0
  6651   0046F6  AFAD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6652   0046F8  D7FA               	goto	l8686
  6653   0046FA                     u10850:
  6654                           
  6655                           ; BSR set to: 0
  6656   0046FA  51AC               	movf	___awmod@divisor& (0+255),w,b
  6657   0046FC  5DAA               	subwf	___awmod@dividend& (0+255),w,b
  6658   0046FE  51AD               	movf	(___awmod@divisor+1)& (0+255),w,b
  6659   004700  59AB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6660   004702  A0D8               	btfss	status,0,c
  6661   004704  D004               	goto	l8694
  6662                           
  6663                           ; BSR set to: 0
  6664   004706  51AC               	movf	___awmod@divisor& (0+255),w,b
  6665   004708  5FAA               	subwf	___awmod@dividend& (0+255),f,b
  6666   00470A  51AD               	movf	(___awmod@divisor+1)& (0+255),w,b
  6667   00470C  5BAB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6668   00470E                     l8694:
  6669                           
  6670                           ; BSR set to: 0
  6671   00470E  90D8               	bcf	status,0,c
  6672   004710  33AD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6673   004712  33AC               	rrcf	___awmod@divisor& (0+255),f,b
  6674                           
  6675                           ; BSR set to: 0
  6676   004714  2FAE               	decfsz	___awmod@counter& (0+255),f,b
  6677   004716  D7F1               	goto	u10850
  6678   004718                     l8698:
  6679                           
  6680                           ; BSR set to: 0
  6681   004718  51AF               	movf	___awmod@sign& (0+255),w,b
  6682   00471A  B4D8               	btfsc	status,2,c
  6683   00471C  D004               	goto	l8702
  6684                           
  6685                           ; BSR set to: 0
  6686   00471E  6DAA               	negf	___awmod@dividend& (0+255),b
  6687   004720  1FAB               	comf	(___awmod@dividend+1)& (0+255),f,b
  6688   004722  B0D8               	btfsc	status,0,c
  6689   004724  2BAB               	incf	(___awmod@dividend+1)& (0+255),f,b
  6690   004726                     l8702:
  6691                           
  6692                           ; BSR set to: 0
  6693   004726  C0AA  F0AA         	movff	___awmod@dividend,?___awmod
  6694   00472A  C0AB  F0AB         	movff	___awmod@dividend+1,?___awmod+1
  6695                           
  6696                           ; BSR set to: 0
  6697   00472E  0012               	return		;funcret
  6698   004730                     __end_of___awmod:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function ___awdiv *****************
  6702 ;; Defined at:
  6703 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  dividend        2   48[BANK0 ] int 
  6706 ;;  divisor         2   50[BANK0 ] int 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  quotient        2   54[BANK0 ] int 
  6709 ;;  sign            1   53[BANK0 ] unsigned char 
  6710 ;;  counter         1   52[BANK0 ] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  2   48[BANK0 ] int 
  6713 ;; Registers used:
  6714 ;;		wreg, status,2, status,0
  6715 ;; Tracked objects:
  6716 ;;		On entry : 3F/0
  6717 ;;		On exit  : 3F/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        8 bytes
  6725 ;; Hardware stack levels used: 1
  6726 ;; Hardware stack levels required when called: 10
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_scale
  6731 ;;		_sprintf
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text9
  6736   0041F4                     __ptext9:
  6737                           	callstack 0
  6738   0041F4                     ___awdiv:
  6739                           	callstack 16
  6740                           
  6741                           ; BSR set to: 0
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;incstack = 0
  6745   0041F4  0E00               	movlw	0
  6746   0041F6  6FB5               	movwf	___awdiv@sign& (0+255),b
  6747                           
  6748                           ; BSR set to: 0
  6749   0041F8  AFB3               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6750   0041FA  D006               	goto	l8634
  6751                           
  6752                           ; BSR set to: 0
  6753   0041FC  6DB2               	negf	___awdiv@divisor& (0+255),b
  6754   0041FE  1FB3               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6755   004200  B0D8               	btfsc	status,0,c
  6756   004202  2BB3               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6757                           
  6758                           ; BSR set to: 0
  6759   004204  0E01               	movlw	1
  6760   004206  6FB5               	movwf	___awdiv@sign& (0+255),b
  6761   004208                     l8634:
  6762                           
  6763                           ; BSR set to: 0
  6764   004208  AFB1               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6765   00420A  D006               	goto	l8640
  6766                           
  6767                           ; BSR set to: 0
  6768   00420C  6DB0               	negf	___awdiv@dividend& (0+255),b
  6769   00420E  1FB1               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6770   004210  B0D8               	btfsc	status,0,c
  6771   004212  2BB1               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6772                           
  6773                           ; BSR set to: 0
  6774   004214  0E01               	movlw	1
  6775   004216  1BB5               	xorwf	___awdiv@sign& (0+255),f,b
  6776   004218                     l8640:
  6777                           
  6778                           ; BSR set to: 0
  6779   004218  0E00               	movlw	0
  6780   00421A  6FB7               	movwf	(___awdiv@quotient+1)& (0+255),b
  6781   00421C  0E00               	movlw	0
  6782   00421E  6FB6               	movwf	___awdiv@quotient& (0+255),b
  6783                           
  6784                           ; BSR set to: 0
  6785   004220  51B2               	movf	___awdiv@divisor& (0+255),w,b
  6786   004222  11B3               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6787   004224  B4D8               	btfsc	status,2,c
  6788   004226  D01C               	goto	l8662
  6789                           
  6790                           ; BSR set to: 0
  6791   004228  0E01               	movlw	1
  6792   00422A  6FB4               	movwf	___awdiv@counter& (0+255),b
  6793   00422C  D004               	goto	l8648
  6794   00422E                     l8646:
  6795                           
  6796                           ; BSR set to: 0
  6797   00422E  90D8               	bcf	status,0,c
  6798   004230  37B2               	rlcf	___awdiv@divisor& (0+255),f,b
  6799   004232  37B3               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6800   004234  2BB4               	incf	___awdiv@counter& (0+255),f,b
  6801   004236                     l8648:
  6802                           
  6803                           ; BSR set to: 0
  6804   004236  AFB3               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6805   004238  D7FA               	goto	l8646
  6806   00423A                     u10790:
  6807                           
  6808                           ; BSR set to: 0
  6809   00423A  90D8               	bcf	status,0,c
  6810   00423C  37B6               	rlcf	___awdiv@quotient& (0+255),f,b
  6811   00423E  37B7               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6812                           
  6813                           ; BSR set to: 0
  6814   004240  51B2               	movf	___awdiv@divisor& (0+255),w,b
  6815   004242  5DB0               	subwf	___awdiv@dividend& (0+255),w,b
  6816   004244  51B3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6817   004246  59B1               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6818   004248  A0D8               	btfss	status,0,c
  6819   00424A  D005               	goto	l8658
  6820                           
  6821                           ; BSR set to: 0
  6822   00424C  51B2               	movf	___awdiv@divisor& (0+255),w,b
  6823   00424E  5FB0               	subwf	___awdiv@dividend& (0+255),f,b
  6824   004250  51B3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6825   004252  5BB1               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6826                           
  6827                           ; BSR set to: 0
  6828   004254  81B6               	bsf	___awdiv@quotient& (0+255),0,b
  6829   004256                     l8658:
  6830                           
  6831                           ; BSR set to: 0
  6832   004256  90D8               	bcf	status,0,c
  6833   004258  33B3               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6834   00425A  33B2               	rrcf	___awdiv@divisor& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 0
  6837   00425C  2FB4               	decfsz	___awdiv@counter& (0+255),f,b
  6838   00425E  D7ED               	goto	u10790
  6839   004260                     l8662:
  6840                           
  6841                           ; BSR set to: 0
  6842   004260  51B5               	movf	___awdiv@sign& (0+255),w,b
  6843   004262  B4D8               	btfsc	status,2,c
  6844   004264  D004               	goto	l8666
  6845                           
  6846                           ; BSR set to: 0
  6847   004266  6DB6               	negf	___awdiv@quotient& (0+255),b
  6848   004268  1FB7               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6849   00426A  B0D8               	btfsc	status,0,c
  6850   00426C  2BB7               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6851   00426E                     l8666:
  6852                           
  6853                           ; BSR set to: 0
  6854   00426E  C0B6  F0B0         	movff	___awdiv@quotient,?___awdiv
  6855   004272  C0B7  F0B1         	movff	___awdiv@quotient+1,?___awdiv+1
  6856                           
  6857                           ; BSR set to: 0
  6858   004276  0012               	return		;funcret
  6859   004278                     __end_of___awdiv:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _isdigit *****************
  6863 ;; Defined at:
  6864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  c               1    wreg     unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  c               1   44[BANK0 ] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;		None               void
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 3F/1
  6875 ;;		On exit  : 3F/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;Total ram usage:        3 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 10
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_sprintf
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text10
  6893   00526C                     __ptext10:
  6894                           	callstack 0
  6895   00526C                     _isdigit:
  6896                           	callstack 17
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;incstack = 0
  6900                           ;isdigit@c stored from wreg
  6901   00526C  0100               	movlb	0	; () banked
  6902   00526E  6FAC               	movwf	isdigit@c& (0+255),b
  6903   005270  0E00               	movlw	0
  6904   005272  0100               	movlb	0	; () banked
  6905   005274  6FAB               	movwf	_isdigit$1486& (0+255),b
  6906                           
  6907                           ; BSR set to: 0
  6908   005276  0E3A               	movlw	58
  6909   005278  61AC               	cpfslt	isdigit@c& (0+255),b
  6910   00527A  D005               	goto	l6054
  6911                           
  6912                           ; BSR set to: 0
  6913   00527C  0E2F               	movlw	47
  6914   00527E  65AC               	cpfsgt	isdigit@c& (0+255),b
  6915   005280  D002               	goto	l6054
  6916                           
  6917                           ; BSR set to: 0
  6918   005282  0E01               	movlw	1
  6919   005284  6FAB               	movwf	_isdigit$1486& (0+255),b
  6920   005286                     l6054:
  6921                           
  6922                           ; BSR set to: 0
  6923   005286  C0AB  F0AA         	movff	_isdigit$1486,??_isdigit
  6924   00528A  31AA               	rrcf	??_isdigit& (0+255),w,b
  6925                           
  6926                           ; BSR set to: 0
  6927   00528C  0012               	return		;funcret
  6928   00528E                     __end_of_isdigit:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _fround *****************
  6932 ;; Defined at:
  6933 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  prec            1    wreg     unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  prec            1   20[BANK1 ] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  3    9[BANK1 ] unsigned char 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 3F/1
  6944 ;;		On exit  : 3F/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6947 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;Total ram usage:       12 bytes
  6952 ;; Hardware stack levels used: 1
  6953 ;; Hardware stack levels required when called: 12
  6954 ;; This function calls:
  6955 ;;		___ftmul
  6956 ;;		___lbdiv
  6957 ;;		___lbmod
  6958 ;; This function is called by:
  6959 ;;		_sprintf
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text11
  6964   002BE0                     __ptext11:
  6965                           	callstack 0
  6966   002BE0                     _fround:
  6967                           	callstack 15
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;incstack = 0
  6971                           ;fround@prec stored from wreg
  6972   002BE0  6F14               	movwf	fround@prec& (0+255),b
  6973                           
  6974                           ;doprnt.c: 421: if(prec>=110)
  6975   002BE2  0E6D               	movlw	109
  6976   002BE4  0101               	movlb	1	; () banked
  6977   002BE6  6514               	cpfsgt	fround@prec& (0+255),b
  6978   002BE8  D084               	goto	l8758
  6979                           
  6980                           ; BSR set to: 1
  6981                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6982   002BEA  0E0A               	movlw	10
  6983   002BEC  0100               	movlb	0	; () banked
  6984   002BEE  6FAE               	movwf	___lbdiv@divisor& (0+255),b
  6985   002BF0  0E64               	movlw	100
  6986   002BF2  6FAA               	movwf	___lbmod@divisor& (0+255),b
  6987   002BF4  0101               	movlb	1	; () banked
  6988   002BF6  5114               	movf	fround@prec& (0+255),w,b
  6989   002BF8  EC0C  F028         	call	___lbmod
  6990   002BFC  EC7F  F027         	call	___lbdiv
  6991   002C00  0101               	movlb	1	; () banked
  6992   002C02  6F0C               	movwf	??_fround& (0+255),b
  6993   002C04  510C               	movf	??_fround& (0+255),w,b
  6994   002C06  0D03               	mullw	3
  6995   002C08  0E1B               	movlw	27
  6996   002C0A  26F3               	addwf	243,f,c
  6997   002C0C  0E00               	movlw	0
  6998   002C0E  22F4               	addwfc	244,f,c
  6999   002C10  0EE8               	movlw	low __npowers_
  7000   002C12  24F3               	addwf	243,w,c
  7001   002C14  6EF6               	movwf	tblptrl,c
  7002   002C16  0EFE               	movlw	high __npowers_
  7003   002C18  20F4               	addwfc	244,w,c
  7004   002C1A  6EF7               	movwf	tblptrh,c
  7005   002C1C                     	if	0	;There are less than 3 active tblptr bytes
  7006   002C1C                     	endif
  7007   002C1C  0009               	tblrd		*+
  7008   002C1E  CFF5 F0BB          	movff	tablat,___ftmul@f2
  7009   002C22  0009               	tblrd		*+
  7010   002C24  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  7011   002C28  000A               	tblrd		*-
  7012   002C2A  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  7013   002C2E  0E64               	movlw	100
  7014   002C30  0100               	movlb	0	; () banked
  7015   002C32  6FAE               	movwf	___lbdiv@divisor& (0+255),b
  7016   002C34  0101               	movlb	1	; () banked
  7017   002C36  5114               	movf	fround@prec& (0+255),w,b
  7018   002C38  EC7F  F027         	call	___lbdiv
  7019   002C3C  0101               	movlb	1	; () banked
  7020   002C3E  6F0D               	movwf	(??_fround+1)& (0+255),b
  7021   002C40  510D               	movf	(??_fround+1)& (0+255),w,b
  7022   002C42  0D03               	mullw	3
  7023   002C44  0E36               	movlw	54
  7024   002C46  26F3               	addwf	243,f,c
  7025   002C48  0E00               	movlw	0
  7026   002C4A  22F4               	addwfc	244,f,c
  7027   002C4C  0EE8               	movlw	low __npowers_
  7028   002C4E  24F3               	addwf	243,w,c
  7029   002C50  6EF6               	movwf	tblptrl,c
  7030   002C52  0EFE               	movlw	high __npowers_
  7031   002C54  20F4               	addwfc	244,w,c
  7032   002C56  6EF7               	movwf	tblptrh,c
  7033   002C58                     	if	0	;There are less than 3 active tblptr bytes
  7034   002C58                     	endif
  7035   002C58  0009               	tblrd		*+
  7036   002C5A  CFF5 F0B8          	movff	tablat,___ftmul@f1
  7037   002C5E  0009               	tblrd		*+
  7038   002C60  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  7039   002C64  000A               	tblrd		*-
  7040   002C66  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  7041   002C6A  EC8D  F019         	call	___ftmul	;wreg free
  7042   002C6E  C0B8  F111         	movff	?___ftmul,_fround$1737
  7043   002C72  C0B9  F112         	movff	?___ftmul+1,_fround$1737+1
  7044   002C76  C0BA  F113         	movff	?___ftmul+2,_fround$1737+2
  7045                           
  7046                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7047   002C7A  0E0A               	movlw	10
  7048   002C7C  6FAA               	movwf	___lbmod@divisor& (0+255),b
  7049   002C7E  0101               	movlb	1	; () banked
  7050   002C80  5114               	movf	fround@prec& (0+255),w,b
  7051   002C82  EC0C  F028         	call	___lbmod
  7052   002C86  0101               	movlb	1	; () banked
  7053   002C88  6F0C               	movwf	??_fround& (0+255),b
  7054   002C8A  510C               	movf	??_fround& (0+255),w,b
  7055   002C8C  0D03               	mullw	3
  7056   002C8E  0EE8               	movlw	low __npowers_
  7057   002C90  24F3               	addwf	243,w,c
  7058   002C92  6EF6               	movwf	tblptrl,c
  7059   002C94  0EFE               	movlw	high __npowers_
  7060   002C96  20F4               	addwfc	244,w,c
  7061   002C98  6EF7               	movwf	tblptrh,c
  7062   002C9A                     	if	0	;There are less than 3 active tblptr bytes
  7063   002C9A                     	endif
  7064   002C9A  0009               	tblrd		*+
  7065   002C9C  CFF5 F0BB          	movff	tablat,___ftmul@f2
  7066   002CA0  0009               	tblrd		*+
  7067   002CA2  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  7068   002CA6  000A               	tblrd		*-
  7069   002CA8  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  7070   002CAC  C111  F0B8         	movff	_fround$1737,___ftmul@f1
  7071   002CB0  C112  F0B9         	movff	_fround$1737+1,___ftmul@f1+1
  7072   002CB4  C113  F0BA         	movff	_fround$1737+2,___ftmul@f1+2
  7073   002CB8  EC8D  F019         	call	___ftmul	;wreg free
  7074   002CBC  C0B8  F10E         	movff	?___ftmul,_fround$1738
  7075   002CC0  C0B9  F10F         	movff	?___ftmul+1,_fround$1738+1
  7076   002CC4  C0BA  F110         	movff	?___ftmul+2,_fround$1738+2
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7080   002CC8  C10E  F0B8         	movff	_fround$1738,___ftmul@f1
  7081   002CCC  C10F  F0B9         	movff	_fround$1738+1,___ftmul@f1+1
  7082   002CD0  C110  F0BA         	movff	_fround$1738+2,___ftmul@f1+2
  7083   002CD4  0E00               	movlw	0
  7084   002CD6  6FBB               	movwf	___ftmul@f2& (0+255),b
  7085   002CD8  0E00               	movlw	0
  7086   002CDA  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  7087   002CDC  0E3F               	movlw	63
  7088   002CDE  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  7089   002CE0  EC8D  F019         	call	___ftmul	;wreg free
  7090   002CE4  C0B8  F109         	movff	?___ftmul,?_fround
  7091   002CE8  C0B9  F10A         	movff	?___ftmul+1,?_fround+1
  7092   002CEC  C0BA  F10B         	movff	?___ftmul+2,?_fround+2
  7093   002CF0  0012               	return	
  7094   002CF2                     l8758:
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;doprnt.c: 423: else if(prec > 10)
  7098   002CF2  0E0A               	movlw	10
  7099   002CF4  6514               	cpfsgt	fround@prec& (0+255),b
  7100   002CF6  D055               	goto	l8766
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7104   002CF8  0E0A               	movlw	10
  7105   002CFA  0100               	movlb	0	; () banked
  7106   002CFC  6FAA               	movwf	___lbmod@divisor& (0+255),b
  7107   002CFE  0101               	movlb	1	; () banked
  7108   002D00  5114               	movf	fround@prec& (0+255),w,b
  7109   002D02  EC0C  F028         	call	___lbmod
  7110   002D06  0101               	movlb	1	; () banked
  7111   002D08  6F0C               	movwf	??_fround& (0+255),b
  7112   002D0A  510C               	movf	??_fround& (0+255),w,b
  7113   002D0C  0D03               	mullw	3
  7114   002D0E  0EE8               	movlw	low __npowers_
  7115   002D10  24F3               	addwf	243,w,c
  7116   002D12  6EF6               	movwf	tblptrl,c
  7117   002D14  0EFE               	movlw	high __npowers_
  7118   002D16  20F4               	addwfc	244,w,c
  7119   002D18  6EF7               	movwf	tblptrh,c
  7120   002D1A                     	if	0	;There are less than 3 active tblptr bytes
  7121   002D1A                     	endif
  7122   002D1A  0009               	tblrd		*+
  7123   002D1C  CFF5 F0BB          	movff	tablat,___ftmul@f2
  7124   002D20  0009               	tblrd		*+
  7125   002D22  CFF5 F0BC          	movff	tablat,___ftmul@f2+1
  7126   002D26  000A               	tblrd		*-
  7127   002D28  CFF5 F0BD          	movff	tablat,___ftmul@f2+2
  7128   002D2C  0E0A               	movlw	10
  7129   002D2E  0100               	movlb	0	; () banked
  7130   002D30  6FAE               	movwf	___lbdiv@divisor& (0+255),b
  7131   002D32  0101               	movlb	1	; () banked
  7132   002D34  5114               	movf	fround@prec& (0+255),w,b
  7133   002D36  EC7F  F027         	call	___lbdiv
  7134   002D3A  0101               	movlb	1	; () banked
  7135   002D3C  6F0D               	movwf	(??_fround+1)& (0+255),b
  7136   002D3E  510D               	movf	(??_fround+1)& (0+255),w,b
  7137   002D40  0D03               	mullw	3
  7138   002D42  0E1B               	movlw	27
  7139   002D44  26F3               	addwf	243,f,c
  7140   002D46  0E00               	movlw	0
  7141   002D48  22F4               	addwfc	244,f,c
  7142   002D4A  0EE8               	movlw	low __npowers_
  7143   002D4C  24F3               	addwf	243,w,c
  7144   002D4E  6EF6               	movwf	tblptrl,c
  7145   002D50  0EFE               	movlw	high __npowers_
  7146   002D52  20F4               	addwfc	244,w,c
  7147   002D54  6EF7               	movwf	tblptrh,c
  7148   002D56                     	if	0	;There are less than 3 active tblptr bytes
  7149   002D56                     	endif
  7150   002D56  0009               	tblrd		*+
  7151   002D58  CFF5 F0B8          	movff	tablat,___ftmul@f1
  7152   002D5C  0009               	tblrd		*+
  7153   002D5E  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  7154   002D62  000A               	tblrd		*-
  7155   002D64  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  7156   002D68  EC8D  F019         	call	___ftmul	;wreg free
  7157   002D6C  C0B8  F111         	movff	?___ftmul,_fround$1737
  7158   002D70  C0B9  F112         	movff	?___ftmul+1,_fround$1737+1
  7159   002D74  C0BA  F113         	movff	?___ftmul+2,_fround$1737+2
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7163   002D78  C111  F0B8         	movff	_fround$1737,___ftmul@f1
  7164   002D7C  C112  F0B9         	movff	_fround$1737+1,___ftmul@f1+1
  7165   002D80  C113  F0BA         	movff	_fround$1737+2,___ftmul@f1+2
  7166   002D84  0E00               	movlw	0
  7167   002D86  6FBB               	movwf	___ftmul@f2& (0+255),b
  7168   002D88  0E00               	movlw	0
  7169   002D8A  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  7170   002D8C  0E3F               	movlw	63
  7171   002D8E  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  7172   002D90  EC8D  F019         	call	___ftmul	;wreg free
  7173   002D94  C0B8  F109         	movff	?___ftmul,?_fround
  7174   002D98  C0B9  F10A         	movff	?___ftmul+1,?_fround+1
  7175   002D9C  C0BA  F10B         	movff	?___ftmul+2,?_fround+2
  7176   002DA0  0012               	return	
  7177   002DA2                     l8766:
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7181   002DA2  5114               	movf	fround@prec& (0+255),w,b
  7182   002DA4  0D03               	mullw	3
  7183   002DA6  0EE8               	movlw	low __npowers_
  7184   002DA8  24F3               	addwf	243,w,c
  7185   002DAA  6EF6               	movwf	tblptrl,c
  7186   002DAC  0EFE               	movlw	high __npowers_
  7187   002DAE  20F4               	addwfc	244,w,c
  7188   002DB0  6EF7               	movwf	tblptrh,c
  7189   002DB2                     	if	0	;There are less than 3 active tblptr bytes
  7190   002DB2                     	endif
  7191   002DB2  0009               	tblrd		*+
  7192   002DB4  CFF5 F0B8          	movff	tablat,___ftmul@f1
  7193   002DB8  0009               	tblrd		*+
  7194   002DBA  CFF5 F0B9          	movff	tablat,___ftmul@f1+1
  7195   002DBE  000A               	tblrd		*-
  7196   002DC0  CFF5 F0BA          	movff	tablat,___ftmul@f1+2
  7197   002DC4  0E00               	movlw	0
  7198   002DC6  0100               	movlb	0	; () banked
  7199   002DC8  6FBB               	movwf	___ftmul@f2& (0+255),b
  7200   002DCA  0E00               	movlw	0
  7201   002DCC  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  7202   002DCE  0E3F               	movlw	63
  7203   002DD0  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  7204   002DD2  EC8D  F019         	call	___ftmul	;wreg free
  7205   002DD6  C0B8  F109         	movff	?___ftmul,?_fround
  7206   002DDA  C0B9  F10A         	movff	?___ftmul+1,?_fround+1
  7207   002DDE  C0BA  F10B         	movff	?___ftmul+2,?_fround+2
  7208                           
  7209                           ; BSR set to: 0
  7210   002DE2  0012               	return		;funcret
  7211   002DE4                     __end_of_fround:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function ___lbmod *****************
  7215 ;; Defined at:
  7216 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  dividend        1    wreg     unsigned char 
  7219 ;;  divisor         1   42[BANK0 ] unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  dividend        1   43[BANK0 ] unsigned char 
  7222 ;;  rem             1   45[BANK0 ] unsigned char 
  7223 ;;  counter         1   44[BANK0 ] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      unsigned char 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0
  7228 ;; Tracked objects:
  7229 ;;		On entry : 3F/1
  7230 ;;		On exit  : 3F/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7233 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;Total ram usage:        4 bytes
  7238 ;; Hardware stack levels used: 1
  7239 ;; Hardware stack levels required when called: 10
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_fround
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text12
  7248   005018                     __ptext12:
  7249                           	callstack 0
  7250   005018                     ___lbmod:
  7251                           	callstack 16
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;incstack = 0
  7255                           ;___lbmod@dividend stored from wreg
  7256   005018  0100               	movlb	0	; () banked
  7257   00501A  6FAB               	movwf	___lbmod@dividend& (0+255),b
  7258   00501C  0E08               	movlw	8
  7259   00501E  0100               	movlb	0	; () banked
  7260   005020  6FAC               	movwf	___lbmod@counter& (0+255),b
  7261   005022  0E00               	movlw	0
  7262   005024  6FAD               	movwf	___lbmod@rem& (0+255),b
  7263   005026                     l8734:
  7264                           
  7265                           ; BSR set to: 0
  7266   005026  90D8               	bcf	status,0,c
  7267   005028  35AB               	rlcf	___lbmod@dividend& (0+255),w,b
  7268   00502A  35AD               	rlcf	___lbmod@rem& (0+255),w,b
  7269   00502C  6FAD               	movwf	___lbmod@rem& (0+255),b
  7270                           
  7271                           ; BSR set to: 0
  7272   00502E  90D8               	bcf	status,0,c
  7273   005030  37AB               	rlcf	___lbmod@dividend& (0+255),f,b
  7274                           
  7275                           ; BSR set to: 0
  7276   005032  51AA               	movf	___lbmod@divisor& (0+255),w,b
  7277   005034  5DAD               	subwf	___lbmod@rem& (0+255),w,b
  7278   005036  A0D8               	btfss	status,0,c
  7279   005038  D002               	goto	l8742
  7280                           
  7281                           ; BSR set to: 0
  7282   00503A  51AA               	movf	___lbmod@divisor& (0+255),w,b
  7283   00503C  5FAD               	subwf	___lbmod@rem& (0+255),f,b
  7284   00503E                     l8742:
  7285                           
  7286                           ; BSR set to: 0
  7287   00503E  2FAC               	decfsz	___lbmod@counter& (0+255),f,b
  7288   005040  D7F2               	goto	l8734
  7289                           
  7290                           ; BSR set to: 0
  7291   005042  51AD               	movf	___lbmod@rem& (0+255),w,b
  7292                           
  7293                           ; BSR set to: 0
  7294   005044  0012               	return		;funcret
  7295   005046                     __end_of___lbmod:
  7296                           	callstack 0
  7297                           
  7298 ;; *************** function ___lbdiv *****************
  7299 ;; Defined at:
  7300 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  dividend        1    wreg     unsigned char 
  7303 ;;  divisor         1   46[BANK0 ] unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  dividend        1   47[BANK0 ] unsigned char 
  7306 ;;  quotient        1   49[BANK0 ] unsigned char 
  7307 ;;  counter         1   48[BANK0 ] unsigned char 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      unsigned char 
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 3E/0
  7314 ;;		On exit  : 3F/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:        4 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 10
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_fround
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text13
  7332   004EFE                     __ptext13:
  7333                           	callstack 0
  7334   004EFE                     ___lbdiv:
  7335                           	callstack 16
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;incstack = 0
  7339                           ;___lbdiv@dividend stored from wreg
  7340   004EFE  0100               	movlb	0	; () banked
  7341   004F00  6FAF               	movwf	___lbdiv@dividend& (0+255),b
  7342   004F02  0E00               	movlw	0
  7343   004F04  0100               	movlb	0	; () banked
  7344   004F06  6FB1               	movwf	___lbdiv@quotient& (0+255),b
  7345                           
  7346                           ; BSR set to: 0
  7347   004F08  51AE               	movf	___lbdiv@divisor& (0+255),w,b
  7348   004F0A  B4D8               	btfsc	status,2,c
  7349   004F0C  D015               	goto	l8728
  7350                           
  7351                           ; BSR set to: 0
  7352   004F0E  0E01               	movlw	1
  7353   004F10  6FB0               	movwf	___lbdiv@counter& (0+255),b
  7354   004F12  D003               	goto	l8716
  7355   004F14                     l8712:
  7356                           
  7357                           ; BSR set to: 0
  7358   004F14  90D8               	bcf	status,0,c
  7359   004F16  37AE               	rlcf	___lbdiv@divisor& (0+255),f,b
  7360                           
  7361                           ; BSR set to: 0
  7362   004F18  2BB0               	incf	___lbdiv@counter& (0+255),f,b
  7363   004F1A                     l8716:
  7364                           
  7365                           ; BSR set to: 0
  7366   004F1A  AFAE               	btfss	___lbdiv@divisor& (0+255),7,b
  7367   004F1C  D7FB               	goto	l8712
  7368   004F1E                     u10890:
  7369                           
  7370                           ; BSR set to: 0
  7371   004F1E  90D8               	bcf	status,0,c
  7372   004F20  37B1               	rlcf	___lbdiv@quotient& (0+255),f,b
  7373   004F22  51AE               	movf	___lbdiv@divisor& (0+255),w,b
  7374   004F24  5DAF               	subwf	___lbdiv@dividend& (0+255),w,b
  7375   004F26  A0D8               	btfss	status,0,c
  7376   004F28  D003               	goto	l8724
  7377                           
  7378                           ; BSR set to: 0
  7379   004F2A  51AE               	movf	___lbdiv@divisor& (0+255),w,b
  7380   004F2C  5FAF               	subwf	___lbdiv@dividend& (0+255),f,b
  7381                           
  7382                           ; BSR set to: 0
  7383   004F2E  81B1               	bsf	___lbdiv@quotient& (0+255),0,b
  7384   004F30                     l8724:
  7385                           
  7386                           ; BSR set to: 0
  7387   004F30  90D8               	bcf	status,0,c
  7388   004F32  33AE               	rrcf	___lbdiv@divisor& (0+255),f,b
  7389                           
  7390                           ; BSR set to: 0
  7391   004F34  2FB0               	decfsz	___lbdiv@counter& (0+255),f,b
  7392   004F36  D7F3               	goto	u10890
  7393   004F38                     l8728:
  7394                           
  7395                           ; BSR set to: 0
  7396   004F38  51B1               	movf	___lbdiv@quotient& (0+255),w,b
  7397                           
  7398                           ; BSR set to: 0
  7399   004F3A  0012               	return		;funcret
  7400   004F3C                     __end_of___lbdiv:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___ftmul *****************
  7404 ;; Defined at:
  7405 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  f1              3   56[BANK0 ] float 
  7408 ;;  f2              3   59[BANK0 ] float 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  f3_as_produc    3    4[BANK1 ] unsigned um
  7411 ;;  sign            1    8[BANK1 ] unsigned char 
  7412 ;;  cntr            1    7[BANK1 ] unsigned char 
  7413 ;;  exp             1    3[BANK1 ] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  3   56[BANK0 ] float 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 3E/0
  7420 ;;		On exit  : 3F/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7423 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;Total ram usage:       15 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; Hardware stack levels required when called: 11
  7430 ;; This function calls:
  7431 ;;		___ftpack
  7432 ;; This function is called by:
  7433 ;;		_main
  7434 ;;		_fround
  7435 ;;		_scale
  7436 ;;		_sprintf
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text14
  7441   00331A                     __ptext14:
  7442                           	callstack 0
  7443   00331A                     ___ftmul:
  7444                           	callstack 15
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;incstack = 0
  7448   00331A  C0BA  F100         	movff	___ftmul@f1+2,??___ftmul
  7449   00331E  0101               	movlb	1	; () banked
  7450   003320  6B01               	clrf	(??___ftmul+1)& (0+255),b
  7451   003322  6B02               	clrf	(??___ftmul+2)& (0+255),b
  7452   003324  0100               	movlb	0	; () banked
  7453   003326  35B9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7454   003328  0101               	movlb	1	; () banked
  7455   00332A  3700               	rlcf	??___ftmul& (0+255),f,b
  7456   00332C  E301               	bnc	u10701
  7457   00332E  8101               	bsf	(??___ftmul+1)& (0+255),0,b
  7458   003330                     u10701:
  7459   003330  5100               	movf	??___ftmul& (0+255),w,b
  7460   003332  6F03               	movwf	___ftmul@exp& (0+255),b
  7461   003334  5103               	movf	___ftmul@exp& (0+255),w,b
  7462   003336  A4D8               	btfss	status,2,c
  7463   003338  D008               	goto	l8584
  7464                           
  7465                           ; BSR set to: 1
  7466   00333A  0E00               	movlw	0
  7467   00333C  0100               	movlb	0	; () banked
  7468   00333E  6FB8               	movwf	?___ftmul& (0+255),b
  7469   003340  0E00               	movlw	0
  7470   003342  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  7471   003344  0E00               	movlw	0
  7472   003346  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  7473   003348  0012               	return	
  7474   00334A                     l8584:
  7475                           
  7476                           ; BSR set to: 1
  7477   00334A  C0BD  F100         	movff	___ftmul@f2+2,??___ftmul
  7478   00334E  6B01               	clrf	(??___ftmul+1)& (0+255),b
  7479   003350  6B02               	clrf	(??___ftmul+2)& (0+255),b
  7480   003352  0100               	movlb	0	; () banked
  7481   003354  35BC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7482   003356  0101               	movlb	1	; () banked
  7483   003358  3700               	rlcf	??___ftmul& (0+255),f,b
  7484   00335A  E301               	bnc	u10721
  7485   00335C  8101               	bsf	(??___ftmul+1)& (0+255),0,b
  7486   00335E                     u10721:
  7487   00335E  5100               	movf	??___ftmul& (0+255),w,b
  7488   003360  6F08               	movwf	___ftmul@sign& (0+255),b
  7489   003362  5108               	movf	___ftmul@sign& (0+255),w,b
  7490   003364  A4D8               	btfss	status,2,c
  7491   003366  D008               	goto	l8590
  7492                           
  7493                           ; BSR set to: 1
  7494   003368  0E00               	movlw	0
  7495   00336A  0100               	movlb	0	; () banked
  7496   00336C  6FB8               	movwf	?___ftmul& (0+255),b
  7497   00336E  0E00               	movlw	0
  7498   003370  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  7499   003372  0E00               	movlw	0
  7500   003374  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  7501   003376  0012               	return	
  7502   003378                     l8590:
  7503                           
  7504                           ; BSR set to: 1
  7505   003378  5108               	movf	___ftmul@sign& (0+255),w,b
  7506   00337A  0F7B               	addlw	123
  7507   00337C  2703               	addwf	___ftmul@exp& (0+255),f,b
  7508                           
  7509                           ; BSR set to: 1
  7510   00337E  C0BA  F108         	movff	___ftmul@f1+2,___ftmul@sign
  7511   003382  0100               	movlb	0	; () banked
  7512   003384  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  7513   003386  0101               	movlb	1	; () banked
  7514   003388  1B08               	xorwf	___ftmul@sign& (0+255),f,b
  7515   00338A  0E80               	movlw	128
  7516   00338C  1708               	andwf	___ftmul@sign& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 1
  7519   00338E  0100               	movlb	0	; () banked
  7520   003390  8FB9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7521                           
  7522                           ; BSR set to: 0
  7523   003392  8FBC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7524                           
  7525                           ; BSR set to: 0
  7526   003394  0EFF               	movlw	255
  7527   003396  17BB               	andwf	___ftmul@f2& (0+255),f,b
  7528   003398  0EFF               	movlw	255
  7529   00339A  17BC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7530   00339C  0E00               	movlw	0
  7531   00339E  17BD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7532                           
  7533                           ; BSR set to: 0
  7534   0033A0  0E00               	movlw	0
  7535   0033A2  0101               	movlb	1	; () banked
  7536   0033A4  6F04               	movwf	___ftmul@f3_as_product& (0+255),b
  7537   0033A6  0E00               	movlw	0
  7538   0033A8  6F05               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7539   0033AA  0E00               	movlw	0
  7540   0033AC  6F06               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7541                           
  7542                           ; BSR set to: 1
  7543   0033AE  0E07               	movlw	7
  7544   0033B0  6F07               	movwf	___ftmul@cntr& (0+255),b
  7545   0033B2                     l8604:
  7546                           
  7547                           ; BSR set to: 1
  7548   0033B2  0100               	movlb	0	; () banked
  7549   0033B4  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  7550   0033B6  D00B               	goto	l8608
  7551                           
  7552                           ; BSR set to: 0
  7553   0033B8  51BB               	movf	___ftmul@f2& (0+255),w,b
  7554   0033BA  0101               	movlb	1	; () banked
  7555   0033BC  2704               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7556   0033BE  0100               	movlb	0	; () banked
  7557   0033C0  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  7558   0033C2  0101               	movlb	1	; () banked
  7559   0033C4  2305               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7560   0033C6  0100               	movlb	0	; () banked
  7561   0033C8  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  7562   0033CA  0101               	movlb	1	; () banked
  7563   0033CC  2306               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7564   0033CE                     l8608:
  7565   0033CE  0100               	movlb	0	; () banked
  7566   0033D0  90D8               	bcf	status,0,c
  7567   0033D2  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7568   0033D4  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7569   0033D6  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  7570   0033D8  90D8               	bcf	status,0,c
  7571   0033DA  37BB               	rlcf	___ftmul@f2& (0+255),f,b
  7572   0033DC  37BC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7573   0033DE  37BD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7574                           
  7575                           ; BSR set to: 0
  7576   0033E0  0101               	movlb	1	; () banked
  7577   0033E2  2F07               	decfsz	___ftmul@cntr& (0+255),f,b
  7578   0033E4  D7E6               	goto	l8604
  7579                           
  7580                           ; BSR set to: 1
  7581   0033E6  0E09               	movlw	9
  7582   0033E8  6F07               	movwf	___ftmul@cntr& (0+255),b
  7583   0033EA                     l8614:
  7584                           
  7585                           ; BSR set to: 1
  7586   0033EA  0100               	movlb	0	; () banked
  7587   0033EC  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  7588   0033EE  D00B               	goto	l8618
  7589                           
  7590                           ; BSR set to: 0
  7591   0033F0  51BB               	movf	___ftmul@f2& (0+255),w,b
  7592   0033F2  0101               	movlb	1	; () banked
  7593   0033F4  2704               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7594   0033F6  0100               	movlb	0	; () banked
  7595   0033F8  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  7596   0033FA  0101               	movlb	1	; () banked
  7597   0033FC  2305               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7598   0033FE  0100               	movlb	0	; () banked
  7599   003400  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  7600   003402  0101               	movlb	1	; () banked
  7601   003404  2306               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7602   003406                     l8618:
  7603   003406  0100               	movlb	0	; () banked
  7604   003408  90D8               	bcf	status,0,c
  7605   00340A  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7606   00340C  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7607   00340E  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  7608   003410  0101               	movlb	1	; () banked
  7609   003412  90D8               	bcf	status,0,c
  7610   003414  3306               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7611   003416  3305               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7612   003418  3304               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7613                           
  7614                           ; BSR set to: 1
  7615   00341A  2F07               	decfsz	___ftmul@cntr& (0+255),f,b
  7616   00341C  D7E6               	goto	l8614
  7617                           
  7618                           ; BSR set to: 1
  7619   00341E  C104  F0AA         	movff	___ftmul@f3_as_product,___ftpack@arg
  7620   003422  C105  F0AB         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7621   003426  C106  F0AC         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7622   00342A  C103  F0AD         	movff	___ftmul@exp,___ftpack@exp
  7623   00342E  C108  F0AE         	movff	___ftmul@sign,___ftpack@sign
  7624   003432  EC4B  F020         	call	___ftpack	;wreg free
  7625   003436  C0AA  F0B8         	movff	?___ftpack,?___ftmul
  7626   00343A  C0AB  F0B9         	movff	?___ftpack+1,?___ftmul+1
  7627   00343E  C0AC  F0BA         	movff	?___ftpack+2,?___ftmul+2
  7628                           
  7629                           ; BSR set to: 0
  7630   003442  0012               	return		;funcret
  7631   003444                     __end_of___ftmul:
  7632                           	callstack 0
  7633                           
  7634 ;; *************** function __tdiv_to_l_ *****************
  7635 ;; Defined at:
  7636 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  f1              3   42[BANK0 ] float 
  7639 ;;  f2              3   45[BANK0 ] float 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  quot            4   51[BANK0 ] unsigned long 
  7642 ;;  exp1            1   56[BANK0 ] unsigned char 
  7643 ;;  cntr            1   55[BANK0 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4   42[BANK0 ] unsigned long 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 3E/1
  7650 ;;		On exit  : 3F/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:       15 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 10
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_sprintf
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text15
  7668   00367C                     __ptext15:
  7669                           	callstack 0
  7670   00367C                     __tdiv_to_l_:
  7671                           	callstack 17
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;incstack = 0
  7675   00367C  C0AC  F0B0         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7676   003680  0100               	movlb	0	; () banked
  7677   003682  6BB1               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7678   003684  6BB2               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7679   003686  35AB               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7680   003688  37B0               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7681   00368A  E301               	bnc	u6851
  7682   00368C  81B1               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7683   00368E                     u6851:
  7684   00368E  51B0               	movf	??__tdiv_to_l_& (0+255),w,b
  7685   003690  6FB8               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7686   003692  51B8               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7687   003694  A4D8               	btfss	status,2,c
  7688   003696  D009               	goto	l6064
  7689   003698                     u6860:
  7690                           
  7691                           ; BSR set to: 0
  7692   003698  0E00               	movlw	0
  7693   00369A  6FAA               	movwf	?__tdiv_to_l_& (0+255),b
  7694   00369C  0E00               	movlw	0
  7695   00369E  6FAB               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7696   0036A0  0E00               	movlw	0
  7697   0036A2  6FAC               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7698   0036A4  0E00               	movlw	0
  7699   0036A6  6FAD               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7700   0036A8  0012               	return	
  7701   0036AA                     l6064:
  7702                           
  7703                           ; BSR set to: 0
  7704   0036AA  C0AF  F0B0         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7705   0036AE  6BB1               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7706   0036B0  6BB2               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7707   0036B2  35AE               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7708   0036B4  37B0               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7709   0036B6  E301               	bnc	u6871
  7710   0036B8  81B1               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7711   0036BA                     u6871:
  7712   0036BA  51B0               	movf	??__tdiv_to_l_& (0+255),w,b
  7713   0036BC  6FB7               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7714   0036BE  51B7               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7715   0036C0  B4D8               	btfsc	status,2,c
  7716   0036C2  D7EA               	goto	u6860
  7717                           
  7718                           ; BSR set to: 0
  7719   0036C4  8FAB               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7720                           
  7721                           ; BSR set to: 0
  7722   0036C6  0EFF               	movlw	255
  7723   0036C8  17AA               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7724   0036CA  0EFF               	movlw	255
  7725   0036CC  17AB               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7726   0036CE  0E00               	movlw	0
  7727   0036D0  17AC               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7728   0036D2  8FAE               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7729                           
  7730                           ; BSR set to: 0
  7731   0036D4  0EFF               	movlw	255
  7732   0036D6  17AD               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7733   0036D8  0EFF               	movlw	255
  7734   0036DA  17AE               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7735   0036DC  0E00               	movlw	0
  7736   0036DE  17AF               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7737                           
  7738                           ; BSR set to: 0
  7739   0036E0  0E00               	movlw	0
  7740   0036E2  6FB3               	movwf	__tdiv_to_l_@quot& (0+255),b
  7741   0036E4  0E00               	movlw	0
  7742   0036E6  6FB4               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7743   0036E8  0E00               	movlw	0
  7744   0036EA  6FB5               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7745   0036EC  0E00               	movlw	0
  7746   0036EE  6FB6               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7747                           
  7748                           ; BSR set to: 0
  7749   0036F0  0E7F               	movlw	127
  7750   0036F2  5FB8               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7751                           
  7752                           ; BSR set to: 0
  7753   0036F4  51B7               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7754   0036F6  0F98               	addlw	152
  7755   0036F8  5FB8               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7756                           
  7757                           ; BSR set to: 0
  7758   0036FA  0E18               	movlw	24
  7759   0036FC  6FB7               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7760   0036FE                     l1009:
  7761                           
  7762                           ; BSR set to: 0
  7763   0036FE  90D8               	bcf	status,0,c
  7764   003700  37B3               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7765   003702  37B4               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7766   003704  37B5               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7767   003706  37B6               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7768                           
  7769                           ; BSR set to: 0
  7770   003708  51AD               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7771   00370A  5DAA               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7772   00370C  51AE               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7773   00370E  59AB               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7774   003710  51AF               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7775   003712  59AC               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7776   003714  A0D8               	btfss	status,0,c
  7777   003716  D007               	goto	l1010
  7778                           
  7779                           ; BSR set to: 0
  7780   003718  51AD               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7781   00371A  5FAA               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7782   00371C  51AE               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7783   00371E  5BAB               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7784   003720  51AF               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7785   003722  5BAC               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788   003724  81B3               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7789   003726                     l1010:
  7790                           
  7791                           ; BSR set to: 0
  7792   003726  90D8               	bcf	status,0,c
  7793   003728  37AA               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7794   00372A  37AB               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7795   00372C  37AC               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7796                           
  7797                           ; BSR set to: 0
  7798   00372E  2FB7               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7799   003730  D7E6               	goto	l1009
  7800                           
  7801                           ; BSR set to: 0
  7802   003732  AFB8               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7803   003734  D00D               	goto	l6104
  7804                           
  7805                           ; BSR set to: 0
  7806   003736  51B8               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7807   003738  0A80               	xorlw	128
  7808   00373A  0F97               	addlw	151
  7809   00373C  A0D8               	btfss	status,0,c
  7810   00373E  D7AC               	goto	u6860
  7811   003740                     l6100:
  7812                           
  7813                           ; BSR set to: 0
  7814   003740  90D8               	bcf	status,0,c
  7815   003742  33B6               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7816   003744  33B5               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7817   003746  33B4               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7818   003748  33B3               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7819                           
  7820                           ; BSR set to: 0
  7821   00374A  3FB8               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7822   00374C  D7F9               	goto	l6100
  7823   00374E  D00D               	goto	u6930
  7824   003750                     l6104:
  7825                           
  7826                           ; BSR set to: 0
  7827   003750  0E17               	movlw	23
  7828   003752  65B8               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7829   003754  D007               	goto	l6112
  7830   003756  D7A0               	goto	u6860
  7831   003758                     l6110:
  7832                           
  7833                           ; BSR set to: 0
  7834   003758  90D8               	bcf	status,0,c
  7835   00375A  37B3               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7836   00375C  37B4               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7837   00375E  37B5               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7838   003760  37B6               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7839   003762  07B8               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7840   003764                     l6112:
  7841                           
  7842                           ; BSR set to: 0
  7843   003764  51B8               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7844   003766  A4D8               	btfss	status,2,c
  7845   003768  D7F7               	goto	l6110
  7846   00376A                     u6930:
  7847                           
  7848                           ; BSR set to: 0
  7849   00376A  C0B3  F0AA         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7850   00376E  C0B4  F0AB         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7851   003772  C0B5  F0AC         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7852   003776  C0B6  F0AD         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7853                           
  7854                           ; BSR set to: 0
  7855   00377A  0012               	return		;funcret
  7856   00377C                     __end_of__tdiv_to_l_:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function __div_to_l_ *****************
  7860 ;; Defined at:
  7861 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  f1              3   42[BANK0 ] unsigned long 
  7864 ;;  f2              3   45[BANK0 ] unsigned long 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  quot            4   48[BANK0 ] unsigned long 
  7867 ;;  exp1            1   53[BANK0 ] unsigned char 
  7868 ;;  cntr            1   52[BANK0 ] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  4   42[BANK0 ] unsigned long 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 3F/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7878 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;Total ram usage:       12 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 10
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_sprintf
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text16
  7893   00387A                     __ptext16:
  7894                           	callstack 0
  7895   00387A                     __div_to_l_:
  7896                           	callstack 17
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;incstack = 0
  7900   00387A  0100               	movlb	0	; () banked
  7901   00387C  35AC               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7902   00387E  35AD               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7903   003880  6FB5               	movwf	__div_to_l_@exp1& (0+255),b
  7904   003882  51B5               	movf	__div_to_l_@exp1& (0+255),w,b
  7905   003884  A4D8               	btfss	status,2,c
  7906   003886  D009               	goto	l6120
  7907   003888                     u6940:
  7908                           
  7909                           ; BSR set to: 0
  7910   003888  0E00               	movlw	0
  7911   00388A  6FAA               	movwf	?__div_to_l_& (0+255),b
  7912   00388C  0E00               	movlw	0
  7913   00388E  6FAB               	movwf	(?__div_to_l_+1)& (0+255),b
  7914   003890  0E00               	movlw	0
  7915   003892  6FAC               	movwf	(?__div_to_l_+2)& (0+255),b
  7916   003894  0E00               	movlw	0
  7917   003896  6FAD               	movwf	(?__div_to_l_+3)& (0+255),b
  7918   003898  0012               	return	
  7919   00389A                     l6120:
  7920                           
  7921                           ; BSR set to: 0
  7922   00389A  35AF               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7923   00389C  35B0               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7924   00389E  6FB4               	movwf	__div_to_l_@cntr& (0+255),b
  7925   0038A0  51B4               	movf	__div_to_l_@cntr& (0+255),w,b
  7926   0038A2  B4D8               	btfsc	status,2,c
  7927   0038A4  D7F1               	goto	u6940
  7928                           
  7929                           ; BSR set to: 0
  7930   0038A6  8FAC               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7931                           
  7932                           ; BSR set to: 0
  7933   0038A8  0EFF               	movlw	255
  7934   0038AA  17AA               	andwf	__div_to_l_@f1& (0+255),f,b
  7935   0038AC  0EFF               	movlw	255
  7936   0038AE  17AB               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7937   0038B0  0EFF               	movlw	255
  7938   0038B2  17AC               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7939   0038B4  0E00               	movlw	0
  7940   0038B6  17AD               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7941                           
  7942                           ; BSR set to: 0
  7943   0038B8  8FAF               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7944   0038BA  0EFF               	movlw	255
  7945   0038BC  17AD               	andwf	__div_to_l_@f2& (0+255),f,b
  7946   0038BE  0EFF               	movlw	255
  7947   0038C0  17AE               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7948   0038C2  0EFF               	movlw	255
  7949   0038C4  17AF               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7950   0038C6  0E00               	movlw	0
  7951   0038C8  17B0               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7952                           
  7953                           ; BSR set to: 0
  7954   0038CA  0E00               	movlw	0
  7955   0038CC  6FB0               	movwf	__div_to_l_@quot& (0+255),b
  7956   0038CE  0E00               	movlw	0
  7957   0038D0  6FB1               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7958   0038D2  0E00               	movlw	0
  7959   0038D4  6FB2               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7960   0038D6  0E00               	movlw	0
  7961   0038D8  6FB3               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7962                           
  7963                           ; BSR set to: 0
  7964   0038DA  0E7F               	movlw	127
  7965   0038DC  5FB5               	subwf	__div_to_l_@exp1& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 0
  7968   0038DE  51B4               	movf	__div_to_l_@cntr& (0+255),w,b
  7969   0038E0  0FA0               	addlw	160
  7970   0038E2  5FB5               	subwf	__div_to_l_@exp1& (0+255),f,b
  7971                           
  7972                           ; BSR set to: 0
  7973   0038E4  0E20               	movlw	32
  7974   0038E6  6FB4               	movwf	__div_to_l_@cntr& (0+255),b
  7975   0038E8                     l6140:
  7976                           
  7977                           ; BSR set to: 0
  7978   0038E8  90D8               	bcf	status,0,c
  7979   0038EA  37B0               	rlcf	__div_to_l_@quot& (0+255),f,b
  7980   0038EC  37B1               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7981   0038EE  37B2               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7982   0038F0  37B3               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7983                           
  7984                           ; BSR set to: 0
  7985   0038F2  51AD               	movf	__div_to_l_@f2& (0+255),w,b
  7986   0038F4  5DAA               	subwf	__div_to_l_@f1& (0+255),w,b
  7987   0038F6  51AE               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7988   0038F8  59AB               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7989   0038FA  51AF               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7990   0038FC  59AC               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7991   0038FE  51B0               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7992   003900  59AD               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7993   003902  A0D8               	btfss	status,0,c
  7994   003904  D009               	goto	l6148
  7995                           
  7996                           ; BSR set to: 0
  7997   003906  51AD               	movf	__div_to_l_@f2& (0+255),w,b
  7998   003908  5FAA               	subwf	__div_to_l_@f1& (0+255),f,b
  7999   00390A  51AE               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  8000   00390C  5BAB               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  8001   00390E  51AF               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  8002   003910  5BAC               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  8003   003912  51B0               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  8004   003914  5BAD               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  8005                           
  8006                           ; BSR set to: 0
  8007   003916  81B0               	bsf	__div_to_l_@quot& (0+255),0,b
  8008   003918                     l6148:
  8009                           
  8010                           ; BSR set to: 0
  8011   003918  90D8               	bcf	status,0,c
  8012   00391A  37AA               	rlcf	__div_to_l_@f1& (0+255),f,b
  8013   00391C  37AB               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  8014   00391E  37AC               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  8015   003920  37AD               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  8016                           
  8017                           ; BSR set to: 0
  8018   003922  2FB4               	decfsz	__div_to_l_@cntr& (0+255),f,b
  8019   003924  D7E1               	goto	l6140
  8020                           
  8021                           ; BSR set to: 0
  8022   003926  AFB5               	btfss	__div_to_l_@exp1& (0+255),7,b
  8023   003928  D00D               	goto	l6164
  8024                           
  8025                           ; BSR set to: 0
  8026   00392A  51B5               	movf	__div_to_l_@exp1& (0+255),w,b
  8027   00392C  0A80               	xorlw	128
  8028   00392E  0F9F               	addlw	159
  8029   003930  A0D8               	btfss	status,0,c
  8030   003932  D7AA               	goto	u6940
  8031   003934                     l6160:
  8032                           
  8033                           ; BSR set to: 0
  8034   003934  90D8               	bcf	status,0,c
  8035   003936  33B3               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  8036   003938  33B2               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  8037   00393A  33B1               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  8038   00393C  33B0               	rrcf	__div_to_l_@quot& (0+255),f,b
  8039                           
  8040                           ; BSR set to: 0
  8041   00393E  3FB5               	incfsz	__div_to_l_@exp1& (0+255),f,b
  8042   003940  D7F9               	goto	l6160
  8043   003942  D00D               	goto	u7000
  8044   003944                     l6164:
  8045                           
  8046                           ; BSR set to: 0
  8047   003944  0E1F               	movlw	31
  8048   003946  65B5               	cpfsgt	__div_to_l_@exp1& (0+255),b
  8049   003948  D007               	goto	l6172
  8050   00394A  D79E               	goto	u6940
  8051   00394C                     l6170:
  8052                           
  8053                           ; BSR set to: 0
  8054   00394C  90D8               	bcf	status,0,c
  8055   00394E  37B0               	rlcf	__div_to_l_@quot& (0+255),f,b
  8056   003950  37B1               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8057   003952  37B2               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  8058   003954  37B3               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  8059   003956  07B5               	decf	__div_to_l_@exp1& (0+255),f,b
  8060   003958                     l6172:
  8061                           
  8062                           ; BSR set to: 0
  8063   003958  51B5               	movf	__div_to_l_@exp1& (0+255),w,b
  8064   00395A  A4D8               	btfss	status,2,c
  8065   00395C  D7F7               	goto	l6170
  8066   00395E                     u7000:
  8067                           
  8068                           ; BSR set to: 0
  8069   00395E  C0B0  F0AA         	movff	__div_to_l_@quot,?__div_to_l_
  8070   003962  C0B1  F0AB         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8071   003966  C0B2  F0AC         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8072   00396A  C0B3  F0AD         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8073                           
  8074                           ; BSR set to: 0
  8075   00396E  0012               	return		;funcret
  8076   003970                     __end_of__div_to_l_:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function ___lltoft *****************
  8080 ;; Defined at:
  8081 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  c               4   50[BANK0 ] unsigned long 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  exp             1   58[BANK0 ] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  3   50[BANK0 ] float 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 3F/1
  8092 ;;		On exit  : 3F/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;Total ram usage:        9 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 11
  8102 ;; This function calls:
  8103 ;;		___ftpack
  8104 ;; This function is called by:
  8105 ;;		_sprintf
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text17
  8110   004A70                     __ptext17:
  8111                           	callstack 0
  8112   004A70                     ___lltoft:
  8113                           	callstack 16
  8114                           
  8115                           ; BSR set to: 1
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;incstack = 0
  8119   004A70  0E8E               	movlw	142
  8120   004A72  0100               	movlb	0	; () banked
  8121   004A74  6FBA               	movwf	___lltoft@exp& (0+255),b
  8122   004A76  D006               	goto	l8882
  8123   004A78                     l8880:
  8124                           
  8125                           ; BSR set to: 0
  8126   004A78  90D8               	bcf	status,0,c
  8127   004A7A  33B5               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8128   004A7C  33B4               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8129   004A7E  33B3               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8130   004A80  33B2               	rrcf	___lltoft@c& (0+255),f,b
  8131   004A82  2BBA               	incf	___lltoft@exp& (0+255),f,b
  8132   004A84                     l8882:
  8133                           
  8134                           ; BSR set to: 0
  8135   004A84  0E00               	movlw	0
  8136   004A86  15B2               	andwf	___lltoft@c& (0+255),w,b
  8137   004A88  6FB6               	movwf	??___lltoft& (0+255),b
  8138   004A8A  0E00               	movlw	0
  8139   004A8C  15B3               	andwf	(___lltoft@c+1)& (0+255),w,b
  8140   004A8E  6FB7               	movwf	(??___lltoft+1)& (0+255),b
  8141   004A90  0E00               	movlw	0
  8142   004A92  15B4               	andwf	(___lltoft@c+2)& (0+255),w,b
  8143   004A94  6FB8               	movwf	(??___lltoft+2)& (0+255),b
  8144   004A96  0EFF               	movlw	255
  8145   004A98  15B5               	andwf	(___lltoft@c+3)& (0+255),w,b
  8146   004A9A  6FB9               	movwf	(??___lltoft+3)& (0+255),b
  8147   004A9C  51B6               	movf	??___lltoft& (0+255),w,b
  8148   004A9E  11B7               	iorwf	(??___lltoft+1)& (0+255),w,b
  8149   004AA0  11B8               	iorwf	(??___lltoft+2)& (0+255),w,b
  8150   004AA2  11B9               	iorwf	(??___lltoft+3)& (0+255),w,b
  8151   004AA4  A4D8               	btfss	status,2,c
  8152   004AA6  D7E8               	goto	l8880
  8153                           
  8154                           ; BSR set to: 0
  8155   004AA8  C0B2  F0AA         	movff	___lltoft@c,___ftpack@arg
  8156   004AAC  C0B3  F0AB         	movff	___lltoft@c+1,___ftpack@arg+1
  8157   004AB0  C0B4  F0AC         	movff	___lltoft@c+2,___ftpack@arg+2
  8158   004AB4  C0BA  F0AD         	movff	___lltoft@exp,___ftpack@exp
  8159   004AB8  0E00               	movlw	0
  8160   004ABA  6FAE               	movwf	___ftpack@sign& (0+255),b
  8161   004ABC  EC4B  F020         	call	___ftpack	;wreg free
  8162   004AC0  C0AA  F0B2         	movff	?___ftpack,?___lltoft
  8163   004AC4  C0AB  F0B3         	movff	?___ftpack+1,?___lltoft+1
  8164   004AC8  C0AC  F0B4         	movff	?___ftpack+2,?___lltoft+2
  8165                           
  8166                           ; BSR set to: 0
  8167   004ACC  0012               	return		;funcret
  8168   004ACE                     __end_of___lltoft:
  8169                           	callstack 0
  8170                           
  8171 ;; *************** function ___llmod *****************
  8172 ;; Defined at:
  8173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  dividend        4   55[BANK0 ] unsigned long 
  8176 ;;  divisor         4   59[BANK0 ] unsigned long 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  counter         1    0[BANK1 ] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  4   55[BANK0 ] unsigned long 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 3E/0
  8185 ;;		On exit  : 3E/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8188 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Totals:         0       8       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;Total ram usage:        9 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 10
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_sprintf
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text18
  8203   00464E                     __ptext18:
  8204                           	callstack 0
  8205   00464E                     ___llmod:
  8206                           	callstack 17
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;incstack = 0
  8210   00464E  0100               	movlb	0	; () banked
  8211   004650  51BB               	movf	___llmod@divisor& (0+255),w,b
  8212   004652  11BC               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8213   004654  11BD               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8214   004656  11BE               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8215   004658  B4D8               	btfsc	status,2,c
  8216   00465A  D029               	goto	l1086
  8217                           
  8218                           ; BSR set to: 0
  8219   00465C  0E01               	movlw	1
  8220   00465E  0101               	movlb	1	; () banked
  8221   004660  6F00               	movwf	___llmod@counter& (0+255),b
  8222   004662  D007               	goto	l8868
  8223   004664                     l8866:
  8224                           
  8225                           ; BSR set to: 0
  8226   004664  90D8               	bcf	status,0,c
  8227   004666  37BB               	rlcf	___llmod@divisor& (0+255),f,b
  8228   004668  37BC               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8229   00466A  37BD               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8230   00466C  37BE               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8231   00466E  0101               	movlb	1	; () banked
  8232   004670  2B00               	incf	___llmod@counter& (0+255),f,b
  8233   004672                     l8868:
  8234                           
  8235                           ; BSR set to: 1
  8236   004672  0100               	movlb	0	; () banked
  8237   004674  AFBE               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8238   004676  D7F6               	goto	l8866
  8239   004678                     u11090:
  8240   004678  0100               	movlb	0	; () banked
  8241   00467A  51BB               	movf	___llmod@divisor& (0+255),w,b
  8242   00467C  5DB7               	subwf	___llmod@dividend& (0+255),w,b
  8243   00467E  51BC               	movf	(___llmod@divisor+1)& (0+255),w,b
  8244   004680  59B8               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8245   004682  51BD               	movf	(___llmod@divisor+2)& (0+255),w,b
  8246   004684  59B9               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8247   004686  51BE               	movf	(___llmod@divisor+3)& (0+255),w,b
  8248   004688  59BA               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8249   00468A  A0D8               	btfss	status,0,c
  8250   00468C  D008               	goto	l8874
  8251                           
  8252                           ; BSR set to: 0
  8253   00468E  51BB               	movf	___llmod@divisor& (0+255),w,b
  8254   004690  5FB7               	subwf	___llmod@dividend& (0+255),f,b
  8255   004692  51BC               	movf	(___llmod@divisor+1)& (0+255),w,b
  8256   004694  5BB8               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8257   004696  51BD               	movf	(___llmod@divisor+2)& (0+255),w,b
  8258   004698  5BB9               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8259   00469A  51BE               	movf	(___llmod@divisor+3)& (0+255),w,b
  8260   00469C  5BBA               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8261   00469E                     l8874:
  8262                           
  8263                           ; BSR set to: 0
  8264   00469E  90D8               	bcf	status,0,c
  8265   0046A0  33BE               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8266   0046A2  33BD               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8267   0046A4  33BC               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8268   0046A6  33BB               	rrcf	___llmod@divisor& (0+255),f,b
  8269                           
  8270                           ; BSR set to: 0
  8271   0046A8  0101               	movlb	1	; () banked
  8272   0046AA  2F00               	decfsz	___llmod@counter& (0+255),f,b
  8273   0046AC  D7E5               	goto	u11090
  8274   0046AE                     l1086:
  8275   0046AE  C0B7  F0B7         	movff	___llmod@dividend,?___llmod
  8276   0046B2  C0B8  F0B8         	movff	___llmod@dividend+1,?___llmod+1
  8277   0046B6  C0B9  F0B9         	movff	___llmod@dividend+2,?___llmod+2
  8278   0046BA  C0BA  F0BA         	movff	___llmod@dividend+3,?___llmod+3
  8279   0046BE  0012               	return		;funcret
  8280   0046C0                     __end_of___llmod:
  8281                           	callstack 0
  8282                           
  8283 ;; *************** function ___lldiv *****************
  8284 ;; Defined at:
  8285 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  dividend        4   42[BANK0 ] unsigned long 
  8288 ;;  divisor         4   46[BANK0 ] unsigned long 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  quotient        4   50[BANK0 ] unsigned long 
  8291 ;;  counter         1   54[BANK0 ] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  4   42[BANK0 ] unsigned long 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 3F/1
  8298 ;;		On exit  : 3F/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8301 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8304 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;Total ram usage:       13 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 10
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_sprintf
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text19
  8316   004278                     __ptext19:
  8317                           	callstack 0
  8318   004278                     ___lldiv:
  8319                           	callstack 17
  8320                           
  8321                           ; BSR set to: 1
  8322                           
  8323                           ;incstack = 0
  8324   004278  0E00               	movlw	0
  8325   00427A  0100               	movlb	0	; () banked
  8326   00427C  6FB2               	movwf	___lldiv@quotient& (0+255),b
  8327   00427E  0E00               	movlw	0
  8328   004280  6FB3               	movwf	(___lldiv@quotient+1)& (0+255),b
  8329   004282  0E00               	movlw	0
  8330   004284  6FB4               	movwf	(___lldiv@quotient+2)& (0+255),b
  8331   004286  0E00               	movlw	0
  8332   004288  6FB5               	movwf	(___lldiv@quotient+3)& (0+255),b
  8333                           
  8334                           ; BSR set to: 0
  8335   00428A  51AE               	movf	___lldiv@divisor& (0+255),w,b
  8336   00428C  11AF               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8337   00428E  11B0               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8338   004290  11B1               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8339   004292  B4D8               	btfsc	status,2,c
  8340   004294  D02A               	goto	l671
  8341                           
  8342                           ; BSR set to: 0
  8343   004296  0E01               	movlw	1
  8344   004298  6FB6               	movwf	___lldiv@counter& (0+255),b
  8345   00429A  D006               	goto	l6188
  8346   00429C                     l6186:
  8347                           
  8348                           ; BSR set to: 0
  8349   00429C  90D8               	bcf	status,0,c
  8350   00429E  37AE               	rlcf	___lldiv@divisor& (0+255),f,b
  8351   0042A0  37AF               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8352   0042A2  37B0               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8353   0042A4  37B1               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8354   0042A6  2BB6               	incf	___lldiv@counter& (0+255),f,b
  8355   0042A8                     l6188:
  8356                           
  8357                           ; BSR set to: 0
  8358   0042A8  AFB1               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8359   0042AA  D7F8               	goto	l6186
  8360   0042AC                     u7020:
  8361                           
  8362                           ; BSR set to: 0
  8363   0042AC  90D8               	bcf	status,0,c
  8364   0042AE  37B2               	rlcf	___lldiv@quotient& (0+255),f,b
  8365   0042B0  37B3               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8366   0042B2  37B4               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8367   0042B4  37B5               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8368                           
  8369                           ; BSR set to: 0
  8370   0042B6  51AE               	movf	___lldiv@divisor& (0+255),w,b
  8371   0042B8  5DAA               	subwf	___lldiv@dividend& (0+255),w,b
  8372   0042BA  51AF               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8373   0042BC  59AB               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8374   0042BE  51B0               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8375   0042C0  59AC               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8376   0042C2  51B1               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8377   0042C4  59AD               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8378   0042C6  A0D8               	btfss	status,0,c
  8379   0042C8  D009               	goto	l6198
  8380                           
  8381                           ; BSR set to: 0
  8382   0042CA  51AE               	movf	___lldiv@divisor& (0+255),w,b
  8383   0042CC  5FAA               	subwf	___lldiv@dividend& (0+255),f,b
  8384   0042CE  51AF               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8385   0042D0  5BAB               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8386   0042D2  51B0               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8387   0042D4  5BAC               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8388   0042D6  51B1               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8389   0042D8  5BAD               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8390                           
  8391                           ; BSR set to: 0
  8392   0042DA  81B2               	bsf	___lldiv@quotient& (0+255),0,b
  8393   0042DC                     l6198:
  8394                           
  8395                           ; BSR set to: 0
  8396   0042DC  90D8               	bcf	status,0,c
  8397   0042DE  33B1               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8398   0042E0  33B0               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8399   0042E2  33AF               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8400   0042E4  33AE               	rrcf	___lldiv@divisor& (0+255),f,b
  8401                           
  8402                           ; BSR set to: 0
  8403   0042E6  2FB6               	decfsz	___lldiv@counter& (0+255),f,b
  8404   0042E8  D7E1               	goto	u7020
  8405   0042EA                     l671:
  8406                           
  8407                           ; BSR set to: 0
  8408   0042EA  C0B2  F0AA         	movff	___lldiv@quotient,?___lldiv
  8409   0042EE  C0B3  F0AB         	movff	___lldiv@quotient+1,?___lldiv+1
  8410   0042F2  C0B4  F0AC         	movff	___lldiv@quotient+2,?___lldiv+2
  8411   0042F6  C0B5  F0AD         	movff	___lldiv@quotient+3,?___lldiv+3
  8412                           
  8413                           ; BSR set to: 0
  8414   0042FA  0012               	return		;funcret
  8415   0042FC                     __end_of___lldiv:
  8416                           	callstack 0
  8417                           
  8418 ;; *************** function ___fttol *****************
  8419 ;; Defined at:
  8420 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  f1              3   16[BANK1 ] float 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  lval            4   26[BANK1 ] unsigned long 
  8425 ;;  exp1            1   30[BANK1 ] unsigned char 
  8426 ;;  sign1           1   25[BANK1 ] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  4   16[BANK1 ] long 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 3E/1
  8433 ;;		On exit  : 3F/1
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8436 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;Total ram usage:       15 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; Hardware stack levels required when called: 10
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		_sprintf
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text20
  8451   003EEE                     __ptext20:
  8452                           	callstack 0
  8453   003EEE                     ___fttol:
  8454                           	callstack 17
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;incstack = 0
  8458   003EEE  C112  F114         	movff	___fttol@f1+2,??___fttol
  8459   003EF2  0101               	movlb	1	; () banked
  8460   003EF4  6B15               	clrf	(??___fttol+1)& (0+255),b
  8461   003EF6  6B16               	clrf	(??___fttol+2)& (0+255),b
  8462   003EF8  3511               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8463   003EFA  3714               	rlcf	??___fttol& (0+255),f,b
  8464   003EFC  E301               	bnc	u11001
  8465   003EFE  8115               	bsf	(??___fttol+1)& (0+255),0,b
  8466   003F00                     u11001:
  8467   003F00  5114               	movf	??___fttol& (0+255),w,b
  8468   003F02  6F1E               	movwf	___fttol@exp1& (0+255),b
  8469   003F04  511E               	movf	___fttol@exp1& (0+255),w,b
  8470   003F06  A4D8               	btfss	status,2,c
  8471   003F08  D009               	goto	l8822
  8472   003F0A                     u11010:
  8473                           
  8474                           ; BSR set to: 1
  8475   003F0A  0E00               	movlw	0
  8476   003F0C  6F10               	movwf	?___fttol& (0+255),b
  8477   003F0E  0E00               	movlw	0
  8478   003F10  6F11               	movwf	(?___fttol+1)& (0+255),b
  8479   003F12  0E00               	movlw	0
  8480   003F14  6F12               	movwf	(?___fttol+2)& (0+255),b
  8481   003F16  0E00               	movlw	0
  8482   003F18  6F13               	movwf	(?___fttol+3)& (0+255),b
  8483   003F1A  0012               	return	
  8484   003F1C                     l8822:
  8485                           
  8486                           ; BSR set to: 1
  8487   003F1C  0E17               	movlw	23
  8488   003F1E  6F14               	movwf	??___fttol& (0+255),b
  8489   003F20  C110  F115         	movff	___fttol@f1,??___fttol+1
  8490   003F24  C111  F116         	movff	___fttol@f1+1,??___fttol+2
  8491   003F28  C112  F117         	movff	___fttol@f1+2,??___fttol+3
  8492   003F2C  2914               	incf	??___fttol& (0+255),w,b
  8493   003F2E  6F18               	movwf	(??___fttol+4)& (0+255),b
  8494   003F30  D004               	goto	u11020
  8495   003F32                     u11025:
  8496   003F32  90D8               	bcf	status,0,c
  8497   003F34  3317               	rrcf	(??___fttol+3)& (0+255),f,b
  8498   003F36  3316               	rrcf	(??___fttol+2)& (0+255),f,b
  8499   003F38  3315               	rrcf	(??___fttol+1)& (0+255),f,b
  8500   003F3A                     u11020:
  8501   003F3A  2F18               	decfsz	(??___fttol+4)& (0+255),f,b
  8502   003F3C  D7FA               	goto	u11025
  8503   003F3E  0101               	movlb	1	; () banked
  8504   003F40  5115               	movf	(??___fttol+1)& (0+255),w,b
  8505   003F42  6F19               	movwf	___fttol@sign1& (0+255),b
  8506                           
  8507                           ; BSR set to: 1
  8508   003F44  8F11               	bsf	(___fttol@f1+1)& (0+255),7,b
  8509                           
  8510                           ; BSR set to: 1
  8511   003F46  0EFF               	movlw	255
  8512   003F48  1710               	andwf	___fttol@f1& (0+255),f,b
  8513   003F4A  0EFF               	movlw	255
  8514   003F4C  1711               	andwf	(___fttol@f1+1)& (0+255),f,b
  8515   003F4E  0E00               	movlw	0
  8516   003F50  1712               	andwf	(___fttol@f1+2)& (0+255),f,b
  8517                           
  8518                           ; BSR set to: 1
  8519   003F52  5110               	movf	___fttol@f1& (0+255),w,b
  8520   003F54  6F1A               	movwf	___fttol@lval& (0+255),b
  8521   003F56  5111               	movf	(___fttol@f1+1)& (0+255),w,b
  8522   003F58  6F1B               	movwf	(___fttol@lval+1)& (0+255),b
  8523   003F5A  5112               	movf	(___fttol@f1+2)& (0+255),w,b
  8524   003F5C  6F1C               	movwf	(___fttol@lval+2)& (0+255),b
  8525   003F5E  6B1D               	clrf	(___fttol@lval+3)& (0+255),b
  8526                           
  8527                           ; BSR set to: 1
  8528   003F60  0E8E               	movlw	142
  8529   003F62  5F1E               	subwf	___fttol@exp1& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 1
  8532   003F64  AF1E               	btfss	___fttol@exp1& (0+255),7,b
  8533   003F66  D00D               	goto	l8844
  8534                           
  8535                           ; BSR set to: 1
  8536   003F68  511E               	movf	___fttol@exp1& (0+255),w,b
  8537   003F6A  0A80               	xorlw	128
  8538   003F6C  0F8F               	addlw	143
  8539   003F6E  A0D8               	btfss	status,0,c
  8540   003F70  D7CC               	goto	u11010
  8541   003F72                     l8840:
  8542                           
  8543                           ; BSR set to: 1
  8544   003F72  90D8               	bcf	status,0,c
  8545   003F74  331D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8546   003F76  331C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8547   003F78  331B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8548   003F7A  331A               	rrcf	___fttol@lval& (0+255),f,b
  8549                           
  8550                           ; BSR set to: 1
  8551   003F7C  3F1E               	incfsz	___fttol@exp1& (0+255),f,b
  8552   003F7E  D7F9               	goto	l8840
  8553   003F80  D00D               	goto	u11060
  8554   003F82                     l8844:
  8555                           
  8556                           ; BSR set to: 1
  8557   003F82  0E17               	movlw	23
  8558   003F84  651E               	cpfsgt	___fttol@exp1& (0+255),b
  8559   003F86  D007               	goto	l8852
  8560   003F88  D7C0               	goto	u11010
  8561   003F8A                     l8850:
  8562                           
  8563                           ; BSR set to: 1
  8564   003F8A  90D8               	bcf	status,0,c
  8565   003F8C  371A               	rlcf	___fttol@lval& (0+255),f,b
  8566   003F8E  371B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8567   003F90  371C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8568   003F92  371D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8569   003F94  071E               	decf	___fttol@exp1& (0+255),f,b
  8570   003F96                     l8852:
  8571                           
  8572                           ; BSR set to: 1
  8573   003F96  511E               	movf	___fttol@exp1& (0+255),w,b
  8574   003F98  A4D8               	btfss	status,2,c
  8575   003F9A  D7F7               	goto	l8850
  8576   003F9C                     u11060:
  8577                           
  8578                           ; BSR set to: 1
  8579   003F9C  5119               	movf	___fttol@sign1& (0+255),w,b
  8580   003F9E  B4D8               	btfsc	status,2,c
  8581   003FA0  D008               	goto	l8858
  8582                           
  8583                           ; BSR set to: 1
  8584   003FA2  1F1D               	comf	(___fttol@lval+3)& (0+255),f,b
  8585   003FA4  1F1C               	comf	(___fttol@lval+2)& (0+255),f,b
  8586   003FA6  1F1B               	comf	(___fttol@lval+1)& (0+255),f,b
  8587   003FA8  6D1A               	negf	___fttol@lval& (0+255),b
  8588   003FAA  0E00               	movlw	0
  8589   003FAC  231B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8590   003FAE  231C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8591   003FB0  231D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8592   003FB2                     l8858:
  8593                           
  8594                           ; BSR set to: 1
  8595   003FB2  C11A  F110         	movff	___fttol@lval,?___fttol
  8596   003FB6  C11B  F111         	movff	___fttol@lval+1,?___fttol+1
  8597   003FBA  C11C  F112         	movff	___fttol@lval+2,?___fttol+2
  8598   003FBE  C11D  F113         	movff	___fttol@lval+3,?___fttol+3
  8599                           
  8600                           ; BSR set to: 1
  8601   003FC2  0012               	return		;funcret
  8602   003FC4                     __end_of___fttol:
  8603                           	callstack 0
  8604                           
  8605 ;; *************** function ___ftsub *****************
  8606 ;; Defined at:
  8607 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftsub.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  f1              3   33[BANK1 ] float 
  8610 ;;  f2              3   36[BANK1 ] float 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  3   33[BANK1 ] float 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 3F/0
  8619 ;;		On exit  : 3E/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8622 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;Total ram usage:        6 bytes
  8627 ;; Hardware stack levels used: 1
  8628 ;; Hardware stack levels required when called: 12
  8629 ;; This function calls:
  8630 ;;		___ftadd
  8631 ;; This function is called by:
  8632 ;;		_sprintf
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text21
  8637   004DB8                     __ptext21:
  8638                           	callstack 0
  8639   004DB8                     ___ftsub:
  8640                           	callstack 15
  8641                           
  8642                           ; BSR set to: 0
  8643                           
  8644                           ; BSR set to: 1
  8645                           ;incstack = 0
  8646   004DB8  0101               	movlb	1	; () banked
  8647   004DBA  5124               	movf	___ftsub@f2& (0+255),w,b
  8648   004DBC  1125               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8649   004DBE  1126               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8650   004DC0  B4D8               	btfsc	status,2,c
  8651   004DC2  D006               	goto	l8812
  8652                           
  8653                           ; BSR set to: 1
  8654   004DC4  0E00               	movlw	0
  8655   004DC6  1B24               	xorwf	___ftsub@f2& (0+255),f,b
  8656   004DC8  0E00               	movlw	0
  8657   004DCA  1B25               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8658   004DCC  0E80               	movlw	128
  8659   004DCE  1B26               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8660   004DD0                     l8812:
  8661                           
  8662                           ; BSR set to: 1
  8663   004DD0  C121  F115         	movff	___ftsub@f1,___ftadd@f1
  8664   004DD4  C122  F116         	movff	___ftsub@f1+1,___ftadd@f1+1
  8665   004DD8  C123  F117         	movff	___ftsub@f1+2,___ftadd@f1+2
  8666   004DDC  C124  F118         	movff	___ftsub@f2,___ftadd@f2
  8667   004DE0  C125  F119         	movff	___ftsub@f2+1,___ftadd@f2+1
  8668   004DE4  C126  F11A         	movff	___ftsub@f2+2,___ftadd@f2+2
  8669   004DE8  ECE4  F017         	call	___ftadd	;wreg free
  8670   004DEC  C115  F121         	movff	?___ftadd,?___ftsub
  8671   004DF0  C116  F122         	movff	?___ftadd+1,?___ftsub+1
  8672   004DF4  C117  F123         	movff	?___ftadd+2,?___ftsub+2
  8673   004DF8  0012               	return		;funcret
  8674   004DFA                     __end_of___ftsub:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function ___ftadd *****************
  8678 ;; Defined at:
  8679 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  f1              3   21[BANK1 ] float 
  8682 ;;  f2              3   24[BANK1 ] float 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  exp1            1   32[BANK1 ] unsigned char 
  8685 ;;  exp2            1   31[BANK1 ] unsigned char 
  8686 ;;  sign            1   30[BANK1 ] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  3   21[BANK1 ] float 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 3E/0
  8693 ;;		On exit  : 3E/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8696 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8698 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8699 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;Total ram usage:       12 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 11
  8703 ;; This function calls:
  8704 ;;		___ftpack
  8705 ;; This function is called by:
  8706 ;;		_sprintf
  8707 ;;		___ftsub
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text22
  8712   002FC8                     __ptext22:
  8713                           	callstack 0
  8714   002FC8                     ___ftadd:
  8715                           	callstack 15
  8716                           
  8717                           ;incstack = 0
  8718   002FC8  C117  F11B         	movff	___ftadd@f1+2,??___ftadd
  8719   002FCC  0101               	movlb	1	; () banked
  8720   002FCE  6B1C               	clrf	(??___ftadd+1)& (0+255),b
  8721   002FD0  6B1D               	clrf	(??___ftadd+2)& (0+255),b
  8722   002FD2  3516               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8723   002FD4  371B               	rlcf	??___ftadd& (0+255),f,b
  8724   002FD6  E301               	bnc	u10491
  8725   002FD8  811C               	bsf	(??___ftadd+1)& (0+255),0,b
  8726   002FDA                     u10491:
  8727   002FDA  511B               	movf	??___ftadd& (0+255),w,b
  8728   002FDC  6F20               	movwf	___ftadd@exp1& (0+255),b
  8729   002FDE  C11A  F11B         	movff	___ftadd@f2+2,??___ftadd
  8730   002FE2  6B1C               	clrf	(??___ftadd+1)& (0+255),b
  8731   002FE4  6B1D               	clrf	(??___ftadd+2)& (0+255),b
  8732   002FE6  3519               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8733   002FE8  371B               	rlcf	??___ftadd& (0+255),f,b
  8734   002FEA  E301               	bnc	u10501
  8735   002FEC  811C               	bsf	(??___ftadd+1)& (0+255),0,b
  8736   002FEE                     u10501:
  8737   002FEE  511B               	movf	??___ftadd& (0+255),w,b
  8738   002FF0  6F1F               	movwf	___ftadd@exp2& (0+255),b
  8739                           
  8740                           ; BSR set to: 1
  8741   002FF2  5120               	movf	___ftadd@exp1& (0+255),w,b
  8742   002FF4  B4D8               	btfsc	status,2,c
  8743   002FF6  D00A               	goto	u10530
  8744                           
  8745                           ; BSR set to: 1
  8746   002FF8  511F               	movf	___ftadd@exp2& (0+255),w,b
  8747   002FFA  5D20               	subwf	___ftadd@exp1& (0+255),w,b
  8748   002FFC  B0D8               	btfsc	status,0,c
  8749   002FFE  D00D               	goto	l8516
  8750                           
  8751                           ; BSR set to: 1
  8752   003000  5120               	movf	___ftadd@exp1& (0+255),w,b
  8753   003002  5D1F               	subwf	___ftadd@exp2& (0+255),w,b
  8754   003004  6F1B               	movwf	??___ftadd& (0+255),b
  8755   003006  0E18               	movlw	24
  8756   003008  651B               	cpfsgt	??___ftadd& (0+255),b
  8757   00300A  D007               	goto	l8516
  8758   00300C                     u10530:
  8759                           
  8760                           ; BSR set to: 1
  8761   00300C  C118  F115         	movff	___ftadd@f2,?___ftadd
  8762   003010  C119  F116         	movff	___ftadd@f2+1,?___ftadd+1
  8763   003014  C11A  F117         	movff	___ftadd@f2+2,?___ftadd+2
  8764   003018  0012               	return	
  8765   00301A                     l8516:
  8766                           
  8767                           ; BSR set to: 1
  8768   00301A  511F               	movf	___ftadd@exp2& (0+255),w,b
  8769   00301C  B4D8               	btfsc	status,2,c
  8770   00301E  D00A               	goto	u10560
  8771                           
  8772                           ; BSR set to: 1
  8773   003020  5120               	movf	___ftadd@exp1& (0+255),w,b
  8774   003022  5D1F               	subwf	___ftadd@exp2& (0+255),w,b
  8775   003024  B0D8               	btfsc	status,0,c
  8776   003026  D00D               	goto	l8522
  8777                           
  8778                           ; BSR set to: 1
  8779   003028  511F               	movf	___ftadd@exp2& (0+255),w,b
  8780   00302A  5D20               	subwf	___ftadd@exp1& (0+255),w,b
  8781   00302C  6F1B               	movwf	??___ftadd& (0+255),b
  8782   00302E  0E18               	movlw	24
  8783   003030  651B               	cpfsgt	??___ftadd& (0+255),b
  8784   003032  D007               	goto	l8522
  8785   003034                     u10560:
  8786                           
  8787                           ; BSR set to: 1
  8788   003034  C115  F115         	movff	___ftadd@f1,?___ftadd
  8789   003038  C116  F116         	movff	___ftadd@f1+1,?___ftadd+1
  8790   00303C  C117  F117         	movff	___ftadd@f1+2,?___ftadd+2
  8791   003040  0012               	return	
  8792   003042                     l8522:
  8793                           
  8794                           ; BSR set to: 1
  8795   003042  0E06               	movlw	6
  8796   003044  6F1E               	movwf	___ftadd@sign& (0+255),b
  8797                           
  8798                           ; BSR set to: 1
  8799   003046  BF17               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8800                           
  8801                           ; BSR set to: 1
  8802   003048  8F1E               	bsf	___ftadd@sign& (0+255),7,b
  8803                           
  8804                           ; BSR set to: 1
  8805   00304A  BF1A               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8806                           
  8807                           ; BSR set to: 1
  8808   00304C  8D1E               	bsf	___ftadd@sign& (0+255),6,b
  8809                           
  8810                           ; BSR set to: 1
  8811   00304E  8F16               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8812                           
  8813                           ; BSR set to: 1
  8814   003050  0EFF               	movlw	255
  8815   003052  1715               	andwf	___ftadd@f1& (0+255),f,b
  8816   003054  0EFF               	movlw	255
  8817   003056  1716               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8818   003058  0E00               	movlw	0
  8819   00305A  1717               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8820   00305C  8F19               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8821                           
  8822                           ; BSR set to: 1
  8823   00305E  0EFF               	movlw	255
  8824   003060  1718               	andwf	___ftadd@f2& (0+255),f,b
  8825   003062  0EFF               	movlw	255
  8826   003064  1719               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8827   003066  0E00               	movlw	0
  8828   003068  171A               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8829                           
  8830                           ; BSR set to: 1
  8831   00306A  511F               	movf	___ftadd@exp2& (0+255),w,b
  8832   00306C  5D20               	subwf	___ftadd@exp1& (0+255),w,b
  8833   00306E  B0D8               	btfsc	status,0,c
  8834   003070  D01B               	goto	l8548
  8835   003072                     u10590:
  8836                           
  8837                           ; BSR set to: 1
  8838   003072  90D8               	bcf	status,0,c
  8839   003074  3718               	rlcf	___ftadd@f2& (0+255),f,b
  8840   003076  3719               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8841   003078  371A               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8842   00307A  071F               	decf	___ftadd@exp2& (0+255),f,b
  8843                           
  8844                           ; BSR set to: 1
  8845   00307C  5120               	movf	___ftadd@exp1& (0+255),w,b
  8846   00307E  191F               	xorwf	___ftadd@exp2& (0+255),w,b
  8847   003080  B4D8               	btfsc	status,2,c
  8848   003082  D00D               	goto	l8546
  8849                           
  8850                           ; BSR set to: 1
  8851   003084  071E               	decf	___ftadd@sign& (0+255),f,b
  8852   003086  C11E  F11B         	movff	___ftadd@sign,??___ftadd
  8853   00308A  0E07               	movlw	7
  8854   00308C  171B               	andwf	??___ftadd& (0+255),f,b
  8855   00308E  B4D8               	btfsc	status,2,c
  8856   003090  D006               	goto	l8546
  8857   003092  D7EF               	goto	u10590
  8858   003094                     l8544:
  8859                           
  8860                           ; BSR set to: 1
  8861   003094  90D8               	bcf	status,0,c
  8862   003096  3317               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8863   003098  3316               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8864   00309A  3315               	rrcf	___ftadd@f1& (0+255),f,b
  8865   00309C  2B20               	incf	___ftadd@exp1& (0+255),f,b
  8866   00309E                     l8546:
  8867                           
  8868                           ; BSR set to: 1
  8869   00309E  511F               	movf	___ftadd@exp2& (0+255),w,b
  8870   0030A0  1920               	xorwf	___ftadd@exp1& (0+255),w,b
  8871   0030A2  B4D8               	btfsc	status,2,c
  8872   0030A4  D01F               	goto	u10660
  8873   0030A6  D7F6               	goto	l8544
  8874   0030A8                     l8548:
  8875                           
  8876                           ; BSR set to: 1
  8877   0030A8  5120               	movf	___ftadd@exp1& (0+255),w,b
  8878   0030AA  5D1F               	subwf	___ftadd@exp2& (0+255),w,b
  8879   0030AC  B0D8               	btfsc	status,0,c
  8880   0030AE  D01A               	goto	u10660
  8881   0030B0                     u10630:
  8882                           
  8883                           ; BSR set to: 1
  8884   0030B0  90D8               	bcf	status,0,c
  8885   0030B2  3715               	rlcf	___ftadd@f1& (0+255),f,b
  8886   0030B4  3716               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8887   0030B6  3717               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8888   0030B8  0720               	decf	___ftadd@exp1& (0+255),f,b
  8889                           
  8890                           ; BSR set to: 1
  8891   0030BA  5120               	movf	___ftadd@exp1& (0+255),w,b
  8892   0030BC  191F               	xorwf	___ftadd@exp2& (0+255),w,b
  8893   0030BE  B4D8               	btfsc	status,2,c
  8894   0030C0  D00D               	goto	l8558
  8895                           
  8896                           ; BSR set to: 1
  8897   0030C2  071E               	decf	___ftadd@sign& (0+255),f,b
  8898   0030C4  C11E  F11B         	movff	___ftadd@sign,??___ftadd
  8899   0030C8  0E07               	movlw	7
  8900   0030CA  171B               	andwf	??___ftadd& (0+255),f,b
  8901   0030CC  B4D8               	btfsc	status,2,c
  8902   0030CE  D006               	goto	l8558
  8903   0030D0  D7EF               	goto	u10630
  8904   0030D2                     l8556:
  8905                           
  8906                           ; BSR set to: 1
  8907   0030D2  90D8               	bcf	status,0,c
  8908   0030D4  331A               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8909   0030D6  3319               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8910   0030D8  3318               	rrcf	___ftadd@f2& (0+255),f,b
  8911   0030DA  2B1F               	incf	___ftadd@exp2& (0+255),f,b
  8912   0030DC                     l8558:
  8913                           
  8914                           ; BSR set to: 1
  8915   0030DC  511F               	movf	___ftadd@exp2& (0+255),w,b
  8916   0030DE  1920               	xorwf	___ftadd@exp1& (0+255),w,b
  8917   0030E0  A4D8               	btfss	status,2,c
  8918   0030E2  D7F7               	goto	l8556
  8919   0030E4                     u10660:
  8920                           
  8921                           ; BSR set to: 1
  8922   0030E4  AF1E               	btfss	___ftadd@sign& (0+255),7,b
  8923   0030E6  D00C               	goto	l991
  8924                           
  8925                           ; BSR set to: 1
  8926   0030E8  0EFF               	movlw	255
  8927   0030EA  1B15               	xorwf	___ftadd@f1& (0+255),f,b
  8928   0030EC  0EFF               	movlw	255
  8929   0030EE  1B16               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8930   0030F0  0EFF               	movlw	255
  8931   0030F2  1B17               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8932   0030F4  0E01               	movlw	1
  8933   0030F6  2715               	addwf	___ftadd@f1& (0+255),f,b
  8934   0030F8  0E00               	movlw	0
  8935   0030FA  2316               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8936   0030FC  0E00               	movlw	0
  8937   0030FE  2317               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8938   003100                     l991:
  8939                           
  8940                           ; BSR set to: 1
  8941   003100  AD1E               	btfss	___ftadd@sign& (0+255),6,b
  8942   003102  D00C               	goto	l8564
  8943                           
  8944                           ; BSR set to: 1
  8945   003104  0EFF               	movlw	255
  8946   003106  1B18               	xorwf	___ftadd@f2& (0+255),f,b
  8947   003108  0EFF               	movlw	255
  8948   00310A  1B19               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8949   00310C  0EFF               	movlw	255
  8950   00310E  1B1A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8951   003110  0E01               	movlw	1
  8952   003112  2718               	addwf	___ftadd@f2& (0+255),f,b
  8953   003114  0E00               	movlw	0
  8954   003116  2319               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8955   003118  0E00               	movlw	0
  8956   00311A  231A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8957   00311C                     l8564:
  8958                           
  8959                           ; BSR set to: 1
  8960   00311C  0E00               	movlw	0
  8961   00311E  6F1E               	movwf	___ftadd@sign& (0+255),b
  8962                           
  8963                           ; BSR set to: 1
  8964   003120  5115               	movf	___ftadd@f1& (0+255),w,b
  8965   003122  2718               	addwf	___ftadd@f2& (0+255),f,b
  8966   003124  5116               	movf	(___ftadd@f1+1)& (0+255),w,b
  8967   003126  2319               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8968   003128  5117               	movf	(___ftadd@f1+2)& (0+255),w,b
  8969   00312A  231A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8970                           
  8971                           ; BSR set to: 1
  8972   00312C  AF1A               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8973   00312E  D00E               	goto	l8574
  8974                           
  8975                           ; BSR set to: 1
  8976   003130  0EFF               	movlw	255
  8977   003132  1B18               	xorwf	___ftadd@f2& (0+255),f,b
  8978   003134  0EFF               	movlw	255
  8979   003136  1B19               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8980   003138  0EFF               	movlw	255
  8981   00313A  1B1A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8982   00313C  0E01               	movlw	1
  8983   00313E  2718               	addwf	___ftadd@f2& (0+255),f,b
  8984   003140  0E00               	movlw	0
  8985   003142  2319               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8986   003144  0E00               	movlw	0
  8987   003146  231A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8988                           
  8989                           ; BSR set to: 1
  8990   003148  0E01               	movlw	1
  8991   00314A  6F1E               	movwf	___ftadd@sign& (0+255),b
  8992   00314C                     l8574:
  8993                           
  8994                           ; BSR set to: 1
  8995   00314C  C118  F0AA         	movff	___ftadd@f2,___ftpack@arg
  8996   003150  C119  F0AB         	movff	___ftadd@f2+1,___ftpack@arg+1
  8997   003154  C11A  F0AC         	movff	___ftadd@f2+2,___ftpack@arg+2
  8998   003158  C120  F0AD         	movff	___ftadd@exp1,___ftpack@exp
  8999   00315C  C11E  F0AE         	movff	___ftadd@sign,___ftpack@sign
  9000   003160  EC4B  F020         	call	___ftpack	;wreg free
  9001   003164  C0AA  F115         	movff	?___ftpack,?___ftadd
  9002   003168  C0AB  F116         	movff	?___ftpack+1,?___ftadd+1
  9003   00316C  C0AC  F117         	movff	?___ftpack+2,?___ftadd+2
  9004   003170  0012               	return		;funcret
  9005   003172                     __end_of___ftadd:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function ___ftneg *****************
  9009 ;; Defined at:
  9010 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftneg.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  f1              3   42[BANK0 ] float 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  3   42[BANK0 ] float 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 3F/1
  9021 ;;		On exit  : 3F/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9024 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;Total ram usage:        3 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 10
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_sprintf
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text23
  9039   00511C                     __ptext23:
  9040                           	callstack 0
  9041   00511C                     ___ftneg:
  9042                           	callstack 17
  9043                           
  9044                           ; BSR set to: 1
  9045                           
  9046                           ;incstack = 0
  9047   00511C  0100               	movlb	0	; () banked
  9048   00511E  51AA               	movf	___ftneg@f1& (0+255),w,b
  9049   005120  11AB               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  9050   005122  11AC               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  9051   005124  B4D8               	btfsc	status,2,c
  9052   005126  D006               	goto	l1041
  9053                           
  9054                           ; BSR set to: 0
  9055   005128  0E00               	movlw	0
  9056   00512A  1BAA               	xorwf	___ftneg@f1& (0+255),f,b
  9057   00512C  0E00               	movlw	0
  9058   00512E  1BAB               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  9059   005130  0E80               	movlw	128
  9060   005132  1BAC               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  9061   005134                     l1041:
  9062                           
  9063                           ; BSR set to: 0
  9064   005134  C0AA  F0AA         	movff	___ftneg@f1,?___ftneg
  9065   005138  C0AB  F0AB         	movff	___ftneg@f1+1,?___ftneg+1
  9066   00513C  C0AC  F0AC         	movff	___ftneg@f1+2,?___ftneg+2
  9067                           
  9068                           ; BSR set to: 0
  9069   005140  0012               	return		;funcret
  9070   005142                     __end_of___ftneg:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function ___ftge *****************
  9074 ;; Defined at:
  9075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  ff1             3   42[BANK0 ] float 
  9078 ;;  ff2             3   45[BANK0 ] float 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;		None
  9081 ;; Return value:  Size  Location     Type
  9082 ;;		None               void
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0
  9085 ;; Tracked objects:
  9086 ;;		On entry : 3F/0
  9087 ;;		On exit  : 3F/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;Total ram usage:        9 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 10
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_sprintf
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text24
  9105   00447E                     __ptext24:
  9106                           	callstack 0
  9107   00447E                     ___ftge:
  9108                           	callstack 17
  9109                           
  9110                           ; BSR set to: 0
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;incstack = 0
  9114   00447E  AFAC               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9115   004480  D00F               	goto	l6214
  9116                           
  9117                           ; BSR set to: 0
  9118   004482  0E00               	movlw	0
  9119   004484  6FB0               	movwf	??___ftge& (0+255),b
  9120   004486  0E00               	movlw	0
  9121   004488  6FB1               	movwf	(??___ftge+1)& (0+255),b
  9122   00448A  0E80               	movlw	128
  9123   00448C  6FB2               	movwf	(??___ftge+2)& (0+255),b
  9124   00448E  51AA               	movf	___ftge@ff1& (0+255),w,b
  9125   004490  5DB0               	subwf	??___ftge& (0+255),w,b
  9126   004492  6FAA               	movwf	___ftge@ff1& (0+255),b
  9127   004494  51AB               	movf	(___ftge@ff1+1)& (0+255),w,b
  9128   004496  59B1               	subwfb	(??___ftge+1)& (0+255),w,b
  9129   004498  6FAB               	movwf	(___ftge@ff1+1)& (0+255),b
  9130   00449A  51AC               	movf	(___ftge@ff1+2)& (0+255),w,b
  9131   00449C  59B2               	subwfb	(??___ftge+2)& (0+255),w,b
  9132   00449E  6FAC               	movwf	(___ftge@ff1+2)& (0+255),b
  9133   0044A0                     l6214:
  9134                           
  9135                           ; BSR set to: 0
  9136   0044A0  AFAF               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9137   0044A2  D00F               	goto	l6218
  9138                           
  9139                           ; BSR set to: 0
  9140   0044A4  0E00               	movlw	0
  9141   0044A6  6FB0               	movwf	??___ftge& (0+255),b
  9142   0044A8  0E00               	movlw	0
  9143   0044AA  6FB1               	movwf	(??___ftge+1)& (0+255),b
  9144   0044AC  0E80               	movlw	128
  9145   0044AE  6FB2               	movwf	(??___ftge+2)& (0+255),b
  9146   0044B0  51AD               	movf	___ftge@ff2& (0+255),w,b
  9147   0044B2  5DB0               	subwf	??___ftge& (0+255),w,b
  9148   0044B4  6FAD               	movwf	___ftge@ff2& (0+255),b
  9149   0044B6  51AE               	movf	(___ftge@ff2+1)& (0+255),w,b
  9150   0044B8  59B1               	subwfb	(??___ftge+1)& (0+255),w,b
  9151   0044BA  6FAE               	movwf	(___ftge@ff2+1)& (0+255),b
  9152   0044BC  51AF               	movf	(___ftge@ff2+2)& (0+255),w,b
  9153   0044BE  59B2               	subwfb	(??___ftge+2)& (0+255),w,b
  9154   0044C0  6FAF               	movwf	(___ftge@ff2+2)& (0+255),b
  9155   0044C2                     l6218:
  9156                           
  9157                           ; BSR set to: 0
  9158   0044C2  0E00               	movlw	0
  9159   0044C4  1BAA               	xorwf	___ftge@ff1& (0+255),f,b
  9160   0044C6  0E00               	movlw	0
  9161   0044C8  1BAB               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9162   0044CA  0E80               	movlw	128
  9163   0044CC  1BAC               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9164                           
  9165                           ; BSR set to: 0
  9166   0044CE  0E00               	movlw	0
  9167   0044D0  1BAD               	xorwf	___ftge@ff2& (0+255),f,b
  9168   0044D2  0E00               	movlw	0
  9169   0044D4  1BAE               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9170   0044D6  0E80               	movlw	128
  9171   0044D8  1BAF               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9172   0044DA  51AD               	movf	___ftge@ff2& (0+255),w,b
  9173   0044DC  5DAA               	subwf	___ftge@ff1& (0+255),w,b
  9174   0044DE  51AE               	movf	(___ftge@ff2+1)& (0+255),w,b
  9175   0044E0  59AB               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9176   0044E2  51AF               	movf	(___ftge@ff2+2)& (0+255),w,b
  9177   0044E4  59AC               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9178   0044E6  B0D8               	btfsc	status,0,c
  9179   0044E8  D002               	goto	l6224
  9180                           
  9181                           ; BSR set to: 0
  9182   0044EA  90D8               	bcf	status,0,c
  9183   0044EC  0012               	return	
  9184   0044EE                     l6224:
  9185                           
  9186                           ; BSR set to: 0
  9187   0044EE  80D8               	bsf	status,0,c
  9188                           
  9189                           ; BSR set to: 0
  9190   0044F0  0012               	return		;funcret
  9191   0044F2                     __end_of___ftge:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _set_baoundares *****************
  9195 ;; Defined at:
  9196 ;;		line 279 in file "Cooking_Main.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 3F/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 10
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_update_lcd_Line1
  9221 ;;		_main
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text25
  9226   003B58                     __ptext25:
  9227                           	callstack 0
  9228   003B58                     _set_baoundares:
  9229                           	callstack 18
  9230                           
  9231                           ;Cooking_Main.c: 280: if(count_sec > 59) {
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;incstack = 0
  9235   003B58  0100               	movlb	0	; () banked
  9236   003B5A  BFCF               	btfsc	(_count_sec+1)& (0+255),7,b
  9237   003B5C  D00C               	goto	l7034
  9238   003B5E  51CF               	movf	(_count_sec+1)& (0+255),w,b
  9239   003B60  E104               	bnz	u8410
  9240   003B62  0E3C               	movlw	60
  9241   003B64  5DCE               	subwf	_count_sec& (0+255),w,b
  9242   003B66  A0D8               	btfss	status,0,c
  9243   003B68  D006               	goto	l7034
  9244   003B6A                     u8410:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;Cooking_Main.c: 281: count_min++;
  9248   003B6A  4BCC               	infsnz	_count_min& (0+255),f,b
  9249   003B6C  2BCD               	incf	(_count_min+1)& (0+255),f,b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;Cooking_Main.c: 282: count_sec = 0;
  9253   003B6E  0E00               	movlw	0
  9254   003B70  6FCF               	movwf	(_count_sec+1)& (0+255),b
  9255   003B72  0E00               	movlw	0
  9256   003B74  6FCE               	movwf	_count_sec& (0+255),b
  9257   003B76                     l7034:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;Cooking_Main.c: 283: };Cooking_Main.c: 284: if(count_min > 59) {
  9261   003B76  BFCD               	btfsc	(_count_min+1)& (0+255),7,b
  9262   003B78  D00C               	goto	l7040
  9263   003B7A  51CD               	movf	(_count_min+1)& (0+255),w,b
  9264   003B7C  E104               	bnz	u8420
  9265   003B7E  0E3C               	movlw	60
  9266   003B80  5DCC               	subwf	_count_min& (0+255),w,b
  9267   003B82  A0D8               	btfss	status,0,c
  9268   003B84  D006               	goto	l7040
  9269   003B86                     u8420:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;Cooking_Main.c: 285: count_hour++;
  9273   003B86  4BCA               	infsnz	_count_hour& (0+255),f,b
  9274   003B88  2BCB               	incf	(_count_hour+1)& (0+255),f,b
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;Cooking_Main.c: 286: count_min = 0;
  9278   003B8A  0E00               	movlw	0
  9279   003B8C  6FCD               	movwf	(_count_min+1)& (0+255),b
  9280   003B8E  0E00               	movlw	0
  9281   003B90  6FCC               	movwf	_count_min& (0+255),b
  9282   003B92                     l7040:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;Cooking_Main.c: 287: };Cooking_Main.c: 288: if(count_hour > 5){
  9286   003B92  BFCB               	btfsc	(_count_hour+1)& (0+255),7,b
  9287   003B94  D00A               	goto	l7044
  9288   003B96  51CB               	movf	(_count_hour+1)& (0+255),w,b
  9289   003B98  E104               	bnz	u8430
  9290   003B9A  0E06               	movlw	6
  9291   003B9C  5DCA               	subwf	_count_hour& (0+255),w,b
  9292   003B9E  A0D8               	btfss	status,0,c
  9293   003BA0  D004               	goto	l7044
  9294   003BA2                     u8430:
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;Cooking_Main.c: 289: count_hour = 5;
  9298   003BA2  0E00               	movlw	0
  9299   003BA4  6FCB               	movwf	(_count_hour+1)& (0+255),b
  9300   003BA6  0E05               	movlw	5
  9301   003BA8  6FCA               	movwf	_count_hour& (0+255),b
  9302   003BAA                     l7044:
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;Cooking_Main.c: 290: };Cooking_Main.c: 292: if(count_sec <= 0 && !PORTBbits.RB4 && Cook
      +                          ing_Mode != 5 && Cooking_Mode != 6) {
  9306   003BAA  BFCF               	btfsc	(_count_sec+1)& (0+255),7,b
  9307   003BAC  D005               	goto	u8440
  9308   003BAE  51CF               	movf	(_count_sec+1)& (0+255),w,b
  9309   003BB0  E116               	bnz	l7056
  9310   003BB2  05CE               	decf	_count_sec& (0+255),w,b
  9311   003BB4  B0D8               	btfsc	status,0,c
  9312   003BB6  D013               	goto	l7056
  9313   003BB8                     u8440:
  9314                           
  9315                           ; BSR set to: 0
  9316   003BB8  B881               	btfsc	129,4,c	;volatile
  9317   003BBA  D011               	goto	l7056
  9318                           
  9319                           ; BSR set to: 0
  9320   003BBC  0E05               	movlw	5
  9321   003BBE  187D               	xorwf	_Cooking_Mode^0,w,c
  9322   003BC0  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9323   003BC2  B4D8               	btfsc	status,2,c
  9324   003BC4  D00C               	goto	l7056
  9325                           
  9326                           ; BSR set to: 0
  9327   003BC6  0E06               	movlw	6
  9328   003BC8  187D               	xorwf	_Cooking_Mode^0,w,c
  9329   003BCA  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9330   003BCC  B4D8               	btfsc	status,2,c
  9331   003BCE  D007               	goto	l7056
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;Cooking_Main.c: 293: count_min--;
  9335   003BD0  07CC               	decf	_count_min& (0+255),f,b
  9336   003BD2  A0D8               	btfss	status,0,c
  9337   003BD4  07CD               	decf	(_count_min+1)& (0+255),f,b
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;Cooking_Main.c: 294: count_sec = 59;
  9341   003BD6  0E00               	movlw	0
  9342   003BD8  6FCF               	movwf	(_count_sec+1)& (0+255),b
  9343   003BDA  0E3B               	movlw	59
  9344   003BDC  6FCE               	movwf	_count_sec& (0+255),b
  9345   003BDE                     l7056:
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;Cooking_Main.c: 295: };Cooking_Main.c: 296: if(count_min <= 0 && !PORTBbits.RB4 && Cook
      +                          ing_Mode != 5 && Cooking_Mode != 6) {
  9349   003BDE  BFCD               	btfsc	(_count_min+1)& (0+255),7,b
  9350   003BE0  D005               	goto	u8480
  9351   003BE2  51CD               	movf	(_count_min+1)& (0+255),w,b
  9352   003BE4  E116               	bnz	l7068
  9353   003BE6  05CC               	decf	_count_min& (0+255),w,b
  9354   003BE8  B0D8               	btfsc	status,0,c
  9355   003BEA  D013               	goto	l7068
  9356   003BEC                     u8480:
  9357                           
  9358                           ; BSR set to: 0
  9359   003BEC  B881               	btfsc	129,4,c	;volatile
  9360   003BEE  D011               	goto	l7068
  9361                           
  9362                           ; BSR set to: 0
  9363   003BF0  0E05               	movlw	5
  9364   003BF2  187D               	xorwf	_Cooking_Mode^0,w,c
  9365   003BF4  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9366   003BF6  B4D8               	btfsc	status,2,c
  9367   003BF8  D00C               	goto	l7068
  9368                           
  9369                           ; BSR set to: 0
  9370   003BFA  0E06               	movlw	6
  9371   003BFC  187D               	xorwf	_Cooking_Mode^0,w,c
  9372   003BFE  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9373   003C00  B4D8               	btfsc	status,2,c
  9374   003C02  D007               	goto	l7068
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;Cooking_Main.c: 297: count_hour--;
  9378   003C04  07CA               	decf	_count_hour& (0+255),f,b
  9379   003C06  A0D8               	btfss	status,0,c
  9380   003C08  07CB               	decf	(_count_hour+1)& (0+255),f,b
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;Cooking_Main.c: 298: count_min = 59;
  9384   003C0A  0E00               	movlw	0
  9385   003C0C  6FCD               	movwf	(_count_min+1)& (0+255),b
  9386   003C0E  0E3B               	movlw	59
  9387   003C10  6FCC               	movwf	_count_min& (0+255),b
  9388   003C12                     l7068:
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;Cooking_Main.c: 299: };Cooking_Main.c: 300: if(count_hour <= 0 && !PORTBbits.RB4 && Coo
      +                          king_Mode != 5 && Cooking_Mode != 6){
  9392   003C12  BFCB               	btfsc	(_count_hour+1)& (0+255),7,b
  9393   003C14  D005               	goto	u8520
  9394   003C16  51CB               	movf	(_count_hour+1)& (0+255),w,b
  9395   003C18  E113               	bnz	l298
  9396   003C1A  05CA               	decf	_count_hour& (0+255),w,b
  9397   003C1C  B0D8               	btfsc	status,0,c
  9398   003C1E  0012               	return	
  9399   003C20                     u8520:
  9400                           
  9401                           ; BSR set to: 0
  9402   003C20  B881               	btfsc	129,4,c	;volatile
  9403   003C22  0012               	return	
  9404                           
  9405                           ; BSR set to: 0
  9406   003C24  0E05               	movlw	5
  9407   003C26  187D               	xorwf	_Cooking_Mode^0,w,c
  9408   003C28  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9409   003C2A  B4D8               	btfsc	status,2,c
  9410   003C2C  0012               	return	
  9411                           
  9412                           ; BSR set to: 0
  9413   003C2E  0E06               	movlw	6
  9414   003C30  187D               	xorwf	_Cooking_Mode^0,w,c
  9415   003C32  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
  9416   003C34  B4D8               	btfsc	status,2,c
  9417   003C36  0012               	return	
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;Cooking_Main.c: 301: count_hour = 5;
  9421   003C38  0E00               	movlw	0
  9422   003C3A  6FCB               	movwf	(_count_hour+1)& (0+255),b
  9423   003C3C  0E05               	movlw	5
  9424   003C3E  6FCA               	movwf	_count_hour& (0+255),b
  9425   003C40                     l298:
  9426                           
  9427                           ; BSR set to: 0
  9428   003C40  0012               	return		;funcret
  9429   003C42                     __end_of_set_baoundares:
  9430                           	callstack 0
  9431                           
  9432 ;; *************** function _lcd_puts *****************
  9433 ;; Defined at:
  9434 ;;		line 120 in file "lcd_x8.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  s               2   56[BANK0 ] PTR unsigned char 
  9437 ;;		 -> update_lcd_Line4@Buffer(16), update_lcd_Line3@Buffer(16), update_lcd_Line2@Buffer(16), update_lcd_Line1@Buffer(1
      +6), 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 3F/0
  9446 ;;		On exit  : 3F/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:        2 bytes
  9454 ;; Hardware stack levels used: 1
  9455 ;; Hardware stack levels required when called: 15
  9456 ;; This function calls:
  9457 ;;		_lcd_putc
  9458 ;; This function is called by:
  9459 ;;		_update_lcd_Line1
  9460 ;;		_update_lcd_Line2
  9461 ;;		_update_lcd_Line3
  9462 ;;		_update_lcd_Line4
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text26
  9467   005142                     __ptext26:
  9468                           	callstack 0
  9469   005142                     _lcd_puts:
  9470                           	callstack 13
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;lcd_x8.c: 121: while (*s) {
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;incstack = 0
  9477   005142  D00A               	goto	l8902
  9478   005144                     l8898:
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;lcd_x8.c: 122: lcd_putc(*s);
  9482   005144  C0B8  FFD9         	movff	lcd_puts@s,fsr2l
  9483   005148  C0B9  FFDA         	movff	lcd_puts@s+1,fsr2h
  9484   00514C  50DF               	movf	indf2,w,c
  9485   00514E  ECF1  F025         	call	_lcd_putc
  9486                           
  9487                           ;lcd_x8.c: 123: s++;
  9488   005152  0100               	movlb	0	; () banked
  9489   005154  4BB8               	infsnz	lcd_puts@s& (0+255),f,b
  9490   005156  2BB9               	incf	(lcd_puts@s+1)& (0+255),f,b
  9491   005158                     l8902:
  9492                           
  9493                           ; BSR set to: 0
  9494   005158  C0B8  FFD9         	movff	lcd_puts@s,fsr2l
  9495   00515C  C0B9  FFDA         	movff	lcd_puts@s+1,fsr2h
  9496   005160  50DF               	movf	indf2,w,c
  9497   005162  B4D8               	btfsc	status,2,c
  9498   005164  0012               	return	
  9499   005166  D7EE               	goto	l8898
  9500   005168                     __end_of_lcd_puts:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _lcd_putc *****************
  9504 ;; Defined at:
  9505 ;;		line 106 in file "lcd_x8.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  c               1    wreg     unsigned char 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;  c               1   55[BANK0 ] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 3F/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;Total ram usage:        1 bytes
  9524 ;; Hardware stack levels used: 1
  9525 ;; Hardware stack levels required when called: 14
  9526 ;; This function calls:
  9527 ;;		_delay_ms
  9528 ;;		_lcd_gotoxy
  9529 ;;		_lcd_send_byte
  9530 ;; This function is called by:
  9531 ;;		_lcd_puts
  9532 ;;		_main
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text27
  9537   004BE2                     __ptext27:
  9538                           	callstack 0
  9539   004BE2                     _lcd_putc:
  9540                           	callstack 13
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;incstack = 0
  9544                           ;lcd_putc@c stored from wreg
  9545   004BE2  6FB7               	movwf	lcd_putc@c& (0+255),b
  9546                           
  9547                           ;lcd_x8.c: 107: switch (c) {
  9548   004BE4  D01F               	goto	l5984
  9549   004BE6                     l5974:
  9550                           
  9551                           ; BSR set to: 0
  9552   004BE6  0E01               	movlw	1
  9553   004BE8  6FB2               	movwf	lcd_send_byte@n& (0+255),b
  9554   004BEA  0E00               	movlw	0
  9555   004BEC  EC49  F026         	call	_lcd_send_byte
  9556                           
  9557                           ;lcd_x8.c: 109: delay_ms(2);
  9558   004BF0  0E00               	movlw	0
  9559   004BF2  0100               	movlb	0	; () banked
  9560   004BF4  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
  9561   004BF6  0E02               	movlw	2
  9562   004BF8  6FAA               	movwf	delay_ms@n& (0+255),b
  9563   004BFA  EC66  F028         	call	_delay_ms	;wreg free
  9564                           
  9565                           ;lcd_x8.c: 110: break;
  9566   004BFE  0012               	return	
  9567   004C00                     l5976:
  9568                           
  9569                           ; BSR set to: 0
  9570   004C00  0E02               	movlw	2
  9571   004C02  6FB4               	movwf	lcd_gotoxy@y& (0+255),b
  9572   004C04  0E01               	movlw	1
  9573   004C06  ECBA  F026         	call	_lcd_gotoxy
  9574                           
  9575                           ;lcd_x8.c: 112: break;
  9576   004C0A  0012               	return	
  9577   004C0C                     l5978:
  9578                           
  9579                           ; BSR set to: 0
  9580   004C0C  0E10               	movlw	16
  9581   004C0E  6FB2               	movwf	lcd_send_byte@n& (0+255),b
  9582   004C10  0E00               	movlw	0
  9583   004C12  EC49  F026         	call	_lcd_send_byte
  9584                           
  9585                           ;lcd_x8.c: 114: break;
  9586   004C16  0012               	return	
  9587   004C18                     l5980:
  9588                           
  9589                           ; BSR set to: 0
  9590   004C18  C0B7  F0B2         	movff	lcd_putc@c,lcd_send_byte@n
  9591   004C1C  0E01               	movlw	1
  9592   004C1E  EC49  F026         	call	_lcd_send_byte
  9593                           
  9594                           ;lcd_x8.c: 116: break;
  9595   004C22  0012               	return	
  9596   004C24                     l5984:
  9597   004C24  0100               	movlb	0	; () banked
  9598   004C26  51B7               	movf	lcd_putc@c& (0+255),w,b
  9599                           
  9600                           ; Switch size 1, requested type "simple"
  9601                           ; Number of cases is 3, Range of values is 8 to 12
  9602                           ; switch strategies available:
  9603                           ; Name         Instructions Cycles
  9604                           ; simple_byte           10     6 (average)
  9605                           ;	Chosen strategy is simple_byte
  9606   004C28  0A08               	xorlw	8	; case 8
  9607   004C2A  B4D8               	btfsc	status,2,c
  9608   004C2C  D7EF               	goto	l5978
  9609   004C2E  0A02               	xorlw	2	; case 10
  9610   004C30  B4D8               	btfsc	status,2,c
  9611   004C32  D7E6               	goto	l5976
  9612   004C34  0A06               	xorlw	6	; case 12
  9613   004C36  B4D8               	btfsc	status,2,c
  9614   004C38  D7D6               	goto	l5974
  9615   004C3A  D7EE               	goto	l5980
  9616   004C3C                     __end_of_lcd_putc:
  9617                           	callstack 0
  9618                           
  9619 ;; *************** function _lcd_gotoxy *****************
  9620 ;; Defined at:
  9621 ;;		line 89 in file "lcd_x8.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  x               1    wreg     unsigned char 
  9624 ;;  y               1   52[BANK0 ] unsigned char 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  x               1   53[BANK0 ] unsigned char 
  9627 ;;  address         1   54[BANK0 ] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 3F/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9637 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;Total ram usage:        3 bytes
  9642 ;; Hardware stack levels used: 1
  9643 ;; Hardware stack levels required when called: 13
  9644 ;; This function calls:
  9645 ;;		_lcd_send_byte
  9646 ;; This function is called by:
  9647 ;;		_lcd_putc
  9648 ;;		_update_lcd_Line1
  9649 ;;		_update_lcd_Line2
  9650 ;;		_update_lcd_Line3
  9651 ;;		_update_lcd_Line4
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text28
  9656   004D74                     __ptext28:
  9657                           	callstack 0
  9658   004D74                     _lcd_gotoxy:
  9659                           	callstack 13
  9660                           
  9661                           ;incstack = 0
  9662                           ;lcd_gotoxy@x stored from wreg
  9663   004D74  6FB5               	movwf	lcd_gotoxy@x& (0+255),b
  9664                           
  9665                           ;lcd_x8.c: 90: unsigned char address;;lcd_x8.c: 92: switch (y) {
  9666   004D76  D009               	goto	l5394
  9667   004D78                     l5384:
  9668                           
  9669                           ; BSR set to: 0
  9670   004D78  0E80               	movlw	128
  9671   004D7A  D005               	goto	L24
  9672   004D7C                     l5386:
  9673                           
  9674                           ; BSR set to: 0
  9675   004D7C  0EC0               	movlw	192
  9676   004D7E  D003               	goto	L24
  9677   004D80                     l5388:
  9678                           
  9679                           ; BSR set to: 0
  9680   004D80  0E90               	movlw	144
  9681   004D82  D001               	goto	L24
  9682   004D84                     l5390:
  9683                           
  9684                           ; BSR set to: 0
  9685   004D84  0ED0               	movlw	208
  9686   004D86                     L24:
  9687   004D86  6FB6               	movwf	lcd_gotoxy@address& (0+255),b
  9688                           
  9689                           ;lcd_x8.c: 100: break;
  9690   004D88  D00E               	goto	l5396
  9691   004D8A                     l5394:
  9692   004D8A  0100               	movlb	0	; () banked
  9693   004D8C  51B4               	movf	lcd_gotoxy@y& (0+255),w,b
  9694                           
  9695                           ; Switch size 1, requested type "simple"
  9696                           ; Number of cases is 4, Range of values is 1 to 4
  9697                           ; switch strategies available:
  9698                           ; Name         Instructions Cycles
  9699                           ; simple_byte           13     7 (average)
  9700                           ;	Chosen strategy is simple_byte
  9701   004D8E  0A01               	xorlw	1	; case 1
  9702   004D90  B4D8               	btfsc	status,2,c
  9703   004D92  D7F2               	goto	l5384
  9704   004D94  0A03               	xorlw	3	; case 2
  9705   004D96  B4D8               	btfsc	status,2,c
  9706   004D98  D7F1               	goto	l5386
  9707   004D9A  0A01               	xorlw	1	; case 3
  9708   004D9C  B4D8               	btfsc	status,2,c
  9709   004D9E  D7F0               	goto	l5388
  9710   004DA0  0A07               	xorlw	7	; case 4
  9711   004DA2  B4D8               	btfsc	status,2,c
  9712   004DA4  D7EF               	goto	l5390
  9713   004DA6                     l5396:
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;lcd_x8.c: 102: address += x - 1;
  9717   004DA6  05B5               	decf	lcd_gotoxy@x& (0+255),w,b
  9718   004DA8  27B6               	addwf	lcd_gotoxy@address& (0+255),f,b
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  9722   004DAA  51B6               	movf	lcd_gotoxy@address& (0+255),w,b
  9723   004DAC  0980               	iorlw	128
  9724   004DAE  6FB2               	movwf	lcd_send_byte@n& (0+255),b
  9725   004DB0  0E00               	movlw	0
  9726   004DB2  EC49  F026         	call	_lcd_send_byte
  9727   004DB6  0012               	return		;funcret
  9728   004DB8                     __end_of_lcd_gotoxy:
  9729                           	callstack 0
  9730                           
  9731 ;; *************** function _setupPorts *****************
  9732 ;; Defined at:
  9733 ;;		line 249 in file "Cooking_Main.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;Total ram usage:        0 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 10
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_main
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text29
  9762   0052B0                     __ptext29:
  9763                           	callstack 0
  9764   0052B0                     _setupPorts:
  9765                           	callstack 20
  9766                           
  9767                           ;Cooking_Main.c: 250: ADCON0 = 0;
  9768                           
  9769                           ;incstack = 0
  9770   0052B0  0E00               	movlw	0
  9771   0052B2  6EC2               	movwf	194,c	;volatile
  9772                           
  9773                           ;Cooking_Main.c: 251: ADCON1 = 0b00001100;
  9774   0052B4  0E0C               	movlw	12
  9775   0052B6  6EC1               	movwf	193,c	;volatile
  9776                           
  9777                           ;Cooking_Main.c: 252: TRISB = 0x3F;
  9778   0052B8  0E3F               	movlw	63
  9779   0052BA  6E93               	movwf	147,c	;volatile
  9780                           
  9781                           ;Cooking_Main.c: 253: TRISC = 0x00;
  9782   0052BC  0E00               	movlw	0
  9783   0052BE  6E94               	movwf	148,c	;volatile
  9784                           
  9785                           ;Cooking_Main.c: 254: TRISA = 0x25;
  9786   0052C0  0E25               	movlw	37
  9787   0052C2  6E92               	movwf	146,c	;volatile
  9788                           
  9789                           ;Cooking_Main.c: 255: TRISD = 0x00;
  9790   0052C4  0E00               	movlw	0
  9791   0052C6  6E95               	movwf	149,c	;volatile
  9792                           
  9793                           ;Cooking_Main.c: 256: TRISE = 0x00;
  9794   0052C8  0E00               	movlw	0
  9795   0052CA  6E96               	movwf	150,c	;volatile
  9796   0052CC  0012               	return		;funcret
  9797   0052CE                     __end_of_setupPorts:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _read_adc_voltage *****************
  9801 ;; Defined at:
  9802 ;;		line 48 in file "my_adc.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  channel         1    wreg     unsigned char 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  channel         1   30[BANK1 ] unsigned char 
  9807 ;;  voltage         3   27[BANK1 ] float 
  9808 ;;  raw_value       2   31[BANK1 ] int 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  3   24[BANK1 ] float 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 3F/1
  9815 ;;		On exit  : 3E/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        9 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; Hardware stack levels required when called: 12
  9825 ;; This function calls:
  9826 ;;		___awtoft
  9827 ;;		___ftdiv
  9828 ;;		___wmul
  9829 ;;		_read_adc_raw_no_lib
  9830 ;; This function is called by:
  9831 ;;		_main
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text30
  9836   004878                     __ptext30:
  9837                           	callstack 0
  9838   004878                     _read_adc_voltage:
  9839                           	callstack 18
  9840                           
  9841                           ;incstack = 0
  9842                           ;read_adc_voltage@channel stored from wreg
  9843   004878  6F1E               	movwf	read_adc_voltage@channel& (0+255),b
  9844                           
  9845                           ;my_adc.c: 49: int raw_value;;my_adc.c: 50: float voltage;;my_adc.c: 51: raw_value = rea
      +                          d_adc_raw_no_lib(channel);
  9846   00487A  0101               	movlb	1	; () banked
  9847   00487C  511E               	movf	read_adc_voltage@channel& (0+255),w,b
  9848   00487E  EC3F  F027         	call	_read_adc_raw_no_lib
  9849   004882  C0AA  F11F         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  9850   004886  C0AB  F120         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;my_adc.c: 52: voltage = (raw_value * 5) / 1023.0;
  9854   00488A  C11F  F0AA         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  9855   00488E  C120  F0AB         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  9856   004892  0E00               	movlw	0
  9857   004894  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9858   004896  0E05               	movlw	5
  9859   004898  6FAC               	movwf	___wmul@multiplicand& (0+255),b
  9860   00489A  ECB4  F028         	call	___wmul	;wreg free
  9861   00489E  C0AA  F0B2         	movff	?___wmul,___awtoft@c
  9862   0048A2  C0AB  F0B3         	movff	?___wmul+1,___awtoft@c+1
  9863   0048A6  ECBB  F027         	call	___awtoft	;wreg free
  9864   0048AA  C0B2  F109         	movff	?___awtoft,___ftdiv@f1
  9865   0048AE  C0B3  F10A         	movff	?___awtoft+1,___ftdiv@f1+1
  9866   0048B2  C0B4  F10B         	movff	?___awtoft+2,___ftdiv@f1+2
  9867   0048B6  0EC0               	movlw	192
  9868   0048B8  0101               	movlb	1	; () banked
  9869   0048BA  6F0C               	movwf	___ftdiv@f2& (0+255),b
  9870   0048BC  0E7F               	movlw	127
  9871   0048BE  6F0D               	movwf	(___ftdiv@f2+1)& (0+255),b
  9872   0048C0  0E44               	movlw	68
  9873   0048C2  6F0E               	movwf	(___ftdiv@f2+2)& (0+255),b
  9874   0048C4  EC96  F01E         	call	___ftdiv	;wreg free
  9875   0048C8  C109  F11B         	movff	?___ftdiv,read_adc_voltage@voltage
  9876   0048CC  C10A  F11C         	movff	?___ftdiv+1,read_adc_voltage@voltage+1
  9877   0048D0  C10B  F11D         	movff	?___ftdiv+2,read_adc_voltage@voltage+2
  9878                           
  9879                           ;my_adc.c: 53: return voltage;
  9880   0048D4  C11B  F118         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  9881   0048D8  C11C  F119         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  9882   0048DC  C11D  F11A         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  9883   0048E0  0012               	return		;funcret
  9884   0048E2                     __end_of_read_adc_voltage:
  9885                           	callstack 0
  9886                           
  9887 ;; *************** function _read_adc_raw_no_lib *****************
  9888 ;; Defined at:
  9889 ;;		line 32 in file "my_adc.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  channel         1    wreg     unsigned char 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;  channel         1   48[BANK0 ] unsigned char 
  9894 ;;  raw_value       2   46[BANK0 ] int 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  2   42[BANK0 ] int 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, status,0
  9899 ;; Tracked objects:
  9900 ;;		On entry : 3F/1
  9901 ;;		On exit  : 3F/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;Total ram usage:        7 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; Hardware stack levels required when called: 10
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_read_adc_voltage
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text31
  9919   004E7E                     __ptext31:
  9920                           	callstack 0
  9921   004E7E                     _read_adc_raw_no_lib:
  9922                           	callstack 19
  9923                           
  9924                           ;incstack = 0
  9925                           ;read_adc_raw_no_lib@channel stored from wreg
  9926   004E7E  0100               	movlb	0	; () banked
  9927   004E80  6FB0               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  9928                           
  9929                           ;my_adc.c: 33: int raw_value;;my_adc.c: 34: ADCON0bits.CHS = channel;
  9930   004E82  C0B0  F0AC         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  9931   004E86  0100               	movlb	0	; () banked
  9932   004E88  47AC               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  9933   004E8A  47AC               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  9934   004E8C  50C2               	movf	194,w,c	;volatile
  9935   004E8E  19AC               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9936   004E90  0BC3               	andlw	-61
  9937   004E92  19AC               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9938   004E94  6EC2               	movwf	194,c	;volatile
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;my_adc.c: 37: ADCON0bits.GO = 1;
  9942   004E96  82C2               	bsf	194,1,c	;volatile
  9943   004E98                     l81:
  9944   004E98  B2C2               	btfsc	194,1,c	;volatile
  9945   004E9A  D7FE               	goto	l81
  9946                           
  9947                           ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
  9948   004E9C  50C3               	movf	195,w,c	;volatile
  9949   004E9E  CFC4 F0AC          	movff	4036,??_read_adc_raw_no_lib	;volatile
  9950   004EA2  0100               	movlb	0	; () banked
  9951   004EA4  6BAD               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  9952   004EA6  C0AC  F0AD         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  9953   004EAA  6BAC               	clrf	??_read_adc_raw_no_lib& (0+255),b
  9954   004EAC  11AC               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9955   004EAE  6FAE               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  9956   004EB0  51AD               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  9957   004EB2  6FAF               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;my_adc.c: 45: return raw_value;
  9961   004EB4  C0AE  F0AA         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  9962   004EB8  C0AF  F0AB         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  9963                           
  9964                           ; BSR set to: 0
  9965   004EBC  0012               	return		;funcret
  9966   004EBE                     __end_of_read_adc_raw_no_lib:
  9967                           	callstack 0
  9968                           
  9969 ;; *************** function ___wmul *****************
  9970 ;; Defined at:
  9971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  multiplier      2   42[BANK0 ] unsigned int 
  9974 ;;  multiplicand    2   44[BANK0 ] unsigned int 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  product         2   46[BANK0 ] unsigned int 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  2   42[BANK0 ] unsigned int 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0, prodl, prodh
  9981 ;; Tracked objects:
  9982 ;;		On entry : 3F/0
  9983 ;;		On exit  : 3F/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;Total ram usage:        6 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; Hardware stack levels required when called: 10
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_read_adc_voltage
  9997 ;;		_update_lcd_Line4
  9998 ;;		_sprintf
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text32
 10003   005168                     __ptext32:
 10004                           	callstack 0
 10005   005168                     ___wmul:
 10006                           	callstack 17
 10007                           
 10008                           ; BSR set to: 0
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;incstack = 0
 10012   005168  51AA               	movf	___wmul@multiplier& (0+255),w,b
 10013   00516A  03AC               	mulwf	___wmul@multiplicand& (0+255),b
 10014   00516C  CFF3 F0AE          	movff	prodl,___wmul@product
 10015   005170  CFF4 F0AF          	movff	prodh,___wmul@product+1
 10016   005174  51AA               	movf	___wmul@multiplier& (0+255),w,b
 10017   005176  03AD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10018   005178  50F3               	movf	243,w,c
 10019   00517A  27AF               	addwf	(___wmul@product+1)& (0+255),f,b
 10020   00517C  51AB               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10021   00517E  03AC               	mulwf	___wmul@multiplicand& (0+255),b
 10022   005180  50F3               	movf	243,w,c
 10023   005182  27AF               	addwf	(___wmul@product+1)& (0+255),f,b
 10024                           
 10025                           ; BSR set to: 0
 10026   005184  C0AE  F0AA         	movff	___wmul@product,?___wmul
 10027   005188  C0AF  F0AB         	movff	___wmul@product+1,?___wmul+1
 10028                           
 10029                           ; BSR set to: 0
 10030   00518C  0012               	return		;funcret
 10031   00518E                     __end_of___wmul:
 10032                           	callstack 0
 10033                           
 10034 ;; *************** function ___ftdiv *****************
 10035 ;; Defined at:
 10036 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdiv.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  f1              3    9[BANK1 ] float 
 10039 ;;  f2              3   12[BANK1 ] float 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  f3              3   19[BANK1 ] float 
 10042 ;;  sign            1   23[BANK1 ] unsigned char 
 10043 ;;  exp             1   22[BANK1 ] unsigned char 
 10044 ;;  cntr            1   18[BANK1 ] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  3    9[BANK1 ] float 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 3F/1
 10051 ;;		On exit  : 3E/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10054 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;Total ram usage:       15 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 11
 10061 ;; This function calls:
 10062 ;;		___ftpack
 10063 ;; This function is called by:
 10064 ;;		_read_adc_voltage
 10065 ;;		_main
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text33
 10070   003D2C                     __ptext33:
 10071                           	callstack 0
 10072   003D2C                     ___ftdiv:
 10073                           	callstack 18
 10074                           
 10075                           ; BSR set to: 1
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;incstack = 0
 10079   003D2C  C10B  F10F         	movff	___ftdiv@f1+2,??___ftdiv
 10080   003D30  6B10               	clrf	(??___ftdiv+1)& (0+255),b
 10081   003D32  6B11               	clrf	(??___ftdiv+2)& (0+255),b
 10082   003D34  350A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 10083   003D36  370F               	rlcf	??___ftdiv& (0+255),f,b
 10084   003D38  E301               	bnc	u12231
 10085   003D3A  8110               	bsf	(??___ftdiv+1)& (0+255),0,b
 10086   003D3C                     u12231:
 10087   003D3C  510F               	movf	??___ftdiv& (0+255),w,b
 10088   003D3E  6F16               	movwf	___ftdiv@exp& (0+255),b
 10089   003D40  5116               	movf	___ftdiv@exp& (0+255),w,b
 10090   003D42  A4D8               	btfss	status,2,c
 10091   003D44  D007               	goto	l9730
 10092                           
 10093                           ; BSR set to: 1
 10094   003D46  0E00               	movlw	0
 10095   003D48  6F09               	movwf	?___ftdiv& (0+255),b
 10096   003D4A  0E00               	movlw	0
 10097   003D4C  6F0A               	movwf	(?___ftdiv+1)& (0+255),b
 10098   003D4E  0E00               	movlw	0
 10099   003D50  6F0B               	movwf	(?___ftdiv+2)& (0+255),b
 10100   003D52  0012               	return	
 10101   003D54                     l9730:
 10102                           
 10103                           ; BSR set to: 1
 10104   003D54  C10E  F10F         	movff	___ftdiv@f2+2,??___ftdiv
 10105   003D58  6B10               	clrf	(??___ftdiv+1)& (0+255),b
 10106   003D5A  6B11               	clrf	(??___ftdiv+2)& (0+255),b
 10107   003D5C  350D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 10108   003D5E  370F               	rlcf	??___ftdiv& (0+255),f,b
 10109   003D60  E301               	bnc	u12251
 10110   003D62  8110               	bsf	(??___ftdiv+1)& (0+255),0,b
 10111   003D64                     u12251:
 10112   003D64  510F               	movf	??___ftdiv& (0+255),w,b
 10113   003D66  6F17               	movwf	___ftdiv@sign& (0+255),b
 10114   003D68  5117               	movf	___ftdiv@sign& (0+255),w,b
 10115   003D6A  A4D8               	btfss	status,2,c
 10116   003D6C  D007               	goto	l9736
 10117                           
 10118                           ; BSR set to: 1
 10119   003D6E  0E00               	movlw	0
 10120   003D70  6F09               	movwf	?___ftdiv& (0+255),b
 10121   003D72  0E00               	movlw	0
 10122   003D74  6F0A               	movwf	(?___ftdiv+1)& (0+255),b
 10123   003D76  0E00               	movlw	0
 10124   003D78  6F0B               	movwf	(?___ftdiv+2)& (0+255),b
 10125   003D7A  0012               	return	
 10126   003D7C                     l9736:
 10127                           
 10128                           ; BSR set to: 1
 10129   003D7C  0E00               	movlw	0
 10130   003D7E  6F13               	movwf	___ftdiv@f3& (0+255),b
 10131   003D80  0E00               	movlw	0
 10132   003D82  6F14               	movwf	(___ftdiv@f3+1)& (0+255),b
 10133   003D84  0E00               	movlw	0
 10134   003D86  6F15               	movwf	(___ftdiv@f3+2)& (0+255),b
 10135                           
 10136                           ; BSR set to: 1
 10137   003D88  5117               	movf	___ftdiv@sign& (0+255),w,b
 10138   003D8A  0F89               	addlw	137
 10139   003D8C  5F16               	subwf	___ftdiv@exp& (0+255),f,b
 10140                           
 10141                           ; BSR set to: 1
 10142   003D8E  C10B  F117         	movff	___ftdiv@f1+2,___ftdiv@sign
 10143                           
 10144                           ; BSR set to: 1
 10145   003D92  510E               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10146   003D94  1B17               	xorwf	___ftdiv@sign& (0+255),f,b
 10147                           
 10148                           ; BSR set to: 1
 10149   003D96  0E80               	movlw	128
 10150   003D98  1717               	andwf	___ftdiv@sign& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 1
 10153   003D9A  8F0A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 10154                           
 10155                           ; BSR set to: 1
 10156   003D9C  0EFF               	movlw	255
 10157   003D9E  1709               	andwf	___ftdiv@f1& (0+255),f,b
 10158   003DA0  0EFF               	movlw	255
 10159   003DA2  170A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 10160   003DA4  0E00               	movlw	0
 10161   003DA6  170B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 10162                           
 10163                           ; BSR set to: 1
 10164   003DA8  8F0D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 10165                           
 10166                           ; BSR set to: 1
 10167   003DAA  0EFF               	movlw	255
 10168   003DAC  170C               	andwf	___ftdiv@f2& (0+255),f,b
 10169   003DAE  0EFF               	movlw	255
 10170   003DB0  170D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 10171   003DB2  0E00               	movlw	0
 10172   003DB4  170E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 10173                           
 10174                           ; BSR set to: 1
 10175   003DB6  0E18               	movlw	24
 10176   003DB8  6F12               	movwf	___ftdiv@cntr& (0+255),b
 10177   003DBA                     l9756:
 10178                           
 10179                           ; BSR set to: 1
 10180   003DBA  90D8               	bcf	status,0,c
 10181   003DBC  3713               	rlcf	___ftdiv@f3& (0+255),f,b
 10182   003DBE  3714               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 10183   003DC0  3715               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 10184                           
 10185                           ; BSR set to: 1
 10186   003DC2  510C               	movf	___ftdiv@f2& (0+255),w,b
 10187   003DC4  5D09               	subwf	___ftdiv@f1& (0+255),w,b
 10188   003DC6  510D               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10189   003DC8  590A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 10190   003DCA  510E               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10191   003DCC  590B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 10192   003DCE  A0D8               	btfss	status,0,c
 10193   003DD0  D007               	goto	l1002
 10194                           
 10195                           ; BSR set to: 1
 10196   003DD2  510C               	movf	___ftdiv@f2& (0+255),w,b
 10197   003DD4  5F09               	subwf	___ftdiv@f1& (0+255),f,b
 10198   003DD6  510D               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10199   003DD8  5B0A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 10200   003DDA  510E               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10201   003DDC  5B0B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 10202                           
 10203                           ; BSR set to: 1
 10204   003DDE  8113               	bsf	___ftdiv@f3& (0+255),0,b
 10205   003DE0                     l1002:
 10206                           
 10207                           ; BSR set to: 1
 10208   003DE0  90D8               	bcf	status,0,c
 10209   003DE2  3709               	rlcf	___ftdiv@f1& (0+255),f,b
 10210   003DE4  370A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 10211   003DE6  370B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10212                           
 10213                           ; BSR set to: 1
 10214   003DE8  2F12               	decfsz	___ftdiv@cntr& (0+255),f,b
 10215   003DEA  D7E7               	goto	l9756
 10216                           
 10217                           ; BSR set to: 1
 10218   003DEC  C113  F0AA         	movff	___ftdiv@f3,___ftpack@arg
 10219   003DF0  C114  F0AB         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10220   003DF4  C115  F0AC         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10221   003DF8  C116  F0AD         	movff	___ftdiv@exp,___ftpack@exp
 10222   003DFC  C117  F0AE         	movff	___ftdiv@sign,___ftpack@sign
 10223   003E00  EC4B  F020         	call	___ftpack	;wreg free
 10224   003E04  C0AA  F109         	movff	?___ftpack,?___ftdiv
 10225   003E08  C0AB  F10A         	movff	?___ftpack+1,?___ftdiv+1
 10226   003E0C  C0AC  F10B         	movff	?___ftpack+2,?___ftdiv+2
 10227   003E10  0012               	return		;funcret
 10228   003E12                     __end_of___ftdiv:
 10229                           	callstack 0
 10230                           
 10231 ;; *************** function ___awtoft *****************
 10232 ;; Defined at:
 10233 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awtoft.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  c               2   50[BANK0 ] int 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  sign            1   53[BANK0 ] unsigned char 
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  3   50[BANK0 ] float 
 10240 ;; Registers used:
 10241 ;;		wreg, status,2, status,0, cstack
 10242 ;; Tracked objects:
 10243 ;;		On entry : 3F/0
 10244 ;;		On exit  : 3F/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10247 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;Total ram usage:        4 bytes
 10252 ;; Hardware stack levels used: 1
 10253 ;; Hardware stack levels required when called: 11
 10254 ;; This function calls:
 10255 ;;		___ftpack
 10256 ;; This function is called by:
 10257 ;;		_read_adc_voltage
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text34
 10262   004F76                     __ptext34:
 10263                           	callstack 0
 10264   004F76                     ___awtoft:
 10265                           	callstack 18
 10266                           
 10267                           ; BSR set to: 0
 10268                           
 10269                           ;incstack = 0
 10270   004F76  0E00               	movlw	0
 10271   004F78  6FB5               	movwf	___awtoft@sign& (0+255),b
 10272                           
 10273                           ; BSR set to: 0
 10274   004F7A  AFB3               	btfss	(___awtoft@c+1)& (0+255),7,b
 10275   004F7C  D006               	goto	l9778
 10276                           
 10277                           ; BSR set to: 0
 10278   004F7E  6DB2               	negf	___awtoft@c& (0+255),b
 10279   004F80  1FB3               	comf	(___awtoft@c+1)& (0+255),f,b
 10280   004F82  B0D8               	btfsc	status,0,c
 10281   004F84  2BB3               	incf	(___awtoft@c+1)& (0+255),f,b
 10282                           
 10283                           ; BSR set to: 0
 10284   004F86  0E01               	movlw	1
 10285   004F88  6FB5               	movwf	___awtoft@sign& (0+255),b
 10286   004F8A                     l9778:
 10287                           
 10288                           ; BSR set to: 0
 10289   004F8A  C0B2  F0AA         	movff	___awtoft@c,___ftpack@arg
 10290   004F8E  C0B3  F0AB         	movff	___awtoft@c+1,___ftpack@arg+1
 10291   004F92  6BAC               	clrf	(___ftpack@arg+2)& (0+255),b
 10292   004F94  0E8E               	movlw	142
 10293   004F96  6FAD               	movwf	___ftpack@exp& (0+255),b
 10294   004F98  C0B5  F0AE         	movff	___awtoft@sign,___ftpack@sign
 10295   004F9C  EC4B  F020         	call	___ftpack	;wreg free
 10296   004FA0  C0AA  F0B2         	movff	?___ftpack,?___awtoft
 10297   004FA4  C0AB  F0B3         	movff	?___ftpack+1,?___awtoft+1
 10298   004FA8  C0AC  F0B4         	movff	?___ftpack+2,?___awtoft+2
 10299                           
 10300                           ; BSR set to: 0
 10301   004FAC  0012               	return		;funcret
 10302   004FAE                     __end_of___awtoft:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function ___ftpack *****************
 10306 ;; Defined at:
 10307 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  arg             3   42[BANK0 ] unsigned um
 10310 ;;  exp             1   45[BANK0 ] unsigned char 
 10311 ;;  sign            1   46[BANK0 ] unsigned char 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  3   42[BANK0 ] float 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0
 10318 ;; Tracked objects:
 10319 ;;		On entry : 3E/1
 10320 ;;		On exit  : 3F/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10323 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;Total ram usage:        8 bytes
 10328 ;; Hardware stack levels used: 1
 10329 ;; Hardware stack levels required when called: 10
 10330 ;; This function calls:
 10331 ;;		Nothing
 10332 ;; This function is called by:
 10333 ;;		___awtoft
 10334 ;;		___ftadd
 10335 ;;		___ftdiv
 10336 ;;		___ftmul
 10337 ;;		___lltoft
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text35
 10342   004096                     __ptext35:
 10343                           	callstack 0
 10344   004096                     ___ftpack:
 10345                           	callstack 15
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;incstack = 0
 10349   004096  0100               	movlb	0	; () banked
 10350   004098  51AD               	movf	___ftpack@exp& (0+255),w,b
 10351   00409A  B4D8               	btfsc	status,2,c
 10352   00409C  D005               	goto	u10420
 10353                           
 10354                           ; BSR set to: 0
 10355   00409E  51AA               	movf	___ftpack@arg& (0+255),w,b
 10356   0040A0  11AB               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10357   0040A2  11AC               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10358   0040A4  A4D8               	btfss	status,2,c
 10359   0040A6  D00C               	goto	l8482
 10360   0040A8                     u10420:
 10361                           
 10362                           ; BSR set to: 0
 10363   0040A8  0E00               	movlw	0
 10364   0040AA  6FAA               	movwf	?___ftpack& (0+255),b
 10365   0040AC  0E00               	movlw	0
 10366   0040AE  6FAB               	movwf	(?___ftpack+1)& (0+255),b
 10367   0040B0  0E00               	movlw	0
 10368   0040B2  6FAC               	movwf	(?___ftpack+2)& (0+255),b
 10369   0040B4  0012               	return	
 10370   0040B6                     l8480:
 10371                           
 10372                           ; BSR set to: 0
 10373   0040B6  2BAD               	incf	___ftpack@exp& (0+255),f,b
 10374   0040B8  90D8               	bcf	status,0,c
 10375   0040BA  33AC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10376   0040BC  33AB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10377   0040BE  33AA               	rrcf	___ftpack@arg& (0+255),f,b
 10378   0040C0                     l8482:
 10379                           
 10380                           ; BSR set to: 0
 10381   0040C0  0E00               	movlw	0
 10382   0040C2  15AA               	andwf	___ftpack@arg& (0+255),w,b
 10383   0040C4  6FAF               	movwf	??___ftpack& (0+255),b
 10384   0040C6  0E00               	movlw	0
 10385   0040C8  15AB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10386   0040CA  6FB0               	movwf	(??___ftpack+1)& (0+255),b
 10387   0040CC  0EFE               	movlw	254
 10388   0040CE  15AC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10389   0040D0  6FB1               	movwf	(??___ftpack+2)& (0+255),b
 10390   0040D2  51AF               	movf	??___ftpack& (0+255),w,b
 10391   0040D4  11B0               	iorwf	(??___ftpack+1)& (0+255),w,b
 10392   0040D6  11B1               	iorwf	(??___ftpack+2)& (0+255),w,b
 10393   0040D8  B4D8               	btfsc	status,2,c
 10394   0040DA  D00C               	goto	l8488
 10395   0040DC  D7EC               	goto	l8480
 10396   0040DE                     l8484:
 10397                           
 10398                           ; BSR set to: 0
 10399   0040DE  2BAD               	incf	___ftpack@exp& (0+255),f,b
 10400                           
 10401                           ; BSR set to: 0
 10402   0040E0  0E01               	movlw	1
 10403   0040E2  27AA               	addwf	___ftpack@arg& (0+255),f,b
 10404   0040E4  0E00               	movlw	0
 10405   0040E6  23AB               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10406   0040E8  0E00               	movlw	0
 10407   0040EA  23AC               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10408   0040EC  90D8               	bcf	status,0,c
 10409   0040EE  33AC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10410   0040F0  33AB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10411   0040F2  33AA               	rrcf	___ftpack@arg& (0+255),f,b
 10412   0040F4                     l8488:
 10413                           
 10414                           ; BSR set to: 0
 10415   0040F4  0E00               	movlw	0
 10416   0040F6  15AA               	andwf	___ftpack@arg& (0+255),w,b
 10417   0040F8  6FAF               	movwf	??___ftpack& (0+255),b
 10418   0040FA  0E00               	movlw	0
 10419   0040FC  15AB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10420   0040FE  6FB0               	movwf	(??___ftpack+1)& (0+255),b
 10421   004100  0EFF               	movlw	255
 10422   004102  15AC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10423   004104  6FB1               	movwf	(??___ftpack+2)& (0+255),b
 10424   004106  51AF               	movf	??___ftpack& (0+255),w,b
 10425   004108  11B0               	iorwf	(??___ftpack+1)& (0+255),w,b
 10426   00410A  11B1               	iorwf	(??___ftpack+2)& (0+255),w,b
 10427   00410C  B4D8               	btfsc	status,2,c
 10428   00410E  D006               	goto	l8492
 10429   004110  D7E6               	goto	l8484
 10430   004112                     l8490:
 10431                           
 10432                           ; BSR set to: 0
 10433   004112  07AD               	decf	___ftpack@exp& (0+255),f,b
 10434   004114  90D8               	bcf	status,0,c
 10435   004116  37AA               	rlcf	___ftpack@arg& (0+255),f,b
 10436   004118  37AB               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10437   00411A  37AC               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10438   00411C                     l8492:
 10439                           
 10440                           ; BSR set to: 0
 10441   00411C  BFAB               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10442   00411E  D003               	goto	u10460
 10443                           
 10444                           ; BSR set to: 0
 10445   004120  0E02               	movlw	2
 10446   004122  61AD               	cpfslt	___ftpack@exp& (0+255),b
 10447   004124  D7F6               	goto	l8490
 10448   004126                     u10460:
 10449                           
 10450                           ; BSR set to: 0
 10451   004126  A1AD               	btfss	___ftpack@exp& (0+255),0,b
 10452                           
 10453                           ; BSR set to: 0
 10454   004128  9FAB               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10455                           
 10456                           ; BSR set to: 0
 10457   00412A  90D8               	bcf	status,0,c
 10458   00412C  33AD               	rrcf	___ftpack@exp& (0+255),f,b
 10459   00412E  51AD               	movf	___ftpack@exp& (0+255),w,b
 10460   004130  13AC               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10461                           
 10462                           ; BSR set to: 0
 10463   004132  51AE               	movf	___ftpack@sign& (0+255),w,b
 10464   004134  A4D8               	btfss	status,2,c
 10465                           
 10466                           ; BSR set to: 0
 10467   004136  8FAC               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10468                           
 10469                           ; BSR set to: 0
 10470   004138  C0AA  F0AA         	movff	___ftpack@arg,?___ftpack
 10471   00413C  C0AB  F0AB         	movff	___ftpack@arg+1,?___ftpack+1
 10472   004140  C0AC  F0AC         	movff	___ftpack@arg+2,?___ftpack+2
 10473                           
 10474                           ; BSR set to: 0
 10475   004144  0012               	return		;funcret
 10476   004146                     __end_of___ftpack:
 10477                           	callstack 0
 10478                           
 10479 ;; *************** function _lcd_init *****************
 10480 ;; Defined at:
 10481 ;;		line 56 in file "lcd_x8.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  i               1   52[BANK0 ] unsigned char 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 3F/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;Total ram usage:        1 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; Hardware stack levels required when called: 13
 10502 ;; This function calls:
 10503 ;;		_delay_ms
 10504 ;;		_lcd_send_byte
 10505 ;;		_lcd_send_nibble
 10506 ;; This function is called by:
 10507 ;;		_main
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text36
 10512   004ACE                     __ptext36:
 10513                           	callstack 0
 10514   004ACE                     _lcd_init:
 10515                           	callstack 17
 10516                           
 10517                           ;lcd_x8.c: 58: unsigned char i;;lcd_x8.c: 61: PORTEbits.RE2 = 0;
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;incstack = 0
 10521   004ACE  9484               	bcf	132,2,c	;volatile
 10522                           
 10523                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
 10524   004AD0  9284               	bcf	132,1,c	;volatile
 10525                           
 10526                           ;lcd_x8.c: 65: delay_ms(25);
 10527   004AD2  0E00               	movlw	0
 10528   004AD4  0100               	movlb	0	; () banked
 10529   004AD6  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
 10530   004AD8  0E19               	movlw	25
 10531   004ADA  6FAA               	movwf	delay_ms@n& (0+255),b
 10532   004ADC  EC66  F028         	call	_delay_ms	;wreg free
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
 10536   004AE0  0E01               	movlw	1
 10537   004AE2  6FB4               	movwf	lcd_init@i& (0+255),b
 10538   004AE4                     l8014:
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;lcd_x8.c: 67: lcd_send_nibble(3);
 10542   004AE4  0E03               	movlw	3
 10543   004AE6  ECC7  F028         	call	_lcd_send_nibble
 10544                           
 10545                           ;lcd_x8.c: 69: delay_ms(6);
 10546   004AEA  0E00               	movlw	0
 10547   004AEC  0100               	movlb	0	; () banked
 10548   004AEE  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
 10549   004AF0  0E06               	movlw	6
 10550   004AF2  6FAA               	movwf	delay_ms@n& (0+255),b
 10551   004AF4  EC66  F028         	call	_delay_ms	;wreg free
 10552                           
 10553                           ; BSR set to: 0
 10554   004AF8  2BB4               	incf	lcd_init@i& (0+255),f,b
 10555                           
 10556                           ; BSR set to: 0
 10557   004AFA  0E03               	movlw	3
 10558   004AFC  65B4               	cpfsgt	lcd_init@i& (0+255),b
 10559   004AFE  D7F2               	goto	l8014
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;lcd_x8.c: 70: };lcd_x8.c: 72: lcd_send_nibble(2);
 10563   004B00  0E02               	movlw	2
 10564   004B02  ECC7  F028         	call	_lcd_send_nibble
 10565                           
 10566                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
 10567   004B06  0E00               	movlw	0
 10568   004B08  0100               	movlb	0	; () banked
 10569   004B0A  6FB4               	movwf	lcd_init@i& (0+255),b
 10570   004B0C                     l8028:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
 10574   004B0C  51B4               	movf	lcd_init@i& (0+255),w,b
 10575   004B0E  0FD2               	addlw	low _LCD_INIT_STRING
 10576   004B10  6ED9               	movwf	fsr2l,c
 10577   004B12  6ADA               	clrf	fsr2h,c
 10578   004B14  50DF               	movf	indf2,w,c
 10579   004B16  6FB2               	movwf	lcd_send_byte@n& (0+255),b
 10580   004B18  0E00               	movlw	0
 10581   004B1A  EC49  F026         	call	_lcd_send_byte
 10582   004B1E  0100               	movlb	0	; () banked
 10583   004B20  2BB4               	incf	lcd_init@i& (0+255),f,b
 10584                           
 10585                           ; BSR set to: 0
 10586   004B22  0E03               	movlw	3
 10587   004B24  65B4               	cpfsgt	lcd_init@i& (0+255),b
 10588   004B26  D7F2               	goto	l8028
 10589   004B28  0012               	return	
 10590   004B2A                     __end_of_lcd_init:
 10591                           	callstack 0
 10592                           
 10593 ;; *************** function _lcd_send_byte *****************
 10594 ;; Defined at:
 10595 ;;		line 39 in file "lcd_x8.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  cm_data         1    wreg     unsigned char 
 10598 ;;  n               1   50[BANK0 ] unsigned char 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  cm_data         1   51[BANK0 ] unsigned char 
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      void 
 10603 ;; Registers used:
 10604 ;;		wreg, status,2, status,0, cstack
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;Total ram usage:        2 bytes
 10615 ;; Hardware stack levels used: 1
 10616 ;; Hardware stack levels required when called: 12
 10617 ;; This function calls:
 10618 ;;		_delay_cycles
 10619 ;;		_delay_ms
 10620 ;;		_lcd_send_nibble
 10621 ;; This function is called by:
 10622 ;;		_lcd_init
 10623 ;;		_lcd_gotoxy
 10624 ;;		_lcd_putc
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text37
 10629   004C92                     __ptext37:
 10630                           	callstack 0
 10631   004C92                     _lcd_send_byte:
 10632                           	callstack 14
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;incstack = 0
 10636                           ;lcd_send_byte@cm_data stored from wreg
 10637   004C92  0100               	movlb	0	; () banked
 10638   004C94  6FB3               	movwf	lcd_send_byte@cm_data& (0+255),b
 10639                           
 10640                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 10641   004C96  0100               	movlb	0	; () banked
 10642   004C98  B1B3               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 10643   004C9A  D002               	bra	u5355
 10644   004C9C  9484               	bcf	132,2,c	;volatile
 10645   004C9E  D001               	bra	u5356
 10646   004CA0                     u5355:
 10647   004CA0  8484               	bsf	132,2,c	;volatile
 10648   004CA2                     u5356:
 10649                           
 10650                           ;lcd_x8.c: 44: delay_cycles(1);
 10651   004CA2  0E01               	movlw	1
 10652   004CA4  ECF2  F027         	call	_delay_cycles
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;lcd_x8.c: 46: delay_cycles(1);
 10656   004CA8  0E01               	movlw	1
 10657   004CAA  ECF2  F027         	call	_delay_cycles
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 10661   004CAE  9284               	bcf	132,1,c	;volatile
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 10665   004CB0  39B2               	swapf	lcd_send_byte@n& (0+255),w,b
 10666   004CB2  0B0F               	andlw	15
 10667   004CB4  ECC7  F028         	call	_lcd_send_nibble
 10668                           
 10669                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 10670   004CB8  0100               	movlb	0	; () banked
 10671   004CBA  51B2               	movf	lcd_send_byte@n& (0+255),w,b
 10672   004CBC  0B0F               	andlw	15
 10673   004CBE  ECC7  F028         	call	_lcd_send_nibble
 10674                           
 10675                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 10676   004CC2  0100               	movlb	0	; () banked
 10677   004CC4  51B3               	movf	lcd_send_byte@cm_data& (0+255),w,b
 10678   004CC6  B4D8               	btfsc	status,2,c
 10679   004CC8  D005               	goto	l5086
 10680                           
 10681                           ; BSR set to: 0
 10682   004CCA  0E32               	movlw	50
 10683   004CCC                     u12797:
 10684   004CCC  0004               	clrwdt	
 10685   004CCE  2EE8               	decfsz	wreg,f,c
 10686   004CD0  D7FD               	bra	u12797
 10687   004CD2  0012               	return	
 10688   004CD4                     l5086:
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;lcd_x8.c: 51: else;lcd_x8.c: 52: delay_ms(2);
 10692   004CD4  0E00               	movlw	0
 10693   004CD6  6FAB               	movwf	(delay_ms@n+1)& (0+255),b
 10694   004CD8  0E02               	movlw	2
 10695   004CDA  6FAA               	movwf	delay_ms@n& (0+255),b
 10696   004CDC  EC66  F028         	call	_delay_ms	;wreg free
 10697   004CE0  0012               	return		;funcret
 10698   004CE2                     __end_of_lcd_send_byte:
 10699                           	callstack 0
 10700                           
 10701 ;; *************** function _lcd_send_nibble *****************
 10702 ;; Defined at:
 10703 ;;		line 29 in file "lcd_x8.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  n               1    wreg     unsigned char 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  n               1   49[BANK0 ] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;Total ram usage:        2 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; Hardware stack levels required when called: 11
 10724 ;; This function calls:
 10725 ;;		_delay_cycles
 10726 ;; This function is called by:
 10727 ;;		_lcd_send_byte
 10728 ;;		_lcd_init
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text38
 10733   00518E                     __ptext38:
 10734                           	callstack 0
 10735   00518E                     _lcd_send_nibble:
 10736                           	callstack 14
 10737                           
 10738                           ;incstack = 0
 10739                           ;lcd_send_nibble@n stored from wreg
 10740   00518E  0100               	movlb	0	; () banked
 10741   005190  6FB1               	movwf	lcd_send_nibble@n& (0+255),b
 10742                           
 10743                           ;lcd_x8.c: 31: lcd.data = n;
 10744   005192  C0B1  F0B0         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 10745   005196  0100               	movlb	0	; () banked
 10746   005198  3BB0               	swapf	??_lcd_send_nibble& (0+255),f,b
 10747   00519A  5083               	movf	131,w,c
 10748   00519C  19B0               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10749   00519E  0B0F               	andlw	-241
 10750   0051A0  19B0               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10751   0051A2  6E83               	movwf	131,c
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;lcd_x8.c: 33: delay_cycles(1);
 10755   0051A4  0E01               	movlw	1
 10756   0051A6  ECF2  F027         	call	_delay_cycles
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 10760   0051AA  8284               	bsf	132,1,c	;volatile
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 10764   0051AC  0004               	clrwdt	
 10765   0051AE  F000               	nop		;2 cycle nop
 10766                           
 10767                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 10768   0051B0  9284               	bcf	132,1,c	;volatile
 10769   0051B2  0012               	return		;funcret
 10770   0051B4                     __end_of_lcd_send_nibble:
 10771                           	callstack 0
 10772                           
 10773 ;; *************** function _delay_cycles *****************
 10774 ;; Defined at:
 10775 ;;		line 20 in file "lcd_x8.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  n               1    wreg     unsigned char 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  n               1   45[BANK0 ] unsigned char 
 10780 ;;  x               2   46[BANK0 ] int 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 3F/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;Total ram usage:        6 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 10
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_lcd_send_nibble
 10801 ;;		_lcd_send_byte
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text39
 10806   004FE4                     __ptext39:
 10807                           	callstack 0
 10808   004FE4                     _delay_cycles:
 10809                           	callstack 14
 10810                           
 10811                           ;incstack = 0
 10812                           ;delay_cycles@n stored from wreg
 10813   004FE4  0100               	movlb	0	; () banked
 10814   004FE6  6FAD               	movwf	delay_cycles@n& (0+255),b
 10815                           
 10816                           ;lcd_x8.c: 21: int x;;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 10817   004FE8  0E00               	movlw	0
 10818   004FEA  0100               	movlb	0	; () banked
 10819   004FEC  6FAF               	movwf	(delay_cycles@x+1)& (0+255),b
 10820   004FEE  0E00               	movlw	0
 10821   004FF0  6FAE               	movwf	delay_cycles@x& (0+255),b
 10822   004FF2  D004               	goto	l4982
 10823   004FF4                     l18:
 10824                           
 10825                           ; BSR set to: 0
 10826   004FF4  0004               	clrwdt		;# 
 10827   004FF6  0100               	movlb	0	; () banked
 10828   004FF8  4BAE               	infsnz	delay_cycles@x& (0+255),f,b
 10829   004FFA  2BAF               	incf	(delay_cycles@x+1)& (0+255),f,b
 10830   004FFC                     l4982:
 10831                           
 10832                           ; BSR set to: 0
 10833   004FFC  51AD               	movf	delay_cycles@n& (0+255),w,b
 10834   004FFE  6FAA               	movwf	??_delay_cycles& (0+255),b
 10835   005000  6BAB               	clrf	(??_delay_cycles+1)& (0+255),b
 10836   005002  51AE               	movf	delay_cycles@x& (0+255),w,b
 10837   005004  5DAA               	subwf	??_delay_cycles& (0+255),w,b
 10838   005006  51AB               	movf	(??_delay_cycles+1)& (0+255),w,b
 10839   005008  0A80               	xorlw	128
 10840   00500A  6FAC               	movwf	(??_delay_cycles+2)& (0+255),b
 10841   00500C  51AF               	movf	(delay_cycles@x+1)& (0+255),w,b
 10842   00500E  0A80               	xorlw	128
 10843   005010  59AC               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 10844   005012  A0D8               	btfss	status,0,c
 10845   005014  0012               	return	
 10846   005016  D7EE               	goto	l18
 10847   005018                     __end_of_delay_cycles:
 10848                           	callstack 0
 10849                           
 10850 ;; *************** function _delay_ms *****************
 10851 ;; Defined at:
 10852 ;;		line 12 in file "lcd_x8.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  n               2   42[BANK0 ] unsigned int 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  x               2   44[BANK0 ] int 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0
 10861 ;; Tracked objects:
 10862 ;;		On entry : 3F/0
 10863 ;;		On exit  : 3F/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;Total ram usage:        4 bytes
 10871 ;; Hardware stack levels used: 1
 10872 ;; Hardware stack levels required when called: 10
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_lcd_send_byte
 10877 ;;		_lcd_init
 10878 ;;		_lcd_putc
 10879 ;;		_main
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           	psect	text40
 10884   0050CC                     __ptext40:
 10885                           	callstack 0
 10886   0050CC                     _delay_ms:
 10887                           	callstack 15
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;lcd_x8.c: 13: int x;;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;incstack = 0
 10894   0050CC  0E00               	movlw	0
 10895   0050CE  6FAD               	movwf	(delay_ms@x+1)& (0+255),b
 10896   0050D0  0E00               	movlw	0
 10897   0050D2  6FAC               	movwf	delay_ms@x& (0+255),b
 10898   0050D4  D008               	goto	l11
 10899   0050D6                     l5002:
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 10903   0050D6  0EC8               	movlw	200
 10904   0050D8                     u12807:
 10905   0050D8  0004               	clrwdt	
 10906   0050DA  0004               	clrwdt	
 10907   0050DC  2EE8               	decfsz	wreg,f,c
 10908   0050DE  D7FC               	bra	u12807
 10909   0050E0  0100               	movlb	0	; () banked
 10910   0050E2  4BAC               	infsnz	delay_ms@x& (0+255),f,b
 10911   0050E4  2BAD               	incf	(delay_ms@x+1)& (0+255),f,b
 10912   0050E6                     l11:
 10913                           
 10914                           ; BSR set to: 0
 10915   0050E6  51AC               	movf	delay_ms@x& (0+255),w,b
 10916   0050E8  5DAA               	subwf	delay_ms@n& (0+255),w,b
 10917   0050EA  51AD               	movf	(delay_ms@x+1)& (0+255),w,b
 10918   0050EC  59AB               	subwfb	(delay_ms@n+1)& (0+255),w,b
 10919   0050EE  A0D8               	btfss	status,0,c
 10920   0050F0  0012               	return	
 10921   0050F2  D7F1               	goto	l5002
 10922   0050F4                     __end_of_delay_ms:
 10923                           	callstack 0
 10924                           
 10925 ;; *************** function _init_pwm1 *****************
 10926 ;; Defined at:
 10927 ;;		line 5 in file "my_pwm.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, status,2
 10936 ;; Tracked objects:
 10937 ;;		On entry : 3F/0
 10938 ;;		On exit  : 3F/0
 10939 ;;		Unchanged: 3F/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;Total ram usage:        0 bytes
 10946 ;; Hardware stack levels used: 1
 10947 ;; Hardware stack levels required when called: 10
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_main
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text41
 10956   005344                     __ptext41:
 10957                           	callstack 0
 10958   005344                     _init_pwm1:
 10959                           	callstack 20
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;my_pwm.c: 7: PR2 = 255;
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;incstack = 0
 10966   005344  68CB               	setf	203,c	;volatile
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;my_pwm.c: 9: CCP1CON = 0x0C;
 10970   005346  0E0C               	movlw	12
 10971   005348  6EBD               	movwf	189,c	;volatile
 10972                           
 10973                           ; BSR set to: 0
 10974   00534A  0012               	return		;funcret
 10975   00534C                     __end_of_init_pwm1:
 10976                           	callstack 0
 10977                           
 10978 ;; *************** function _init_adc_no_lib *****************
 10979 ;; Defined at:
 10980 ;;		line 11 in file "my_adc.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2
 10989 ;; Tracked objects:
 10990 ;;		On entry : 3F/0
 10991 ;;		On exit  : 3F/0
 10992 ;;		Unchanged: 3F/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; Hardware stack levels required when called: 10
 11001 ;; This function calls:
 11002 ;;		Nothing
 11003 ;; This function is called by:
 11004 ;;		_main
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           	psect	text42
 11009   005310                     __ptext42:
 11010                           	callstack 0
 11011   005310                     _init_adc_no_lib:
 11012                           	callstack 20
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;my_adc.c: 14: ADCON0 = 0;
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;incstack = 0
 11019   005310  0E00               	movlw	0
 11020   005312  6EC2               	movwf	194,c	;volatile
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;my_adc.c: 15: ADCON0bits.ADON = 1;
 11024   005314  80C2               	bsf	194,0,c	;volatile
 11025                           
 11026                           ;my_adc.c: 18: ADCON2 = 0b10001001;
 11027   005316  0E89               	movlw	137
 11028   005318  6EC0               	movwf	192,c	;volatile
 11029                           
 11030                           ; BSR set to: 0
 11031   00531A  0012               	return		;funcret
 11032   00531C                     __end_of_init_adc_no_lib:
 11033                           	callstack 0
 11034                           
 11035 ;; *************** function _initTimers *****************
 11036 ;; Defined at:
 11037 ;;		line 260 in file "Cooking_Main.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;		None
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, status,2, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 3F/0
 11048 ;;		On exit  : 3F/0
 11049 ;;		Unchanged: 3F/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;Total ram usage:        0 bytes
 11056 ;; Hardware stack levels used: 1
 11057 ;; Hardware stack levels required when called: 11
 11058 ;; This function calls:
 11059 ;;		_reloadTimer0
 11060 ;;		_reloadTimer3
 11061 ;; This function is called by:
 11062 ;;		_main
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text43
 11067   004FAE                     __ptext43:
 11068                           	callstack 0
 11069   004FAE                     _initTimers:
 11070                           	callstack 19
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;Cooking_Main.c: 261: T0CON = 0b00000011;
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;incstack = 0
 11077   004FAE  0E03               	movlw	3
 11078   004FB0  6ED5               	movwf	213,c	;volatile
 11079                           
 11080                           ;Cooking_Main.c: 262: T3CON = 0b00001000;
 11081   004FB2  0E08               	movlw	8
 11082   004FB4  6EB1               	movwf	177,c	;volatile
 11083                           
 11084                           ; BSR set to: 0
 11085                           ;Cooking_Main.c: 264: reloadTimer3();
 11086   004FB6  EC8E  F029         	call	_reloadTimer3	;wreg free
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;Cooking_Main.c: 265: reloadTimer0();
 11090   004FBA  EC93  F029         	call	_reloadTimer0	;wreg free
 11091                           
 11092                           ;Cooking_Main.c: 267: INTCON = 0b11110000;
 11093   004FBE  0EF0               	movlw	240
 11094   004FC0  6EF2               	movwf	242,c	;volatile
 11095                           
 11096                           ;Cooking_Main.c: 268: INTCON2 = 0b00000000;
 11097   004FC2  0E00               	movlw	0
 11098   004FC4  6EF1               	movwf	241,c	;volatile
 11099                           
 11100                           ;Cooking_Main.c: 269: INTCON3 = 0b00011000;
 11101   004FC6  0E18               	movlw	24
 11102   004FC8  6EF0               	movwf	240,c	;volatile
 11103                           
 11104                           ;Cooking_Main.c: 271: PIE1 = 0b00000100;
 11105   004FCA  0E04               	movlw	4
 11106   004FCC  6E9D               	movwf	157,c	;volatile
 11107                           
 11108                           ;Cooking_Main.c: 272: PIR1 = 0b00000000;
 11109   004FCE  0E00               	movlw	0
 11110   004FD0  6E9E               	movwf	158,c	;volatile
 11111                           
 11112                           ;Cooking_Main.c: 273: IPR1 = 0b00000000;
 11113   004FD2  0E00               	movlw	0
 11114   004FD4  6E9F               	movwf	159,c	;volatile
 11115                           
 11116                           ;Cooking_Main.c: 274: PIE2 = 0b00000010;
 11117   004FD6  0E02               	movlw	2
 11118   004FD8  6EA0               	movwf	160,c	;volatile
 11119                           
 11120                           ;Cooking_Main.c: 275: PIR2 = 0b00000000;
 11121   004FDA  0E00               	movlw	0
 11122   004FDC  6EA1               	movwf	161,c	;volatile
 11123                           
 11124                           ;Cooking_Main.c: 276: IPR2 = 0b00000000;
 11125   004FDE  0E00               	movlw	0
 11126   004FE0  6EA2               	movwf	162,c	;volatile
 11127                           
 11128                           ; BSR set to: 0
 11129   004FE2  0012               	return		;funcret
 11130   004FE4                     __end_of_initTimers:
 11131                           	callstack 0
 11132                           
 11133 ;; *************** function _reloadTimer3 *****************
 11134 ;; Defined at:
 11135 ;;		line 112 in file "Cooking_Main.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;		None
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		wreg, status,2
 11144 ;; Tracked objects:
 11145 ;;		On entry : 3F/0
 11146 ;;		On exit  : 3F/0
 11147 ;;		Unchanged: 3F/0
 11148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;Total ram usage:        0 bytes
 11154 ;; Hardware stack levels used: 1
 11155 ;; Hardware stack levels required when called: 10
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_initTimers
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text44
 11164   00531C                     __ptext44:
 11165                           	callstack 0
 11166   00531C                     _reloadTimer3:
 11167                           	callstack 19
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;Cooking_Main.c: 114: TMR3H = (unsigned char) ((0x63C0 >> 8) & 0x00FF);
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;incstack = 0
 11174   00531C  0E63               	movlw	99
 11175   00531E  6EB3               	movwf	179,c	;volatile
 11176                           
 11177                           ;Cooking_Main.c: 115: TMR3L = (unsigned char)(0x63C0 & 0x00FF );
 11178   005320  0EC0               	movlw	192
 11179   005322  6EB2               	movwf	178,c	;volatile
 11180                           
 11181                           ; BSR set to: 0
 11182   005324  0012               	return		;funcret
 11183   005326                     __end_of_reloadTimer3:
 11184                           	callstack 0
 11185                           
 11186 ;; *************** function _reloadTimer0 *****************
 11187 ;; Defined at:
 11188 ;;		line 105 in file "Cooking_Main.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;		None
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      void 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2
 11197 ;; Tracked objects:
 11198 ;;		On entry : 3F/0
 11199 ;;		On exit  : 3F/0
 11200 ;;		Unchanged: 3F/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;Total ram usage:        0 bytes
 11207 ;; Hardware stack levels used: 1
 11208 ;; Hardware stack levels required when called: 10
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_initTimers
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text45
 11217   005326                     __ptext45:
 11218                           	callstack 0
 11219   005326                     _reloadTimer0:
 11220                           	callstack 19
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;Cooking_Main.c: 107: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;incstack = 0
 11227   005326  0E0B               	movlw	11
 11228   005328  6ED7               	movwf	215,c	;volatile
 11229                           
 11230                           ;Cooking_Main.c: 108: TMR0L = (unsigned char)(3036 & 0x00FF );
 11231   00532A  0EDC               	movlw	220
 11232   00532C  6ED6               	movwf	214,c	;volatile
 11233                           
 11234                           ; BSR set to: 0
 11235   00532E  0012               	return		;funcret
 11236   005330                     __end_of_reloadTimer0:
 11237                           	callstack 0
 11238                           
 11239 ;; *************** function _highIsr *****************
 11240 ;; Defined at:
 11241 ;;		line 240 in file "Cooking_Main.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;Total ram usage:       10 bytes
 11260 ;; Hardware stack levels used: 1
 11261 ;; Hardware stack levels required when called: 9
 11262 ;; This function calls:
 11263 ;;		_Start_Int_Handling
 11264 ;;		_Stop_Int_Handling
 11265 ;;		_Timer0_Int_Handling
 11266 ;;		_Timer3_Int_Handling
 11267 ;;		_setting_Mode_Int_Handling
 11268 ;; This function is called by:
 11269 ;;		Interrupt level 2
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273                           	psect	intcode
 11274   000008                     __pintcode:
 11275                           	callstack 0
 11276   000008                     _highIsr:
 11277                           	callstack 13
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;incstack = 0
 11281   000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11282   00000A  ED79  F022         	call	int_func,f	;refresh shadow registers
 11283                           
 11284                           	psect	intcode_body
 11285   0044F2                     __pintcode_body:
 11286                           	callstack 13
 11287   0044F2                     int_func:
 11288                           	callstack 13
 11289   0044F2  0006               	pop		; remove dummy address from shadow register refresh
 11290   0044F4  CFE1 F073          	movff	fsr1l,??_highIsr
 11291   0044F8  CFE2 F074          	movff	fsr1h,??_highIsr+1
 11292   0044FC  CFD9 F075          	movff	fsr2l,??_highIsr+2
 11293   004500  CFDA F076          	movff	fsr2h,??_highIsr+3
 11294   004504  CFF3 F077          	movff	prodl,??_highIsr+4
 11295   004508  CFF4 F078          	movff	prodh,??_highIsr+5
 11296   00450C  CFF6 F079          	movff	tblptrl,??_highIsr+6
 11297   004510  CFF7 F07A          	movff	tblptrh,??_highIsr+7
 11298   004514  CFF8 F07B          	movff	tblptru,??_highIsr+8
 11299   004518  CFF5 F07C          	movff	tablat,??_highIsr+9
 11300                           
 11301                           ;Cooking_Main.c: 243: if(INTCONbits.TMR0IF) Timer0_Int_Handling();
 11302   00451C  B4F2               	btfsc	242,2,c	;volatile
 11303   00451E  EC01  F022         	call	_Timer0_Int_Handling	;wreg free
 11304                           
 11305                           ;Cooking_Main.c: 244: if(PIR2bits.TMR3IF) Timer3_Int_Handling();
 11306   004522  B2A1               	btfsc	161,1,c	;volatile
 11307   004524  EC09  F01F         	call	_Timer3_Int_Handling	;wreg free
 11308                           
 11309                           ;Cooking_Main.c: 245: if(INTCONbits.INT0F) setting_Mode_Int_Handling();
 11310   004528  B2F2               	btfsc	242,1,c	;volatile
 11311   00452A  EC23  F028         	call	_setting_Mode_Int_Handling	;wreg free
 11312                           
 11313                           ;Cooking_Main.c: 246: if(INTCON3bits.INT1F) Start_Int_Handling();
 11314   00452E  B0F0               	btfsc	240,0,c	;volatile
 11315   004530  EC1E  F027         	call	_Start_Int_Handling	;wreg free
 11316                           
 11317                           ;Cooking_Main.c: 247: if(INTCON3bits.INT2F) Stop_Int_Handling();
 11318   004534  B2F0               	btfsc	240,1,c	;volatile
 11319   004536  EC7A  F028         	call	_Stop_Int_Handling	;wreg free
 11320   00453A  C07C  FFF5         	movff	??_highIsr+9,tablat
 11321   00453E  C07B  FFF8         	movff	??_highIsr+8,tblptru
 11322   004542  C07A  FFF7         	movff	??_highIsr+7,tblptrh
 11323   004546  C079  FFF6         	movff	??_highIsr+6,tblptrl
 11324   00454A  C078  FFF4         	movff	??_highIsr+5,prodh
 11325   00454E  C077  FFF3         	movff	??_highIsr+4,prodl
 11326   004552  C076  FFDA         	movff	??_highIsr+3,fsr2h
 11327   004556  C075  FFD9         	movff	??_highIsr+2,fsr2l
 11328   00455A  C074  FFE2         	movff	??_highIsr+1,fsr1h
 11329   00455E  C073  FFE1         	movff	??_highIsr,fsr1l
 11330   004562  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11331   004564  0011               	retfie		f
 11332   004566                     __end_of_highIsr:
 11333                           	callstack 0
 11334                           
 11335 ;; *************** function _setting_Mode_Int_Handling *****************
 11336 ;; Defined at:
 11337 ;;		line 199 in file "Cooking_Main.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;		None
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;		None
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1    wreg      void 
 11344 ;; Registers used:
 11345 ;;		wreg, status,2, status,0, cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;Total ram usage:        0 bytes
 11356 ;; Hardware stack levels used: 1
 11357 ;; Hardware stack levels required when called: 1
 11358 ;; This function calls:
 11359 ;;		i2_delay_ms
 11360 ;; This function is called by:
 11361 ;;		_highIsr
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text47
 11366   005046                     __ptext47:
 11367                           	callstack 0
 11368   005046                     _setting_Mode_Int_Handling:
 11369                           	callstack 20
 11370                           
 11371                           ;Cooking_Main.c: 201: INTCONbits.INT0F = 0;
 11372                           
 11373                           ;incstack = 0
 11374   005046  92F2               	bcf	242,1,c	;volatile
 11375                           
 11376                           ;Cooking_Main.c: 202: delay_ms(40);
 11377   005048  0E00               	movlw	0
 11378   00504A  6E02               	movwf	(i2delay_ms@n+1)^0,c
 11379   00504C  0E28               	movlw	40
 11380   00504E  6E01               	movwf	i2delay_ms@n^0,c
 11381   005050  ECED  F028         	call	i2_delay_ms	;wreg free
 11382                           
 11383                           ;Cooking_Main.c: 203: if(PORTBbits.RB0)
 11384   005054  B081               	btfsc	129,0,c	;volatile
 11385   005056  0012               	return	
 11386                           
 11387                           ;Cooking_Main.c: 206: if(Setting_Mode == 6)
 11388   005058  0E06               	movlw	6
 11389   00505A  0101               	movlb	1	; () banked
 11390   00505C  198D               	xorwf	_Setting_Mode& (0+255),w,b
 11391   00505E  118E               	iorwf	(_Setting_Mode+1)& (0+255),w,b
 11392   005060  A4D8               	btfss	status,2,c
 11393   005062  D005               	goto	i2l8134
 11394                           
 11395                           ; BSR set to: 1
 11396                           ;Cooking_Main.c: 207: Setting_Mode = 0;
 11397   005064  0E00               	movlw	0
 11398   005066  6F8E               	movwf	(_Setting_Mode+1)& (0+255),b
 11399   005068  0E00               	movlw	0
 11400   00506A  6F8D               	movwf	_Setting_Mode& (0+255),b
 11401   00506C  0012               	return	
 11402   00506E                     i2l8134:
 11403                           
 11404                           ; BSR set to: 1
 11405                           ;Cooking_Main.c: 208: else;Cooking_Main.c: 209: Setting_Mode ++;
 11406   00506E  4B8D               	infsnz	_Setting_Mode& (0+255),f,b
 11407   005070  2B8E               	incf	(_Setting_Mode+1)& (0+255),f,b
 11408   005072  0012               	return		;funcret
 11409   005074                     __end_of_setting_Mode_Int_Handling:
 11410                           	callstack 0
 11411                           
 11412 ;; *************** function _Timer3_Int_Handling *****************
 11413 ;; Defined at:
 11414 ;;		line 167 in file "Cooking_Main.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;		None
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  error           2   74[COMRAM] unsigned int 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg, status,2, status,0, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 3E/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;Total ram usage:        2 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 3
 11435 ;; This function calls:
 11436 ;;		_Heating_Control
 11437 ;;		___lwtoft
 11438 ;;		i2___ftadd
 11439 ;;		i2___ftge
 11440 ;;		i2___ftsub
 11441 ;;		i2___fttol
 11442 ;;		i2_reloadTimer3
 11443 ;; This function is called by:
 11444 ;;		_highIsr
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text48
 11449   003E12                     __ptext48:
 11450                           	callstack 0
 11451   003E12                     _Timer3_Int_Handling:
 11452                           	callstack 18
 11453                           
 11454                           ;Cooking_Main.c: 169: PIR2bits.TMR3IF = 0;
 11455                           
 11456                           ;incstack = 0
 11457   003E12  92A1               	bcf	161,1,c	;volatile
 11458                           
 11459                           ;Cooking_Main.c: 171: if(Cooking == 0)
 11460   003E14  0101               	movlb	1	; () banked
 11461   003E16  518B               	movf	_Cooking& (0+255),w,b
 11462   003E18  118C               	iorwf	(_Cooking+1)& (0+255),w,b
 11463   003E1A  A4D8               	btfss	status,2,c
 11464   003E1C  D005               	goto	i2l8096
 11465                           
 11466                           ; BSR set to: 1
 11467                           ;Cooking_Main.c: 172: {;Cooking_Main.c: 173: Heating = 0;
 11468   003E1E  0E00               	movlw	0
 11469   003E20  6F8A               	movwf	(_Heating+1)& (0+255),b
 11470   003E22  0E00               	movlw	0
 11471   003E24  6F89               	movwf	_Heating& (0+255),b
 11472   003E26  0012               	return	
 11473   003E28                     i2l8096:
 11474                           
 11475                           ; BSR set to: 1
 11476                           ;Cooking_Main.c: 175: };Cooking_Main.c: 176: if(Cooking_Mode == 0)
 11477   003E28  507D               	movf	_Cooking_Mode^0,w,c
 11478   003E2A  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 11479   003E2C  A4D8               	btfss	status,2,c
 11480   003E2E  D003               	goto	i2l8100
 11481   003E30                     i2u986_40:
 11482                           
 11483                           ;Cooking_Main.c: 177: {;Cooking_Main.c: 178: Heating_Control();
 11484   003E30  ECB3  F022         	call	_Heating_Control	;wreg free
 11485                           
 11486                           ;Cooking_Main.c: 179: }
 11487   003E34  D059               	goto	i2l8120
 11488   003E36                     i2l8100:
 11489                           
 11490                           ; BSR set to: 1
 11491                           ;Cooking_Main.c: 183: if(Cooking_Temp > (SetUp_Point + Hysteresis))
 11492                           
 11493                           ; BSR set to: 1
 11494   003E36  C17F  F02D         	movff	_SetUp_Point,i2___ftadd@f2
 11495   003E3A  C180  F02E         	movff	_SetUp_Point+1,i2___ftadd@f2+1
 11496   003E3E  C181  F02F         	movff	_SetUp_Point+2,i2___ftadd@f2+2
 11497   003E42  C187  F009         	movff	_Hysteresis,___lwtoft@c
 11498   003E46  C188  F00A         	movff	_Hysteresis+1,___lwtoft@c+1
 11499   003E4A  EC00  F029         	call	___lwtoft	;wreg free
 11500   003E4E  C009  F02A         	movff	?___lwtoft,i2___ftadd@f1
 11501   003E52  C00A  F02B         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11502   003E56  C00B  F02C         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11503   003E5A  ECB9  F018         	call	i2___ftadd	;wreg free
 11504   003E5E  C02A  F036         	movff	?i2___ftadd,i2___ftge@ff1
 11505   003E62  C02B  F037         	movff	?i2___ftadd+1,i2___ftge@ff1+1
 11506   003E66  C02C  F038         	movff	?i2___ftadd+2,i2___ftge@ff1+2
 11507   003E6A  C182  F039         	movff	_Cooking_Temp,i2___ftge@ff2
 11508   003E6E  C183  F03A         	movff	_Cooking_Temp+1,i2___ftge@ff2+1
 11509   003E72  C184  F03B         	movff	_Cooking_Temp+2,i2___ftge@ff2+2
 11510   003E76  ECED  F022         	call	i2___ftge	;wreg free
 11511   003E7A  B0D8               	btfsc	status,0,c
 11512   003E7C  D002               	goto	i2l8106
 11513                           
 11514                           ;Cooking_Main.c: 184: {;Cooking_Main.c: 186: PORTCbits.RC5 = 0;
 11515   003E7E  9A82               	bcf	130,5,c	;volatile
 11516                           
 11517                           ;Cooking_Main.c: 187: }
 11518   003E80  D7D7               	goto	i2u986_40
 11519   003E82                     i2l8106:
 11520                           
 11521                           ;Cooking_Main.c: 188: else {;Cooking_Main.c: 189: error = (int)(SetUp_Point - Cooking_Te
      +                          mp);
 11522   003E82  C182  F039         	movff	_Cooking_Temp,i2___ftsub@f2
 11523   003E86  C183  F03A         	movff	_Cooking_Temp+1,i2___ftsub@f2+1
 11524   003E8A  C184  F03B         	movff	_Cooking_Temp+2,i2___ftsub@f2+2
 11525   003E8E  C17F  F036         	movff	_SetUp_Point,i2___ftsub@f1
 11526   003E92  C180  F037         	movff	_SetUp_Point+1,i2___ftsub@f1+1
 11527   003E96  C181  F038         	movff	_SetUp_Point+2,i2___ftsub@f1+2
 11528   003E9A  EC5F  F027         	call	i2___ftsub	;wreg free
 11529   003E9E  C036  F03C         	movff	?i2___ftsub,i2___fttol@f1
 11530   003EA2  C037  F03D         	movff	?i2___ftsub+1,i2___fttol@f1+1
 11531   003EA6  C038  F03E         	movff	?i2___ftsub+2,i2___fttol@f1+2
 11532   003EAA  ECE2  F01F         	call	i2___fttol	;wreg free
 11533   003EAE  C03C  F04B         	movff	?i2___fttol,Timer3_Int_Handling@error
 11534   003EB2  C03D  F04C         	movff	?i2___fttol+1,Timer3_Int_Handling@error+1
 11535                           
 11536                           ;Cooking_Main.c: 190: if(error > 10) error = 10;
 11537   003EB6  504C               	movf	(Timer3_Int_Handling@error+1)^0,w,c
 11538   003EB8  E104               	bnz	i2u988_40
 11539   003EBA  0E0B               	movlw	11
 11540   003EBC  5C4B               	subwf	Timer3_Int_Handling@error^0,w,c
 11541   003EBE  A0D8               	btfss	status,0,c
 11542   003EC0  D004               	goto	i2l8112
 11543   003EC2                     i2u988_40:
 11544   003EC2  0E00               	movlw	0
 11545   003EC4  6E4C               	movwf	(Timer3_Int_Handling@error+1)^0,c
 11546   003EC6  0E0A               	movlw	10
 11547   003EC8  D009               	goto	L25
 11548   003ECA                     i2l8112:
 11549                           
 11550                           ;Cooking_Main.c: 191: else if( error < 5) error = 5;
 11551   003ECA  504C               	movf	(Timer3_Int_Handling@error+1)^0,w,c
 11552   003ECC  E108               	bnz	i2l8116
 11553   003ECE  0E05               	movlw	5
 11554   003ED0  5C4B               	subwf	Timer3_Int_Handling@error^0,w,c
 11555   003ED2  B0D8               	btfsc	status,0,c
 11556   003ED4  D004               	goto	i2l8116
 11557   003ED6  0E00               	movlw	0
 11558   003ED8  6E4C               	movwf	(Timer3_Int_Handling@error+1)^0,c
 11559   003EDA  0E05               	movlw	5
 11560   003EDC                     L25:
 11561   003EDC  6E4B               	movwf	Timer3_Int_Handling@error^0,c
 11562   003EDE                     i2l8116:
 11563                           
 11564                           ;Cooking_Main.c: 192: Percent_Heat_Counter = error;
 11565   003EDE  C04B  F185         	movff	Timer3_Int_Handling@error,_Percent_Heat_Counter
 11566   003EE2  C04C  F186         	movff	Timer3_Int_Handling@error+1,_Percent_Heat_Counter+1
 11567   003EE6  D7A4               	goto	i2u986_40
 11568   003EE8                     i2l8120:
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;Cooking_Main.c: 195: };Cooking_Main.c: 196: reloadTimer3();
 11572   003EE8  EC98  F029         	call	i2_reloadTimer3	;wreg free
 11573   003EEC  0012               	return		;funcret
 11574   003EEE                     __end_of_Timer3_Int_Handling:
 11575                           	callstack 0
 11576                           
 11577 ;; *************** function i2_reloadTimer3 *****************
 11578 ;; Defined at:
 11579 ;;		line 112 in file "Cooking_Main.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;		None
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;		None
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      void 
 11586 ;; Registers used:
 11587 ;;		wreg, status,2
 11588 ;; Tracked objects:
 11589 ;;		On entry : 3F/0
 11590 ;;		On exit  : 3F/0
 11591 ;;		Unchanged: 3F/0
 11592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;Total ram usage:        0 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; This function calls:
 11600 ;;		Nothing
 11601 ;; This function is called by:
 11602 ;;		_Timer3_Int_Handling
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text49
 11607   005330                     __ptext49:
 11608                           	callstack 0
 11609   005330                     i2_reloadTimer3:
 11610                           	callstack 20
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;Cooking_Main.c: 114: TMR3H = (unsigned char) ((0x63C0 >> 8) & 0x00FF);
 11614                           
 11615                           ;incstack = 0
 11616   005330  0E63               	movlw	99
 11617   005332  6EB3               	movwf	179,c	;volatile
 11618                           
 11619                           ;Cooking_Main.c: 115: TMR3L = (unsigned char)(0x63C0 & 0x00FF );
 11620   005334  0EC0               	movlw	192
 11621   005336  6EB2               	movwf	178,c	;volatile
 11622                           
 11623                           ; BSR set to: 0
 11624   005338  0012               	return		;funcret
 11625   00533A                     __end_ofi2_reloadTimer3:
 11626                           	callstack 0
 11627                           
 11628 ;; *************** function ___lwtoft *****************
 11629 ;; Defined at:
 11630 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  c               2    8[COMRAM] unsigned int 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  3    8[COMRAM] float 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 3F/1
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11644 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;Total ram usage:        3 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 1
 11651 ;; This function calls:
 11652 ;;		i2___ftpack
 11653 ;; This function is called by:
 11654 ;;		_Timer3_Int_Handling
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           	psect	text50
 11659   005200                     __ptext50:
 11660                           	callstack 0
 11661   005200                     ___lwtoft:
 11662                           	callstack 19
 11663                           
 11664                           ; BSR set to: 1
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;incstack = 0
 11668   005200  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 11669   005204  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 11670   005208  6A03               	clrf	(i2___ftpack@arg+2)^0,c
 11671   00520A  0E8E               	movlw	142
 11672   00520C  6E04               	movwf	i2___ftpack@exp^0,c
 11673   00520E  0E00               	movlw	0
 11674   005210  6E05               	movwf	i2___ftpack@sign^0,c
 11675   005212  ECA3  F020         	call	i2___ftpack	;wreg free
 11676   005216  C001  F009         	movff	?i2___ftpack,?___lwtoft
 11677   00521A  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 11678   00521E  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 11679   005222  0012               	return		;funcret
 11680   005224                     __end_of___lwtoft:
 11681                           	callstack 0
 11682                           
 11683 ;; *************** function _Heating_Control *****************
 11684 ;; Defined at:
 11685 ;;		line 145 in file "Cooking_Main.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;		None
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1    wreg      void 
 11692 ;; Registers used:
 11693 ;;		wreg, status,2, status,0
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/1
 11696 ;;		On exit  : 3F/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11703 ;;Total ram usage:        0 bytes
 11704 ;; Hardware stack levels used: 1
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_Timer3_Int_Handling
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text51
 11713   004566                     __ptext51:
 11714                           	callstack 0
 11715   004566                     _Heating_Control:
 11716                           	callstack 20
 11717                           
 11718                           ;Cooking_Main.c: 147: if(Int_Heat_Counter > 0 && Int_Heat_Counter <= Percent_Heat_Counte
      +                          r)
 11719                           
 11720                           ;incstack = 0
 11721   004566  0100               	movlb	0	; () banked
 11722   004568  51C8               	movf	_Int_Heat_Counter& (0+255),w,b
 11723   00456A  11C9               	iorwf	(_Int_Heat_Counter+1)& (0+255),w,b
 11724   00456C  B4D8               	btfsc	status,2,c
 11725   00456E  D00F               	goto	i2l7840
 11726                           
 11727                           ; BSR set to: 0
 11728   004570  51C8               	movf	_Int_Heat_Counter& (0+255),w,b
 11729   004572  0101               	movlb	1	; () banked
 11730   004574  5D85               	subwf	_Percent_Heat_Counter& (0+255),w,b
 11731   004576  0100               	movlb	0	; () banked
 11732   004578  51C9               	movf	(_Int_Heat_Counter+1)& (0+255),w,b
 11733   00457A  0101               	movlb	1	; () banked
 11734   00457C  5986               	subwfb	(_Percent_Heat_Counter+1)& (0+255),w,b
 11735   00457E  A0D8               	btfss	status,0,c
 11736   004580  D006               	goto	i2l7840
 11737                           
 11738                           ; BSR set to: 1
 11739                           ;Cooking_Main.c: 148: {;Cooking_Main.c: 149: PORTCbits.RC5 = 1;
 11740   004582  8A82               	bsf	130,5,c	;volatile
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;Cooking_Main.c: 150: Heating = 1;
 11744   004584  0E00               	movlw	0
 11745   004586  6F8A               	movwf	(_Heating+1)& (0+255),b
 11746   004588  0E01               	movlw	1
 11747   00458A  6F89               	movwf	_Heating& (0+255),b
 11748                           
 11749                           ;Cooking_Main.c: 151: }
 11750   00458C  D022               	goto	i2l7854
 11751   00458E                     i2l7840:
 11752                           
 11753                           ;Cooking_Main.c: 152: else if(Int_Heat_Counter > Percent_Heat_Counter && Int_Heat_Counte
      +                          r <= 10)
 11754   00458E  0100               	movlb	0	; () banked
 11755   004590  51C8               	movf	_Int_Heat_Counter& (0+255),w,b
 11756   004592  0101               	movlb	1	; () banked
 11757   004594  5D85               	subwf	_Percent_Heat_Counter& (0+255),w,b
 11758   004596  0100               	movlb	0	; () banked
 11759   004598  51C9               	movf	(_Int_Heat_Counter+1)& (0+255),w,b
 11760   00459A  0101               	movlb	1	; () banked
 11761   00459C  5986               	subwfb	(_Percent_Heat_Counter+1)& (0+255),w,b
 11762   00459E  B0D8               	btfsc	status,0,c
 11763   0045A0  D018               	goto	i2l7854
 11764                           
 11765                           ; BSR set to: 1
 11766   0045A2  0100               	movlb	0	; () banked
 11767   0045A4  51C9               	movf	(_Int_Heat_Counter+1)& (0+255),w,b
 11768   0045A6  E115               	bnz	i2l7854
 11769   0045A8  0E0B               	movlw	11
 11770   0045AA  5DC8               	subwf	_Int_Heat_Counter& (0+255),w,b
 11771   0045AC  B0D8               	btfsc	status,0,c
 11772   0045AE  D011               	goto	i2l7854
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;Cooking_Main.c: 153: {;Cooking_Main.c: 154: PORTCbits.RC5 = 0;
 11776   0045B0  9A82               	bcf	130,5,c	;volatile
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;Cooking_Main.c: 155: Heating = 0;
 11780   0045B2  0E00               	movlw	0
 11781   0045B4  0101               	movlb	1	; () banked
 11782   0045B6  6F8A               	movwf	(_Heating+1)& (0+255),b
 11783   0045B8  0E00               	movlw	0
 11784   0045BA  6F89               	movwf	_Heating& (0+255),b
 11785                           
 11786                           ; BSR set to: 1
 11787                           ;Cooking_Main.c: 156: if(Int_Heat_Counter == 10)
 11788   0045BC  0E0A               	movlw	10
 11789   0045BE  0100               	movlb	0	; () banked
 11790   0045C0  19C8               	xorwf	_Int_Heat_Counter& (0+255),w,b
 11791   0045C2  11C9               	iorwf	(_Int_Heat_Counter+1)& (0+255),w,b
 11792   0045C4  A4D8               	btfss	status,2,c
 11793   0045C6  D005               	goto	i2l7854
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;Cooking_Main.c: 157: {;Cooking_Main.c: 158: Int_Heat_Counter = 0;
 11797   0045C8  0E00               	movlw	0
 11798   0045CA  6FC9               	movwf	(_Int_Heat_Counter+1)& (0+255),b
 11799   0045CC  0E00               	movlw	0
 11800   0045CE  6FC8               	movwf	_Int_Heat_Counter& (0+255),b
 11801   0045D0  0012               	return	
 11802   0045D2                     i2l7854:
 11803                           
 11804                           ;Cooking_Main.c: 160: };Cooking_Main.c: 161: };Cooking_Main.c: 162: Int_Heat_Counter ++;
 11805   0045D2  0100               	movlb	0	; () banked
 11806   0045D4  4BC8               	infsnz	_Int_Heat_Counter& (0+255),f,b
 11807   0045D6  2BC9               	incf	(_Int_Heat_Counter+1)& (0+255),f,b
 11808                           
 11809                           ; BSR set to: 0
 11810   0045D8  0012               	return		;funcret
 11811   0045DA                     __end_of_Heating_Control:
 11812                           	callstack 0
 11813                           
 11814 ;; *************** function _Timer0_Int_Handling *****************
 11815 ;; Defined at:
 11816 ;;		line 118 in file "Cooking_Main.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;Total ram usage:        0 bytes
 11835 ;; Hardware stack levels used: 1
 11836 ;; Hardware stack levels required when called: 8
 11837 ;; This function calls:
 11838 ;;		i2_reloadTimer0
 11839 ;;		i2_update_lcd
 11840 ;; This function is called by:
 11841 ;;		_highIsr
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text52
 11846   004402                     __ptext52:
 11847                           	callstack 0
 11848   004402                     _Timer0_Int_Handling:
 11849                           	callstack 13
 11850                           
 11851                           ;Cooking_Main.c: 120: INTCONbits.TMR0IF = 0;
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;incstack = 0
 11855   004402  94F2               	bcf	242,2,c	;volatile
 11856                           
 11857                           ;Cooking_Main.c: 121: if(count_hour == 0 && count_min == 0 && count_sec == 0)
 11858   004404  0100               	movlb	0	; () banked
 11859   004406  51CA               	movf	_count_hour& (0+255),w,b
 11860   004408  11CB               	iorwf	(_count_hour+1)& (0+255),w,b
 11861   00440A  A4D8               	btfss	status,2,c
 11862   00440C  D018               	goto	i2l9806
 11863                           
 11864                           ; BSR set to: 0
 11865   00440E  51CC               	movf	_count_min& (0+255),w,b
 11866   004410  11CD               	iorwf	(_count_min+1)& (0+255),w,b
 11867   004412  A4D8               	btfss	status,2,c
 11868   004414  D014               	goto	i2l9806
 11869                           
 11870                           ; BSR set to: 0
 11871   004416  51CE               	movf	_count_sec& (0+255),w,b
 11872   004418  11CF               	iorwf	(_count_sec+1)& (0+255),w,b
 11873   00441A  A4D8               	btfss	status,2,c
 11874   00441C  D010               	goto	i2l9806
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;Cooking_Main.c: 122: {;Cooking_Main.c: 123: Buzzer_ON = 1;
 11878   00441E  0E00               	movlw	0
 11879   004420  6FD1               	movwf	(_Buzzer_ON+1)& (0+255),b
 11880   004422  0E01               	movlw	1
 11881   004424  6FD0               	movwf	_Buzzer_ON& (0+255),b
 11882                           
 11883                           ;Cooking_Main.c: 124: Cooking = 0;
 11884   004426  0E00               	movlw	0
 11885   004428  0101               	movlb	1	; () banked
 11886   00442A  6F8C               	movwf	(_Cooking+1)& (0+255),b
 11887   00442C  0E00               	movlw	0
 11888   00442E  6F8B               	movwf	_Cooking& (0+255),b
 11889                           
 11890                           ;Cooking_Main.c: 125: Heating = 0;
 11891   004430  0E00               	movlw	0
 11892   004432  6F8A               	movwf	(_Heating+1)& (0+255),b
 11893   004434  0E00               	movlw	0
 11894   004436  6F89               	movwf	_Heating& (0+255),b
 11895                           
 11896                           ; BSR set to: 1
 11897                           ;Cooking_Main.c: 126: update_lcd();
 11898   004438  EC7F  F029         	call	i2_update_lcd	;wreg free
 11899   00443C  0012               	return	
 11900   00443E                     i2l9806:
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;Cooking_Main.c: 128: };Cooking_Main.c: 129: count_sec--;
 11904   00443E  07CE               	decf	_count_sec& (0+255),f,b
 11905   004440  A0D8               	btfss	status,0,c
 11906   004442  07CF               	decf	(_count_sec+1)& (0+255),f,b
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;Cooking_Main.c: 130: if(count_sec < 0) {
 11910   004444  AFCF               	btfss	(_count_sec+1)& (0+255),7,b
 11911   004446  D007               	goto	i2l9814
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;Cooking_Main.c: 131: count_min--;
 11915   004448  07CC               	decf	_count_min& (0+255),f,b
 11916   00444A  A0D8               	btfss	status,0,c
 11917   00444C  07CD               	decf	(_count_min+1)& (0+255),f,b
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;Cooking_Main.c: 132: count_sec = 59;
 11921   00444E  0E00               	movlw	0
 11922   004450  6FCF               	movwf	(_count_sec+1)& (0+255),b
 11923   004452  0E3B               	movlw	59
 11924   004454  6FCE               	movwf	_count_sec& (0+255),b
 11925   004456                     i2l9814:
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;Cooking_Main.c: 133: };Cooking_Main.c: 134: if(count_min < 0) {
 11929   004456  AFCD               	btfss	(_count_min+1)& (0+255),7,b
 11930   004458  D007               	goto	i2l9820
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;Cooking_Main.c: 135: count_hour--;
 11934   00445A  07CA               	decf	_count_hour& (0+255),f,b
 11935   00445C  A0D8               	btfss	status,0,c
 11936   00445E  07CB               	decf	(_count_hour+1)& (0+255),f,b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;Cooking_Main.c: 136: count_min = 59;
 11940   004460  0E00               	movlw	0
 11941   004462  6FCD               	movwf	(_count_min+1)& (0+255),b
 11942   004464  0E3B               	movlw	59
 11943   004466  6FCC               	movwf	_count_min& (0+255),b
 11944   004468                     i2l9820:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;Cooking_Main.c: 137: };Cooking_Main.c: 138: if(count_hour < 0){
 11948   004468  AFCB               	btfss	(_count_hour+1)& (0+255),7,b
 11949   00446A  D004               	goto	i2l9824
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;Cooking_Main.c: 139: count_hour = 0;
 11953   00446C  0E00               	movlw	0
 11954   00446E  6FCB               	movwf	(_count_hour+1)& (0+255),b
 11955   004470  0E00               	movlw	0
 11956   004472  6FCA               	movwf	_count_hour& (0+255),b
 11957   004474                     i2l9824:
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;Cooking_Main.c: 140: };Cooking_Main.c: 141: update_lcd();
 11961   004474  EC7F  F029         	call	i2_update_lcd	;wreg free
 11962                           
 11963                           ;Cooking_Main.c: 142: reloadTimer0();
 11964   004478  EC9D  F029         	call	i2_reloadTimer0	;wreg free
 11965   00447C  0012               	return		;funcret
 11966   00447E                     __end_of_Timer0_Int_Handling:
 11967                           	callstack 0
 11968                           
 11969 ;; *************** function i2_update_lcd *****************
 11970 ;; Defined at:
 11971 ;;		line 414 in file "Cooking_Main.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  1    wreg      void 
 11978 ;; Registers used:
 11979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11980 ;; Tracked objects:
 11981 ;;		On entry : 3E/1
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;Total ram usage:        0 bytes
 11990 ;; Hardware stack levels used: 1
 11991 ;; Hardware stack levels required when called: 7
 11992 ;; This function calls:
 11993 ;;		i2_update_lcd_Line1
 11994 ;;		i2_update_lcd_Line2
 11995 ;;		i2_update_lcd_Line3
 11996 ;;		i2_update_lcd_Line4
 11997 ;; This function is called by:
 11998 ;;		_Timer0_Int_Handling
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text53
 12003   0052FE                     __ptext53:
 12004                           	callstack 0
 12005   0052FE                     i2_update_lcd:
 12006                           	callstack 13
 12007                           
 12008                           ;Cooking_Main.c: 415: update_lcd_Line1();
 12009                           
 12010                           ;incstack = 0
 12011   0052FE  EC95  F025         	call	i2_update_lcd_Line1	;wreg free
 12012                           
 12013                           ;Cooking_Main.c: 416: update_lcd_Line2();
 12014   005302  EC07  F025         	call	i2_update_lcd_Line2	;wreg free
 12015                           
 12016                           ;Cooking_Main.c: 417: update_lcd_Line3();
 12017   005306  ECD6  F024         	call	i2_update_lcd_Line3	;wreg free
 12018                           
 12019                           ;Cooking_Main.c: 418: update_lcd_Line4();
 12020   00530A  ECB5  F01A         	call	i2_update_lcd_Line4	;wreg free
 12021   00530E  0012               	return		;funcret
 12022   005310                     __end_ofi2_update_lcd:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function i2_update_lcd_Line4 *****************
 12026 ;; Defined at:
 12027 ;;		line 363 in file "Cooking_Main.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;		None
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;  Buffer         16   92[COMRAM] unsigned char [16]
 12032 ;;  P               3    0        PTR unsigned char 
 12033 ;;  MD              2  112[COMRAM] PTR unsigned char 
 12034 ;;		 -> STR_16(4), STR_15(4), STR_14(3), STR_13(4), 
 12035 ;;		 -> STR_12(4), STR_11(4), STR_10(4), 
 12036 ;;  H               2  110[COMRAM] int 
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/1
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;Total ram usage:       24 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; Hardware stack levels required when called: 6
 12053 ;; This function calls:
 12054 ;;		i2___wmul
 12055 ;;		i2_lcd_gotoxy
 12056 ;;		i2_lcd_puts
 12057 ;;		i2_sprintf
 12058 ;; This function is called by:
 12059 ;;		i2_update_lcd
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text54
 12064   00356A                     __ptext54:
 12065                           	callstack 0
 12066   00356A                     i2_update_lcd_Line4:
 12067                           	callstack 13
 12068                           
 12069                           ;Cooking_Main.c: 364: unsigned char Buffer[16];;Cooking_Main.c: 365: int H = Hysteresis;
 12070                           
 12071                           ;incstack = 0
 12072   00356A  C187  F06F         	movff	_Hysteresis,i2update_lcd_Line4@H
 12073   00356E  C188  F070         	movff	_Hysteresis+1,i2update_lcd_Line4@H+1
 12074                           
 12075                           ;Cooking_Main.c: 366: unsigned char *MD;;Cooking_Main.c: 367: unsigned char *P;;Cooking_
      +                          Main.c: 369: switch(Setting_Mode)
 12076   003572  D01D               	goto	i2l9622
 12077   003574                     i2l9606:
 12078                           
 12079                           ;Cooking_Main.c: 372: MD = "Sec";
 12080   003574  0EF1               	movlw	low STR_10
 12081   003576  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12082   003578  0EFF               	movlw	high STR_10
 12083   00357A  D017               	goto	L31
 12084   00357C                     i2l9608:
 12085                           
 12086                           ;Cooking_Main.c: 375: MD = "10S";
 12087   00357C  0EE9               	movlw	low STR_11
 12088   00357E  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12089   003580  0EFF               	movlw	high STR_11
 12090   003582  D013               	goto	L31
 12091   003584                     i2l9610:
 12092                           
 12093                           ;Cooking_Main.c: 378: MD = "Min";
 12094   003584  0EF5               	movlw	low STR_12
 12095   003586  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12096   003588  0EFF               	movlw	high STR_12
 12097   00358A  D00F               	goto	L31
 12098   00358C                     i2l9612:
 12099                           
 12100                           ;Cooking_Main.c: 381: MD = "10M";
 12101   00358C  0EE5               	movlw	low STR_13
 12102   00358E  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12103   003590  0EFF               	movlw	high STR_13
 12104   003592  D00B               	goto	L31
 12105   003594                     i2l9614:
 12106                           
 12107                           ;Cooking_Main.c: 384: MD = "HR";
 12108   003594  0EFC               	movlw	low STR_14
 12109   003596  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12110   003598  0EFF               	movlw	high STR_14
 12111   00359A  D007               	goto	L31
 12112   00359C                     i2l9616:
 12113                           
 12114                           ;Cooking_Main.c: 387: MD = "HYS";
 12115   00359C  0EED               	movlw	low STR_15
 12116   00359E  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12117   0035A0  0EFF               	movlw	high STR_15
 12118   0035A2  D003               	goto	L31
 12119   0035A4                     i2l9618:
 12120                           
 12121                           ;Cooking_Main.c: 390: MD = "HT%";
 12122   0035A4  0EDD               	movlw	low STR_16
 12123   0035A6  6E71               	movwf	i2update_lcd_Line4@MD^0,c
 12124   0035A8  0EFF               	movlw	high STR_16
 12125   0035AA                     L31:
 12126   0035AA  6E72               	movwf	(i2update_lcd_Line4@MD+1)^0,c
 12127                           
 12128                           ;Cooking_Main.c: 391: break;
 12129   0035AC  D01E               	goto	i2l9624
 12130   0035AE                     i2l9622:
 12131   0035AE  C18D  F05B         	movff	_Setting_Mode,??i2_update_lcd_Line4
 12132   0035B2  C18E  F05C         	movff	_Setting_Mode+1,??i2_update_lcd_Line4+1
 12133                           
 12134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12135                           ; Switch size 1, requested type "simple"
 12136                           ; Number of cases is 1, Range of values is 0 to 0
 12137                           ; switch strategies available:
 12138                           ; Name         Instructions Cycles
 12139                           ; simple_byte            4     3 (average)
 12140                           ;	Chosen strategy is simple_byte
 12141   0035B6  505C               	movf	(??i2_update_lcd_Line4+1)^0,w,c
 12142   0035B8  0A00               	xorlw	0	; case 0
 12143   0035BA  A4D8               	btfss	status,2,c
 12144   0035BC  D016               	goto	i2l9624
 12145                           
 12146                           ; Switch size 1, requested type "simple"
 12147                           ; Number of cases is 7, Range of values is 0 to 6
 12148                           ; switch strategies available:
 12149                           ; Name         Instructions Cycles
 12150                           ; simple_byte           22    12 (average)
 12151                           ;	Chosen strategy is simple_byte
 12152   0035BE  505B               	movf	??i2_update_lcd_Line4^0,w,c
 12153   0035C0  0A00               	xorlw	0	; case 0
 12154   0035C2  B4D8               	btfsc	status,2,c
 12155   0035C4  D7D7               	goto	i2l9606
 12156   0035C6  0A01               	xorlw	1	; case 1
 12157   0035C8  B4D8               	btfsc	status,2,c
 12158   0035CA  D7D8               	goto	i2l9608
 12159   0035CC  0A03               	xorlw	3	; case 2
 12160   0035CE  B4D8               	btfsc	status,2,c
 12161   0035D0  D7D9               	goto	i2l9610
 12162   0035D2  0A01               	xorlw	1	; case 3
 12163   0035D4  B4D8               	btfsc	status,2,c
 12164   0035D6  D7DA               	goto	i2l9612
 12165   0035D8  0A07               	xorlw	7	; case 4
 12166   0035DA  B4D8               	btfsc	status,2,c
 12167   0035DC  D7DB               	goto	i2l9614
 12168   0035DE  0A01               	xorlw	1	; case 5
 12169   0035E0  B4D8               	btfsc	status,2,c
 12170   0035E2  D7DC               	goto	i2l9616
 12171   0035E4  0A03               	xorlw	3	; case 6
 12172   0035E6  B4D8               	btfsc	status,2,c
 12173   0035E8  D7DD               	goto	i2l9618
 12174   0035EA                     i2l9624:
 12175                           
 12176                           ;Cooking_Main.c: 394: if(!Cooking_Mode){
 12177   0035EA  507D               	movf	_Cooking_Mode^0,w,c
 12178   0035EC  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 12179   0035EE  A4D8               	btfss	status,2,c
 12180   0035F0  D02E               	goto	i2l9634
 12181                           
 12182                           ;Cooking_Main.c: 395: lcd_gotoxy(1, 4);
 12183   0035F2  0E04               	movlw	4
 12184   0035F4  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 12185   0035F6  0E01               	movlw	1
 12186   0035F8  ECFD  F026         	call	i2_lcd_gotoxy
 12187                           
 12188                           ;Cooking_Main.c: 396: sprintf(Buffer, "MD:%s P:%d  H:%d", MD, Percent_Heat_Counter * 10,
      +                           H);
 12189   0035FC  C185  F001         	movff	_Percent_Heat_Counter,i2___wmul@multiplier
 12190   003600  C186  F002         	movff	_Percent_Heat_Counter+1,i2___wmul@multiplier+1
 12191   003604  0E00               	movlw	0
 12192   003606  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12193   003608  0E0A               	movlw	10
 12194   00360A  6E03               	movwf	i2___wmul@multiplicand^0,c
 12195   00360C  ECDA  F028         	call	i2___wmul	;wreg free
 12196   003610  C001  F06D         	movff	?i2___wmul,i2_update_lcd_Line4$2004
 12197   003614  C002  F06E         	movff	?i2___wmul+1,i2_update_lcd_Line4$2004+1
 12198                           
 12199                           ;Cooking_Main.c: 396: sprintf(Buffer, "MD:%s P:%d  H:%d", MD, Percent_Heat_Counter * 10,
      +                           H);
 12200   003618  0E5D               	movlw	low i2update_lcd_Line4@Buffer
 12201   00361A  6E4B               	movwf	i2sprintf@sp^0,c
 12202   00361C  6A4C               	clrf	(i2sprintf@sp+1)^0,c
 12203   00361E  0EB4               	movlw	low STR_17
 12204   003620  6E4D               	movwf	i2sprintf@f^0,c
 12205   003622  0EFF               	movlw	high STR_17
 12206   003624  6E4E               	movwf	(i2sprintf@f+1)^0,c
 12207   003626  C071  F04F         	movff	i2update_lcd_Line4@MD,?i2_sprintf+4
 12208   00362A  C072  F050         	movff	i2update_lcd_Line4@MD+1,?i2_sprintf+5
 12209   00362E  C06D  F051         	movff	i2_update_lcd_Line4$2004,?i2_sprintf+6
 12210   003632  C06E  F052         	movff	i2_update_lcd_Line4$2004+1,?i2_sprintf+7
 12211   003636  C06F  F053         	movff	i2update_lcd_Line4@H,?i2_sprintf+8
 12212   00363A  C070  F054         	movff	i2update_lcd_Line4@H+1,?i2_sprintf+9
 12213   00363E  EC60  F008         	call	i2_sprintf	;wreg free
 12214   003642                     i2l9632:
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;Cooking_Main.c: 397: lcd_puts(Buffer);
 12218   003642  0E5D               	movlw	low i2update_lcd_Line4@Buffer
 12219   003644  6E0F               	movwf	i2lcd_puts@s^0,c
 12220   003646  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 12221   003648  EC24  F029         	call	i2_lcd_puts	;wreg free
 12222                           
 12223                           ;Cooking_Main.c: 405: }
 12224   00364C  0012               	return	
 12225   00364E                     i2l9634:
 12226                           
 12227                           ;Cooking_Main.c: 406: else{;Cooking_Main.c: 408: lcd_gotoxy(1, 4);
 12228   00364E  0E04               	movlw	4
 12229   003650  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 12230   003652  0E01               	movlw	1
 12231   003654  ECFD  F026         	call	i2_lcd_gotoxy
 12232                           
 12233                           ;Cooking_Main.c: 409: sprintf(Buffer, "MD:%s P:Aut H:%d", MD, H);
 12234   003658  0E5D               	movlw	low i2update_lcd_Line4@Buffer
 12235   00365A  6E4B               	movwf	i2sprintf@sp^0,c
 12236   00365C  6A4C               	clrf	(i2sprintf@sp+1)^0,c
 12237   00365E  0EC5               	movlw	low STR_18
 12238   003660  6E4D               	movwf	i2sprintf@f^0,c
 12239   003662  0EFF               	movlw	high STR_18
 12240   003664  6E4E               	movwf	(i2sprintf@f+1)^0,c
 12241   003666  C071  F04F         	movff	i2update_lcd_Line4@MD,?i2_sprintf+4
 12242   00366A  C072  F050         	movff	i2update_lcd_Line4@MD+1,?i2_sprintf+5
 12243   00366E  C06F  F051         	movff	i2update_lcd_Line4@H,?i2_sprintf+6
 12244   003672  C070  F052         	movff	i2update_lcd_Line4@H+1,?i2_sprintf+7
 12245   003676  EC60  F008         	call	i2_sprintf	;wreg free
 12246   00367A  D7E3               	goto	i2l9632
 12247   00367C                     __end_ofi2_update_lcd_Line4:
 12248                           	callstack 0
 12249                           
 12250 ;; *************** function i2_update_lcd_Line3 *****************
 12251 ;; Defined at:
 12252 ;;		line 337 in file "Cooking_Main.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  Buffer         16   90[COMRAM] unsigned char [16]
 12257 ;;  SP              3  106[COMRAM] float 
 12258 ;;  HT              2  109[COMRAM] PTR unsigned char 
 12259 ;;		 -> STR_6(3), STR_5(4), 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/1
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;Total ram usage:       21 bytes
 12274 ;; Hardware stack levels used: 1
 12275 ;; Hardware stack levels required when called: 6
 12276 ;; This function calls:
 12277 ;;		i2_lcd_gotoxy
 12278 ;;		i2_lcd_puts
 12279 ;;		i2_sprintf
 12280 ;; This function is called by:
 12281 ;;		i2_update_lcd
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text55
 12286   0049AC                     __ptext55:
 12287                           	callstack 0
 12288   0049AC                     i2_update_lcd_Line3:
 12289                           	callstack 13
 12290                           
 12291                           ;Cooking_Main.c: 338: unsigned char Buffer[16];;Cooking_Main.c: 339: float SP = SetUp_Po
      +                          int;
 12292                           
 12293                           ;incstack = 0
 12294   0049AC  C17F  F06B         	movff	_SetUp_Point,i2update_lcd_Line3@SP
 12295   0049B0  C180  F06C         	movff	_SetUp_Point+1,i2update_lcd_Line3@SP+1
 12296   0049B4  C181  F06D         	movff	_SetUp_Point+2,i2update_lcd_Line3@SP+2
 12297                           
 12298                           ;Cooking_Main.c: 340: unsigned char *HT;;Cooking_Main.c: 341: if(!Heating){
 12299   0049B8  0101               	movlb	1	; () banked
 12300   0049BA  5189               	movf	_Heating& (0+255),w,b
 12301   0049BC  118A               	iorwf	(_Heating+1)& (0+255),w,b
 12302   0049BE  A4D8               	btfss	status,2,c
 12303   0049C0  D004               	goto	i2l9596
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;Cooking_Main.c: 342: HT = "OFF";
 12307   0049C2  0EE1               	movlw	low STR_2
 12308   0049C4  6E6E               	movwf	i2update_lcd_Line3@HT^0,c
 12309   0049C6  0EFF               	movlw	high STR_2
 12310   0049C8  D003               	goto	L32
 12311   0049CA                     i2l9596:
 12312                           
 12313                           ; BSR set to: 1
 12314                           ;Cooking_Main.c: 344: else{;Cooking_Main.c: 345: HT = "ON";
 12315   0049CA  0EF9               	movlw	low STR_3
 12316   0049CC  6E6E               	movwf	i2update_lcd_Line3@HT^0,c
 12317   0049CE  0EFF               	movlw	high STR_3
 12318   0049D0                     L32:
 12319   0049D0  6E6F               	movwf	(i2update_lcd_Line3@HT+1)^0,c
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;Cooking_Main.c: 346: };Cooking_Main.c: 347: lcd_gotoxy(1, 3);
 12323   0049D2  0E03               	movlw	3
 12324   0049D4  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 12325   0049D6  0E01               	movlw	1
 12326   0049D8  ECFD  F026         	call	i2_lcd_gotoxy
 12327                           
 12328                           ;Cooking_Main.c: 348: sprintf(Buffer, "SP:%03.1fC HT:%3s", SP, HT);
 12329   0049DC  0E5B               	movlw	low i2update_lcd_Line3@Buffer
 12330   0049DE  6E4B               	movwf	i2sprintf@sp^0,c
 12331   0049E0  6A4C               	clrf	(i2sprintf@sp+1)^0,c
 12332   0049E2  0E80               	movlw	low STR_7
 12333   0049E4  6E4D               	movwf	i2sprintf@f^0,c
 12334   0049E6  0EFF               	movlw	high STR_7
 12335   0049E8  6E4E               	movwf	(i2sprintf@f+1)^0,c
 12336   0049EA  C06B  F04F         	movff	i2update_lcd_Line3@SP,?i2_sprintf+4
 12337   0049EE  C06C  F050         	movff	i2update_lcd_Line3@SP+1,?i2_sprintf+5
 12338   0049F2  C06D  F051         	movff	i2update_lcd_Line3@SP+2,?i2_sprintf+6
 12339   0049F6  C06E  F052         	movff	i2update_lcd_Line3@HT,?i2_sprintf+7
 12340   0049FA  C06F  F053         	movff	i2update_lcd_Line3@HT+1,?i2_sprintf+8
 12341   0049FE  EC60  F008         	call	i2_sprintf	;wreg free
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;Cooking_Main.c: 349: lcd_puts(Buffer);
 12345   004A02  0E5B               	movlw	low i2update_lcd_Line3@Buffer
 12346   004A04  6E0F               	movwf	i2lcd_puts@s^0,c
 12347   004A06  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 12348   004A08  EC24  F029         	call	i2_lcd_puts	;wreg free
 12349   004A0C  0012               	return		;funcret
 12350   004A0E                     __end_ofi2_update_lcd_Line3:
 12351                           	callstack 0
 12352                           
 12353 ;; *************** function i2_update_lcd_Line2 *****************
 12354 ;; Defined at:
 12355 ;;		line 322 in file "Cooking_Main.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  Buffer         16   90[COMRAM] unsigned char [16]
 12360 ;;  CT              3  106[COMRAM] float 
 12361 ;;  CK              2  109[COMRAM] PTR unsigned char 
 12362 ;;		 -> STR_3(3), STR_2(4), 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  1    wreg      void 
 12365 ;; Registers used:
 12366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/1
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;Total ram usage:       21 bytes
 12377 ;; Hardware stack levels used: 1
 12378 ;; Hardware stack levels required when called: 6
 12379 ;; This function calls:
 12380 ;;		i2_lcd_gotoxy
 12381 ;;		i2_lcd_puts
 12382 ;;		i2_sprintf
 12383 ;; This function is called by:
 12384 ;;		i2_update_lcd
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text56
 12389   004A0E                     __ptext56:
 12390                           	callstack 0
 12391   004A0E                     i2_update_lcd_Line2:
 12392                           	callstack 13
 12393                           
 12394                           ;Cooking_Main.c: 323: unsigned char Buffer[16];;Cooking_Main.c: 324: float CT = Cooking_
      +                          Temp;
 12395                           
 12396                           ;incstack = 0
 12397   004A0E  C182  F06B         	movff	_Cooking_Temp,i2update_lcd_Line2@CT
 12398   004A12  C183  F06C         	movff	_Cooking_Temp+1,i2update_lcd_Line2@CT+1
 12399   004A16  C184  F06D         	movff	_Cooking_Temp+2,i2update_lcd_Line2@CT+2
 12400                           
 12401                           ;Cooking_Main.c: 325: unsigned char *CK;;Cooking_Main.c: 326: if(!Cooking){
 12402   004A1A  0101               	movlb	1	; () banked
 12403   004A1C  518B               	movf	_Cooking& (0+255),w,b
 12404   004A1E  118C               	iorwf	(_Cooking+1)& (0+255),w,b
 12405   004A20  A4D8               	btfss	status,2,c
 12406   004A22  D004               	goto	i2l9582
 12407                           
 12408                           ; BSR set to: 1
 12409                           ;Cooking_Main.c: 327: CK = "OFF";
 12410   004A24  0EE1               	movlw	low STR_2
 12411   004A26  6E6E               	movwf	i2update_lcd_Line2@CK^0,c
 12412   004A28  0EFF               	movlw	high STR_2
 12413   004A2A  D003               	goto	L33
 12414   004A2C                     i2l9582:
 12415                           
 12416                           ; BSR set to: 1
 12417                           ;Cooking_Main.c: 329: else{;Cooking_Main.c: 330: CK = "ON";
 12418   004A2C  0EF9               	movlw	low STR_3
 12419   004A2E  6E6E               	movwf	i2update_lcd_Line2@CK^0,c
 12420   004A30  0EFF               	movlw	high STR_3
 12421   004A32                     L33:
 12422   004A32  6E6F               	movwf	(i2update_lcd_Line2@CK+1)^0,c
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;Cooking_Main.c: 331: };Cooking_Main.c: 332: lcd_gotoxy(1, 2);
 12426   004A34  0E02               	movlw	2
 12427   004A36  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 12428   004A38  0E01               	movlw	1
 12429   004A3A  ECFD  F026         	call	i2_lcd_gotoxy
 12430                           
 12431                           ;Cooking_Main.c: 333: sprintf(Buffer, "CT:%03.1fC CK:%3s", CT, CK);
 12432   004A3E  0E5B               	movlw	low i2update_lcd_Line2@Buffer
 12433   004A40  6E4B               	movwf	i2sprintf@sp^0,c
 12434   004A42  6A4C               	clrf	(i2sprintf@sp+1)^0,c
 12435   004A44  0E6E               	movlw	low STR_4
 12436   004A46  6E4D               	movwf	i2sprintf@f^0,c
 12437   004A48  0EFF               	movlw	high STR_4
 12438   004A4A  6E4E               	movwf	(i2sprintf@f+1)^0,c
 12439   004A4C  C06B  F04F         	movff	i2update_lcd_Line2@CT,?i2_sprintf+4
 12440   004A50  C06C  F050         	movff	i2update_lcd_Line2@CT+1,?i2_sprintf+5
 12441   004A54  C06D  F051         	movff	i2update_lcd_Line2@CT+2,?i2_sprintf+6
 12442   004A58  C06E  F052         	movff	i2update_lcd_Line2@CK,?i2_sprintf+7
 12443   004A5C  C06F  F053         	movff	i2update_lcd_Line2@CK+1,?i2_sprintf+8
 12444   004A60  EC60  F008         	call	i2_sprintf	;wreg free
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;Cooking_Main.c: 334: lcd_puts(Buffer);
 12448   004A64  0E5B               	movlw	low i2update_lcd_Line2@Buffer
 12449   004A66  6E0F               	movwf	i2lcd_puts@s^0,c
 12450   004A68  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 12451   004A6A  EC24  F029         	call	i2_lcd_puts	;wreg free
 12452   004A6E  0012               	return		;funcret
 12453   004A70                     __end_ofi2_update_lcd_Line2:
 12454                           	callstack 0
 12455                           
 12456 ;; *************** function i2_update_lcd_Line1 *****************
 12457 ;; Defined at:
 12458 ;;		line 310 in file "Cooking_Main.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;		None
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  Buffer         16   90[COMRAM] unsigned char [16]
 12463 ;;  hh              2  110[COMRAM] int 
 12464 ;;  mm              2  108[COMRAM] int 
 12465 ;;  ss              2  106[COMRAM] int 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      void 
 12468 ;; Registers used:
 12469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12470 ;; Tracked objects:
 12471 ;;		On entry : 3E/1
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;Total ram usage:       22 bytes
 12480 ;; Hardware stack levels used: 1
 12481 ;; Hardware stack levels required when called: 6
 12482 ;; This function calls:
 12483 ;;		i2_lcd_gotoxy
 12484 ;;		i2_lcd_puts
 12485 ;;		i2_set_baoundares
 12486 ;;		i2_sprintf
 12487 ;; This function is called by:
 12488 ;;		i2_update_lcd
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text57
 12493   004B2A                     __ptext57:
 12494                           	callstack 0
 12495   004B2A                     i2_update_lcd_Line1:
 12496                           	callstack 13
 12497                           
 12498                           ;Cooking_Main.c: 311: unsigned char Buffer[16];;Cooking_Main.c: 312: set_baoundares();
 12499                           
 12500                           ;incstack = 0
 12501   004B2A  EC21  F01E         	call	i2_set_baoundares	;wreg free
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;Cooking_Main.c: 313: int ss = count_sec;
 12505   004B2E  C0CE  F06B         	movff	_count_sec,i2update_lcd_Line1@ss
 12506   004B32  C0CF  F06C         	movff	_count_sec+1,i2update_lcd_Line1@ss+1
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;Cooking_Main.c: 314: int mm = count_min;
 12510   004B36  C0CC  F06D         	movff	_count_min,i2update_lcd_Line1@mm
 12511   004B3A  C0CD  F06E         	movff	_count_min+1,i2update_lcd_Line1@mm+1
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;Cooking_Main.c: 315: int hh = count_hour;
 12515   004B3E  C0CA  F06F         	movff	_count_hour,i2update_lcd_Line1@hh
 12516   004B42  C0CB  F070         	movff	_count_hour+1,i2update_lcd_Line1@hh+1
 12517                           
 12518                           ;Cooking_Main.c: 317: lcd_gotoxy(1, 1);
 12519   004B46  0E01               	movlw	1
 12520   004B48  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 12521   004B4A  0E01               	movlw	1
 12522   004B4C  ECFD  F026         	call	i2_lcd_gotoxy
 12523                           
 12524                           ;Cooking_Main.c: 318: sprintf(Buffer, "Time: %02d:%02d:%02d  ", hh, mm, ss);
 12525   004B50  0E5B               	movlw	low i2update_lcd_Line1@Buffer
 12526   004B52  6E4B               	movwf	i2sprintf@sp^0,c
 12527   004B54  6A4C               	clrf	(i2sprintf@sp+1)^0,c
 12528   004B56  0E57               	movlw	low STR_1
 12529   004B58  6E4D               	movwf	i2sprintf@f^0,c
 12530   004B5A  0EFF               	movlw	high STR_1
 12531   004B5C  6E4E               	movwf	(i2sprintf@f+1)^0,c
 12532   004B5E  C06F  F04F         	movff	i2update_lcd_Line1@hh,?i2_sprintf+4
 12533   004B62  C070  F050         	movff	i2update_lcd_Line1@hh+1,?i2_sprintf+5
 12534   004B66  C06D  F051         	movff	i2update_lcd_Line1@mm,?i2_sprintf+6
 12535   004B6A  C06E  F052         	movff	i2update_lcd_Line1@mm+1,?i2_sprintf+7
 12536   004B6E  C06B  F053         	movff	i2update_lcd_Line1@ss,?i2_sprintf+8
 12537   004B72  C06C  F054         	movff	i2update_lcd_Line1@ss+1,?i2_sprintf+9
 12538   004B76  EC60  F008         	call	i2_sprintf	;wreg free
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;Cooking_Main.c: 319: lcd_puts(Buffer);
 12542   004B7A  0E5B               	movlw	low i2update_lcd_Line1@Buffer
 12543   004B7C  6E0F               	movwf	i2lcd_puts@s^0,c
 12544   004B7E  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 12545   004B80  EC24  F029         	call	i2_lcd_puts	;wreg free
 12546   004B84  0012               	return		;funcret
 12547   004B86                     __end_ofi2_update_lcd_Line1:
 12548                           	callstack 0
 12549                           
 12550 ;; *************** function i2_sprintf *****************
 12551 ;; Defined at:
 12552 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  sp              2   74[COMRAM] PTR unsigned char 
 12555 ;;		 -> i2update_lcd_Line4@Buffer(16), i2update_lcd_Line3@Buffer(16), i2update_lcd_Line2@Buffer(16), i2update_lcd_Line1@
      +Buffer(16), 
 12556 ;;		 -> RAM(3967), update_lcd_Line4@Buffer(16), NULL(0), update_lcd_Line3@Buffer(16), 
 12557 ;;		 -> update_lcd_Line2@Buffer(16), update_lcd_Line1@Buffer(16), 
 12558 ;;  f               2   76[COMRAM] PTR const unsigned char 
 12559 ;;		 -> STR_18(17), STR_17(17), STR_9(3), NULL(0), 
 12560 ;;		 -> STR_7(18), STR_4(18), STR_1(23), 
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  val             4   31[BANK0 ] unsigned long 
 12563 ;;  tmpval          4   22[BANK0 ] struct .
 12564 ;;  fval            3   28[BANK0 ] struct .
 12565 ;;  flag            2   40[BANK0 ] unsigned short 
 12566 ;;  prec            2   37[BANK0 ] int 
 12567 ;;  width           2   35[BANK0 ] int 
 12568 ;;  eexp            2   26[BANK0 ] int 
 12569 ;;  ap              2   20[BANK0 ] PTR void [1]
 12570 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 12571 ;;  ccnt            2   18[BANK0 ] int 
 12572 ;;  len             2   16[BANK0 ] unsigned int 
 12573 ;;  cp              2   14[BANK0 ] PTR const unsigned char 
 12574 ;;		 -> i2sprintf@c(1), STR_19(7), sprintf@c(1), ?_sprintf(2), 
 12575 ;;		 -> STR_16(4), STR_15(4), STR_14(3), STR_13(4), 
 12576 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_8(3), 
 12577 ;;		 -> STR_6(3), STR_5(4), STR_3(3), STR_2(4), 
 12578 ;;  c               1   39[BANK0 ] unsigned char 
 12579 ;;  idx             1   13[BANK0 ] unsigned char 
 12580 ;;  d               1    0        unsigned char 
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  2   74[COMRAM] int 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/1
 12587 ;;		On exit  : 3F/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12590 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12591 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12593 ;;      Totals:        16      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12594 ;;Total ram usage:       58 bytes
 12595 ;; Hardware stack levels used: 1
 12596 ;; Hardware stack levels required when called: 3
 12597 ;; This function calls:
 12598 ;;		i2___awdiv
 12599 ;;		i2___ftadd
 12600 ;;		i2___ftge
 12601 ;;		i2___ftmul
 12602 ;;		i2___ftneg
 12603 ;;		i2___ftsub
 12604 ;;		i2___fttol
 12605 ;;		i2___lldiv
 12606 ;;		i2___llmod
 12607 ;;		i2___lltoft
 12608 ;;		i2___wmul
 12609 ;;		i2__div_to_l_
 12610 ;;		i2__tdiv_to_l_
 12611 ;;		i2_fround
 12612 ;;		i2_isdigit
 12613 ;;		i2_scale
 12614 ;; This function is called by:
 12615 ;;		i2_update_lcd_Line1
 12616 ;;		i2_update_lcd_Line2
 12617 ;;		i2_update_lcd_Line3
 12618 ;;		i2_update_lcd_Line4
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text58
 12623   0010C0                     __ptext58:
 12624                           	callstack 0
 12625   0010C0                     i2_sprintf:
 12626                           	callstack 15
 12627                           
 12628                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
 12629                           
 12630                           ;incstack = 0
 12631   0010C0  0E00               	movlw	0
 12632   0010C2  0100               	movlb	0	; () banked
 12633   0010C4  6F93               	movwf	(i2sprintf@ccnt+1)& (0+255),b
 12634   0010C6  0E00               	movlw	0
 12635   0010C8  6F92               	movwf	i2sprintf@ccnt& (0+255),b
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
 12639   0010CA  0E4F               	movlw	low (?i2_sprintf+4)
 12640   0010CC  6F94               	movwf	i2sprintf@ap& (0+255),b
 12641   0010CE  6B95               	clrf	(i2sprintf@ap+1)& (0+255),b
 12642                           
 12643                           ;doprnt.c: 553: while((c = *f++)) {
 12644   0010D0  EF9C  F010         	goto	i2u838_40
 12645   0010D4                     i2l6366:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;doprnt.c: 555: if(c != '%')
 12649   0010D4  0E25               	movlw	37
 12650   0010D6  19A7               	xorwf	i2sprintf@c& (0+255),w,b
 12651   0010D8  B4D8               	btfsc	status,2,c
 12652   0010DA  D00C               	goto	i2l6374
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
 12656   0010DC  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 12657   0010E0  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12658   0010E4  C0A7  FFDF         	movff	i2sprintf@c,indf2
 12659                           
 12660                           ; BSR set to: 0
 12661   0010E8  4A4B               	infsnz	i2sprintf@sp^0,f,c
 12662   0010EA  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 12663                           
 12664                           ; BSR set to: 0
 12665   0010EC  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 12666   0010EE  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 12667                           
 12668                           ;doprnt.c: 559: continue;
 12669   0010F0  EF9C  F010         	goto	i2u838_40
 12670   0010F4                     i2l6374:
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12674   0010F4  0E00               	movlw	0
 12675   0010F6  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 12676   0010F8  0E00               	movlw	0
 12677   0010FA  6FA3               	movwf	i2sprintf@width& (0+255),b
 12678                           
 12679                           ;doprnt.c: 565: flag = 0;
 12680   0010FC  0E00               	movlw	0
 12681   0010FE  6FA9               	movwf	(i2sprintf@flag+1)& (0+255),b
 12682   001100  0E00               	movlw	0
 12683   001102  6FA8               	movwf	i2sprintf@flag& (0+255),b
 12684   001104  D009               	goto	i2l6386
 12685   001106                     i2l6376:
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;doprnt.c: 571: flag |= 0x08;
 12689   001106  87A8               	bsf	i2sprintf@flag& (0+255),3,b
 12690   001108  D005               	goto	L34
 12691   00110A                     i2l6378:
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;doprnt.c: 578: flag |= 0x01;
 12695   00110A  81A8               	bsf	i2sprintf@flag& (0+255),0,b
 12696   00110C  D003               	goto	L34
 12697   00110E                     i2l6380:
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;doprnt.c: 591: flag |= 0x800;
 12701   00110E  87A9               	bsf	(i2sprintf@flag+1)& (0+255),3,b
 12702   001110  D001               	goto	L34
 12703   001112                     i2l6382:
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;doprnt.c: 597: flag |= 0x04;
 12707   001112  85A8               	bsf	i2sprintf@flag& (0+255),2,b
 12708   001114                     L34:
 12709                           
 12710                           ;doprnt.c: 598: f++;
 12711   001114  4A4D               	infsnz	i2sprintf@f^0,f,c
 12712   001116  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12713   001118                     i2l6386:
 12714                           
 12715                           ; BSR set to: 0
 12716   001118  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12717   00111C  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12718   001120                     	if	0	;tblptru may be non-zero
 12719   001120                     	endif
 12720   001120                     	if	0	;tblptru may be non-zero
 12721   001120                     	endif
 12722   001120  0008               	tblrd		*
 12723   001122  50F5               	movf	tablat,w,c
 12724                           
 12725                           ; Switch size 1, requested type "simple"
 12726                           ; Number of cases is 4, Range of values is 32 to 48
 12727                           ; switch strategies available:
 12728                           ; Name         Instructions Cycles
 12729                           ; simple_byte           13     7 (average)
 12730                           ;	Chosen strategy is simple_byte
 12731   001124  0A20               	xorlw	32	; case 32
 12732   001126  B4D8               	btfsc	status,2,c
 12733   001128  D7F0               	goto	i2l6378
 12734   00112A  0A03               	xorlw	3	; case 35
 12735   00112C  B4D8               	btfsc	status,2,c
 12736   00112E  D7EF               	goto	i2l6380
 12737   001130  0A0E               	xorlw	14	; case 45
 12738   001132  B4D8               	btfsc	status,2,c
 12739   001134  D7E8               	goto	i2l6376
 12740   001136  0A1D               	xorlw	29	; case 48
 12741   001138  B4D8               	btfsc	status,2,c
 12742   00113A  D7EB               	goto	i2l6382
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;doprnt.c: 610: if(flag & 0x08)
 12746   00113C  B7A8               	btfsc	i2sprintf@flag& (0+255),3,b
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;doprnt.c: 611: flag &= ~0x04;
 12750   00113E  95A8               	bcf	i2sprintf@flag& (0+255),2,b
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12754   001140  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12755   001144  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12756   001148                     	if	0	;tblptru may be non-zero
 12757   001148                     	endif
 12758   001148                     	if	0	;tblptru may be non-zero
 12759   001148                     	endif
 12760   001148  0008               	tblrd		*
 12761   00114A  50F5               	movf	tablat,w,c
 12762   00114C  EC67  F029         	call	i2_isdigit
 12763   001150  A0D8               	btfss	status,0,c
 12764   001152  D032               	goto	i2l6402
 12765                           
 12766                           ;doprnt.c: 615: width = 0;
 12767   001154  0E00               	movlw	0
 12768   001156  0100               	movlb	0	; () banked
 12769   001158  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 12770   00115A  0E00               	movlw	0
 12771   00115C  6FA3               	movwf	i2sprintf@width& (0+255),b
 12772   00115E                     i2l6394:
 12773                           
 12774                           ;doprnt.c: 617: width *= 10;
 12775   00115E  C0A3  F001         	movff	i2sprintf@width,i2___wmul@multiplier
 12776   001162  C0A4  F002         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 12777   001166  0E00               	movlw	0
 12778   001168  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12779   00116A  0E0A               	movlw	10
 12780   00116C  6E03               	movwf	i2___wmul@multiplicand^0,c
 12781   00116E  ECDA  F028         	call	i2___wmul	;wreg free
 12782   001172  C001  F0A3         	movff	?i2___wmul,i2sprintf@width
 12783   001176  C002  F0A4         	movff	?i2___wmul+1,i2sprintf@width+1
 12784                           
 12785                           ;doprnt.c: 618: width += *f++ - '0';
 12786   00117A  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12787   00117E  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12788   001182                     	if	0	;tblptru may be non-zero
 12789   001182                     	endif
 12790   001182                     	if	0	;tblptru may be non-zero
 12791   001182                     	endif
 12792   001182  0008               	tblrd		*
 12793   001184  CFF5 F055          	movff	tablat,??i2_sprintf
 12794   001188  0ED0               	movlw	208
 12795   00118A  2455               	addwf	??i2_sprintf^0,w,c
 12796   00118C  6E56               	movwf	(??i2_sprintf+1)^0,c
 12797   00118E  6A57               	clrf	(??i2_sprintf+2)^0,c
 12798   001190  0EFF               	movlw	255
 12799   001192  2257               	addwfc	(??i2_sprintf+2)^0,f,c
 12800   001194  5056               	movf	(??i2_sprintf+1)^0,w,c
 12801   001196  0100               	movlb	0	; () banked
 12802   001198  27A3               	addwf	i2sprintf@width& (0+255),f,b
 12803   00119A  5057               	movf	(??i2_sprintf+2)^0,w,c
 12804   00119C  23A4               	addwfc	(i2sprintf@width+1)& (0+255),f,b
 12805                           
 12806                           ; BSR set to: 0
 12807   00119E  4A4D               	infsnz	i2sprintf@f^0,f,c
 12808   0011A0  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 12812   0011A2  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12813   0011A6  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12814   0011AA                     	if	0	;tblptru may be non-zero
 12815   0011AA                     	endif
 12816   0011AA                     	if	0	;tblptru may be non-zero
 12817   0011AA                     	endif
 12818   0011AA  0008               	tblrd		*
 12819   0011AC  50F5               	movf	tablat,w,c
 12820   0011AE  EC67  F029         	call	i2_isdigit
 12821   0011B2  A0D8               	btfss	status,0,c
 12822   0011B4  D019               	goto	i2l6410
 12823   0011B6  D7D3               	goto	i2l6394
 12824   0011B8                     i2l6402:
 12825   0011B8  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12826   0011BC  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12827   0011C0                     	if	0	;tblptru may be non-zero
 12828   0011C0                     	endif
 12829   0011C0                     	if	0	;tblptru may be non-zero
 12830   0011C0                     	endif
 12831   0011C0  0008               	tblrd		*
 12832   0011C2  50F5               	movf	tablat,w,c
 12833   0011C4  0A2A               	xorlw	42
 12834   0011C6  A4D8               	btfss	status,2,c
 12835   0011C8  D00F               	goto	i2l6410
 12836                           
 12837                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 12838   0011CA  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 12839   0011CE  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 12840   0011D2  CFDE F0A3          	movff	postinc2,i2sprintf@width
 12841   0011D6  CFDD F0A4          	movff	postdec2,i2sprintf@width+1
 12842   0011DA  0E02               	movlw	2
 12843   0011DC  0100               	movlb	0	; () banked
 12844   0011DE  2794               	addwf	i2sprintf@ap& (0+255),f,b
 12845   0011E0  0E00               	movlw	0
 12846   0011E2  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;doprnt.c: 623: f++;
 12850   0011E4  4A4D               	infsnz	i2sprintf@f^0,f,c
 12851   0011E6  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12852   0011E8                     i2l6410:
 12853                           
 12854                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 12855   0011E8  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12856   0011EC  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12857   0011F0                     	if	0	;tblptru may be non-zero
 12858   0011F0                     	endif
 12859   0011F0                     	if	0	;tblptru may be non-zero
 12860   0011F0                     	endif
 12861   0011F0  0008               	tblrd		*
 12862   0011F2  50F5               	movf	tablat,w,c
 12863   0011F4  0A2E               	xorlw	46
 12864   0011F6  A4D8               	btfss	status,2,c
 12865   0011F8  D056               	goto	i2l6440
 12866                           
 12867                           ;doprnt.c: 629: flag |= 0x4000;
 12868   0011FA  0100               	movlb	0	; () banked
 12869   0011FC  8DA9               	bsf	(i2sprintf@flag+1)& (0+255),6,b
 12870                           
 12871                           ;doprnt.c: 630: f++;
 12872   0011FE  4A4D               	infsnz	i2sprintf@f^0,f,c
 12873   001200  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;doprnt.c: 632: if(*f == '*') {
 12877   001202  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12878   001206  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12879   00120A                     	if	0	;tblptru may be non-zero
 12880   00120A                     	endif
 12881   00120A                     	if	0	;tblptru may be non-zero
 12882   00120A                     	endif
 12883   00120A  0008               	tblrd		*
 12884   00120C  50F5               	movf	tablat,w,c
 12885   00120E  0A2A               	xorlw	42
 12886   001210  A4D8               	btfss	status,2,c
 12887   001212  D017               	goto	i2l6430
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 12891   001214  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 12892   001218  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 12893   00121C  CFDE F0A5          	movff	postinc2,i2sprintf@prec
 12894   001220  CFDD F0A6          	movff	postdec2,i2sprintf@prec+1
 12895                           
 12896                           ; BSR set to: 0
 12897   001224  0E02               	movlw	2
 12898   001226  2794               	addwf	i2sprintf@ap& (0+255),f,b
 12899   001228  0E00               	movlw	0
 12900   00122A  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;doprnt.c: 634: if (prec < 0) {
 12904   00122C  AFA6               	btfss	(i2sprintf@prec+1)& (0+255),7,b
 12905   00122E  D006               	goto	i2l6428
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;doprnt.c: 635: prec = 0;
 12909   001230  0E00               	movlw	0
 12910   001232  6FA6               	movwf	(i2sprintf@prec+1)& (0+255),b
 12911   001234  0E00               	movlw	0
 12912   001236  6FA5               	movwf	i2sprintf@prec& (0+255),b
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;doprnt.c: 636: flag &= ~0x4000;
 12916   001238  9DA9               	bcf	(i2sprintf@flag+1)& (0+255),6,b
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;doprnt.c: 638: flag |= 0x1000;
 12920   00123A  89A9               	bsf	(i2sprintf@flag+1)& (0+255),4,b
 12921   00123C                     i2l6428:
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;doprnt.c: 640: };doprnt.c: 641: f++;
 12925   00123C  4A4D               	infsnz	i2sprintf@f^0,f,c
 12926   00123E  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12927                           
 12928                           ;doprnt.c: 642: } else
 12929   001240  D101               	goto	i2l6520
 12930   001242                     i2l6430:
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 12934   001242  0E00               	movlw	0
 12935   001244  6FA6               	movwf	(i2sprintf@prec+1)& (0+255),b
 12936   001246  0E00               	movlw	0
 12937   001248  6FA5               	movwf	i2sprintf@prec& (0+255),b
 12938                           
 12939                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 12940   00124A  D022               	goto	i2l6438
 12941   00124C                     i2l6432:
 12942                           
 12943                           ;doprnt.c: 647: prec *= 10;
 12944   00124C  C0A5  F001         	movff	i2sprintf@prec,i2___wmul@multiplier
 12945   001250  C0A6  F002         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 12946   001254  0E00               	movlw	0
 12947   001256  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12948   001258  0E0A               	movlw	10
 12949   00125A  6E03               	movwf	i2___wmul@multiplicand^0,c
 12950   00125C  ECDA  F028         	call	i2___wmul	;wreg free
 12951   001260  C001  F0A5         	movff	?i2___wmul,i2sprintf@prec
 12952   001264  C002  F0A6         	movff	?i2___wmul+1,i2sprintf@prec+1
 12953                           
 12954                           ;doprnt.c: 648: prec += *f++ - '0';
 12955   001268  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12956   00126C  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12957   001270                     	if	0	;tblptru may be non-zero
 12958   001270                     	endif
 12959   001270                     	if	0	;tblptru may be non-zero
 12960   001270                     	endif
 12961   001270  0008               	tblrd		*
 12962   001272  CFF5 F055          	movff	tablat,??i2_sprintf
 12963   001276  0ED0               	movlw	208
 12964   001278  2455               	addwf	??i2_sprintf^0,w,c
 12965   00127A  6E56               	movwf	(??i2_sprintf+1)^0,c
 12966   00127C  6A57               	clrf	(??i2_sprintf+2)^0,c
 12967   00127E  0EFF               	movlw	255
 12968   001280  2257               	addwfc	(??i2_sprintf+2)^0,f,c
 12969   001282  5056               	movf	(??i2_sprintf+1)^0,w,c
 12970   001284  0100               	movlb	0	; () banked
 12971   001286  27A5               	addwf	i2sprintf@prec& (0+255),f,b
 12972   001288  5057               	movf	(??i2_sprintf+2)^0,w,c
 12973   00128A  23A6               	addwfc	(i2sprintf@prec+1)& (0+255),f,b
 12974                           
 12975                           ; BSR set to: 0
 12976   00128C  4A4D               	infsnz	i2sprintf@f^0,f,c
 12977   00128E  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 12978   001290                     i2l6438:
 12979                           
 12980                           ; BSR set to: 0
 12981   001290  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 12982   001294  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 12983   001298                     	if	0	;tblptru may be non-zero
 12984   001298                     	endif
 12985   001298                     	if	0	;tblptru may be non-zero
 12986   001298                     	endif
 12987   001298  0008               	tblrd		*
 12988   00129A  50F5               	movf	tablat,w,c
 12989   00129C  EC67  F029         	call	i2_isdigit
 12990   0012A0  A0D8               	btfss	status,0,c
 12991   0012A2  D0D0               	goto	i2l6520
 12992   0012A4  D7D3               	goto	i2l6432
 12993   0012A6                     i2l6440:
 12994                           
 12995                           ;doprnt.c: 652: prec = 0;
 12996   0012A6  0E00               	movlw	0
 12997   0012A8  0100               	movlb	0	; () banked
 12998   0012AA  6FA6               	movwf	(i2sprintf@prec+1)& (0+255),b
 12999   0012AC  0E00               	movlw	0
 13000   0012AE  6FA5               	movwf	i2sprintf@prec& (0+255),b
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;doprnt.c: 654: flag |= 0x1000;
 13004   0012B0  89A9               	bsf	(i2sprintf@flag+1)& (0+255),4,b
 13005   0012B2  D0C8               	goto	i2l6520
 13006   0012B4                     i2l6444:
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;doprnt.c: 689: flag |= 0x400;
 13010   0012B4  85A9               	bsf	(i2sprintf@flag+1)& (0+255),2,b
 13011                           
 13012                           ;doprnt.c: 690: break;
 13013   0012B6  D0F4               	goto	i2l6522
 13014   0012B8                     i2l6446:
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;doprnt.c: 717: flag |= 0x40;
 13018   0012B8  8DA8               	bsf	i2sprintf@flag& (0+255),6,b
 13019                           
 13020                           ;doprnt.c: 719: break;
 13021   0012BA  D0F2               	goto	i2l6522
 13022   0012BC                     i2l6448:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;doprnt.c: 733: flag |= 0x2000;
 13026   0012BC  8BA9               	bsf	(i2sprintf@flag+1)& (0+255),5,b
 13027   0012BE                     i2l468:
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;doprnt.c: 740: flag |= 0x20;
 13031   0012BE  8BA8               	bsf	i2sprintf@flag& (0+255),5,b
 13032   0012C0                     i2l469:
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;doprnt.c: 747: flag |= 0x80;
 13036   0012C0  8FA8               	bsf	i2sprintf@flag& (0+255),7,b
 13037                           
 13038                           ;doprnt.c: 749: break;
 13039   0012C2  D0EE               	goto	i2l6522
 13040   0012C4                     i2l6450:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13044   0012C4  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 13045   0012C8  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13046   0012CC  CFDE F08E          	movff	postinc2,i2sprintf@cp
 13047   0012D0  CFDD F08F          	movff	postdec2,i2sprintf@cp+1
 13048                           
 13049                           ; BSR set to: 0
 13050   0012D4  0E02               	movlw	2
 13051   0012D6  2794               	addwf	i2sprintf@ap& (0+255),f,b
 13052   0012D8  0E00               	movlw	0
 13053   0012DA  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;doprnt.c: 766: if(!cp)
 13057   0012DC  518E               	movf	i2sprintf@cp& (0+255),w,b
 13058   0012DE  118F               	iorwf	(i2sprintf@cp+1)& (0+255),w,b
 13059   0012E0  A4D8               	btfss	status,2,c
 13060   0012E2  D004               	goto	i2l6458
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;doprnt.c: 767: cp = "(null)";
 13064   0012E4  0ED6               	movlw	low STR_19
 13065   0012E6  6F8E               	movwf	i2sprintf@cp& (0+255),b
 13066   0012E8  0EFF               	movlw	high STR_19
 13067   0012EA  6F8F               	movwf	(i2sprintf@cp+1)& (0+255),b
 13068   0012EC                     i2l6458:
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;doprnt.c: 771: len = 0;
 13072   0012EC  0E00               	movlw	0
 13073   0012EE  6F91               	movwf	(i2sprintf@len+1)& (0+255),b
 13074   0012F0  0E00               	movlw	0
 13075   0012F2  6F90               	movwf	i2sprintf@len& (0+255),b
 13076                           
 13077                           ;doprnt.c: 772: while(cp[len])
 13078   0012F4  D003               	goto	i2l6462
 13079   0012F6                     i2l6460:
 13080                           
 13081                           ;doprnt.c: 773: len++;
 13082   0012F6  0100               	movlb	0	; () banked
 13083   0012F8  4B90               	infsnz	i2sprintf@len& (0+255),f,b
 13084   0012FA  2B91               	incf	(i2sprintf@len+1)& (0+255),f,b
 13085   0012FC                     i2l6462:
 13086                           
 13087                           ; BSR set to: 0
 13088   0012FC  5190               	movf	i2sprintf@len& (0+255),w,b
 13089   0012FE  258E               	addwf	i2sprintf@cp& (0+255),w,b
 13090   001300  6E55               	movwf	??i2_sprintf^0,c
 13091   001302  5191               	movf	(i2sprintf@len+1)& (0+255),w,b
 13092   001304  218F               	addwfc	(i2sprintf@cp+1)& (0+255),w,b
 13093   001306  6E56               	movwf	(??i2_sprintf+1)^0,c
 13094   001308  C055  FFF6         	movff	??i2_sprintf,tblptrl
 13095   00130C  C056  FFF7         	movff	??i2_sprintf+1,tblptrh
 13096   001310  0E00               	movlw	low (__mediumconst shr (0+16))
 13097   001312  6EF8               	movwf	tblptru,c
 13098   001314  0E0F               	movlw	(high __ramtop+-1)
 13099   001316  64F7               	cpfsgt	tblptrh,c
 13100   001318  D003               	bra	i2u747_47
 13101   00131A  0008               	tblrd		*
 13102   00131C  50F5               	movf	tablat,w,c
 13103   00131E  D005               	bra	i2u747_40
 13104   001320                     i2u747_47:
 13105   001320  CFF6 FFE1          	movff	tblptrl,fsr1l
 13106   001324  CFF7 FFE2          	movff	tblptrh,fsr1h
 13107   001328  50E7               	movf	indf1,w,c
 13108   00132A                     i2u747_40:
 13109   00132A  0900               	iorlw	0
 13110   00132C  A4D8               	btfss	status,2,c
 13111   00132E  D7E3               	goto	i2l6460
 13112   001330                     i2u748_40:
 13113                           
 13114                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
 13115   001330  0100               	movlb	0	; () banked
 13116   001332  51A5               	movf	i2sprintf@prec& (0+255),w,b
 13117   001334  11A6               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
 13118   001336  B4D8               	btfsc	status,2,c
 13119   001338  D00E               	goto	i2l6470
 13120                           
 13121                           ; BSR set to: 0
 13122   00133A  5190               	movf	i2sprintf@len& (0+255),w,b
 13123   00133C  5DA5               	subwf	i2sprintf@prec& (0+255),w,b
 13124   00133E  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13125   001340  0A80               	xorlw	128
 13126   001342  6E55               	movwf	??i2_sprintf^0,c
 13127   001344  5191               	movf	(i2sprintf@len+1)& (0+255),w,b
 13128   001346  0A80               	xorlw	128
 13129   001348  5855               	subwfb	??i2_sprintf^0,w,c
 13130   00134A  B0D8               	btfsc	status,0,c
 13131   00134C  D004               	goto	i2l6470
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;doprnt.c: 780: len = (unsigned int)prec;
 13135   00134E  C0A5  F090         	movff	i2sprintf@prec,i2sprintf@len
 13136   001352  C0A6  F091         	movff	i2sprintf@prec+1,i2sprintf@len+1
 13137   001356                     i2l6470:
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;doprnt.c: 783: if(((unsigned)width) > len)
 13141   001356  51A3               	movf	i2sprintf@width& (0+255),w,b
 13142   001358  5D90               	subwf	i2sprintf@len& (0+255),w,b
 13143   00135A  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 13144   00135C  5991               	subwfb	(i2sprintf@len+1)& (0+255),w,b
 13145   00135E  B0D8               	btfsc	status,0,c
 13146   001360  D005               	goto	i2l6474
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;doprnt.c: 784: width -= len;
 13150   001362  5190               	movf	i2sprintf@len& (0+255),w,b
 13151   001364  5FA3               	subwf	i2sprintf@width& (0+255),f,b
 13152   001366  5191               	movf	(i2sprintf@len+1)& (0+255),w,b
 13153   001368  5BA4               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 13154   00136A  D004               	goto	i2l6476
 13155   00136C                     i2l6474:
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 13159   00136C  0E00               	movlw	0
 13160   00136E  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 13161   001370  0E00               	movlw	0
 13162   001372  6FA3               	movwf	i2sprintf@width& (0+255),b
 13163   001374                     i2l6476:
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;doprnt.c: 788: if(!(flag & 0x08))
 13167   001374  A7A8               	btfss	i2sprintf@flag& (0+255),3,b
 13168   001376  D00B               	goto	i2l6486
 13169   001378  D030               	goto	i2l6496
 13170   00137A                     i2l6480:
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;doprnt.c: 791: ((*sp++ = (' ')),(++ccnt));
 13174   00137A  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13175   00137E  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13176   001382  0E20               	movlw	32
 13177   001384  6EDF               	movwf	indf2,c
 13178                           
 13179                           ; BSR set to: 0
 13180   001386  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13181   001388  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13182                           
 13183                           ; BSR set to: 0
 13184   00138A  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13185   00138C  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13186   00138E                     i2l6486:
 13187                           
 13188                           ; BSR set to: 0
 13189   00138E  07A3               	decf	i2sprintf@width& (0+255),f,b
 13190   001390  A0D8               	btfss	status,0,c
 13191   001392  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13192   001394  29A3               	incf	i2sprintf@width& (0+255),w,b
 13193   001396  E1F1               	bnz	i2l6480
 13194   001398  29A4               	incf	(i2sprintf@width+1)& (0+255),w,b
 13195   00139A  B4D8               	btfsc	status,2,c
 13196   00139C  D01E               	goto	i2l6496
 13197   00139E  D7ED               	goto	i2l6480
 13198   0013A0                     i2l6488:
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;doprnt.c: 794: ((*sp++ = (*cp++)),(++ccnt));
 13202   0013A0  C08E  FFF6         	movff	i2sprintf@cp,tblptrl
 13203   0013A4  C08F  FFF7         	movff	i2sprintf@cp+1,tblptrh
 13204   0013A8  0E00               	movlw	low (__mediumconst shr (0+16))
 13205   0013AA  6EF8               	movwf	tblptru,c
 13206   0013AC  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13207   0013B0  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13208   0013B4  0E0F               	movlw	(high __ramtop+-1)
 13209   0013B6  64F7               	cpfsgt	tblptrh,c
 13210   0013B8  D003               	bra	i2u754_47
 13211   0013BA  0008               	tblrd		*
 13212   0013BC  50F5               	movf	tablat,w,c
 13213   0013BE  D005               	bra	i2u754_40
 13214   0013C0                     i2u754_47:
 13215   0013C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 13216   0013C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 13217   0013C8  50E7               	movf	indf1,w,c
 13218   0013CA                     i2u754_40:
 13219   0013CA  6EDF               	movwf	indf2,c
 13220   0013CC  0100               	movlb	0	; () banked
 13221   0013CE  4B8E               	infsnz	i2sprintf@cp& (0+255),f,b
 13222   0013D0  2B8F               	incf	(i2sprintf@cp+1)& (0+255),f,b
 13223                           
 13224                           ; BSR set to: 0
 13225   0013D2  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13226   0013D4  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13227                           
 13228                           ; BSR set to: 0
 13229   0013D6  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13230   0013D8  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13231   0013DA                     i2l6496:
 13232                           
 13233                           ; BSR set to: 0
 13234   0013DA  0790               	decf	i2sprintf@len& (0+255),f,b
 13235   0013DC  A0D8               	btfss	status,0,c
 13236   0013DE  0791               	decf	(i2sprintf@len+1)& (0+255),f,b
 13237   0013E0  2990               	incf	i2sprintf@len& (0+255),w,b
 13238   0013E2  E1DE               	bnz	i2l6488
 13239   0013E4  2991               	incf	(i2sprintf@len+1)& (0+255),w,b
 13240   0013E6  A4D8               	btfss	status,2,c
 13241   0013E8  D7DB               	goto	i2l6488
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;doprnt.c: 796: if(flag & 0x08)
 13245   0013EA  B7A8               	btfsc	i2sprintf@flag& (0+255),3,b
 13246   0013EC  D00C               	goto	i2l6506
 13247   0013EE  EF9C  F010         	goto	i2u838_40
 13248   0013F2                     i2l6500:
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;doprnt.c: 798: ((*sp++ = (' ')),(++ccnt));
 13252   0013F2  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13253   0013F6  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13254   0013FA  0E20               	movlw	32
 13255   0013FC  6EDF               	movwf	indf2,c
 13256                           
 13257                           ; BSR set to: 0
 13258   0013FE  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13259   001400  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13260                           
 13261                           ; BSR set to: 0
 13262   001402  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13263   001404  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13264   001406                     i2l6506:
 13265                           
 13266                           ; BSR set to: 0
 13267   001406  07A3               	decf	i2sprintf@width& (0+255),f,b
 13268   001408  A0D8               	btfss	status,0,c
 13269   00140A  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13270   00140C  29A3               	incf	i2sprintf@width& (0+255),w,b
 13271   00140E  E1F1               	bnz	i2l6500
 13272   001410  29A4               	incf	(i2sprintf@width+1)& (0+255),w,b
 13273   001412  B4D8               	btfsc	status,2,c
 13274   001414  EF9C  F010         	goto	i2u838_40
 13275   001418  D7EC               	goto	i2l6500
 13276   00141A                     i2l6508:
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 13280   00141A  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 13281   00141E  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13282   001422  50DF               	movf	indf2,w,c
 13283   001424  6FA7               	movwf	i2sprintf@c& (0+255),b
 13284                           
 13285                           ; BSR set to: 0
 13286   001426  0E02               	movlw	2
 13287   001428  2794               	addwf	i2sprintf@ap& (0+255),f,b
 13288   00142A  0E00               	movlw	0
 13289   00142C  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 13290   00142E                     i2l6512:
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;doprnt.c: 831: cp = (char *)&c;
 13294   00142E  0EA7               	movlw	low i2sprintf@c
 13295   001430  6F8E               	movwf	i2sprintf@cp& (0+255),b
 13296   001432  6B8F               	clrf	(i2sprintf@cp+1)& (0+255),b
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;doprnt.c: 832: len = 1;
 13300   001434  0E00               	movlw	0
 13301   001436  6F91               	movwf	(i2sprintf@len+1)& (0+255),b
 13302   001438  0E01               	movlw	1
 13303   00143A  6F90               	movwf	i2sprintf@len& (0+255),b
 13304                           
 13305                           ;doprnt.c: 833: goto dostring;
 13306   00143C  D779               	goto	i2u748_40
 13307   00143E                     i2l6516:
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;doprnt.c: 844: flag |= 0xC0;
 13311   00143E  0EC0               	movlw	192
 13312   001440  13A8               	iorwf	i2sprintf@flag& (0+255),f,b
 13313                           
 13314                           ;doprnt.c: 845: break;
 13315   001442  D02E               	goto	i2l6522
 13316   001444                     i2l6520:
 13317   001444  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 13318   001448  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 13319   00144C  4A4D               	infsnz	i2sprintf@f^0,f,c
 13320   00144E  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 13321   001450                     	if	0	;tblptru may be non-zero
 13322   001450                     	endif
 13323   001450                     	if	0	;tblptru may be non-zero
 13324   001450                     	endif
 13325   001450  0008               	tblrd		*
 13326   001452  CFF5 F0A7          	movff	tablat,i2sprintf@c
 13327   001456  0100               	movlb	0	; () banked
 13328   001458  51A7               	movf	i2sprintf@c& (0+255),w,b
 13329                           
 13330                           ; Switch size 1, requested type "simple"
 13331                           ; Number of cases is 11, Range of values is 0 to 120
 13332                           ; switch strategies available:
 13333                           ; Name         Instructions Cycles
 13334                           ; simple_byte           34    18 (average)
 13335                           ;	Chosen strategy is simple_byte
 13336   00145A  0A00               	xorlw	0	; case 0
 13337   00145C  B4D8               	btfsc	status,2,c
 13338   00145E  EFA9  F010         	goto	i2u839_40
 13339   001462  0A58               	xorlw	88	; case 88
 13340   001464  B4D8               	btfsc	status,2,c
 13341   001466  D72B               	goto	i2l468
 13342   001468  0A3B               	xorlw	59	; case 99
 13343   00146A  B4D8               	btfsc	status,2,c
 13344   00146C  D7D6               	goto	i2l6508
 13345   00146E  0A07               	xorlw	7	; case 100
 13346   001470  B4D8               	btfsc	status,2,c
 13347   001472  D016               	goto	i2l6522
 13348   001474  0A02               	xorlw	2	; case 102
 13349   001476  B4D8               	btfsc	status,2,c
 13350   001478  D71D               	goto	i2l6444
 13351   00147A  0A0F               	xorlw	15	; case 105
 13352   00147C  B4D8               	btfsc	status,2,c
 13353   00147E  D010               	goto	i2l6522
 13354   001480  0A06               	xorlw	6	; case 111
 13355   001482  B4D8               	btfsc	status,2,c
 13356   001484  D719               	goto	i2l6446
 13357   001486  0A1F               	xorlw	31	; case 112
 13358   001488  B4D8               	btfsc	status,2,c
 13359   00148A  D718               	goto	i2l6448
 13360   00148C  0A03               	xorlw	3	; case 115
 13361   00148E  B4D8               	btfsc	status,2,c
 13362   001490  D719               	goto	i2l6450
 13363   001492  0A06               	xorlw	6	; case 117
 13364   001494  B4D8               	btfsc	status,2,c
 13365   001496  D7D3               	goto	i2l6516
 13366   001498  0A0D               	xorlw	13	; case 120
 13367   00149A  B4D8               	btfsc	status,2,c
 13368   00149C  D711               	goto	i2l469
 13369   00149E  D7C7               	goto	i2l6512
 13370   0014A0                     i2l6522:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;doprnt.c: 851: if(flag & (0x700)) {
 13374   0014A0  0E07               	movlw	7
 13375   0014A2  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 13376   0014A4  B4D8               	btfsc	status,2,c
 13377   0014A6  D36F               	goto	i2l6764
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;doprnt.c: 853: if(flag & 0x1000)
 13381   0014A8  A9A9               	btfss	(i2sprintf@flag+1)& (0+255),4,b
 13382   0014AA  D004               	goto	i2l6528
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;doprnt.c: 855: prec = 6;
 13386   0014AC  0E00               	movlw	0
 13387   0014AE  6FA6               	movwf	(i2sprintf@prec+1)& (0+255),b
 13388   0014B0  0E06               	movlw	6
 13389   0014B2  6FA5               	movwf	i2sprintf@prec& (0+255),b
 13390   0014B4                     i2l6528:
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13394   0014B4  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 13395   0014B8  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13396   0014BC  CFDE F09C          	movff	postinc2,i2sprintf@fval
 13397   0014C0  CFDE F09D          	movff	postinc2,i2sprintf@fval+1
 13398   0014C4  CFDD F09E          	movff	postdec2,i2sprintf@fval+2
 13399                           
 13400                           ; BSR set to: 0
 13401   0014C8  0E03               	movlw	3
 13402   0014CA  2794               	addwf	i2sprintf@ap& (0+255),f,b
 13403   0014CC  0E00               	movlw	0
 13404   0014CE  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;doprnt.c: 857: if(fval < 0.0) {
 13408   0014D0  AF9E               	btfss	(i2sprintf@fval+2)& (0+255),7,b
 13409   0014D2  D010               	goto	i2l6538
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;doprnt.c: 858: fval = -fval;
 13413   0014D4  C09C  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 13414   0014D8  C09D  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 13415   0014DC  C09E  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 13416   0014E0  EC12  F029         	call	i2___ftneg	;wreg free
 13417   0014E4  C001  F09C         	movff	?i2___ftneg,i2sprintf@fval
 13418   0014E8  C002  F09D         	movff	?i2___ftneg+1,i2sprintf@fval+1
 13419   0014EC  C003  F09E         	movff	?i2___ftneg+2,i2sprintf@fval+2
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;doprnt.c: 859: flag |= 0x03;
 13423   0014F0  0E03               	movlw	3
 13424   0014F2  13A8               	iorwf	i2sprintf@flag& (0+255),f,b
 13425   0014F4                     i2l6538:
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 13429   0014F4  0E00               	movlw	0
 13430   0014F6  6F9B               	movwf	(i2sprintf@eexp+1)& (0+255),b
 13431   0014F8  0E00               	movlw	0
 13432   0014FA  6F9A               	movwf	i2sprintf@eexp& (0+255),b
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;doprnt.c: 862: if( fval!=0) {
 13436   0014FC  519C               	movf	i2sprintf@fval& (0+255),w,b
 13437   0014FE  119D               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 13438   001500  119E               	iorwf	(i2sprintf@fval+2)& (0+255),w,b
 13439   001502  B4D8               	btfsc	status,2,c
 13440   001504  D086               	goto	i2l6566
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13444   001506  0E82               	movlw	130
 13445   001508  6E55               	movwf	??i2_sprintf^0,c
 13446   00150A  0EFF               	movlw	255
 13447   00150C  6E56               	movwf	(??i2_sprintf+1)^0,c
 13448   00150E  C09C  F057         	movff	i2sprintf@fval,??i2_sprintf+2
 13449   001512  C09D  F058         	movff	i2sprintf@fval+1,??i2_sprintf+3
 13450   001516  C09E  F059         	movff	i2sprintf@fval+2,??i2_sprintf+4
 13451   00151A  C09F  F05A         	movff	i2sprintf@fval+3,??i2_sprintf+5
 13452   00151E  0E10               	movlw	16
 13453   001520  D005               	goto	i2u762_40
 13454   001522                     i2u762_45:
 13455   001522  90D8               	bcf	status,0,c
 13456   001524  325A               	rrcf	(??i2_sprintf+5)^0,f,c
 13457   001526  3259               	rrcf	(??i2_sprintf+4)^0,f,c
 13458   001528  3258               	rrcf	(??i2_sprintf+3)^0,f,c
 13459   00152A  3257               	rrcf	(??i2_sprintf+2)^0,f,c
 13460   00152C                     i2u762_40:
 13461   00152C  2EE8               	decfsz	wreg,f,c
 13462   00152E  D7F9               	goto	i2u762_45
 13463   001530  5057               	movf	(??i2_sprintf+2)^0,w,c
 13464   001532  2455               	addwf	??i2_sprintf^0,w,c
 13465   001534  6F9A               	movwf	i2sprintf@eexp& (0+255),b
 13466   001536  0E00               	movlw	0
 13467   001538  2056               	addwfc	(??i2_sprintf+1)^0,w,c
 13468   00153A  6F9B               	movwf	(i2sprintf@eexp+1)& (0+255),b
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;doprnt.c: 864: eexp--;
 13472   00153C  079A               	decf	i2sprintf@eexp& (0+255),f,b
 13473   00153E  A0D8               	btfss	status,0,c
 13474   001540  079B               	decf	(i2sprintf@eexp+1)& (0+255),f,b
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;doprnt.c: 865: eexp *= 3;
 13478   001542  C09A  F001         	movff	i2sprintf@eexp,i2___wmul@multiplier
 13479   001546  C09B  F002         	movff	i2sprintf@eexp+1,i2___wmul@multiplier+1
 13480   00154A  0E00               	movlw	0
 13481   00154C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 13482   00154E  0E03               	movlw	3
 13483   001550  6E03               	movwf	i2___wmul@multiplicand^0,c
 13484   001552  ECDA  F028         	call	i2___wmul	;wreg free
 13485   001556  C001  F09A         	movff	?i2___wmul,i2sprintf@eexp
 13486   00155A  C002  F09B         	movff	?i2___wmul+1,i2sprintf@eexp+1
 13487                           
 13488                           ;doprnt.c: 866: eexp /= 10;
 13489   00155E  C09A  F007         	movff	i2sprintf@eexp,i2___awdiv@dividend
 13490   001562  C09B  F008         	movff	i2sprintf@eexp+1,i2___awdiv@dividend+1
 13491   001566  0E00               	movlw	0
 13492   001568  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 13493   00156A  0E0A               	movlw	10
 13494   00156C  6E09               	movwf	i2___awdiv@divisor^0,c
 13495   00156E  EC7E  F021         	call	i2___awdiv	;wreg free
 13496   001572  C007  F09A         	movff	?i2___awdiv,i2sprintf@eexp
 13497   001576  C008  F09B         	movff	?i2___awdiv+1,i2sprintf@eexp+1
 13498                           
 13499                           ;doprnt.c: 867: if(eexp < 0)
 13500   00157A  0100               	movlb	0	; () banked
 13501   00157C  AF9B               	btfss	(i2sprintf@eexp+1)& (0+255),7,b
 13502   00157E  D003               	goto	i2l6554
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;doprnt.c: 868: eexp--;
 13506   001580  079A               	decf	i2sprintf@eexp& (0+255),f,b
 13507   001582  A0D8               	btfss	status,0,c
 13508   001584  079B               	decf	(i2sprintf@eexp+1)& (0+255),f,b
 13509   001586                     i2l6554:
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 13513   001586  519A               	movf	i2sprintf@eexp& (0+255),w,b
 13514   001588  0800               	sublw	0
 13515   00158A  EC3C  F014         	call	i2_scale
 13516   00158E  C01E  F096         	movff	?i2_scale,i2sprintf@tmpval
 13517   001592  C01F  F097         	movff	?i2_scale+1,i2sprintf@tmpval+1
 13518   001596  C020  F098         	movff	?i2_scale+2,i2sprintf@tmpval+2
 13519                           
 13520                           ;doprnt.c: 873: tmpval.integ *= fval;
 13521   00159A  C096  F00F         	movff	i2sprintf@tmpval,i2___ftmul@f1
 13522   00159E  C097  F010         	movff	i2sprintf@tmpval+1,i2___ftmul@f1+1
 13523   0015A2  C098  F011         	movff	i2sprintf@tmpval+2,i2___ftmul@f1+2
 13524   0015A6  C09C  F012         	movff	i2sprintf@fval,i2___ftmul@f2
 13525   0015AA  C09D  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 13526   0015AE  C09E  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 13527   0015B2  ECB8  F01C         	call	i2___ftmul	;wreg free
 13528   0015B6  C00F  F096         	movff	?i2___ftmul,i2sprintf@tmpval
 13529   0015BA  C010  F097         	movff	?i2___ftmul+1,i2sprintf@tmpval+1
 13530   0015BE  C011  F098         	movff	?i2___ftmul+2,i2sprintf@tmpval+2
 13531                           
 13532                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 13533   0015C2  C096  F036         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13534   0015C6  C097  F037         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13535   0015CA  C098  F038         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13536   0015CE  0E00               	movlw	0
 13537   0015D0  6E39               	movwf	i2___ftge@ff2^0,c
 13538   0015D2  0E80               	movlw	128
 13539   0015D4  6E3A               	movwf	(i2___ftge@ff2+1)^0,c
 13540   0015D6  0E3F               	movlw	63
 13541   0015D8  6E3B               	movwf	(i2___ftge@ff2+2)^0,c
 13542   0015DA  ECED  F022         	call	i2___ftge	;wreg free
 13543   0015DE  B0D8               	btfsc	status,0,c
 13544   0015E0  D005               	goto	i2l6562
 13545                           
 13546                           ;doprnt.c: 875: eexp--;
 13547   0015E2  0100               	movlb	0	; () banked
 13548   0015E4  079A               	decf	i2sprintf@eexp& (0+255),f,b
 13549   0015E6  A0D8               	btfss	status,0,c
 13550   0015E8  079B               	decf	(i2sprintf@eexp+1)& (0+255),f,b
 13551   0015EA  D013               	goto	i2l6566
 13552   0015EC                     i2l6562:
 13553                           
 13554                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 13555   0015EC  C096  F036         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13556   0015F0  C097  F037         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13557   0015F4  C098  F038         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13558   0015F8  0E00               	movlw	0
 13559   0015FA  6E39               	movwf	i2___ftge@ff2^0,c
 13560   0015FC  0E20               	movlw	32
 13561   0015FE  6E3A               	movwf	(i2___ftge@ff2+1)^0,c
 13562   001600  0E41               	movlw	65
 13563   001602  6E3B               	movwf	(i2___ftge@ff2+2)^0,c
 13564   001604  ECED  F022         	call	i2___ftge	;wreg free
 13565   001608  A0D8               	btfss	status,0,c
 13566   00160A  D003               	goto	i2l6566
 13567                           
 13568                           ;doprnt.c: 877: eexp++;
 13569   00160C  0100               	movlb	0	; () banked
 13570   00160E  4B9A               	infsnz	i2sprintf@eexp& (0+255),f,b
 13571   001610  2B9B               	incf	(i2sprintf@eexp+1)& (0+255),f,b
 13572   001612                     i2l6566:
 13573                           
 13574                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 13575   001612  0100               	movlb	0	; () banked
 13576   001614  BFA6               	btfsc	(i2sprintf@prec+1)& (0+255),7,b
 13577   001616  D006               	goto	i2u766_40
 13578   001618  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13579   00161A  E11B               	bnz	i2l6570
 13580   00161C  0E0D               	movlw	13
 13581   00161E  5DA5               	subwf	i2sprintf@prec& (0+255),w,b
 13582   001620  B0D8               	btfsc	status,0,c
 13583   001622  D017               	goto	i2l6570
 13584   001624                     i2u766_40:
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 13588   001624  C09C  F02A         	movff	i2sprintf@fval,i2___ftadd@f1
 13589   001628  C09D  F02B         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
 13590   00162C  C09E  F02C         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
 13591   001630  51A5               	movf	i2sprintf@prec& (0+255),w,b
 13592   001632  ECF2  F016         	call	i2_fround
 13593   001636  C01E  F02D         	movff	?i2_fround,i2___ftadd@f2
 13594   00163A  C01F  F02E         	movff	?i2_fround+1,i2___ftadd@f2+1
 13595   00163E  C020  F02F         	movff	?i2_fround+2,i2___ftadd@f2+2
 13596   001642  ECB9  F018         	call	i2___ftadd	;wreg free
 13597   001646  C02A  F09C         	movff	?i2___ftadd,i2sprintf@fval
 13598   00164A  C02B  F09D         	movff	?i2___ftadd+1,i2sprintf@fval+1
 13599   00164E  C02C  F09E         	movff	?i2___ftadd+2,i2sprintf@fval+2
 13600   001652                     i2l6570:
 13601                           
 13602                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 13603   001652  0100               	movlb	0	; () banked
 13604   001654  BF9B               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
 13605   001656  D006               	goto	i2u767_40
 13606   001658  519B               	movf	(i2sprintf@eexp+1)& (0+255),w,b
 13607   00165A  E120               	bnz	i2l6578
 13608   00165C  0E0A               	movlw	10
 13609   00165E  5D9A               	subwf	i2sprintf@eexp& (0+255),w,b
 13610   001660  B0D8               	btfsc	status,0,c
 13611   001662  D01C               	goto	i2u770_40
 13612   001664                     i2u767_40:
 13613                           
 13614                           ; BSR set to: 0
 13615   001664  519C               	movf	i2sprintf@fval& (0+255),w,b
 13616   001666  119D               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 13617   001668  119E               	iorwf	(i2sprintf@fval+2)& (0+255),w,b
 13618   00166A  B4D8               	btfsc	status,2,c
 13619   00166C  D056               	goto	i2l6592
 13620                           
 13621                           ; BSR set to: 0
 13622   00166E  C09C  F03C         	movff	i2sprintf@fval,i2___fttol@f1
 13623   001672  C09D  F03D         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13624   001676  C09E  F03E         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13625   00167A  ECE2  F01F         	call	i2___fttol	;wreg free
 13626   00167E  503C               	movf	?i2___fttol^0,w,c
 13627   001680  103D               	iorwf	(?i2___fttol+1)^0,w,c
 13628   001682  103E               	iorwf	(?i2___fttol+2)^0,w,c
 13629   001684  103F               	iorwf	(?i2___fttol+3)^0,w,c
 13630   001686  A4D8               	btfss	status,2,c
 13631   001688  D048               	goto	i2l6592
 13632   00168A  0100               	movlb	0	; () banked
 13633   00168C  BF9B               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
 13634   00168E  D045               	goto	i2l6592
 13635   001690  519B               	movf	(i2sprintf@eexp+1)& (0+255),w,b
 13636   001692  E104               	bnz	i2u770_40
 13637   001694  0E02               	movlw	2
 13638   001696  5D9A               	subwf	i2sprintf@eexp& (0+255),w,b
 13639   001698  A0D8               	btfss	status,0,c
 13640   00169A  D03F               	goto	i2l6592
 13641   00169C                     i2u770_40:
 13642   00169C                     i2l6578:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 13646   00169C  C096  F036         	movff	i2sprintf@tmpval,i2___ftge@ff1
 13647   0016A0  C097  F037         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 13648   0016A4  C098  F038         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 13649   0016A8  0E70               	movlw	112
 13650   0016AA  6E39               	movwf	i2___ftge@ff2^0,c
 13651   0016AC  0E89               	movlw	137
 13652   0016AE  6E3A               	movwf	(i2___ftge@ff2+1)^0,c
 13653   0016B0  0E40               	movlw	64
 13654   0016B2  6E3B               	movwf	(i2___ftge@ff2+2)^0,c
 13655   0016B4  ECED  F022         	call	i2___ftge	;wreg free
 13656   0016B8  B0D8               	btfsc	status,0,c
 13657   0016BA  D003               	goto	i2l6582
 13658                           
 13659                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13660   0016BC  0100               	movlb	0	; () banked
 13661   0016BE  0EF7               	movlw	247
 13662   0016C0  D002               	goto	L35
 13663   0016C2                     i2l6582:
 13664                           
 13665                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13666   0016C2  0100               	movlb	0	; () banked
 13667   0016C4  0EF8               	movlw	248
 13668   0016C6                     L35:
 13669   0016C6  279A               	addwf	i2sprintf@eexp& (0+255),f,b
 13670   0016C8  0EFF               	movlw	255
 13671   0016CA  239B               	addwfc	(i2sprintf@eexp+1)& (0+255),f,b
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
 13675   0016CC  519A               	movf	i2sprintf@eexp& (0+255),w,b
 13676   0016CE  EC3C  F014         	call	i2_scale
 13677   0016D2  C01E  F096         	movff	?i2_scale,i2sprintf@tmpval
 13678   0016D6  C01F  F097         	movff	?i2_scale+1,i2sprintf@tmpval+1
 13679   0016DA  C020  F098         	movff	?i2_scale+2,i2sprintf@tmpval+2
 13680                           
 13681                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 13682   0016DE  C09C  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 13683   0016E2  C09D  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 13684   0016E6  C09E  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 13685   0016EA  C096  F004         	movff	i2sprintf@tmpval,i2__tdiv_to_l_@f2
 13686   0016EE  C097  F005         	movff	i2sprintf@tmpval+1,i2__tdiv_to_l_@f2+1
 13687   0016F2  C098  F006         	movff	i2sprintf@tmpval+2,i2__tdiv_to_l_@f2+2
 13688   0016F6  ECBE  F01B         	call	i2__tdiv_to_l_	;wreg free
 13689   0016FA  C001  F09F         	movff	?i2__tdiv_to_l_,i2sprintf@val
 13690   0016FE  C002  F0A0         	movff	?i2__tdiv_to_l_+1,i2sprintf@val+1
 13691   001702  C003  F0A1         	movff	?i2__tdiv_to_l_+2,i2sprintf@val+2
 13692   001706  C004  F0A2         	movff	?i2__tdiv_to_l_+3,i2sprintf@val+3
 13693                           
 13694                           ;doprnt.c: 1155: fval = 0.0;
 13695   00170A  0E00               	movlw	0
 13696   00170C  0100               	movlb	0	; () banked
 13697   00170E  6F9C               	movwf	i2sprintf@fval& (0+255),b
 13698   001710  0E00               	movlw	0
 13699   001712  6F9D               	movwf	(i2sprintf@fval+1)& (0+255),b
 13700   001714  0E00               	movlw	0
 13701   001716  6F9E               	movwf	(i2sprintf@fval+2)& (0+255),b
 13702                           
 13703                           ;doprnt.c: 1156: } else {
 13704   001718  D033               	goto	i2l6596
 13705   00171A                     i2l6592:
 13706                           
 13707                           ;doprnt.c: 1157: val = (unsigned long)fval;
 13708   00171A  C09C  F03C         	movff	i2sprintf@fval,i2___fttol@f1
 13709   00171E  C09D  F03D         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13710   001722  C09E  F03E         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13711   001726  ECE2  F01F         	call	i2___fttol	;wreg free
 13712   00172A  C03C  F09F         	movff	?i2___fttol,i2sprintf@val
 13713   00172E  C03D  F0A0         	movff	?i2___fttol+1,i2sprintf@val+1
 13714   001732  C03E  F0A1         	movff	?i2___fttol+2,i2sprintf@val+2
 13715   001736  C03F  F0A2         	movff	?i2___fttol+3,i2sprintf@val+3
 13716                           
 13717                           ;doprnt.c: 1158: fval -= (double)val;
 13718   00173A  C09C  F036         	movff	i2sprintf@fval,i2___ftsub@f1
 13719   00173E  C09D  F037         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
 13720   001742  C09E  F038         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
 13721   001746  C09F  F009         	movff	i2sprintf@val,i2___lltoft@c
 13722   00174A  C0A0  F00A         	movff	i2sprintf@val+1,i2___lltoft@c+1
 13723   00174E  C0A1  F00B         	movff	i2sprintf@val+2,i2___lltoft@c+2
 13724   001752  C0A2  F00C         	movff	i2sprintf@val+3,i2___lltoft@c+3
 13725   001756  ECC3  F025         	call	i2___lltoft	;wreg free
 13726   00175A  C009  F039         	movff	?i2___lltoft,i2___ftsub@f2
 13727   00175E  C00A  F03A         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 13728   001762  C00B  F03B         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 13729   001766  EC5F  F027         	call	i2___ftsub	;wreg free
 13730   00176A  C036  F09C         	movff	?i2___ftsub,i2sprintf@fval
 13731   00176E  C037  F09D         	movff	?i2___ftsub+1,i2sprintf@fval+1
 13732   001772  C038  F09E         	movff	?i2___ftsub+2,i2sprintf@fval+2
 13733                           
 13734                           ;doprnt.c: 1159: eexp = 0;
 13735   001776  0E00               	movlw	0
 13736   001778  0100               	movlb	0	; () banked
 13737   00177A  6F9B               	movwf	(i2sprintf@eexp+1)& (0+255),b
 13738   00177C  0E00               	movlw	0
 13739   00177E  6F9A               	movwf	i2sprintf@eexp& (0+255),b
 13740   001780                     i2l6596:
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 13744   001780  0E01               	movlw	1
 13745   001782  6FA7               	movwf	i2sprintf@c& (0+255),b
 13746   001784                     i2l6598:
 13747                           
 13748                           ; BSR set to: 0
 13749   001784  0E0A               	movlw	10
 13750   001786  19A7               	xorwf	i2sprintf@c& (0+255),w,b
 13751   001788  B4D8               	btfsc	status,2,c
 13752   00178A  D018               	goto	i2l6610
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;doprnt.c: 1163: if(val < dpowers[c])
 13756   00178C  51A7               	movf	i2sprintf@c& (0+255),w,b
 13757   00178E  0D04               	mullw	4
 13758   001790  0E2F               	movlw	low _dpowers
 13759   001792  24F3               	addwf	243,w,c
 13760   001794  6EF6               	movwf	tblptrl,c
 13761   001796  0EFF               	movlw	high _dpowers
 13762   001798  20F4               	addwfc	244,w,c
 13763   00179A  6EF7               	movwf	tblptrh,c
 13764   00179C                     	if	0	;There are less than 3 active tblptr bytes
 13765   00179C                     	endif
 13766   00179C  0009               	tblrd		*+
 13767   00179E  50F5               	movf	tablat,w,c
 13768   0017A0  5D9F               	subwf	i2sprintf@val& (0+255),w,b
 13769   0017A2  0009               	tblrd		*+
 13770   0017A4  50F5               	movf	tablat,w,c
 13771   0017A6  59A0               	subwfb	(i2sprintf@val+1)& (0+255),w,b
 13772   0017A8  0009               	tblrd		*+
 13773   0017AA  50F5               	movf	tablat,w,c
 13774   0017AC  59A1               	subwfb	(i2sprintf@val+2)& (0+255),w,b
 13775   0017AE  0009               	tblrd		*+
 13776   0017B0  50F5               	movf	tablat,w,c
 13777   0017B2  59A2               	subwfb	(i2sprintf@val+3)& (0+255),w,b
 13778   0017B4  A0D8               	btfss	status,0,c
 13779   0017B6  D002               	goto	i2l6610
 13780                           
 13781                           ; BSR set to: 0
 13782   0017B8  2BA7               	incf	i2sprintf@c& (0+255),f,b
 13783   0017BA  D7E4               	goto	i2l6598
 13784   0017BC                     i2l6610:
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;doprnt.c: 1168: width -= prec + c + eexp;
 13788   0017BC  51A7               	movf	i2sprintf@c& (0+255),w,b
 13789   0017BE  25A5               	addwf	i2sprintf@prec& (0+255),w,b
 13790   0017C0  6E55               	movwf	??i2_sprintf^0,c
 13791   0017C2  0E00               	movlw	0
 13792   0017C4  21A6               	addwfc	(i2sprintf@prec+1)& (0+255),w,b
 13793   0017C6  6E56               	movwf	(??i2_sprintf+1)^0,c
 13794   0017C8  519A               	movf	i2sprintf@eexp& (0+255),w,b
 13795   0017CA  2655               	addwf	??i2_sprintf^0,f,c
 13796   0017CC  519B               	movf	(i2sprintf@eexp+1)& (0+255),w,b
 13797   0017CE  2256               	addwfc	(??i2_sprintf+1)^0,f,c
 13798   0017D0  5055               	movf	??i2_sprintf^0,w,c
 13799   0017D2  5FA3               	subwf	i2sprintf@width& (0+255),f,b
 13800   0017D4  5056               	movf	(??i2_sprintf+1)^0,w,c
 13801   0017D6  5BA4               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;doprnt.c: 1169: if(;doprnt.c: 1171: flag & 0x800 ||;doprnt.c: 1173: prec)
 13805   0017D8  B7A9               	btfsc	(i2sprintf@flag+1)& (0+255),3,b
 13806   0017DA  D004               	goto	i2u775_40
 13807                           
 13808                           ; BSR set to: 0
 13809   0017DC  51A5               	movf	i2sprintf@prec& (0+255),w,b
 13810   0017DE  11A6               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
 13811   0017E0  B4D8               	btfsc	status,2,c
 13812   0017E2  D003               	goto	i2l6618
 13813   0017E4                     i2u775_40:
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;doprnt.c: 1174: width--;
 13817   0017E4  07A3               	decf	i2sprintf@width& (0+255),f,b
 13818   0017E6  A0D8               	btfss	status,0,c
 13819   0017E8  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13820   0017EA                     i2l6618:
 13821                           
 13822                           ; BSR set to: 0
 13823                           ;doprnt.c: 1175: if(flag & 0x03)
 13824   0017EA  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 13825   0017EE  0E03               	movlw	3
 13826   0017F0  1655               	andwf	??i2_sprintf^0,f,c
 13827   0017F2  B4D8               	btfsc	status,2,c
 13828   0017F4  D003               	goto	i2l6622
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;doprnt.c: 1176: width--;
 13832   0017F6  07A3               	decf	i2sprintf@width& (0+255),f,b
 13833   0017F8  A0D8               	btfss	status,0,c
 13834   0017FA  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13835   0017FC                     i2l6622:
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;doprnt.c: 1179: if(flag & 0x04) {
 13839   0017FC  A5A8               	btfss	i2sprintf@flag& (0+255),2,b
 13840   0017FE  D03C               	goto	i2l519
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;doprnt.c: 1183: if(flag & 0x03)
 13844   001800  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 13845   001804  0E03               	movlw	3
 13846   001806  1655               	andwf	??i2_sprintf^0,f,c
 13847   001808  B4D8               	btfsc	status,2,c
 13848   00180A  D014               	goto	i2l6638
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;doprnt.c: 1185: ((*sp++ = (flag & 0x01 ? '-' : '+')),(++ccnt));
 13852   00180C  B1A8               	btfsc	i2sprintf@flag& (0+255),0,b
 13853   00180E  D004               	goto	i2l6630
 13854                           
 13855                           ; BSR set to: 0
 13856   001810  0E00               	movlw	0
 13857   001812  6F84               	movwf	(i2_sprintf$1025+1)& (0+255),b
 13858   001814  0E2B               	movlw	43
 13859   001816  D003               	goto	L36
 13860   001818                     i2l6630:
 13861                           
 13862                           ; BSR set to: 0
 13863   001818  0E00               	movlw	0
 13864   00181A  6F84               	movwf	(i2_sprintf$1025+1)& (0+255),b
 13865   00181C  0E2D               	movlw	45
 13866   00181E                     L36:
 13867   00181E  6F83               	movwf	i2_sprintf$1025& (0+255),b
 13868                           
 13869                           ; BSR set to: 0
 13870   001820  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13871   001824  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13872   001828  C083  FFDF         	movff	i2_sprintf$1025,indf2
 13873                           
 13874                           ; BSR set to: 0
 13875   00182C  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13876   00182E  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13877                           
 13878                           ; BSR set to: 0
 13879   001830  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13880   001832  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13881   001834                     i2l6638:
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;doprnt.c: 1190: if(flag & 0x01)
 13885   001834  A1A8               	btfss	i2sprintf@flag& (0+255),0,b
 13886   001836  D018               	goto	i2l6654
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;doprnt.c: 1191: ((*sp++ = (' ')),(++ccnt));
 13890   001838  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13891   00183C  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13892   001840  0E20               	movlw	32
 13893   001842  6EDF               	movwf	indf2,c
 13894                           
 13895                           ; BSR set to: 0
 13896   001844  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13897   001846  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13898                           
 13899                           ; BSR set to: 0
 13900   001848  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13901   00184A  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13902   00184C  D00D               	goto	i2l6654
 13903   00184E                     i2l6646:
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;doprnt.c: 1195: ((*sp++ = ('0')),(++ccnt));
 13907   00184E  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13908   001852  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13909   001856  0E30               	movlw	48
 13910   001858  6EDF               	movwf	indf2,c
 13911                           
 13912                           ; BSR set to: 0
 13913   00185A  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13914   00185C  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13915                           
 13916                           ; BSR set to: 0
 13917   00185E  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13918   001860  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;doprnt.c: 1196: width--;
 13922   001862  07A3               	decf	i2sprintf@width& (0+255),f,b
 13923   001864  A0D8               	btfss	status,0,c
 13924   001866  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13925   001868                     i2l6654:
 13926                           
 13927                           ; BSR set to: 0
 13928   001868  BFA4               	btfsc	(i2sprintf@width+1)& (0+255),7,b
 13929   00186A  D089               	goto	i2l6698
 13930   00186C  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 13931   00186E  E1EF               	bnz	i2l6646
 13932   001870  05A3               	decf	i2sprintf@width& (0+255),w,b
 13933   001872  A0D8               	btfss	status,0,c
 13934   001874  D084               	goto	i2l6698
 13935   001876  D7EB               	goto	i2l6646
 13936   001878                     i2l519:
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;doprnt.c: 1201: {;doprnt.c: 1203: if(!(flag & 0x08))
 13940   001878  A7A8               	btfss	i2sprintf@flag& (0+255),3,b
 13941   00187A  D00E               	goto	i2l6666
 13942   00187C  D014               	goto	i2u783_40
 13943   00187E                     i2l6658:
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;doprnt.c: 1207: ((*sp++ = (' ')),(++ccnt));
 13947   00187E  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 13948   001882  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13949   001886  0E20               	movlw	32
 13950   001888  6EDF               	movwf	indf2,c
 13951                           
 13952                           ; BSR set to: 0
 13953   00188A  4A4B               	infsnz	i2sprintf@sp^0,f,c
 13954   00188C  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 13955                           
 13956                           ; BSR set to: 0
 13957   00188E  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 13958   001890  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;doprnt.c: 1208: width--;
 13962   001892  07A3               	decf	i2sprintf@width& (0+255),f,b
 13963   001894  A0D8               	btfss	status,0,c
 13964   001896  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 13965   001898                     i2l6666:
 13966                           
 13967                           ; BSR set to: 0
 13968   001898  BFA4               	btfsc	(i2sprintf@width+1)& (0+255),7,b
 13969   00189A  D005               	goto	i2u783_40
 13970   00189C  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 13971   00189E  E1EF               	bnz	i2l6658
 13972   0018A0  05A3               	decf	i2sprintf@width& (0+255),w,b
 13973   0018A2  B0D8               	btfsc	status,0,c
 13974   0018A4  D7EC               	goto	i2l6658
 13975   0018A6                     i2u783_40:
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
 13979   0018A6  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 13980   0018AA  0E03               	movlw	3
 13981   0018AC  1655               	andwf	??i2_sprintf^0,f,c
 13982   0018AE  B4D8               	btfsc	status,2,c
 13983   0018B0  D015               	goto	i2l534
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;doprnt.c: 1216: ((*sp++ = (flag & 0x01 ? '-' : '+')),(++ccnt));
 13987   0018B2  B1A8               	btfsc	i2sprintf@flag& (0+255),0,b
 13988   0018B4  D004               	goto	i2l6674
 13989                           
 13990                           ; BSR set to: 0
 13991   0018B6  0E00               	movlw	0
 13992   0018B8  6F86               	movwf	(i2_sprintf$1026+1)& (0+255),b
 13993   0018BA  0E2B               	movlw	43
 13994   0018BC  D003               	goto	L37
 13995   0018BE                     i2l6674:
 13996                           
 13997                           ; BSR set to: 0
 13998   0018BE  0E00               	movlw	0
 13999   0018C0  6F86               	movwf	(i2_sprintf$1026+1)& (0+255),b
 14000   0018C2  0E2D               	movlw	45
 14001   0018C4                     L37:
 14002   0018C4  6F85               	movwf	i2_sprintf$1026& (0+255),b
 14003                           
 14004                           ; BSR set to: 0
 14005   0018C6  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14006   0018CA  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14007   0018CE  C085  FFDF         	movff	i2_sprintf$1026,indf2
 14008   0018D2                     i2l6678:
 14009                           
 14010                           ; BSR set to: 0
 14011   0018D2  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14012   0018D4  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14013                           
 14014                           ; BSR set to: 0
 14015   0018D6  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14016   0018D8  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14017   0018DA  D051               	goto	i2l6698
 14018   0018DC                     i2l534:
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;doprnt.c: 1218: else if(flag & 0x01)
 14022   0018DC  A1A8               	btfss	i2sprintf@flag& (0+255),0,b
 14023   0018DE  D04F               	goto	i2l6698
 14024                           
 14025                           ; BSR set to: 0
 14026                           ;doprnt.c: 1219: ((*sp++ = (' ')),(++ccnt));
 14027   0018E0  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14028   0018E4  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14029   0018E8  0E20               	movlw	32
 14030   0018EA  D047               	goto	L38
 14031   0018EC                     i2l6688:
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 14035   0018EC  C09F  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 14036   0018F0  C0A0  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 14037   0018F4  C0A1  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 14038   0018F8  C0A2  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 14039   0018FC  51A7               	movf	i2sprintf@c& (0+255),w,b
 14040   0018FE  0D04               	mullw	4
 14041   001900  0E2F               	movlw	low _dpowers
 14042   001902  24F3               	addwf	243,w,c
 14043   001904  6EF6               	movwf	tblptrl,c
 14044   001906  0EFF               	movlw	high _dpowers
 14045   001908  20F4               	addwfc	244,w,c
 14046   00190A  6EF7               	movwf	tblptrh,c
 14047   00190C                     	if	0	;There are less than 3 active tblptr bytes
 14048   00190C                     	endif
 14049   00190C  0009               	tblrd		*+
 14050   00190E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14051   001912  0009               	tblrd		*+
 14052   001914  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14053   001918  0009               	tblrd		*+
 14054   00191A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14055   00191E  000A               	tblrd		*-
 14056   001920  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14057   001924  ECC0  F021         	call	i2___lldiv	;wreg free
 14058   001928  C001  F096         	movff	?i2___lldiv,i2sprintf@tmpval
 14059   00192C  C002  F097         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 14060   001930  C003  F098         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 14061   001934  C004  F099         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 14062                           
 14063                           ;doprnt.c: 1228: tmpval.vd %= 10;
 14064   001938  C096  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 14065   00193C  C097  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 14066   001940  C098  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 14067   001944  C099  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 14068   001948  0E0A               	movlw	10
 14069   00194A  6E12               	movwf	i2___llmod@divisor^0,c
 14070   00194C  0E00               	movlw	0
 14071   00194E  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 14072   001950  0E00               	movlw	0
 14073   001952  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 14074   001954  0E00               	movlw	0
 14075   001956  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 14076   001958  EC71  F024         	call	i2___llmod	;wreg free
 14077   00195C  C00E  F096         	movff	?i2___llmod,i2sprintf@tmpval
 14078   001960  C00F  F097         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 14079   001964  C010  F098         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 14080   001968  C011  F099         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 14081                           
 14082                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 14083   00196C  0100               	movlb	0	; () banked
 14084   00196E  5196               	movf	i2sprintf@tmpval& (0+255),w,b
 14085   001970  0F30               	addlw	48
 14086   001972  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14087   001976  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14088   00197A                     L38:
 14089   00197A  6EDF               	movwf	indf2,c
 14090   00197C  D7AA               	goto	i2l6678
 14091   00197E                     i2l6698:
 14092                           
 14093                           ; BSR set to: 0
 14094   00197E  07A7               	decf	i2sprintf@c& (0+255),f,b
 14095   001980  29A7               	incf	i2sprintf@c& (0+255),w,b
 14096   001982  B4D8               	btfsc	status,2,c
 14097   001984  D00E               	goto	i2l6708
 14098   001986  D7B2               	goto	i2l6688
 14099   001988                     i2l6700:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
 14103   001988  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14104   00198C  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14105   001990  0E30               	movlw	48
 14106   001992  6EDF               	movwf	indf2,c
 14107                           
 14108                           ; BSR set to: 0
 14109   001994  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14110   001996  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14111                           
 14112                           ; BSR set to: 0
 14113   001998  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14114   00199A  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;doprnt.c: 1235: eexp--;
 14118   00199C  079A               	decf	i2sprintf@eexp& (0+255),f,b
 14119   00199E  A0D8               	btfss	status,0,c
 14120   0019A0  079B               	decf	(i2sprintf@eexp+1)& (0+255),f,b
 14121   0019A2                     i2l6708:
 14122                           
 14123                           ; BSR set to: 0
 14124   0019A2  BF9B               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
 14125   0019A4  D005               	goto	i2u788_40
 14126   0019A6  519B               	movf	(i2sprintf@eexp+1)& (0+255),w,b
 14127   0019A8  E1EF               	bnz	i2l6700
 14128   0019AA  059A               	decf	i2sprintf@eexp& (0+255),w,b
 14129   0019AC  B0D8               	btfsc	status,0,c
 14130   0019AE  D7EC               	goto	i2l6700
 14131   0019B0                     i2u788_40:
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 14135   0019B0  BFA6               	btfsc	(i2sprintf@prec+1)& (0+255),7,b
 14136   0019B2  D009               	goto	i2l547
 14137   0019B4  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14138   0019B6  E104               	bnz	i2u789_40
 14139   0019B8  0E09               	movlw	9
 14140   0019BA  5DA5               	subwf	i2sprintf@prec& (0+255),w,b
 14141   0019BC  A0D8               	btfss	status,0,c
 14142   0019BE  D003               	goto	i2l547
 14143   0019C0                     i2u789_40:
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14147   0019C0  0E08               	movlw	8
 14148   0019C2  6FA7               	movwf	i2sprintf@c& (0+255),b
 14149   0019C4  D002               	goto	i2l6714
 14150   0019C6                     i2l547:
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 14154   0019C6  C0A5  F0A7         	movff	i2sprintf@prec,i2sprintf@c
 14155   0019CA                     i2l6714:
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;doprnt.c: 1241: prec -= (int)c;
 14159   0019CA  51A7               	movf	i2sprintf@c& (0+255),w,b
 14160   0019CC  5FA5               	subwf	i2sprintf@prec& (0+255),f,b
 14161   0019CE  0E00               	movlw	0
 14162   0019D0  5BA6               	subwfb	(i2sprintf@prec+1)& (0+255),f,b
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;doprnt.c: 1243: if(c || flag & 0x800)
 14166   0019D2  51A7               	movf	i2sprintf@c& (0+255),w,b
 14167   0019D4  A4D8               	btfss	status,2,c
 14168   0019D6  D002               	goto	i2u791_40
 14169                           
 14170                           ; BSR set to: 0
 14171   0019D8  A7A9               	btfss	(i2sprintf@flag+1)& (0+255),3,b
 14172   0019DA  D00A               	goto	i2l6726
 14173   0019DC                     i2u791_40:
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
 14177   0019DC  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14178   0019E0  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14179   0019E4  0E2E               	movlw	46
 14180   0019E6  6EDF               	movwf	indf2,c
 14181                           
 14182                           ; BSR set to: 0
 14183   0019E8  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14184   0019EA  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14185                           
 14186                           ; BSR set to: 0
 14187   0019EC  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14188   0019EE  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14189   0019F0                     i2l6726:
 14190                           
 14191                           ; BSR set to: 0
 14192                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 14193   0019F0  51A7               	movf	i2sprintf@c& (0+255),w,b
 14194   0019F2  EC3C  F014         	call	i2_scale
 14195   0019F6  C01E  F080         	movff	?i2_scale,i2_sprintf$2008
 14196   0019FA  C01F  F081         	movff	?i2_scale+1,i2_sprintf$2008+1
 14197   0019FE  C020  F082         	movff	?i2_scale+2,i2_sprintf$2008+2
 14198                           
 14199                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 14200   001A02  C09C  F012         	movff	i2sprintf@fval,i2___ftmul@f2
 14201   001A06  C09D  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 14202   001A0A  C09E  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 14203   001A0E  C080  F00F         	movff	i2_sprintf$2008,i2___ftmul@f1
 14204   001A12  C081  F010         	movff	i2_sprintf$2008+1,i2___ftmul@f1+1
 14205   001A16  C082  F011         	movff	i2_sprintf$2008+2,i2___ftmul@f1+2
 14206   001A1A  ECB8  F01C         	call	i2___ftmul	;wreg free
 14207   001A1E  C00F  F03C         	movff	?i2___ftmul,i2___fttol@f1
 14208   001A22  C010  F03D         	movff	?i2___ftmul+1,i2___fttol@f1+1
 14209   001A26  C011  F03E         	movff	?i2___ftmul+2,i2___fttol@f1+2
 14210   001A2A  ECE2  F01F         	call	i2___fttol	;wreg free
 14211   001A2E  C03C  F09F         	movff	?i2___fttol,i2sprintf@val
 14212   001A32  C03D  F0A0         	movff	?i2___fttol+1,i2sprintf@val+1
 14213   001A36  C03E  F0A1         	movff	?i2___fttol+2,i2sprintf@val+2
 14214   001A3A  C03F  F0A2         	movff	?i2___fttol+3,i2sprintf@val+3
 14215                           
 14216                           ;doprnt.c: 1254: while(c--) {
 14217   001A3E  D072               	goto	i2l6742
 14218   001A40                     i2l6730:
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 14222   001A40  C09F  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 14223   001A44  C0A0  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 14224   001A48  C0A1  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 14225   001A4C  C0A2  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 14226   001A50  51A7               	movf	i2sprintf@c& (0+255),w,b
 14227   001A52  0D04               	mullw	4
 14228   001A54  0E2F               	movlw	low _dpowers
 14229   001A56  24F3               	addwf	243,w,c
 14230   001A58  6EF6               	movwf	tblptrl,c
 14231   001A5A  0EFF               	movlw	high _dpowers
 14232   001A5C  20F4               	addwfc	244,w,c
 14233   001A5E  6EF7               	movwf	tblptrh,c
 14234   001A60                     	if	0	;There are less than 3 active tblptr bytes
 14235   001A60                     	endif
 14236   001A60  0009               	tblrd		*+
 14237   001A62  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14238   001A66  0009               	tblrd		*+
 14239   001A68  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14240   001A6C  0009               	tblrd		*+
 14241   001A6E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14242   001A72  000A               	tblrd		*-
 14243   001A74  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14244   001A78  ECC0  F021         	call	i2___lldiv	;wreg free
 14245   001A7C  C001  F096         	movff	?i2___lldiv,i2sprintf@tmpval
 14246   001A80  C002  F097         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 14247   001A84  C003  F098         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 14248   001A88  C004  F099         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 14249                           
 14250                           ;doprnt.c: 1256: tmpval.vd %= 10;
 14251   001A8C  C096  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 14252   001A90  C097  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 14253   001A94  C098  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 14254   001A98  C099  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 14255   001A9C  0E0A               	movlw	10
 14256   001A9E  6E12               	movwf	i2___llmod@divisor^0,c
 14257   001AA0  0E00               	movlw	0
 14258   001AA2  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 14259   001AA4  0E00               	movlw	0
 14260   001AA6  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 14261   001AA8  0E00               	movlw	0
 14262   001AAA  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 14263   001AAC  EC71  F024         	call	i2___llmod	;wreg free
 14264   001AB0  C00E  F096         	movff	?i2___llmod,i2sprintf@tmpval
 14265   001AB4  C00F  F097         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 14266   001AB8  C010  F098         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 14267   001ABC  C011  F099         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 14268                           
 14269                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 14270   001AC0  0100               	movlb	0	; () banked
 14271   001AC2  5196               	movf	i2sprintf@tmpval& (0+255),w,b
 14272   001AC4  0F30               	addlw	48
 14273   001AC6  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14274   001ACA  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14275   001ACE  6EDF               	movwf	indf2,c
 14276                           
 14277                           ; BSR set to: 0
 14278   001AD0  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14279   001AD2  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14280                           
 14281                           ; BSR set to: 0
 14282   001AD4  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14283   001AD6  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;doprnt.c: 1258: val %= dpowers[c];
 14287   001AD8  C09F  F00E         	movff	i2sprintf@val,i2___llmod@dividend
 14288   001ADC  C0A0  F00F         	movff	i2sprintf@val+1,i2___llmod@dividend+1
 14289   001AE0  C0A1  F010         	movff	i2sprintf@val+2,i2___llmod@dividend+2
 14290   001AE4  C0A2  F011         	movff	i2sprintf@val+3,i2___llmod@dividend+3
 14291   001AE8  51A7               	movf	i2sprintf@c& (0+255),w,b
 14292   001AEA  0D04               	mullw	4
 14293   001AEC  0E2F               	movlw	low _dpowers
 14294   001AEE  24F3               	addwf	243,w,c
 14295   001AF0  6EF6               	movwf	tblptrl,c
 14296   001AF2  0EFF               	movlw	high _dpowers
 14297   001AF4  20F4               	addwfc	244,w,c
 14298   001AF6  6EF7               	movwf	tblptrh,c
 14299   001AF8                     	if	0	;There are less than 3 active tblptr bytes
 14300   001AF8                     	endif
 14301   001AF8  0009               	tblrd		*+
 14302   001AFA  CFF5 F012          	movff	tablat,i2___llmod@divisor
 14303   001AFE  0009               	tblrd		*+
 14304   001B00  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 14305   001B04  0009               	tblrd		*+
 14306   001B06  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 14307   001B0A  000A               	tblrd		*-
 14308   001B0C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 14309   001B10  EC71  F024         	call	i2___llmod	;wreg free
 14310   001B14  C00E  F09F         	movff	?i2___llmod,i2sprintf@val
 14311   001B18  C00F  F0A0         	movff	?i2___llmod+1,i2sprintf@val+1
 14312   001B1C  C010  F0A1         	movff	?i2___llmod+2,i2sprintf@val+2
 14313   001B20  C011  F0A2         	movff	?i2___llmod+3,i2sprintf@val+3
 14314   001B24                     i2l6742:
 14315   001B24  0100               	movlb	0	; () banked
 14316   001B26  07A7               	decf	i2sprintf@c& (0+255),f,b
 14317   001B28  29A7               	incf	i2sprintf@c& (0+255),w,b
 14318   001B2A  B4D8               	btfsc	status,2,c
 14319   001B2C  D00E               	goto	i2l6752
 14320   001B2E  D788               	goto	i2l6730
 14321   001B30                     i2l6744:
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
 14325   001B30  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14326   001B34  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14327   001B38  0E30               	movlw	48
 14328   001B3A  6EDF               	movwf	indf2,c
 14329                           
 14330                           ; BSR set to: 0
 14331   001B3C  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14332   001B3E  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14333                           
 14334                           ; BSR set to: 0
 14335   001B40  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14336   001B42  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;doprnt.c: 1263: prec--;
 14340   001B44  07A5               	decf	i2sprintf@prec& (0+255),f,b
 14341   001B46  A0D8               	btfss	status,0,c
 14342   001B48  07A6               	decf	(i2sprintf@prec+1)& (0+255),f,b
 14343   001B4A                     i2l6752:
 14344                           
 14345                           ; BSR set to: 0
 14346   001B4A  51A5               	movf	i2sprintf@prec& (0+255),w,b
 14347   001B4C  11A6               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
 14348   001B4E  A4D8               	btfss	status,2,c
 14349   001B50  D7EF               	goto	i2l6744
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;doprnt.c: 1264: };doprnt.c: 1266: if((flag & 0x08) && width > 0)
 14353   001B52  B7A8               	btfsc	i2sprintf@flag& (0+255),3,b
 14354                           
 14355                           ; BSR set to: 0
 14356   001B54  BFA4               	btfsc	(i2sprintf@width+1)& (0+255),7,b
 14357   001B56  D2F0               	goto	i2u838_40
 14358   001B58  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 14359   001B5A  E103               	bnz	i2u795_40
 14360   001B5C  05A3               	decf	i2sprintf@width& (0+255),w,b
 14361   001B5E  A0D8               	btfss	status,0,c
 14362   001B60  D2EB               	goto	i2u838_40
 14363   001B62                     i2u795_40:
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;doprnt.c: 1268: ((*sp++ = (' ')),(++ccnt));
 14367   001B62  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14368   001B66  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14369   001B6A  0E20               	movlw	32
 14370   001B6C  6EDF               	movwf	indf2,c
 14371                           
 14372                           ; BSR set to: 0
 14373   001B6E  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14374   001B70  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14375                           
 14376                           ; BSR set to: 0
 14377   001B72  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14378   001B74  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;doprnt.c: 1269: while(--width);
 14382   001B76  07A3               	decf	i2sprintf@width& (0+255),f,b
 14383   001B78  A0D8               	btfss	status,0,c
 14384   001B7A  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 14385   001B7C  51A3               	movf	i2sprintf@width& (0+255),w,b
 14386   001B7E  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 14387   001B80  B4D8               	btfsc	status,2,c
 14388   001B82  D2DA               	goto	i2u838_40
 14389   001B84  D7EE               	goto	i2u795_40
 14390   001B86                     i2l6764:
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
 14394   001B86  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 14395   001B8A  0EC0               	movlw	192
 14396   001B8C  1655               	andwf	??i2_sprintf^0,f,c
 14397   001B8E  A4D8               	btfss	status,2,c
 14398   001B90  D01E               	goto	i2l561
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)ap),
      +                           (int)0));
 14402   001B92  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 14403   001B96  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 14404   001B9A  CFDE F09F          	movff	postinc2,i2sprintf@val
 14405   001B9E  CFDD F0A0          	movff	postdec2,i2sprintf@val+1
 14406   001BA2  0E00               	movlw	0
 14407   001BA4  BFA0               	btfsc	(i2sprintf@val+1)& (0+255),7,b
 14408   001BA6  0EFF               	movlw	-1
 14409   001BA8  6FA1               	movwf	(i2sprintf@val+2)& (0+255),b
 14410   001BAA  6FA2               	movwf	(i2sprintf@val+3)& (0+255),b
 14411                           
 14412                           ; BSR set to: 0
 14413   001BAC  0E02               	movlw	2
 14414   001BAE  2794               	addwf	i2sprintf@ap& (0+255),f,b
 14415   001BB0  0E00               	movlw	0
 14416   001BB2  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;doprnt.c: 1287: if((long)val < 0) {
 14420   001BB4  AFA2               	btfss	(i2sprintf@val+3)& (0+255),7,b
 14421   001BB6  D01D               	goto	i2l6784
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;doprnt.c: 1288: flag |= 0x03;
 14425   001BB8  0E03               	movlw	3
 14426   001BBA  13A8               	iorwf	i2sprintf@flag& (0+255),f,b
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;doprnt.c: 1289: val = -val;
 14430   001BBC  1FA2               	comf	(i2sprintf@val+3)& (0+255),f,b
 14431   001BBE  1FA1               	comf	(i2sprintf@val+2)& (0+255),f,b
 14432   001BC0  1FA0               	comf	(i2sprintf@val+1)& (0+255),f,b
 14433   001BC2  6D9F               	negf	i2sprintf@val& (0+255),b
 14434   001BC4  0E00               	movlw	0
 14435   001BC6  23A0               	addwfc	(i2sprintf@val+1)& (0+255),f,b
 14436   001BC8  23A1               	addwfc	(i2sprintf@val+2)& (0+255),f,b
 14437   001BCA  23A2               	addwfc	(i2sprintf@val+3)& (0+255),f,b
 14438   001BCC  D012               	goto	i2l6784
 14439   001BCE                     i2l561:
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;doprnt.c: 1304: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 14443                           
 14444                           ; BSR set to: 0
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;doprnt.c: 1303: val = (unsigned long)(*(__far char * *)__va_arg((*(__far char * **)ap),
      +                           (__far char *)0));
 14448                           
 14449                           ; BSR set to: 0
 14450                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1302: if(flag & 0x2000)
 14451   001BCE  C094  FFD9         	movff	i2sprintf@ap,fsr2l
 14452   001BD2  C095  FFDA         	movff	i2sprintf@ap+1,fsr2h
 14453   001BD6  CFDE F055          	movff	postinc2,??i2_sprintf
 14454   001BDA  CFDD F056          	movff	postdec2,??i2_sprintf+1
 14455   001BDE  C055  F09F         	movff	??i2_sprintf,i2sprintf@val
 14456   001BE2  C056  F0A0         	movff	??i2_sprintf+1,i2sprintf@val+1
 14457   001BE6  6BA1               	clrf	(i2sprintf@val+2)& (0+255),b
 14458   001BE8  6BA2               	clrf	(i2sprintf@val+3)& (0+255),b
 14459                           
 14460                           ; BSR set to: 0
 14461   001BEA  0E02               	movlw	2
 14462   001BEC  2794               	addwf	i2sprintf@ap& (0+255),f,b
 14463   001BEE  0E00               	movlw	0
 14464   001BF0  2395               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 14465   001BF2                     i2l6784:
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
 14469   001BF2  51A5               	movf	i2sprintf@prec& (0+255),w,b
 14470   001BF4  11A6               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
 14471   001BF6  A4D8               	btfss	status,2,c
 14472   001BF8  D063               	goto	i2l6834
 14473                           
 14474                           ; BSR set to: 0
 14475   001BFA  519F               	movf	i2sprintf@val& (0+255),w,b
 14476   001BFC  11A0               	iorwf	(i2sprintf@val+1)& (0+255),w,b
 14477   001BFE  11A1               	iorwf	(i2sprintf@val+2)& (0+255),w,b
 14478   001C00  11A2               	iorwf	(i2sprintf@val+3)& (0+255),w,b
 14479   001C02  A4D8               	btfss	status,2,c
 14480   001C04  D05D               	goto	i2l6834
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;doprnt.c: 1317: prec++;
 14484   001C06  4BA5               	infsnz	i2sprintf@prec& (0+255),f,b
 14485   001C08  2BA6               	incf	(i2sprintf@prec+1)& (0+255),f,b
 14486   001C0A  D05A               	goto	i2l6834
 14487   001C0C                     i2l6790:
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 14491   001C0C  0E01               	movlw	1
 14492   001C0E  6FA7               	movwf	i2sprintf@c& (0+255),b
 14493   001C10                     i2l6792:
 14494                           
 14495                           ; BSR set to: 0
 14496   001C10  0E0A               	movlw	10
 14497   001C12  19A7               	xorwf	i2sprintf@c& (0+255),w,b
 14498   001C14  B4D8               	btfsc	status,2,c
 14499   001C16  D062               	goto	i2l6836
 14500                           
 14501                           ; BSR set to: 0
 14502                           ;doprnt.c: 1332: if(val < dpowers[c])
 14503   001C18  51A7               	movf	i2sprintf@c& (0+255),w,b
 14504   001C1A  0D04               	mullw	4
 14505   001C1C  0E2F               	movlw	low _dpowers
 14506   001C1E  24F3               	addwf	243,w,c
 14507   001C20  6EF6               	movwf	tblptrl,c
 14508   001C22  0EFF               	movlw	high _dpowers
 14509   001C24  20F4               	addwfc	244,w,c
 14510   001C26  6EF7               	movwf	tblptrh,c
 14511   001C28                     	if	0	;There are less than 3 active tblptr bytes
 14512   001C28                     	endif
 14513   001C28  0009               	tblrd		*+
 14514   001C2A  50F5               	movf	tablat,w,c
 14515   001C2C  5D9F               	subwf	i2sprintf@val& (0+255),w,b
 14516   001C2E  0009               	tblrd		*+
 14517   001C30  50F5               	movf	tablat,w,c
 14518   001C32  59A0               	subwfb	(i2sprintf@val+1)& (0+255),w,b
 14519   001C34  0009               	tblrd		*+
 14520   001C36  50F5               	movf	tablat,w,c
 14521   001C38  59A1               	subwfb	(i2sprintf@val+2)& (0+255),w,b
 14522   001C3A  0009               	tblrd		*+
 14523   001C3C  50F5               	movf	tablat,w,c
 14524   001C3E  59A2               	subwfb	(i2sprintf@val+3)& (0+255),w,b
 14525   001C40  A0D8               	btfss	status,0,c
 14526   001C42  D04C               	goto	i2l6836
 14527                           
 14528                           ; BSR set to: 0
 14529   001C44  2BA7               	incf	i2sprintf@c& (0+255),f,b
 14530   001C46  D7E4               	goto	i2l6792
 14531   001C48                     i2l6804:
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14535   001C48  0E01               	movlw	1
 14536   001C4A  6FA7               	movwf	i2sprintf@c& (0+255),b
 14537   001C4C                     i2l6806:
 14538                           
 14539                           ; BSR set to: 0
 14540   001C4C  0E08               	movlw	8
 14541   001C4E  19A7               	xorwf	i2sprintf@c& (0+255),w,b
 14542   001C50  B4D8               	btfsc	status,2,c
 14543   001C52  D044               	goto	i2l6836
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;doprnt.c: 1343: if(val < hexpowers[c])
 14547   001C54  51A7               	movf	i2sprintf@c& (0+255),w,b
 14548   001C56  0D04               	mullw	4
 14549   001C58  0E0F               	movlw	low _hexpowers
 14550   001C5A  24F3               	addwf	243,w,c
 14551   001C5C  6EF6               	movwf	tblptrl,c
 14552   001C5E  0EFF               	movlw	high _hexpowers
 14553   001C60  20F4               	addwfc	244,w,c
 14554   001C62  6EF7               	movwf	tblptrh,c
 14555   001C64                     	if	0	;There are less than 3 active tblptr bytes
 14556   001C64                     	endif
 14557   001C64  0009               	tblrd		*+
 14558   001C66  50F5               	movf	tablat,w,c
 14559   001C68  5D9F               	subwf	i2sprintf@val& (0+255),w,b
 14560   001C6A  0009               	tblrd		*+
 14561   001C6C  50F5               	movf	tablat,w,c
 14562   001C6E  59A0               	subwfb	(i2sprintf@val+1)& (0+255),w,b
 14563   001C70  0009               	tblrd		*+
 14564   001C72  50F5               	movf	tablat,w,c
 14565   001C74  59A1               	subwfb	(i2sprintf@val+2)& (0+255),w,b
 14566   001C76  0009               	tblrd		*+
 14567   001C78  50F5               	movf	tablat,w,c
 14568   001C7A  59A2               	subwfb	(i2sprintf@val+3)& (0+255),w,b
 14569   001C7C  A0D8               	btfss	status,0,c
 14570   001C7E  D02E               	goto	i2l6836
 14571                           
 14572                           ; BSR set to: 0
 14573   001C80  2BA7               	incf	i2sprintf@c& (0+255),f,b
 14574   001C82  D7E4               	goto	i2l6806
 14575   001C84                     i2l6818:
 14576                           
 14577                           ; BSR set to: 0
 14578                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 14579   001C84  0E01               	movlw	1
 14580   001C86  6FA7               	movwf	i2sprintf@c& (0+255),b
 14581   001C88                     i2l6820:
 14582                           
 14583                           ; BSR set to: 0
 14584   001C88  0E0B               	movlw	11
 14585   001C8A  19A7               	xorwf	i2sprintf@c& (0+255),w,b
 14586   001C8C  B4D8               	btfsc	status,2,c
 14587   001C8E  D026               	goto	i2l6836
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;doprnt.c: 1355: if(val < octpowers[c])
 14591   001C90  51A7               	movf	i2sprintf@c& (0+255),w,b
 14592   001C92  0D04               	mullw	4
 14593   001C94  0E95               	movlw	low _octpowers
 14594   001C96  24F3               	addwf	243,w,c
 14595   001C98  6EF6               	movwf	tblptrl,c
 14596   001C9A  0EFE               	movlw	high _octpowers
 14597   001C9C  20F4               	addwfc	244,w,c
 14598   001C9E  6EF7               	movwf	tblptrh,c
 14599   001CA0                     	if	0	;There are less than 3 active tblptr bytes
 14600   001CA0                     	endif
 14601   001CA0  0009               	tblrd		*+
 14602   001CA2  50F5               	movf	tablat,w,c
 14603   001CA4  5D9F               	subwf	i2sprintf@val& (0+255),w,b
 14604   001CA6  0009               	tblrd		*+
 14605   001CA8  50F5               	movf	tablat,w,c
 14606   001CAA  59A0               	subwfb	(i2sprintf@val+1)& (0+255),w,b
 14607   001CAC  0009               	tblrd		*+
 14608   001CAE  50F5               	movf	tablat,w,c
 14609   001CB0  59A1               	subwfb	(i2sprintf@val+2)& (0+255),w,b
 14610   001CB2  0009               	tblrd		*+
 14611   001CB4  50F5               	movf	tablat,w,c
 14612   001CB6  59A2               	subwfb	(i2sprintf@val+3)& (0+255),w,b
 14613   001CB8  A0D8               	btfss	status,0,c
 14614   001CBA  D010               	goto	i2l6836
 14615                           
 14616                           ; BSR set to: 0
 14617   001CBC  2BA7               	incf	i2sprintf@c& (0+255),f,b
 14618   001CBE  D7E4               	goto	i2l6820
 14619   001CC0                     i2l6834:
 14620                           
 14621                           ; BSR set to: 0
 14622   001CC0  51A8               	movf	i2sprintf@flag& (0+255),w,b
 14623   001CC2  0BC0               	andlw	192
 14624                           
 14625                           ; Switch size 1, requested type "simple"
 14626                           ; Number of cases is 4, Range of values is 0 to 192
 14627                           ; switch strategies available:
 14628                           ; Name         Instructions Cycles
 14629                           ; simple_byte           13     7 (average)
 14630                           ;	Chosen strategy is simple_byte
 14631   001CC4  0A00               	xorlw	0	; case 0
 14632   001CC6  B4D8               	btfsc	status,2,c
 14633   001CC8  D7A1               	goto	i2l6790
 14634   001CCA  0A40               	xorlw	64	; case 64
 14635   001CCC  B4D8               	btfsc	status,2,c
 14636   001CCE  D7DA               	goto	i2l6818
 14637   001CD0  0AC0               	xorlw	192	; case 128
 14638   001CD2  B4D8               	btfsc	status,2,c
 14639   001CD4  D7B9               	goto	i2l6804
 14640   001CD6  0A40               	xorlw	64	; case 192
 14641   001CD8  B4D8               	btfsc	status,2,c
 14642   001CDA  D798               	goto	i2l6790
 14643   001CDC                     i2l6836:
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;doprnt.c: 1365: if(c < prec)
 14647   001CDC  51A7               	movf	i2sprintf@c& (0+255),w,b
 14648   001CDE  6E55               	movwf	??i2_sprintf^0,c
 14649   001CE0  6A56               	clrf	(??i2_sprintf+1)^0,c
 14650   001CE2  51A5               	movf	i2sprintf@prec& (0+255),w,b
 14651   001CE4  5C55               	subwf	??i2_sprintf^0,w,c
 14652   001CE6  5056               	movf	(??i2_sprintf+1)^0,w,c
 14653   001CE8  0A80               	xorlw	128
 14654   001CEA  6E57               	movwf	(??i2_sprintf+2)^0,c
 14655   001CEC  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14656   001CEE  0A80               	xorlw	128
 14657   001CF0  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 14658   001CF2  B0D8               	btfsc	status,0,c
 14659   001CF4  D003               	goto	i2l6840
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;doprnt.c: 1366: c = (char)prec;
 14663   001CF6  C0A5  F0A7         	movff	i2sprintf@prec,i2sprintf@c
 14664   001CFA  D010               	goto	i2l6844
 14665   001CFC                     i2l6840:
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;doprnt.c: 1367: else if(prec < c)
 14669   001CFC  51A7               	movf	i2sprintf@c& (0+255),w,b
 14670   001CFE  6E55               	movwf	??i2_sprintf^0,c
 14671   001D00  6A56               	clrf	(??i2_sprintf+1)^0,c
 14672   001D02  5055               	movf	??i2_sprintf^0,w,c
 14673   001D04  5DA5               	subwf	i2sprintf@prec& (0+255),w,b
 14674   001D06  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14675   001D08  0A80               	xorlw	128
 14676   001D0A  6E57               	movwf	(??i2_sprintf+2)^0,c
 14677   001D0C  5056               	movf	(??i2_sprintf+1)^0,w,c
 14678   001D0E  0A80               	xorlw	128
 14679   001D10  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 14680   001D12  B0D8               	btfsc	status,0,c
 14681   001D14  D003               	goto	i2l6844
 14682                           
 14683                           ; BSR set to: 0
 14684                           ;doprnt.c: 1368: prec = c;
 14685   001D16  C0A7  F0A5         	movff	i2sprintf@c,i2sprintf@prec
 14686   001D1A  6BA6               	clrf	(i2sprintf@prec+1)& (0+255),b
 14687   001D1C                     i2l6844:
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;doprnt.c: 1371: if(width && flag & 0x03)
 14691   001D1C  51A3               	movf	i2sprintf@width& (0+255),w,b
 14692   001D1E  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 14693   001D20  B4D8               	btfsc	status,2,c
 14694   001D22  D009               	goto	i2l6850
 14695                           
 14696                           ; BSR set to: 0
 14697   001D24  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 14698   001D28  0E03               	movlw	3
 14699   001D2A  1655               	andwf	??i2_sprintf^0,f,c
 14700   001D2C  B4D8               	btfsc	status,2,c
 14701   001D2E  D003               	goto	i2l6850
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;doprnt.c: 1372: width--;
 14705   001D30  07A3               	decf	i2sprintf@width& (0+255),f,b
 14706   001D32  A0D8               	btfss	status,0,c
 14707   001D34  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 14708   001D36                     i2l6850:
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;doprnt.c: 1374: if(flag & 0x4000) {
 14712   001D36  ADA9               	btfss	(i2sprintf@flag+1)& (0+255),6,b
 14713   001D38  D013               	goto	i2l6858
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;doprnt.c: 1375: if(width > prec)
 14717   001D3A  51A3               	movf	i2sprintf@width& (0+255),w,b
 14718   001D3C  5DA5               	subwf	i2sprintf@prec& (0+255),w,b
 14719   001D3E  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14720   001D40  0A80               	xorlw	128
 14721   001D42  6E55               	movwf	??i2_sprintf^0,c
 14722   001D44  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 14723   001D46  0A80               	xorlw	128
 14724   001D48  5855               	subwfb	??i2_sprintf^0,w,c
 14725   001D4A  B0D8               	btfsc	status,0,c
 14726   001D4C  D005               	goto	i2l6856
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;doprnt.c: 1376: width -= prec;
 14730   001D4E  51A5               	movf	i2sprintf@prec& (0+255),w,b
 14731   001D50  5FA3               	subwf	i2sprintf@width& (0+255),f,b
 14732   001D52  51A6               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14733   001D54  5BA4               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 14734   001D56  D004               	goto	i2l6858
 14735   001D58                     i2l6856:
 14736                           
 14737                           ; BSR set to: 0
 14738                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 14739   001D58  0E00               	movlw	0
 14740   001D5A  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 14741   001D5C  0E00               	movlw	0
 14742   001D5E  6FA3               	movwf	i2sprintf@width& (0+255),b
 14743   001D60                     i2l6858:
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
 14747   001D60  0EC4               	movlw	196
 14748   001D62  15A8               	andwf	i2sprintf@flag& (0+255),w,b
 14749   001D64  6E55               	movwf	??i2_sprintf^0,c
 14750   001D66  0E08               	movlw	8
 14751   001D68  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 14752   001D6A  6E56               	movwf	(??i2_sprintf+1)^0,c
 14753   001D6C  0E40               	movlw	64
 14754   001D6E  1855               	xorwf	??i2_sprintf^0,w,c
 14755   001D70  E10C               	bnz	i2l6864
 14756   001D72  0E08               	movlw	8
 14757   001D74  1856               	xorwf	(??i2_sprintf+1)^0,w,c
 14758   001D76  A4D8               	btfss	status,2,c
 14759   001D78  D008               	goto	i2l6864
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;doprnt.c: 1388: if(width)
 14763   001D7A  51A3               	movf	i2sprintf@width& (0+255),w,b
 14764   001D7C  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 14765   001D7E  B4D8               	btfsc	status,2,c
 14766   001D80  D022               	goto	i2l6872
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;doprnt.c: 1389: width--;
 14770   001D82  07A3               	decf	i2sprintf@width& (0+255),f,b
 14771   001D84  A0D8               	btfss	status,0,c
 14772   001D86  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 14773   001D88  D01E               	goto	i2l6872
 14774   001D8A                     i2l6864:
 14775                           
 14776                           ; BSR set to: 0
 14777                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14778   001D8A  0EC0               	movlw	192
 14779   001D8C  15A8               	andwf	i2sprintf@flag& (0+255),w,b
 14780   001D8E  6E55               	movwf	??i2_sprintf^0,c
 14781   001D90  0E08               	movlw	8
 14782   001D92  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 14783   001D94  6E56               	movwf	(??i2_sprintf+1)^0,c
 14784   001D96  0E80               	movlw	128
 14785   001D98  1855               	xorwf	??i2_sprintf^0,w,c
 14786   001D9A  E115               	bnz	i2l6872
 14787   001D9C  0E08               	movlw	8
 14788   001D9E  1856               	xorwf	(??i2_sprintf+1)^0,w,c
 14789   001DA0  A4D8               	btfss	status,2,c
 14790   001DA2  D011               	goto	i2l6872
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;doprnt.c: 1398: if(width > 2)
 14794   001DA4  BFA4               	btfsc	(i2sprintf@width+1)& (0+255),7,b
 14795   001DA6  D00B               	goto	i2l6870
 14796   001DA8  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 14797   001DAA  E104               	bnz	i2u817_40
 14798   001DAC  0E03               	movlw	3
 14799   001DAE  5DA3               	subwf	i2sprintf@width& (0+255),w,b
 14800   001DB0  A0D8               	btfss	status,0,c
 14801   001DB2  D005               	goto	i2l6870
 14802   001DB4                     i2u817_40:
 14803                           
 14804                           ; BSR set to: 0
 14805                           ;doprnt.c: 1399: width -= 2;
 14806   001DB4  0EFE               	movlw	254
 14807   001DB6  27A3               	addwf	i2sprintf@width& (0+255),f,b
 14808   001DB8  0EFF               	movlw	255
 14809   001DBA  23A4               	addwfc	(i2sprintf@width+1)& (0+255),f,b
 14810   001DBC  D004               	goto	i2l6872
 14811   001DBE                     i2l6870:
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
 14815   001DBE  0E00               	movlw	0
 14816   001DC0  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 14817   001DC2  0E00               	movlw	0
 14818   001DC4  6FA3               	movwf	i2sprintf@width& (0+255),b
 14819   001DC6                     i2l6872:
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
 14823   001DC6  51A7               	movf	i2sprintf@c& (0+255),w,b
 14824   001DC8  6E55               	movwf	??i2_sprintf^0,c
 14825   001DCA  6A56               	clrf	(??i2_sprintf+1)^0,c
 14826   001DCC  51A3               	movf	i2sprintf@width& (0+255),w,b
 14827   001DCE  5C55               	subwf	??i2_sprintf^0,w,c
 14828   001DD0  5056               	movf	(??i2_sprintf+1)^0,w,c
 14829   001DD2  0A80               	xorlw	128
 14830   001DD4  6E57               	movwf	(??i2_sprintf+2)^0,c
 14831   001DD6  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 14832   001DD8  0A80               	xorlw	128
 14833   001DDA  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 14834   001DDC  B0D8               	btfsc	status,0,c
 14835   001DDE  D005               	goto	i2l6876
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;doprnt.c: 1408: width -= c;
 14839   001DE0  51A7               	movf	i2sprintf@c& (0+255),w,b
 14840   001DE2  5FA3               	subwf	i2sprintf@width& (0+255),f,b
 14841   001DE4  0E00               	movlw	0
 14842   001DE6  5BA4               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 14843   001DE8  D004               	goto	i2l6878
 14844   001DEA                     i2l6876:
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 14848   001DEA  0E00               	movlw	0
 14849   001DEC  6FA4               	movwf	(i2sprintf@width+1)& (0+255),b
 14850   001DEE  0E00               	movlw	0
 14851   001DF0  6FA3               	movwf	i2sprintf@width& (0+255),b
 14852   001DF2                     i2l6878:
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;doprnt.c: 1413: if(flag & 0x04) {
 14856   001DF2  A5A8               	btfss	i2sprintf@flag& (0+255),2,b
 14857   001DF4  D053               	goto	i2l6924
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;doprnt.c: 1418: if(flag & 0x03)
 14861   001DF6  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 14862   001DFA  0E03               	movlw	3
 14863   001DFC  1655               	andwf	??i2_sprintf^0,f,c
 14864   001DFE  B4D8               	btfsc	status,2,c
 14865   001E00  D00B               	goto	i2l598
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;doprnt.c: 1419: ((*sp++ = ('-')),(++ccnt));
 14869   001E02  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14870   001E06  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14871   001E0A  0E2D               	movlw	45
 14872   001E0C  6EDF               	movwf	indf2,c
 14873   001E0E                     i2l6884:
 14874                           
 14875                           ; BSR set to: 0
 14876   001E0E  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14877   001E10  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14878                           
 14879                           ; BSR set to: 0
 14880   001E12  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14881   001E14  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14882   001E16  D030               	goto	i2l6914
 14883   001E18                     i2l598:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
 14887   001E18  A1A8               	btfss	i2sprintf@flag& (0+255),0,b
 14888   001E1A  D006               	goto	i2l6894
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;doprnt.c: 1426: ((*sp++ = (' ')),(++ccnt));
 14892   001E1C  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14893   001E20  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14894   001E24  0E20               	movlw	32
 14895   001E26  D7F2               	goto	L39
 14896   001E28                     i2l6894:
 14897                           
 14898                           ; BSR set to: 0
 14899                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14900   001E28  0EC0               	movlw	192
 14901   001E2A  15A8               	andwf	i2sprintf@flag& (0+255),w,b
 14902   001E2C  6E55               	movwf	??i2_sprintf^0,c
 14903   001E2E  0E08               	movlw	8
 14904   001E30  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 14905   001E32  6E56               	movwf	(??i2_sprintf+1)^0,c
 14906   001E34  0E80               	movlw	128
 14907   001E36  1855               	xorwf	??i2_sprintf^0,w,c
 14908   001E38  E11F               	bnz	i2l6914
 14909   001E3A  0E08               	movlw	8
 14910   001E3C  1856               	xorwf	(??i2_sprintf+1)^0,w,c
 14911   001E3E  A4D8               	btfss	status,2,c
 14912   001E40  D01B               	goto	i2l6914
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;doprnt.c: 1430: ((*sp++ = ('0')),(++ccnt));
 14916   001E42  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14917   001E46  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14918   001E4A  0E30               	movlw	48
 14919   001E4C  6EDF               	movwf	indf2,c
 14920                           
 14921                           ; BSR set to: 0
 14922   001E4E  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14923   001E50  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14924                           
 14925                           ; BSR set to: 0
 14926   001E52  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14927   001E54  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;doprnt.c: 1432: ((*sp++ = (flag & 0x20 ? 'X' : 'x')),(++ccnt));
 14931   001E56  BBA8               	btfsc	i2sprintf@flag& (0+255),5,b
 14932   001E58  D004               	goto	i2l6906
 14933                           
 14934                           ; BSR set to: 0
 14935   001E5A  0E00               	movlw	0
 14936   001E5C  6F88               	movwf	(i2_sprintf$1027+1)& (0+255),b
 14937   001E5E  0E78               	movlw	120
 14938   001E60  D003               	goto	L40
 14939   001E62                     i2l6906:
 14940                           
 14941                           ; BSR set to: 0
 14942   001E62  0E00               	movlw	0
 14943   001E64  6F88               	movwf	(i2_sprintf$1027+1)& (0+255),b
 14944   001E66  0E58               	movlw	88
 14945   001E68                     L40:
 14946   001E68  6F87               	movwf	i2_sprintf$1027& (0+255),b
 14947                           
 14948                           ; BSR set to: 0
 14949   001E6A  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14950   001E6E  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14951   001E72  C087  FFDF         	movff	i2_sprintf$1027,indf2
 14952   001E76  D7CB               	goto	i2l6884
 14953   001E78                     i2l6914:
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
 14957   001E78  51A3               	movf	i2sprintf@width& (0+255),w,b
 14958   001E7A  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 14959   001E7C  B4D8               	btfsc	status,2,c
 14960   001E7E  D13B               	goto	i2l7002
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;doprnt.c: 1443: ((*sp++ = ('0')),(++ccnt));
 14964   001E80  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14965   001E84  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14966   001E88  0E30               	movlw	48
 14967   001E8A  6EDF               	movwf	indf2,c
 14968                           
 14969                           ; BSR set to: 0
 14970   001E8C  4A4B               	infsnz	i2sprintf@sp^0,f,c
 14971   001E8E  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 14972                           
 14973                           ; BSR set to: 0
 14974   001E90  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 14975   001E92  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;doprnt.c: 1444: while(--width);
 14979   001E94  07A3               	decf	i2sprintf@width& (0+255),f,b
 14980   001E96  A0D8               	btfss	status,0,c
 14981   001E98  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 14982   001E9A  D7EE               	goto	i2l6914
 14983   001E9C                     i2l6924:
 14984                           
 14985                           ; BSR set to: 0
 14986                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
 14987   001E9C  51A3               	movf	i2sprintf@width& (0+255),w,b
 14988   001E9E  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 14989   001EA0  A4D8               	btfss	status,2,c
 14990                           
 14991                           ; BSR set to: 0
 14992   001EA2  B7A8               	btfsc	i2sprintf@flag& (0+255),3,b
 14993   001EA4  D011               	goto	i2u828_40
 14994   001EA6                     i2u827_40:
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;doprnt.c: 1456: ((*sp++ = (' ')),(++ccnt));
 14998   001EA6  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 14999   001EAA  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15000   001EAE  0E20               	movlw	32
 15001   001EB0  6EDF               	movwf	indf2,c
 15002                           
 15003                           ; BSR set to: 0
 15004   001EB2  4A4B               	infsnz	i2sprintf@sp^0,f,c
 15005   001EB4  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 15006                           
 15007                           ; BSR set to: 0
 15008   001EB6  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 15009   001EB8  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;doprnt.c: 1457: while(--width);
 15013   001EBA  07A3               	decf	i2sprintf@width& (0+255),f,b
 15014   001EBC  A0D8               	btfss	status,0,c
 15015   001EBE  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 15016   001EC0  51A3               	movf	i2sprintf@width& (0+255),w,b
 15017   001EC2  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 15018   001EC4  A4D8               	btfss	status,2,c
 15019   001EC6  D7EF               	goto	i2u827_40
 15020   001EC8                     i2u828_40:
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;doprnt.c: 1464: if(flag & 0x03)
 15024   001EC8  C0A8  F055         	movff	i2sprintf@flag,??i2_sprintf
 15025   001ECC  0E03               	movlw	3
 15026   001ECE  1655               	andwf	??i2_sprintf^0,f,c
 15027   001ED0  B4D8               	btfsc	status,2,c
 15028   001ED2  D00B               	goto	i2l614
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
 15032   001ED4  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15033   001ED8  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15034   001EDC  0E2D               	movlw	45
 15035   001EDE  6EDF               	movwf	indf2,c
 15036                           
 15037                           ; BSR set to: 0
 15038   001EE0  4A4B               	infsnz	i2sprintf@sp^0,f,c
 15039   001EE2  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 15040                           
 15041                           ; BSR set to: 0
 15042   001EE4  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 15043   001EE6  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 15044   001EE8  D008               	goto	i2l6950
 15045   001EEA                     i2l614:
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;doprnt.c: 1469: else if(flag & 0x01)
 15049   001EEA  A1A8               	btfss	i2sprintf@flag& (0+255),0,b
 15050   001EEC  D006               	goto	i2l6950
 15051                           
 15052                           ; BSR set to: 0
 15053                           ;doprnt.c: 1470: ((*sp++ = (' ')),(++ccnt));
 15054   001EEE  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15055   001EF2  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15056   001EF6  0E20               	movlw	32
 15057   001EF8  D7F2               	goto	L41
 15058   001EFA                     i2l6950:
 15059                           
 15060                           ; BSR set to: 0
 15061                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 15062   001EFA  0EC0               	movlw	192
 15063   001EFC  15A8               	andwf	i2sprintf@flag& (0+255),w,b
 15064   001EFE  6E55               	movwf	??i2_sprintf^0,c
 15065   001F00  0E08               	movlw	8
 15066   001F02  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 15067   001F04  6E56               	movwf	(??i2_sprintf+1)^0,c
 15068   001F06  0E40               	movlw	64
 15069   001F08  1855               	xorwf	??i2_sprintf^0,w,c
 15070   001F0A  E10F               	bnz	i2l6958
 15071   001F0C  0E08               	movlw	8
 15072   001F0E  1856               	xorwf	(??i2_sprintf+1)^0,w,c
 15073   001F10  A4D8               	btfss	status,2,c
 15074   001F12  D00B               	goto	i2l6958
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;doprnt.c: 1475: ((*sp++ = ('0')),(++ccnt));
 15078   001F14  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15079   001F18  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15080   001F1C  0E30               	movlw	48
 15081   001F1E  6EDF               	movwf	indf2,c
 15082   001F20                     i2l6954:
 15083                           
 15084                           ; BSR set to: 0
 15085   001F20  4A4B               	infsnz	i2sprintf@sp^0,f,c
 15086   001F22  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 15087                           
 15088                           ; BSR set to: 0
 15089   001F24  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 15090   001F26  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 15091   001F28  D0E6               	goto	i2l7002
 15092   001F2A                     i2l6958:
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15096   001F2A  0EC0               	movlw	192
 15097   001F2C  15A8               	andwf	i2sprintf@flag& (0+255),w,b
 15098   001F2E  6E55               	movwf	??i2_sprintf^0,c
 15099   001F30  0E08               	movlw	8
 15100   001F32  15A9               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 15101   001F34  6E56               	movwf	(??i2_sprintf+1)^0,c
 15102   001F36  0E80               	movlw	128
 15103   001F38  1855               	xorwf	??i2_sprintf^0,w,c
 15104   001F3A  E11F               	bnz	i2l610
 15105   001F3C  0E08               	movlw	8
 15106   001F3E  1856               	xorwf	(??i2_sprintf+1)^0,w,c
 15107   001F40  A4D8               	btfss	status,2,c
 15108   001F42  D0D9               	goto	i2l7002
 15109                           
 15110                           ; BSR set to: 0
 15111                           ;doprnt.c: 1484: ((*sp++ = ('0')),(++ccnt));
 15112   001F44  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15113   001F48  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15114   001F4C  0E30               	movlw	48
 15115   001F4E  6EDF               	movwf	indf2,c
 15116                           
 15117                           ; BSR set to: 0
 15118   001F50  4A4B               	infsnz	i2sprintf@sp^0,f,c
 15119   001F52  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 15120                           
 15121                           ; BSR set to: 0
 15122   001F54  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 15123   001F56  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;doprnt.c: 1486: ((*sp++ = (flag & 0x20 ? 'X' : 'x')),(++ccnt));
 15127   001F58  BBA8               	btfsc	i2sprintf@flag& (0+255),5,b
 15128   001F5A  D004               	goto	i2l6970
 15129                           
 15130                           ; BSR set to: 0
 15131   001F5C  0E00               	movlw	0
 15132   001F5E  6F8A               	movwf	(i2_sprintf$1028+1)& (0+255),b
 15133   001F60  0E78               	movlw	120
 15134   001F62  D003               	goto	L42
 15135   001F64                     i2l6970:
 15136                           
 15137                           ; BSR set to: 0
 15138   001F64  0E00               	movlw	0
 15139   001F66  6F8A               	movwf	(i2_sprintf$1028+1)& (0+255),b
 15140   001F68  0E58               	movlw	88
 15141   001F6A                     L42:
 15142   001F6A  6F89               	movwf	i2_sprintf$1028& (0+255),b
 15143                           
 15144                           ; BSR set to: 0
 15145   001F6C  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15146   001F70  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15147   001F74  C089  FFDF         	movff	i2_sprintf$1028,indf2
 15148   001F78  D7D3               	goto	i2l6954
 15149   001F7A                     i2l610:
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
 15153   001F7A  D0BD               	goto	i2l7002
 15154   001F7C                     i2l6978:
 15155                           
 15156                           ; BSR set to: 0
 15157                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10
      +                           + '0';
 15158   001F7C  C0A5  F055         	movff	i2sprintf@prec,??i2_sprintf
 15159   001F80  C0A6  F056         	movff	i2sprintf@prec+1,??i2_sprintf+1
 15160   001F84  90D8               	bcf	status,0,c
 15161   001F86  3655               	rlcf	??i2_sprintf^0,f,c
 15162   001F88  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15163   001F8A  90D8               	bcf	status,0,c
 15164   001F8C  3655               	rlcf	??i2_sprintf^0,f,c
 15165   001F8E  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15166   001F90  0E2F               	movlw	low _dpowers
 15167   001F92  2455               	addwf	??i2_sprintf^0,w,c
 15168   001F94  6EF6               	movwf	tblptrl,c
 15169   001F96  0EFF               	movlw	high _dpowers
 15170   001F98  2056               	addwfc	(??i2_sprintf+1)^0,w,c
 15171   001F9A  6EF7               	movwf	tblptrh,c
 15172   001F9C                     	if	0	;There are less than 3 active tblptr bytes
 15173   001F9C                     	endif
 15174   001F9C  0009               	tblrd		*+
 15175   001F9E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 15176   001FA2  0009               	tblrd		*+
 15177   001FA4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 15178   001FA8  0009               	tblrd		*+
 15179   001FAA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 15180   001FAE  000A               	tblrd		*-
 15181   001FB0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 15182   001FB4  C09F  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 15183   001FB8  C0A0  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 15184   001FBC  C0A1  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 15185   001FC0  C0A2  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 15186   001FC4  ECC0  F021         	call	i2___lldiv	;wreg free
 15187   001FC8  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 15188   001FCC  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 15189   001FD0  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 15190   001FD4  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 15191   001FD8  0E0A               	movlw	10
 15192   001FDA  6E12               	movwf	i2___llmod@divisor^0,c
 15193   001FDC  0E00               	movlw	0
 15194   001FDE  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 15195   001FE0  0E00               	movlw	0
 15196   001FE2  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 15197   001FE4  0E00               	movlw	0
 15198   001FE6  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 15199   001FE8  EC71  F024         	call	i2___llmod	;wreg free
 15200   001FEC  500E               	movf	?i2___llmod^0,w,c
 15201   001FEE  D06A               	goto	L43
 15202   001FF0                     i2l6980:
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
 15206   001FF0  C09F  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 15207   001FF4  C0A0  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 15208   001FF8  C0A1  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 15209   001FFC  C0A2  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 15210   002000  C0A5  F055         	movff	i2sprintf@prec,??i2_sprintf
 15211   002004  C0A6  F056         	movff	i2sprintf@prec+1,??i2_sprintf+1
 15212   002008  90D8               	bcf	status,0,c
 15213   00200A  3655               	rlcf	??i2_sprintf^0,f,c
 15214   00200C  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15215   00200E  90D8               	bcf	status,0,c
 15216   002010  3655               	rlcf	??i2_sprintf^0,f,c
 15217   002012  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15218   002014  0E0F               	movlw	low _hexpowers
 15219   002016  2455               	addwf	??i2_sprintf^0,w,c
 15220   002018  6EF6               	movwf	tblptrl,c
 15221   00201A  0EFF               	movlw	high _hexpowers
 15222   00201C  2056               	addwfc	(??i2_sprintf+1)^0,w,c
 15223   00201E  6EF7               	movwf	tblptrh,c
 15224   002020                     	if	0	;There are less than 3 active tblptr bytes
 15225   002020                     	endif
 15226   002020  0009               	tblrd		*+
 15227   002022  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 15228   002026  0009               	tblrd		*+
 15229   002028  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 15230   00202C  0009               	tblrd		*+
 15231   00202E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 15232   002032  000A               	tblrd		*-
 15233   002034  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 15234   002038  ECC0  F021         	call	i2___lldiv	;wreg free
 15235   00203C  5001               	movf	?i2___lldiv^0,w,c
 15236   00203E  0B0F               	andlw	15
 15237   002040  0100               	movlb	0	; () banked
 15238   002042  6F8D               	movwf	i2sprintf@idx& (0+255),b
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15242   002044  BBA8               	btfsc	i2sprintf@flag& (0+255),5,b
 15243   002046  D004               	goto	i2l6986
 15244                           
 15245                           ; BSR set to: 0
 15246   002048  0EA3               	movlw	low STR_21
 15247   00204A  6F8B               	movwf	i2_sprintf$1034& (0+255),b
 15248   00204C  0EFF               	movlw	high STR_21
 15249   00204E  D003               	goto	L44
 15250   002050                     i2l6986:
 15251                           
 15252                           ; BSR set to: 0
 15253   002050  0E92               	movlw	low STR_20
 15254   002052  6F8B               	movwf	i2_sprintf$1034& (0+255),b
 15255   002054  0EFF               	movlw	high STR_20
 15256   002056                     L44:
 15257   002056  6F8C               	movwf	(i2_sprintf$1034+1)& (0+255),b
 15258                           
 15259                           ; BSR set to: 0
 15260   002058  518D               	movf	i2sprintf@idx& (0+255),w,b
 15261   00205A  258B               	addwf	i2_sprintf$1034& (0+255),w,b
 15262   00205C  6E55               	movwf	??i2_sprintf^0,c
 15263   00205E  0E00               	movlw	0
 15264   002060  218C               	addwfc	(i2_sprintf$1034+1)& (0+255),w,b
 15265   002062  6E56               	movwf	(??i2_sprintf+1)^0,c
 15266   002064  C055  FFF6         	movff	??i2_sprintf,tblptrl
 15267   002068  C056  FFF7         	movff	??i2_sprintf+1,tblptrh
 15268   00206C                     	if	0	;tblptru may be non-zero
 15269   00206C                     	endif
 15270   00206C                     	if	0	;tblptru may be non-zero
 15271   00206C                     	endif
 15272   00206C  0008               	tblrd		*
 15273   00206E  CFF5 F0A7          	movff	tablat,i2sprintf@c
 15274                           
 15275                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 15276   002072  D03A               	goto	i2l6996
 15277   002074                     i2l6990:
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned int)prec]) & 07) + '0';
 15281   002074  C09F  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 15282   002078  C0A0  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 15283   00207C  C0A1  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 15284   002080  C0A2  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 15285   002084  C0A5  F055         	movff	i2sprintf@prec,??i2_sprintf
 15286   002088  C0A6  F056         	movff	i2sprintf@prec+1,??i2_sprintf+1
 15287   00208C  90D8               	bcf	status,0,c
 15288   00208E  3655               	rlcf	??i2_sprintf^0,f,c
 15289   002090  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15290   002092  90D8               	bcf	status,0,c
 15291   002094  3655               	rlcf	??i2_sprintf^0,f,c
 15292   002096  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 15293   002098  0E95               	movlw	low _octpowers
 15294   00209A  2455               	addwf	??i2_sprintf^0,w,c
 15295   00209C  6EF6               	movwf	tblptrl,c
 15296   00209E  0EFE               	movlw	high _octpowers
 15297   0020A0  2056               	addwfc	(??i2_sprintf+1)^0,w,c
 15298   0020A2  6EF7               	movwf	tblptrh,c
 15299   0020A4                     	if	0	;There are less than 3 active tblptr bytes
 15300   0020A4                     	endif
 15301   0020A4  0009               	tblrd		*+
 15302   0020A6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 15303   0020AA  0009               	tblrd		*+
 15304   0020AC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 15305   0020B0  0009               	tblrd		*+
 15306   0020B2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 15307   0020B6  000A               	tblrd		*-
 15308   0020B8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 15309   0020BC  ECC0  F021         	call	i2___lldiv	;wreg free
 15310   0020C0  5001               	movf	?i2___lldiv^0,w,c
 15311   0020C2  0B07               	andlw	7
 15312   0020C4                     L43:
 15313   0020C4  0F30               	addlw	48
 15314   0020C6  0100               	movlb	0	; () banked
 15315   0020C8  6FA7               	movwf	i2sprintf@c& (0+255),b
 15316                           
 15317                           ;doprnt.c: 1546: break;
 15318   0020CA  D00E               	goto	i2l6996
 15319   0020CC                     i2l6994:
 15320                           
 15321                           ; BSR set to: 0
 15322   0020CC  51A8               	movf	i2sprintf@flag& (0+255),w,b
 15323   0020CE  0BC0               	andlw	192
 15324                           
 15325                           ; Switch size 1, requested type "simple"
 15326                           ; Number of cases is 4, Range of values is 0 to 192
 15327                           ; switch strategies available:
 15328                           ; Name         Instructions Cycles
 15329                           ; simple_byte           13     7 (average)
 15330                           ;	Chosen strategy is simple_byte
 15331   0020D0  0A00               	xorlw	0	; case 0
 15332   0020D2  B4D8               	btfsc	status,2,c
 15333   0020D4  D753               	goto	i2l6978
 15334   0020D6  0A40               	xorlw	64	; case 64
 15335   0020D8  B4D8               	btfsc	status,2,c
 15336   0020DA  D7CC               	goto	i2l6990
 15337   0020DC  0AC0               	xorlw	192	; case 128
 15338   0020DE  B4D8               	btfsc	status,2,c
 15339   0020E0  D787               	goto	i2l6980
 15340   0020E2  0A40               	xorlw	64	; case 192
 15341   0020E4  B4D8               	btfsc	status,2,c
 15342   0020E6  D74A               	goto	i2l6978
 15343   0020E8                     i2l6996:
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;doprnt.c: 1550: ((*sp++ = (c)),(++ccnt));
 15347   0020E8  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15348   0020EC  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15349   0020F0  C0A7  FFDF         	movff	i2sprintf@c,indf2
 15350   0020F4  D715               	goto	i2l6954
 15351   0020F6                     i2l7002:
 15352                           
 15353                           ; BSR set to: 0
 15354   0020F6  07A5               	decf	i2sprintf@prec& (0+255),f,b
 15355   0020F8  A0D8               	btfss	status,0,c
 15356   0020FA  07A6               	decf	(i2sprintf@prec+1)& (0+255),f,b
 15357   0020FC  29A5               	incf	i2sprintf@prec& (0+255),w,b
 15358   0020FE  E1E6               	bnz	i2l6994
 15359   002100  29A6               	incf	(i2sprintf@prec+1)& (0+255),w,b
 15360   002102  A4D8               	btfss	status,2,c
 15361   002104  D7E3               	goto	i2l6994
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
 15365   002106  B7A8               	btfsc	i2sprintf@flag& (0+255),3,b
 15366                           
 15367                           ; BSR set to: 0
 15368   002108  BFA4               	btfsc	(i2sprintf@width+1)& (0+255),7,b
 15369   00210A  D016               	goto	i2u838_40
 15370   00210C  51A4               	movf	(i2sprintf@width+1)& (0+255),w,b
 15371   00210E  E103               	bnz	i2u837_40
 15372   002110  05A3               	decf	i2sprintf@width& (0+255),w,b
 15373   002112  A0D8               	btfss	status,0,c
 15374   002114  D011               	goto	i2u838_40
 15375   002116                     i2u837_40:
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;doprnt.c: 1556: ((*sp++ = (' ')),(++ccnt));
 15379   002116  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15380   00211A  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15381   00211E  0E20               	movlw	32
 15382   002120  6EDF               	movwf	indf2,c
 15383                           
 15384                           ; BSR set to: 0
 15385   002122  4A4B               	infsnz	i2sprintf@sp^0,f,c
 15386   002124  2A4C               	incf	(i2sprintf@sp+1)^0,f,c
 15387                           
 15388                           ; BSR set to: 0
 15389   002126  4B92               	infsnz	i2sprintf@ccnt& (0+255),f,b
 15390   002128  2B93               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;doprnt.c: 1557: while(--width);
 15394   00212A  07A3               	decf	i2sprintf@width& (0+255),f,b
 15395   00212C  A0D8               	btfss	status,0,c
 15396   00212E  07A4               	decf	(i2sprintf@width+1)& (0+255),f,b
 15397   002130  51A3               	movf	i2sprintf@width& (0+255),w,b
 15398   002132  11A4               	iorwf	(i2sprintf@width+1)& (0+255),w,b
 15399   002134  A4D8               	btfss	status,2,c
 15400   002136  D7EF               	goto	i2u837_40
 15401   002138                     i2u838_40:
 15402                           
 15403                           ; BSR set to: 0
 15404   002138  C04D  FFF6         	movff	i2sprintf@f,tblptrl
 15405   00213C  C04E  FFF7         	movff	i2sprintf@f+1,tblptrh
 15406   002140  4A4D               	infsnz	i2sprintf@f^0,f,c
 15407   002142  2A4E               	incf	(i2sprintf@f+1)^0,f,c
 15408   002144                     	if	0	;tblptru may be non-zero
 15409   002144                     	endif
 15410   002144                     	if	0	;tblptru may be non-zero
 15411   002144                     	endif
 15412   002144  0008               	tblrd		*
 15413   002146  CFF5 F0A7          	movff	tablat,i2sprintf@c
 15414   00214A  51A7               	movf	i2sprintf@c& (0+255),w,b
 15415   00214C  A4D8               	btfss	status,2,c
 15416   00214E  EF6A  F008         	goto	i2l6366
 15417   002152                     i2u839_40:
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;doprnt.c: 1564: *sp = 0;
 15421   002152  C04B  FFD9         	movff	i2sprintf@sp,fsr2l
 15422   002156  C04C  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15423   00215A  6ADF               	clrf	indf2,c
 15424                           
 15425                           ; BSR set to: 0
 15426   00215C  0012               	return		;funcret
 15427   00215E                     __end_ofi2_sprintf:
 15428                           	callstack 0
 15429                           
 15430 ;; *************** function i2_scale *****************
 15431 ;; Defined at:
 15432 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;  scl             1    wreg     char 
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;  scl             1   35[COMRAM] char 
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  3   29[COMRAM] char 
 15439 ;; Registers used:
 15440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15441 ;; Tracked objects:
 15442 ;;		On entry : 3F/0
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15450 ;;Total ram usage:        7 bytes
 15451 ;; Hardware stack levels used: 1
 15452 ;; Hardware stack levels required when called: 2
 15453 ;; This function calls:
 15454 ;;		i2___awdiv
 15455 ;;		i2___awmod
 15456 ;;		i2___ftmul
 15457 ;; This function is called by:
 15458 ;;		i2_sprintf
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           	psect	text59
 15463   002878                     __ptext59:
 15464                           	callstack 0
 15465   002878                     i2_scale:
 15466                           	callstack 15
 15467                           
 15468                           ; BSR set to: 0
 15469                           ;incstack = 0
 15470                           ;i2scale@scl stored from wreg
 15471   002878  6E24               	movwf	i2scale@scl^0,c
 15472                           
 15473                           ;doprnt.c: 436: if(scl < 0) {
 15474   00287A  AE24               	btfss	i2scale@scl^0,7,c
 15475   00287C  D0D9               	goto	i2l5696
 15476                           
 15477                           ;doprnt.c: 437: scl = -scl;
 15478   00287E  6C24               	negf	i2scale@scl^0,c
 15479                           
 15480                           ;doprnt.c: 438: if(scl>=110)
 15481   002880  5024               	movf	i2scale@scl^0,w,c
 15482   002882  0A80               	xorlw	128
 15483   002884  0F12               	addlw	-238
 15484   002886  A0D8               	btfss	status,0,c
 15485   002888  D079               	goto	i2l5686
 15486                           
 15487                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 15488   00288A  0E00               	movlw	0
 15489   00288C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15490   00288E  0E0A               	movlw	10
 15491   002890  6E09               	movwf	i2___awdiv@divisor^0,c
 15492   002892  0E00               	movlw	0
 15493   002894  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15494   002896  0E64               	movlw	100
 15495   002898  6E03               	movwf	i2___awmod@divisor^0,c
 15496   00289A  5024               	movf	i2scale@scl^0,w,c
 15497   00289C  6E01               	movwf	i2___awmod@dividend^0,c
 15498   00289E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15499   0028A0  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15500   0028A2  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15501   0028A4  EC98  F023         	call	i2___awmod	;wreg free
 15502   0028A8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15503   0028AC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15504   0028B0  EC7E  F021         	call	i2___awdiv	;wreg free
 15505   0028B4  0E09               	movlw	9
 15506   0028B6  2607               	addwf	?i2___awdiv^0,f,c
 15507   0028B8  5007               	movf	?i2___awdiv^0,w,c
 15508   0028BA  0D03               	mullw	3
 15509   0028BC  0EE8               	movlw	low __npowers_
 15510   0028BE  24F3               	addwf	243,w,c
 15511   0028C0  6EF6               	movwf	tblptrl,c
 15512   0028C2  0EFE               	movlw	high __npowers_
 15513   0028C4  20F4               	addwfc	244,w,c
 15514   0028C6  6EF7               	movwf	tblptrh,c
 15515   0028C8                     	if	0	;There are less than 3 active tblptr bytes
 15516   0028C8                     	endif
 15517   0028C8  0009               	tblrd		*+
 15518   0028CA  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15519   0028CE  0009               	tblrd		*+
 15520   0028D0  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15521   0028D4  000A               	tblrd		*-
 15522   0028D6  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15523   0028DA  0E00               	movlw	0
 15524   0028DC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15525   0028DE  0E64               	movlw	100
 15526   0028E0  6E09               	movwf	i2___awdiv@divisor^0,c
 15527   0028E2  5024               	movf	i2scale@scl^0,w,c
 15528   0028E4  6E07               	movwf	i2___awdiv@dividend^0,c
 15529   0028E6  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 15530   0028E8  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 15531   0028EA  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 15532   0028EC  EC7E  F021         	call	i2___awdiv	;wreg free
 15533   0028F0  0E12               	movlw	18
 15534   0028F2  2607               	addwf	?i2___awdiv^0,f,c
 15535   0028F4  5007               	movf	?i2___awdiv^0,w,c
 15536   0028F6  0D03               	mullw	3
 15537   0028F8  0EE8               	movlw	low __npowers_
 15538   0028FA  24F3               	addwf	243,w,c
 15539   0028FC  6EF6               	movwf	tblptrl,c
 15540   0028FE  0EFE               	movlw	high __npowers_
 15541   002900  20F4               	addwfc	244,w,c
 15542   002902  6EF7               	movwf	tblptrh,c
 15543   002904                     	if	0	;There are less than 3 active tblptr bytes
 15544   002904                     	endif
 15545   002904  0009               	tblrd		*+
 15546   002906  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 15547   00290A  0009               	tblrd		*+
 15548   00290C  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 15549   002910  000A               	tblrd		*-
 15550   002912  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 15551   002916  ECB8  F01C         	call	i2___ftmul	;wreg free
 15552   00291A  C00F  F021         	movff	?i2___ftmul,i2_scale$2007
 15553   00291E  C010  F022         	movff	?i2___ftmul+1,i2_scale$2007+1
 15554   002922  C011  F023         	movff	?i2___ftmul+2,i2_scale$2007+2
 15555                           
 15556                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 15557   002926  C021  F00F         	movff	i2_scale$2007,i2___ftmul@f1
 15558   00292A  C022  F010         	movff	i2_scale$2007+1,i2___ftmul@f1+1
 15559   00292E  C023  F011         	movff	i2_scale$2007+2,i2___ftmul@f1+2
 15560   002932  0E00               	movlw	0
 15561   002934  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15562   002936  0E0A               	movlw	10
 15563   002938  6E03               	movwf	i2___awmod@divisor^0,c
 15564   00293A  5024               	movf	i2scale@scl^0,w,c
 15565   00293C  6E01               	movwf	i2___awmod@dividend^0,c
 15566   00293E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15567   002940  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15568   002942  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15569   002944  EC98  F023         	call	i2___awmod	;wreg free
 15570   002948  5001               	movf	?i2___awmod^0,w,c
 15571   00294A  0D03               	mullw	3
 15572   00294C  0EE8               	movlw	low __npowers_
 15573   00294E  24F3               	addwf	243,w,c
 15574   002950  6EF6               	movwf	tblptrl,c
 15575   002952  0EFE               	movlw	high __npowers_
 15576   002954  20F4               	addwfc	244,w,c
 15577   002956  6EF7               	movwf	tblptrh,c
 15578   002958                     	if	0	;There are less than 3 active tblptr bytes
 15579   002958                     	endif
 15580   002958  0009               	tblrd		*+
 15581   00295A  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15582   00295E  0009               	tblrd		*+
 15583   002960  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15584   002964  000A               	tblrd		*-
 15585   002966  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15586   00296A  ECB8  F01C         	call	i2___ftmul	;wreg free
 15587   00296E  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 15588   002972  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 15589   002976  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 15590   00297A  0012               	return	
 15591   00297C                     i2l5686:
 15592                           
 15593                           ;doprnt.c: 440: else if(scl > 10)
 15594   00297C  5024               	movf	i2scale@scl^0,w,c
 15595   00297E  0A80               	xorlw	128
 15596   002980  0F75               	addlw	-139
 15597   002982  A0D8               	btfss	status,0,c
 15598   002984  D043               	goto	i2l5692
 15599                           
 15600                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 15601   002986  0E00               	movlw	0
 15602   002988  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15603   00298A  0E0A               	movlw	10
 15604   00298C  6E09               	movwf	i2___awdiv@divisor^0,c
 15605   00298E  5024               	movf	i2scale@scl^0,w,c
 15606   002990  6E07               	movwf	i2___awdiv@dividend^0,c
 15607   002992  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 15608   002994  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 15609   002996  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 15610   002998  EC7E  F021         	call	i2___awdiv	;wreg free
 15611   00299C  0E09               	movlw	9
 15612   00299E  2607               	addwf	?i2___awdiv^0,f,c
 15613   0029A0  5007               	movf	?i2___awdiv^0,w,c
 15614   0029A2  0D03               	mullw	3
 15615   0029A4  0EE8               	movlw	low __npowers_
 15616   0029A6  24F3               	addwf	243,w,c
 15617   0029A8  6EF6               	movwf	tblptrl,c
 15618   0029AA  0EFE               	movlw	high __npowers_
 15619   0029AC  20F4               	addwfc	244,w,c
 15620   0029AE  6EF7               	movwf	tblptrh,c
 15621   0029B0                     	if	0	;There are less than 3 active tblptr bytes
 15622   0029B0                     	endif
 15623   0029B0  0009               	tblrd		*+
 15624   0029B2  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 15625   0029B6  0009               	tblrd		*+
 15626   0029B8  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 15627   0029BC  000A               	tblrd		*-
 15628   0029BE  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 15629   0029C2  0E00               	movlw	0
 15630   0029C4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15631   0029C6  0E0A               	movlw	10
 15632   0029C8  6E03               	movwf	i2___awmod@divisor^0,c
 15633   0029CA  5024               	movf	i2scale@scl^0,w,c
 15634   0029CC  6E01               	movwf	i2___awmod@dividend^0,c
 15635   0029CE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15636   0029D0  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15637   0029D2  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15638   0029D4  EC98  F023         	call	i2___awmod	;wreg free
 15639   0029D8  5001               	movf	?i2___awmod^0,w,c
 15640   0029DA  0D03               	mullw	3
 15641   0029DC  0EE8               	movlw	low __npowers_
 15642   0029DE  24F3               	addwf	243,w,c
 15643   0029E0  6EF6               	movwf	tblptrl,c
 15644   0029E2  0EFE               	movlw	high __npowers_
 15645   0029E4  20F4               	addwfc	244,w,c
 15646   0029E6  6EF7               	movwf	tblptrh,c
 15647   0029E8                     	if	0	;There are less than 3 active tblptr bytes
 15648   0029E8                     	endif
 15649   0029E8  0009               	tblrd		*+
 15650   0029EA  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15651   0029EE  0009               	tblrd		*+
 15652   0029F0  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15653   0029F4  000A               	tblrd		*-
 15654   0029F6  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15655   0029FA  ECB8  F01C         	call	i2___ftmul	;wreg free
 15656   0029FE  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 15657   002A02  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 15658   002A06  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 15659   002A0A  0012               	return	
 15660   002A0C                     i2l5692:
 15661                           
 15662                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 15663   002A0C  5024               	movf	i2scale@scl^0,w,c
 15664   002A0E  0D03               	mullw	3
 15665   002A10  0EE8               	movlw	low __npowers_
 15666   002A12  24F3               	addwf	243,w,c
 15667   002A14  6EF6               	movwf	tblptrl,c
 15668   002A16  0EFE               	movlw	high __npowers_
 15669   002A18  20F4               	addwfc	244,w,c
 15670   002A1A  6EF7               	movwf	tblptrh,c
 15671   002A1C                     	if	0	;There are less than 3 active tblptr bytes
 15672   002A1C                     	endif
 15673   002A1C  0009               	tblrd		*+
 15674   002A1E  CFF5 F01E          	movff	tablat,?i2_scale
 15675   002A22  0009               	tblrd		*+
 15676   002A24  CFF5 F01F          	movff	tablat,?i2_scale+1
 15677   002A28  000A               	tblrd		*-
 15678   002A2A  CFF5 F020          	movff	tablat,?i2_scale+2
 15679   002A2E  0012               	return	
 15680   002A30                     i2l5696:
 15681                           
 15682                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 15683   002A30  5024               	movf	i2scale@scl^0,w,c
 15684   002A32  0A80               	xorlw	128
 15685   002A34  0F12               	addlw	-238
 15686   002A36  A0D8               	btfss	status,0,c
 15687   002A38  D079               	goto	i2l5704
 15688                           
 15689                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 15690   002A3A  0E00               	movlw	0
 15691   002A3C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15692   002A3E  0E0A               	movlw	10
 15693   002A40  6E09               	movwf	i2___awdiv@divisor^0,c
 15694   002A42  0E00               	movlw	0
 15695   002A44  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15696   002A46  0E64               	movlw	100
 15697   002A48  6E03               	movwf	i2___awmod@divisor^0,c
 15698   002A4A  5024               	movf	i2scale@scl^0,w,c
 15699   002A4C  6E01               	movwf	i2___awmod@dividend^0,c
 15700   002A4E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15701   002A50  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15702   002A52  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15703   002A54  EC98  F023         	call	i2___awmod	;wreg free
 15704   002A58  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15705   002A5C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15706   002A60  EC7E  F021         	call	i2___awdiv	;wreg free
 15707   002A64  0E09               	movlw	9
 15708   002A66  2607               	addwf	?i2___awdiv^0,f,c
 15709   002A68  5007               	movf	?i2___awdiv^0,w,c
 15710   002A6A  0D03               	mullw	3
 15711   002A6C  0EC1               	movlw	low __powers_
 15712   002A6E  24F3               	addwf	243,w,c
 15713   002A70  6EF6               	movwf	tblptrl,c
 15714   002A72  0EFE               	movlw	high __powers_
 15715   002A74  20F4               	addwfc	244,w,c
 15716   002A76  6EF7               	movwf	tblptrh,c
 15717   002A78                     	if	0	;There are less than 3 active tblptr bytes
 15718   002A78                     	endif
 15719   002A78  0009               	tblrd		*+
 15720   002A7A  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15721   002A7E  0009               	tblrd		*+
 15722   002A80  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15723   002A84  000A               	tblrd		*-
 15724   002A86  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15725   002A8A  0E00               	movlw	0
 15726   002A8C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15727   002A8E  0E64               	movlw	100
 15728   002A90  6E09               	movwf	i2___awdiv@divisor^0,c
 15729   002A92  5024               	movf	i2scale@scl^0,w,c
 15730   002A94  6E07               	movwf	i2___awdiv@dividend^0,c
 15731   002A96  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 15732   002A98  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 15733   002A9A  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 15734   002A9C  EC7E  F021         	call	i2___awdiv	;wreg free
 15735   002AA0  0E12               	movlw	18
 15736   002AA2  2607               	addwf	?i2___awdiv^0,f,c
 15737   002AA4  5007               	movf	?i2___awdiv^0,w,c
 15738   002AA6  0D03               	mullw	3
 15739   002AA8  0EC1               	movlw	low __powers_
 15740   002AAA  24F3               	addwf	243,w,c
 15741   002AAC  6EF6               	movwf	tblptrl,c
 15742   002AAE  0EFE               	movlw	high __powers_
 15743   002AB0  20F4               	addwfc	244,w,c
 15744   002AB2  6EF7               	movwf	tblptrh,c
 15745   002AB4                     	if	0	;There are less than 3 active tblptr bytes
 15746   002AB4                     	endif
 15747   002AB4  0009               	tblrd		*+
 15748   002AB6  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 15749   002ABA  0009               	tblrd		*+
 15750   002ABC  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 15751   002AC0  000A               	tblrd		*-
 15752   002AC2  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 15753   002AC6  ECB8  F01C         	call	i2___ftmul	;wreg free
 15754   002ACA  C00F  F021         	movff	?i2___ftmul,i2_scale$2007
 15755   002ACE  C010  F022         	movff	?i2___ftmul+1,i2_scale$2007+1
 15756   002AD2  C011  F023         	movff	?i2___ftmul+2,i2_scale$2007+2
 15757                           
 15758                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 15759   002AD6  C021  F00F         	movff	i2_scale$2007,i2___ftmul@f1
 15760   002ADA  C022  F010         	movff	i2_scale$2007+1,i2___ftmul@f1+1
 15761   002ADE  C023  F011         	movff	i2_scale$2007+2,i2___ftmul@f1+2
 15762   002AE2  0E00               	movlw	0
 15763   002AE4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15764   002AE6  0E0A               	movlw	10
 15765   002AE8  6E03               	movwf	i2___awmod@divisor^0,c
 15766   002AEA  5024               	movf	i2scale@scl^0,w,c
 15767   002AEC  6E01               	movwf	i2___awmod@dividend^0,c
 15768   002AEE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15769   002AF0  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15770   002AF2  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15771   002AF4  EC98  F023         	call	i2___awmod	;wreg free
 15772   002AF8  5001               	movf	?i2___awmod^0,w,c
 15773   002AFA  0D03               	mullw	3
 15774   002AFC  0EC1               	movlw	low __powers_
 15775   002AFE  24F3               	addwf	243,w,c
 15776   002B00  6EF6               	movwf	tblptrl,c
 15777   002B02  0EFE               	movlw	high __powers_
 15778   002B04  20F4               	addwfc	244,w,c
 15779   002B06  6EF7               	movwf	tblptrh,c
 15780   002B08                     	if	0	;There are less than 3 active tblptr bytes
 15781   002B08                     	endif
 15782   002B08  0009               	tblrd		*+
 15783   002B0A  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15784   002B0E  0009               	tblrd		*+
 15785   002B10  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15786   002B14  000A               	tblrd		*-
 15787   002B16  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15788   002B1A  ECB8  F01C         	call	i2___ftmul	;wreg free
 15789   002B1E  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 15790   002B22  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 15791   002B26  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 15792   002B2A  0012               	return	
 15793   002B2C                     i2l5704:
 15794                           
 15795                           ;doprnt.c: 446: else if(scl > 10)
 15796   002B2C  5024               	movf	i2scale@scl^0,w,c
 15797   002B2E  0A80               	xorlw	128
 15798   002B30  0F75               	addlw	-139
 15799   002B32  A0D8               	btfss	status,0,c
 15800   002B34  D043               	goto	i2l5710
 15801                           
 15802                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 15803   002B36  0E00               	movlw	0
 15804   002B38  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15805   002B3A  0E0A               	movlw	10
 15806   002B3C  6E09               	movwf	i2___awdiv@divisor^0,c
 15807   002B3E  5024               	movf	i2scale@scl^0,w,c
 15808   002B40  6E07               	movwf	i2___awdiv@dividend^0,c
 15809   002B42  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 15810   002B44  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 15811   002B46  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 15812   002B48  EC7E  F021         	call	i2___awdiv	;wreg free
 15813   002B4C  0E09               	movlw	9
 15814   002B4E  2607               	addwf	?i2___awdiv^0,f,c
 15815   002B50  5007               	movf	?i2___awdiv^0,w,c
 15816   002B52  0D03               	mullw	3
 15817   002B54  0EC1               	movlw	low __powers_
 15818   002B56  24F3               	addwf	243,w,c
 15819   002B58  6EF6               	movwf	tblptrl,c
 15820   002B5A  0EFE               	movlw	high __powers_
 15821   002B5C  20F4               	addwfc	244,w,c
 15822   002B5E  6EF7               	movwf	tblptrh,c
 15823   002B60                     	if	0	;There are less than 3 active tblptr bytes
 15824   002B60                     	endif
 15825   002B60  0009               	tblrd		*+
 15826   002B62  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 15827   002B66  0009               	tblrd		*+
 15828   002B68  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 15829   002B6C  000A               	tblrd		*-
 15830   002B6E  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 15831   002B72  0E00               	movlw	0
 15832   002B74  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 15833   002B76  0E0A               	movlw	10
 15834   002B78  6E03               	movwf	i2___awmod@divisor^0,c
 15835   002B7A  5024               	movf	i2scale@scl^0,w,c
 15836   002B7C  6E01               	movwf	i2___awmod@dividend^0,c
 15837   002B7E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 15838   002B80  BE01               	btfsc	i2___awmod@dividend^0,7,c
 15839   002B82  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 15840   002B84  EC98  F023         	call	i2___awmod	;wreg free
 15841   002B88  5001               	movf	?i2___awmod^0,w,c
 15842   002B8A  0D03               	mullw	3
 15843   002B8C  0EC1               	movlw	low __powers_
 15844   002B8E  24F3               	addwf	243,w,c
 15845   002B90  6EF6               	movwf	tblptrl,c
 15846   002B92  0EFE               	movlw	high __powers_
 15847   002B94  20F4               	addwfc	244,w,c
 15848   002B96  6EF7               	movwf	tblptrh,c
 15849   002B98                     	if	0	;There are less than 3 active tblptr bytes
 15850   002B98                     	endif
 15851   002B98  0009               	tblrd		*+
 15852   002B9A  CFF5 F012          	movff	tablat,i2___ftmul@f2
 15853   002B9E  0009               	tblrd		*+
 15854   002BA0  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 15855   002BA4  000A               	tblrd		*-
 15856   002BA6  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 15857   002BAA  ECB8  F01C         	call	i2___ftmul	;wreg free
 15858   002BAE  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 15859   002BB2  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 15860   002BB6  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 15861   002BBA  0012               	return	
 15862   002BBC                     i2l5710:
 15863                           
 15864                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 15865   002BBC  5024               	movf	i2scale@scl^0,w,c
 15866   002BBE  0D03               	mullw	3
 15867   002BC0  0EC1               	movlw	low __powers_
 15868   002BC2  24F3               	addwf	243,w,c
 15869   002BC4  6EF6               	movwf	tblptrl,c
 15870   002BC6  0EFE               	movlw	high __powers_
 15871   002BC8  20F4               	addwfc	244,w,c
 15872   002BCA  6EF7               	movwf	tblptrh,c
 15873   002BCC                     	if	0	;There are less than 3 active tblptr bytes
 15874   002BCC                     	endif
 15875   002BCC  0009               	tblrd		*+
 15876   002BCE  CFF5 F01E          	movff	tablat,?i2_scale
 15877   002BD2  0009               	tblrd		*+
 15878   002BD4  CFF5 F01F          	movff	tablat,?i2_scale+1
 15879   002BD8  000A               	tblrd		*-
 15880   002BDA  CFF5 F020          	movff	tablat,?i2_scale+2
 15881   002BDE  0012               	return		;funcret
 15882   002BE0                     __end_ofi2_scale:
 15883                           	callstack 0
 15884                           
 15885 ;; *************** function i2___awmod *****************
 15886 ;; Defined at:
 15887 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;  dividend        2    0[COMRAM] int 
 15890 ;;  divisor         2    2[COMRAM] int 
 15891 ;; Auto vars:     Size  Location     Type
 15892 ;;  sign            1    5[COMRAM] unsigned char 
 15893 ;;  counter         1    4[COMRAM] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  2    0[COMRAM] int 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2, status,0
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;Total ram usage:        6 bytes
 15908 ;; Hardware stack levels used: 1
 15909 ;; This function calls:
 15910 ;;		Nothing
 15911 ;; This function is called by:
 15912 ;;		i2_scale
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text60
 15917   004730                     __ptext60:
 15918                           	callstack 0
 15919   004730                     i2___awmod:
 15920                           	callstack 16
 15921                           
 15922                           ;incstack = 0
 15923   004730  0E00               	movlw	0
 15924   004732  6E06               	movwf	i2___awmod@sign^0,c
 15925   004734  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 15926   004736  D006               	goto	i2l5194
 15927   004738  6C01               	negf	i2___awmod@dividend^0,c
 15928   00473A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 15929   00473C  B0D8               	btfsc	status,0,c
 15930   00473E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 15931   004740  0E01               	movlw	1
 15932   004742  6E06               	movwf	i2___awmod@sign^0,c
 15933   004744                     i2l5194:
 15934   004744  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 15935   004746  D004               	goto	i2l5198
 15936   004748  6C03               	negf	i2___awmod@divisor^0,c
 15937   00474A  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 15938   00474C  B0D8               	btfsc	status,0,c
 15939   00474E  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 15940   004750                     i2l5198:
 15941   004750  5003               	movf	i2___awmod@divisor^0,w,c
 15942   004752  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 15943   004754  B4D8               	btfsc	status,2,c
 15944   004756  D018               	goto	i2l5214
 15945   004758  0E01               	movlw	1
 15946   00475A  6E05               	movwf	i2___awmod@counter^0,c
 15947   00475C  D004               	goto	i2l5204
 15948   00475E                     i2l5202:
 15949   00475E  90D8               	bcf	status,0,c
 15950   004760  3603               	rlcf	i2___awmod@divisor^0,f,c
 15951   004762  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 15952   004764  2A05               	incf	i2___awmod@counter^0,f,c
 15953   004766                     i2l5204:
 15954   004766  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 15955   004768  D7FA               	goto	i2l5202
 15956   00476A                     i2u554_40:
 15957   00476A  5003               	movf	i2___awmod@divisor^0,w,c
 15958   00476C  5C01               	subwf	i2___awmod@dividend^0,w,c
 15959   00476E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 15960   004770  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 15961   004772  A0D8               	btfss	status,0,c
 15962   004774  D004               	goto	i2l5210
 15963   004776  5003               	movf	i2___awmod@divisor^0,w,c
 15964   004778  5E01               	subwf	i2___awmod@dividend^0,f,c
 15965   00477A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 15966   00477C  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 15967   00477E                     i2l5210:
 15968   00477E  90D8               	bcf	status,0,c
 15969   004780  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 15970   004782  3203               	rrcf	i2___awmod@divisor^0,f,c
 15971   004784  2E05               	decfsz	i2___awmod@counter^0,f,c
 15972   004786  D7F1               	goto	i2u554_40
 15973   004788                     i2l5214:
 15974   004788  5006               	movf	i2___awmod@sign^0,w,c
 15975   00478A  B4D8               	btfsc	status,2,c
 15976   00478C  D004               	goto	i2l5218
 15977   00478E  6C01               	negf	i2___awmod@dividend^0,c
 15978   004790  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 15979   004792  B0D8               	btfsc	status,0,c
 15980   004794  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 15981   004796                     i2l5218:
 15982   004796  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15983   00479A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15984   00479E  0012               	return		;funcret
 15985   0047A0                     __end_ofi2___awmod:
 15986                           	callstack 0
 15987                           
 15988 ;; *************** function i2___awdiv *****************
 15989 ;; Defined at:
 15990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;  dividend        2    6[COMRAM] int 
 15993 ;;  divisor         2    8[COMRAM] int 
 15994 ;; Auto vars:     Size  Location     Type
 15995 ;;  quotient        2   12[COMRAM] int 
 15996 ;;  sign            1   11[COMRAM] unsigned char 
 15997 ;;  counter         1   10[COMRAM] unsigned char 
 15998 ;; Return value:  Size  Location     Type
 15999 ;;                  2    6[COMRAM] int 
 16000 ;; Registers used:
 16001 ;;		wreg, status,2, status,0
 16002 ;; Tracked objects:
 16003 ;;		On entry : 0/0
 16004 ;;		On exit  : 0/0
 16005 ;;		Unchanged: 0/0
 16006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16008 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16011 ;;Total ram usage:        8 bytes
 16012 ;; Hardware stack levels used: 1
 16013 ;; This function calls:
 16014 ;;		Nothing
 16015 ;; This function is called by:
 16016 ;;		i2_scale
 16017 ;;		i2_sprintf
 16018 ;; This function uses a non-reentrant model
 16019 ;;
 16020                           
 16021                           	psect	text61
 16022   0042FC                     __ptext61:
 16023                           	callstack 0
 16024   0042FC                     i2___awdiv:
 16025                           	callstack 16
 16026                           
 16027                           ;incstack = 0
 16028   0042FC  0E00               	movlw	0
 16029   0042FE  6E0C               	movwf	i2___awdiv@sign^0,c
 16030   004300  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 16031   004302  D006               	goto	i2l5150
 16032   004304  6C09               	negf	i2___awdiv@divisor^0,c
 16033   004306  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 16034   004308  B0D8               	btfsc	status,0,c
 16035   00430A  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 16036   00430C  0E01               	movlw	1
 16037   00430E  6E0C               	movwf	i2___awdiv@sign^0,c
 16038   004310                     i2l5150:
 16039   004310  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
 16040   004312  D006               	goto	i2l5156
 16041   004314  6C07               	negf	i2___awdiv@dividend^0,c
 16042   004316  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 16043   004318  B0D8               	btfsc	status,0,c
 16044   00431A  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 16045   00431C  0E01               	movlw	1
 16046   00431E  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 16047   004320                     i2l5156:
 16048   004320  0E00               	movlw	0
 16049   004322  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 16050   004324  0E00               	movlw	0
 16051   004326  6E0D               	movwf	i2___awdiv@quotient^0,c
 16052   004328  5009               	movf	i2___awdiv@divisor^0,w,c
 16053   00432A  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 16054   00432C  B4D8               	btfsc	status,2,c
 16055   00432E  D01C               	goto	i2l5178
 16056   004330  0E01               	movlw	1
 16057   004332  6E0B               	movwf	i2___awdiv@counter^0,c
 16058   004334  D004               	goto	i2l5164
 16059   004336                     i2l5162:
 16060   004336  90D8               	bcf	status,0,c
 16061   004338  3609               	rlcf	i2___awdiv@divisor^0,f,c
 16062   00433A  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 16063   00433C  2A0B               	incf	i2___awdiv@counter^0,f,c
 16064   00433E                     i2l5164:
 16065   00433E  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 16066   004340  D7FA               	goto	i2l5162
 16067   004342                     i2u548_40:
 16068   004342  90D8               	bcf	status,0,c
 16069   004344  360D               	rlcf	i2___awdiv@quotient^0,f,c
 16070   004346  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 16071   004348  5009               	movf	i2___awdiv@divisor^0,w,c
 16072   00434A  5C07               	subwf	i2___awdiv@dividend^0,w,c
 16073   00434C  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 16074   00434E  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 16075   004350  A0D8               	btfss	status,0,c
 16076   004352  D005               	goto	i2l5174
 16077   004354  5009               	movf	i2___awdiv@divisor^0,w,c
 16078   004356  5E07               	subwf	i2___awdiv@dividend^0,f,c
 16079   004358  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 16080   00435A  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 16081   00435C  800D               	bsf	i2___awdiv@quotient^0,0,c
 16082   00435E                     i2l5174:
 16083   00435E  90D8               	bcf	status,0,c
 16084   004360  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 16085   004362  3209               	rrcf	i2___awdiv@divisor^0,f,c
 16086   004364  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 16087   004366  D7ED               	goto	i2u548_40
 16088   004368                     i2l5178:
 16089   004368  500C               	movf	i2___awdiv@sign^0,w,c
 16090   00436A  B4D8               	btfsc	status,2,c
 16091   00436C  D004               	goto	i2l5182
 16092   00436E  6C0D               	negf	i2___awdiv@quotient^0,c
 16093   004370  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 16094   004372  B0D8               	btfsc	status,0,c
 16095   004374  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 16096   004376                     i2l5182:
 16097   004376  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16098   00437A  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16099   00437E  0012               	return		;funcret
 16100   004380                     __end_ofi2___awdiv:
 16101                           	callstack 0
 16102                           
 16103 ;; *************** function i2_isdigit *****************
 16104 ;; Defined at:
 16105 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;  c               1    wreg     unsigned char 
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;  c               1    2[COMRAM] unsigned char 
 16110 ;; Return value:  Size  Location     Type
 16111 ;;		None               void
 16112 ;; Registers used:
 16113 ;;		wreg, status,2, status,0
 16114 ;; Tracked objects:
 16115 ;;		On entry : 3F/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16123 ;;Total ram usage:        3 bytes
 16124 ;; Hardware stack levels used: 1
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		i2_sprintf
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text62
 16133   0052CE                     __ptext62:
 16134                           	callstack 0
 16135   0052CE                     i2_isdigit:
 16136                           	callstack 17
 16137                           
 16138                           ;incstack = 0
 16139                           ;i2isdigit@c stored from wreg
 16140   0052CE  6E03               	movwf	i2isdigit@c^0,c
 16141   0052D0  0E00               	movlw	0
 16142   0052D2  6E02               	movwf	i2_isdigit$1486^0,c
 16143   0052D4  0E3A               	movlw	58
 16144   0052D6  6003               	cpfslt	i2isdigit@c^0,c
 16145   0052D8  D005               	goto	i2l5968
 16146   0052DA  0E2F               	movlw	47
 16147   0052DC  6403               	cpfsgt	i2isdigit@c^0,c
 16148   0052DE  D002               	goto	i2l5968
 16149   0052E0  0E01               	movlw	1
 16150   0052E2  6E02               	movwf	i2_isdigit$1486^0,c
 16151   0052E4                     i2l5968:
 16152   0052E4  C002  F001         	movff	i2_isdigit$1486,??i2_isdigit
 16153   0052E8  3001               	rrcf	??i2_isdigit^0,w,c
 16154   0052EA  0012               	return		;funcret
 16155   0052EC                     __end_ofi2_isdigit:
 16156                           	callstack 0
 16157                           
 16158 ;; *************** function i2_fround *****************
 16159 ;; Defined at:
 16160 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;  prec            1    wreg     unsigned char 
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;  prec            1   40[COMRAM] unsigned char 
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  3   29[COMRAM] unsigned char 
 16167 ;; Registers used:
 16168 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 3F/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16174 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16177 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;Total ram usage:       12 bytes
 16179 ;; Hardware stack levels used: 1
 16180 ;; Hardware stack levels required when called: 2
 16181 ;; This function calls:
 16182 ;;		i2___ftmul
 16183 ;;		i2___lbdiv
 16184 ;;		i2___lbmod
 16185 ;; This function is called by:
 16186 ;;		i2_sprintf
 16187 ;; This function uses a non-reentrant model
 16188 ;;
 16189                           
 16190                           	psect	text63
 16191   002DE4                     __ptext63:
 16192                           	callstack 0
 16193   002DE4                     i2_fround:
 16194                           	callstack 15
 16195                           
 16196                           ;incstack = 0
 16197                           ;i2fround@prec stored from wreg
 16198   002DE4  6E29               	movwf	i2fround@prec^0,c
 16199                           
 16200                           ;doprnt.c: 421: if(prec>=110)
 16201   002DE6  0E6D               	movlw	109
 16202   002DE8  6429               	cpfsgt	i2fround@prec^0,c
 16203   002DEA  D07C               	goto	i2l5664
 16204                           
 16205                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 16206   002DEC  0E0A               	movlw	10
 16207   002DEE  6E05               	movwf	i2___lbdiv@divisor^0,c
 16208   002DF0  0E64               	movlw	100
 16209   002DF2  6E01               	movwf	i2___lbmod@divisor^0,c
 16210   002DF4  5029               	movf	i2fround@prec^0,w,c
 16211   002DF6  EC51  F028         	call	i2___lbmod
 16212   002DFA  EC9E  F027         	call	i2___lbdiv
 16213   002DFE  6E21               	movwf	??i2_fround^0,c
 16214   002E00  5021               	movf	??i2_fround^0,w,c
 16215   002E02  0D03               	mullw	3
 16216   002E04  0E1B               	movlw	27
 16217   002E06  26F3               	addwf	243,f,c
 16218   002E08  0E00               	movlw	0
 16219   002E0A  22F4               	addwfc	244,f,c
 16220   002E0C  0EE8               	movlw	low __npowers_
 16221   002E0E  24F3               	addwf	243,w,c
 16222   002E10  6EF6               	movwf	tblptrl,c
 16223   002E12  0EFE               	movlw	high __npowers_
 16224   002E14  20F4               	addwfc	244,w,c
 16225   002E16  6EF7               	movwf	tblptrh,c
 16226   002E18                     	if	0	;There are less than 3 active tblptr bytes
 16227   002E18                     	endif
 16228   002E18  0009               	tblrd		*+
 16229   002E1A  CFF5 F012          	movff	tablat,i2___ftmul@f2
 16230   002E1E  0009               	tblrd		*+
 16231   002E20  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 16232   002E24  000A               	tblrd		*-
 16233   002E26  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 16234   002E2A  0E64               	movlw	100
 16235   002E2C  6E05               	movwf	i2___lbdiv@divisor^0,c
 16236   002E2E  5029               	movf	i2fround@prec^0,w,c
 16237   002E30  EC9E  F027         	call	i2___lbdiv
 16238   002E34  6E22               	movwf	(??i2_fround+1)^0,c
 16239   002E36  5022               	movf	(??i2_fround+1)^0,w,c
 16240   002E38  0D03               	mullw	3
 16241   002E3A  0E36               	movlw	54
 16242   002E3C  26F3               	addwf	243,f,c
 16243   002E3E  0E00               	movlw	0
 16244   002E40  22F4               	addwfc	244,f,c
 16245   002E42  0EE8               	movlw	low __npowers_
 16246   002E44  24F3               	addwf	243,w,c
 16247   002E46  6EF6               	movwf	tblptrl,c
 16248   002E48  0EFE               	movlw	high __npowers_
 16249   002E4A  20F4               	addwfc	244,w,c
 16250   002E4C  6EF7               	movwf	tblptrh,c
 16251   002E4E                     	if	0	;There are less than 3 active tblptr bytes
 16252   002E4E                     	endif
 16253   002E4E  0009               	tblrd		*+
 16254   002E50  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 16255   002E54  0009               	tblrd		*+
 16256   002E56  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 16257   002E5A  000A               	tblrd		*-
 16258   002E5C  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 16259   002E60  ECB8  F01C         	call	i2___ftmul	;wreg free
 16260   002E64  C00F  F026         	movff	?i2___ftmul,i2_fround$2005
 16261   002E68  C010  F027         	movff	?i2___ftmul+1,i2_fround$2005+1
 16262   002E6C  C011  F028         	movff	?i2___ftmul+2,i2_fround$2005+2
 16263                           
 16264                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 16265   002E70  0E0A               	movlw	10
 16266   002E72  6E01               	movwf	i2___lbmod@divisor^0,c
 16267   002E74  5029               	movf	i2fround@prec^0,w,c
 16268   002E76  EC51  F028         	call	i2___lbmod
 16269   002E7A  6E21               	movwf	??i2_fround^0,c
 16270   002E7C  5021               	movf	??i2_fround^0,w,c
 16271   002E7E  0D03               	mullw	3
 16272   002E80  0EE8               	movlw	low __npowers_
 16273   002E82  24F3               	addwf	243,w,c
 16274   002E84  6EF6               	movwf	tblptrl,c
 16275   002E86  0EFE               	movlw	high __npowers_
 16276   002E88  20F4               	addwfc	244,w,c
 16277   002E8A  6EF7               	movwf	tblptrh,c
 16278   002E8C                     	if	0	;There are less than 3 active tblptr bytes
 16279   002E8C                     	endif
 16280   002E8C  0009               	tblrd		*+
 16281   002E8E  CFF5 F012          	movff	tablat,i2___ftmul@f2
 16282   002E92  0009               	tblrd		*+
 16283   002E94  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 16284   002E98  000A               	tblrd		*-
 16285   002E9A  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 16286   002E9E  C026  F00F         	movff	i2_fround$2005,i2___ftmul@f1
 16287   002EA2  C027  F010         	movff	i2_fround$2005+1,i2___ftmul@f1+1
 16288   002EA6  C028  F011         	movff	i2_fround$2005+2,i2___ftmul@f1+2
 16289   002EAA  ECB8  F01C         	call	i2___ftmul	;wreg free
 16290   002EAE  C00F  F023         	movff	?i2___ftmul,i2_fround$2006
 16291   002EB2  C010  F024         	movff	?i2___ftmul+1,i2_fround$2006+1
 16292   002EB6  C011  F025         	movff	?i2___ftmul+2,i2_fround$2006+2
 16293                           
 16294                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 16295   002EBA  C023  F00F         	movff	i2_fround$2006,i2___ftmul@f1
 16296   002EBE  C024  F010         	movff	i2_fround$2006+1,i2___ftmul@f1+1
 16297   002EC2  C025  F011         	movff	i2_fround$2006+2,i2___ftmul@f1+2
 16298   002EC6  0E00               	movlw	0
 16299   002EC8  6E12               	movwf	i2___ftmul@f2^0,c
 16300   002ECA  0E00               	movlw	0
 16301   002ECC  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 16302   002ECE  0E3F               	movlw	63
 16303   002ED0  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 16304   002ED2  ECB8  F01C         	call	i2___ftmul	;wreg free
 16305   002ED6  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 16306   002EDA  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 16307   002EDE  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 16308   002EE2  0012               	return	
 16309   002EE4                     i2l5664:
 16310                           
 16311                           ;doprnt.c: 423: else if(prec > 10)
 16312   002EE4  0E0A               	movlw	10
 16313   002EE6  6429               	cpfsgt	i2fround@prec^0,c
 16314   002EE8  D04F               	goto	i2l5672
 16315                           
 16316                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 16317   002EEA  0E0A               	movlw	10
 16318   002EEC  6E01               	movwf	i2___lbmod@divisor^0,c
 16319   002EEE  5029               	movf	i2fround@prec^0,w,c
 16320   002EF0  EC51  F028         	call	i2___lbmod
 16321   002EF4  6E21               	movwf	??i2_fround^0,c
 16322   002EF6  5021               	movf	??i2_fround^0,w,c
 16323   002EF8  0D03               	mullw	3
 16324   002EFA  0EE8               	movlw	low __npowers_
 16325   002EFC  24F3               	addwf	243,w,c
 16326   002EFE  6EF6               	movwf	tblptrl,c
 16327   002F00  0EFE               	movlw	high __npowers_
 16328   002F02  20F4               	addwfc	244,w,c
 16329   002F04  6EF7               	movwf	tblptrh,c
 16330   002F06                     	if	0	;There are less than 3 active tblptr bytes
 16331   002F06                     	endif
 16332   002F06  0009               	tblrd		*+
 16333   002F08  CFF5 F012          	movff	tablat,i2___ftmul@f2
 16334   002F0C  0009               	tblrd		*+
 16335   002F0E  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 16336   002F12  000A               	tblrd		*-
 16337   002F14  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 16338   002F18  0E0A               	movlw	10
 16339   002F1A  6E05               	movwf	i2___lbdiv@divisor^0,c
 16340   002F1C  5029               	movf	i2fround@prec^0,w,c
 16341   002F1E  EC9E  F027         	call	i2___lbdiv
 16342   002F22  6E22               	movwf	(??i2_fround+1)^0,c
 16343   002F24  5022               	movf	(??i2_fround+1)^0,w,c
 16344   002F26  0D03               	mullw	3
 16345   002F28  0E1B               	movlw	27
 16346   002F2A  26F3               	addwf	243,f,c
 16347   002F2C  0E00               	movlw	0
 16348   002F2E  22F4               	addwfc	244,f,c
 16349   002F30  0EE8               	movlw	low __npowers_
 16350   002F32  24F3               	addwf	243,w,c
 16351   002F34  6EF6               	movwf	tblptrl,c
 16352   002F36  0EFE               	movlw	high __npowers_
 16353   002F38  20F4               	addwfc	244,w,c
 16354   002F3A  6EF7               	movwf	tblptrh,c
 16355   002F3C                     	if	0	;There are less than 3 active tblptr bytes
 16356   002F3C                     	endif
 16357   002F3C  0009               	tblrd		*+
 16358   002F3E  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 16359   002F42  0009               	tblrd		*+
 16360   002F44  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 16361   002F48  000A               	tblrd		*-
 16362   002F4A  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 16363   002F4E  ECB8  F01C         	call	i2___ftmul	;wreg free
 16364   002F52  C00F  F026         	movff	?i2___ftmul,i2_fround$2005
 16365   002F56  C010  F027         	movff	?i2___ftmul+1,i2_fround$2005+1
 16366   002F5A  C011  F028         	movff	?i2___ftmul+2,i2_fround$2005+2
 16367                           
 16368                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 16369   002F5E  C026  F00F         	movff	i2_fround$2005,i2___ftmul@f1
 16370   002F62  C027  F010         	movff	i2_fround$2005+1,i2___ftmul@f1+1
 16371   002F66  C028  F011         	movff	i2_fround$2005+2,i2___ftmul@f1+2
 16372   002F6A  0E00               	movlw	0
 16373   002F6C  6E12               	movwf	i2___ftmul@f2^0,c
 16374   002F6E  0E00               	movlw	0
 16375   002F70  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 16376   002F72  0E3F               	movlw	63
 16377   002F74  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 16378   002F76  ECB8  F01C         	call	i2___ftmul	;wreg free
 16379   002F7A  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 16380   002F7E  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 16381   002F82  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 16382   002F86  0012               	return	
 16383   002F88                     i2l5672:
 16384                           
 16385                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 16386   002F88  5029               	movf	i2fround@prec^0,w,c
 16387   002F8A  0D03               	mullw	3
 16388   002F8C  0EE8               	movlw	low __npowers_
 16389   002F8E  24F3               	addwf	243,w,c
 16390   002F90  6EF6               	movwf	tblptrl,c
 16391   002F92  0EFE               	movlw	high __npowers_
 16392   002F94  20F4               	addwfc	244,w,c
 16393   002F96  6EF7               	movwf	tblptrh,c
 16394   002F98                     	if	0	;There are less than 3 active tblptr bytes
 16395   002F98                     	endif
 16396   002F98  0009               	tblrd		*+
 16397   002F9A  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 16398   002F9E  0009               	tblrd		*+
 16399   002FA0  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 16400   002FA4  000A               	tblrd		*-
 16401   002FA6  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 16402   002FAA  0E00               	movlw	0
 16403   002FAC  6E12               	movwf	i2___ftmul@f2^0,c
 16404   002FAE  0E00               	movlw	0
 16405   002FB0  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 16406   002FB2  0E3F               	movlw	63
 16407   002FB4  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 16408   002FB6  ECB8  F01C         	call	i2___ftmul	;wreg free
 16409   002FBA  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 16410   002FBE  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 16411   002FC2  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 16412   002FC6  0012               	return		;funcret
 16413   002FC8                     __end_ofi2_fround:
 16414                           	callstack 0
 16415                           
 16416 ;; *************** function i2___lbmod *****************
 16417 ;; Defined at:
 16418 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
 16419 ;; Parameters:    Size  Location     Type
 16420 ;;  dividend        1    wreg     unsigned char 
 16421 ;;  divisor         1    0[COMRAM] unsigned char 
 16422 ;; Auto vars:     Size  Location     Type
 16423 ;;  dividend        1    1[COMRAM] unsigned char 
 16424 ;;  rem             1    3[COMRAM] unsigned char 
 16425 ;;  counter         1    2[COMRAM] unsigned char 
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  1    wreg      unsigned char 
 16428 ;; Registers used:
 16429 ;;		wreg, status,2, status,0
 16430 ;; Tracked objects:
 16431 ;;		On entry : 0/0
 16432 ;;		On exit  : 0/0
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16436 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16439 ;;Total ram usage:        4 bytes
 16440 ;; Hardware stack levels used: 1
 16441 ;; This function calls:
 16442 ;;		Nothing
 16443 ;; This function is called by:
 16444 ;;		i2_fround
 16445 ;; This function uses a non-reentrant model
 16446 ;;
 16447                           
 16448                           	psect	text64
 16449   0050A2                     __ptext64:
 16450                           	callstack 0
 16451   0050A2                     i2___lbmod:
 16452                           	callstack 16
 16453                           
 16454                           ;incstack = 0
 16455                           ;i2___lbmod@dividend stored from wreg
 16456   0050A2  6E02               	movwf	i2___lbmod@dividend^0,c
 16457   0050A4  0E08               	movlw	8
 16458   0050A6  6E03               	movwf	i2___lbmod@counter^0,c
 16459   0050A8  0E00               	movlw	0
 16460   0050AA  6E04               	movwf	i2___lbmod@rem^0,c
 16461   0050AC                     i2l5368:
 16462   0050AC  90D8               	bcf	status,0,c
 16463   0050AE  3402               	rlcf	i2___lbmod@dividend^0,w,c
 16464   0050B0  3404               	rlcf	i2___lbmod@rem^0,w,c
 16465   0050B2  6E04               	movwf	i2___lbmod@rem^0,c
 16466   0050B4  90D8               	bcf	status,0,c
 16467   0050B6  3602               	rlcf	i2___lbmod@dividend^0,f,c
 16468   0050B8  5001               	movf	i2___lbmod@divisor^0,w,c
 16469   0050BA  5C04               	subwf	i2___lbmod@rem^0,w,c
 16470   0050BC  A0D8               	btfss	status,0,c
 16471   0050BE  D002               	goto	i2l5376
 16472   0050C0  5001               	movf	i2___lbmod@divisor^0,w,c
 16473   0050C2  5E04               	subwf	i2___lbmod@rem^0,f,c
 16474   0050C4                     i2l5376:
 16475   0050C4  2E03               	decfsz	i2___lbmod@counter^0,f,c
 16476   0050C6  D7F2               	goto	i2l5368
 16477   0050C8  5004               	movf	i2___lbmod@rem^0,w,c
 16478   0050CA  0012               	return		;funcret
 16479   0050CC                     __end_ofi2___lbmod:
 16480                           	callstack 0
 16481                           
 16482 ;; *************** function i2___lbdiv *****************
 16483 ;; Defined at:
 16484 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;  dividend        1    wreg     unsigned char 
 16487 ;;  divisor         1    4[COMRAM] unsigned char 
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  dividend        1    5[COMRAM] unsigned char 
 16490 ;;  quotient        1    7[COMRAM] unsigned char 
 16491 ;;  counter         1    6[COMRAM] unsigned char 
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      unsigned char 
 16494 ;; Registers used:
 16495 ;;		wreg, status,2, status,0
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16505 ;;Total ram usage:        4 bytes
 16506 ;; Hardware stack levels used: 1
 16507 ;; This function calls:
 16508 ;;		Nothing
 16509 ;; This function is called by:
 16510 ;;		i2_fround
 16511 ;; This function uses a non-reentrant model
 16512 ;;
 16513                           
 16514                           	psect	text65
 16515   004F3C                     __ptext65:
 16516                           	callstack 0
 16517   004F3C                     i2___lbdiv:
 16518                           	callstack 16
 16519                           
 16520                           ;incstack = 0
 16521                           ;i2___lbdiv@dividend stored from wreg
 16522   004F3C  6E06               	movwf	i2___lbdiv@dividend^0,c
 16523   004F3E  0E00               	movlw	0
 16524   004F40  6E08               	movwf	i2___lbdiv@quotient^0,c
 16525   004F42  5005               	movf	i2___lbdiv@divisor^0,w,c
 16526   004F44  B4D8               	btfsc	status,2,c
 16527   004F46  D015               	goto	i2l5362
 16528   004F48  0E01               	movlw	1
 16529   004F4A  6E07               	movwf	i2___lbdiv@counter^0,c
 16530   004F4C  D003               	goto	i2l5350
 16531   004F4E                     i2l5346:
 16532   004F4E  90D8               	bcf	status,0,c
 16533   004F50  3605               	rlcf	i2___lbdiv@divisor^0,f,c
 16534   004F52  2A07               	incf	i2___lbdiv@counter^0,f,c
 16535   004F54                     i2l5350:
 16536   004F54  AE05               	btfss	i2___lbdiv@divisor^0,7,c
 16537   004F56  D7FB               	goto	i2l5346
 16538   004F58                     i2u585_40:
 16539   004F58  90D8               	bcf	status,0,c
 16540   004F5A  3608               	rlcf	i2___lbdiv@quotient^0,f,c
 16541   004F5C  5005               	movf	i2___lbdiv@divisor^0,w,c
 16542   004F5E  5C06               	subwf	i2___lbdiv@dividend^0,w,c
 16543   004F60  A0D8               	btfss	status,0,c
 16544   004F62  D003               	goto	i2l5358
 16545   004F64  5005               	movf	i2___lbdiv@divisor^0,w,c
 16546   004F66  5E06               	subwf	i2___lbdiv@dividend^0,f,c
 16547   004F68  8008               	bsf	i2___lbdiv@quotient^0,0,c
 16548   004F6A                     i2l5358:
 16549   004F6A  90D8               	bcf	status,0,c
 16550   004F6C  3205               	rrcf	i2___lbdiv@divisor^0,f,c
 16551   004F6E  2E07               	decfsz	i2___lbdiv@counter^0,f,c
 16552   004F70  D7F3               	goto	i2u585_40
 16553   004F72                     i2l5362:
 16554   004F72  5008               	movf	i2___lbdiv@quotient^0,w,c
 16555   004F74  0012               	return		;funcret
 16556   004F76                     __end_ofi2___lbdiv:
 16557                           	callstack 0
 16558                           
 16559 ;; *************** function i2___ftmul *****************
 16560 ;; Defined at:
 16561 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
 16562 ;; Parameters:    Size  Location     Type
 16563 ;;  f1              3   14[COMRAM] float 
 16564 ;;  f2              3   17[COMRAM] float 
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;  f3_as_produc    3   24[COMRAM] unsigned um
 16567 ;;  sign            1   28[COMRAM] unsigned char 
 16568 ;;  cntr            1   27[COMRAM] unsigned char 
 16569 ;;  exp             1   23[COMRAM] unsigned char 
 16570 ;; Return value:  Size  Location     Type
 16571 ;;                  3   14[COMRAM] float 
 16572 ;; Registers used:
 16573 ;;		wreg, status,2, status,0, cstack
 16574 ;; Tracked objects:
 16575 ;;		On entry : 0/0
 16576 ;;		On exit  : 0/0
 16577 ;;		Unchanged: 0/0
 16578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16579 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16582 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16583 ;;Total ram usage:       15 bytes
 16584 ;; Hardware stack levels used: 1
 16585 ;; Hardware stack levels required when called: 1
 16586 ;; This function calls:
 16587 ;;		i2___ftpack
 16588 ;; This function is called by:
 16589 ;;		i2_fround
 16590 ;;		i2_scale
 16591 ;;		i2_sprintf
 16592 ;; This function uses a non-reentrant model
 16593 ;;
 16594                           
 16595                           	psect	text66
 16596   003970                     __ptext66:
 16597                           	callstack 0
 16598   003970                     i2___ftmul:
 16599                           	callstack 15
 16600                           
 16601                           ;incstack = 0
 16602   003970  C011  F015         	movff	i2___ftmul@f1+2,??i2___ftmul
 16603   003974  6A16               	clrf	(??i2___ftmul+1)^0,c
 16604   003976  6A17               	clrf	(??i2___ftmul+2)^0,c
 16605   003978  3410               	rlcf	(i2___ftmul@f1+1)^0,w,c
 16606   00397A  3615               	rlcf	??i2___ftmul^0,f,c
 16607   00397C  E301               	bnc	u578_41
 16608   00397E  8016               	bsf	(??i2___ftmul+1)^0,0,c
 16609   003980                     u578_41:
 16610   003980  5015               	movf	??i2___ftmul^0,w,c
 16611   003982  6E18               	movwf	i2___ftmul@exp^0,c
 16612   003984  5018               	movf	i2___ftmul@exp^0,w,c
 16613   003986  A4D8               	btfss	status,2,c
 16614   003988  D007               	goto	i2l5298
 16615   00398A  0E00               	movlw	0
 16616   00398C  6E0F               	movwf	?i2___ftmul^0,c
 16617   00398E  0E00               	movlw	0
 16618   003990  6E10               	movwf	(?i2___ftmul+1)^0,c
 16619   003992  0E00               	movlw	0
 16620   003994  6E11               	movwf	(?i2___ftmul+2)^0,c
 16621   003996  0012               	return	
 16622   003998                     i2l5298:
 16623   003998  C014  F015         	movff	i2___ftmul@f2+2,??i2___ftmul
 16624   00399C  6A16               	clrf	(??i2___ftmul+1)^0,c
 16625   00399E  6A17               	clrf	(??i2___ftmul+2)^0,c
 16626   0039A0  3413               	rlcf	(i2___ftmul@f2+1)^0,w,c
 16627   0039A2  3615               	rlcf	??i2___ftmul^0,f,c
 16628   0039A4  E301               	bnc	u580_41
 16629   0039A6  8016               	bsf	(??i2___ftmul+1)^0,0,c
 16630   0039A8                     u580_41:
 16631   0039A8  5015               	movf	??i2___ftmul^0,w,c
 16632   0039AA  6E1D               	movwf	i2___ftmul@sign^0,c
 16633   0039AC  501D               	movf	i2___ftmul@sign^0,w,c
 16634   0039AE  A4D8               	btfss	status,2,c
 16635   0039B0  D007               	goto	i2l5304
 16636   0039B2  0E00               	movlw	0
 16637   0039B4  6E0F               	movwf	?i2___ftmul^0,c
 16638   0039B6  0E00               	movlw	0
 16639   0039B8  6E10               	movwf	(?i2___ftmul+1)^0,c
 16640   0039BA  0E00               	movlw	0
 16641   0039BC  6E11               	movwf	(?i2___ftmul+2)^0,c
 16642   0039BE  0012               	return	
 16643   0039C0                     i2l5304:
 16644   0039C0  501D               	movf	i2___ftmul@sign^0,w,c
 16645   0039C2  0F7B               	addlw	123
 16646   0039C4  2618               	addwf	i2___ftmul@exp^0,f,c
 16647   0039C6  C011  F01D         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 16648   0039CA  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 16649   0039CC  1A1D               	xorwf	i2___ftmul@sign^0,f,c
 16650   0039CE  0E80               	movlw	128
 16651   0039D0  161D               	andwf	i2___ftmul@sign^0,f,c
 16652   0039D2  8E10               	bsf	(i2___ftmul@f1+1)^0,7,c
 16653   0039D4  8E13               	bsf	(i2___ftmul@f2+1)^0,7,c
 16654   0039D6  0EFF               	movlw	255
 16655   0039D8  1612               	andwf	i2___ftmul@f2^0,f,c
 16656   0039DA  0EFF               	movlw	255
 16657   0039DC  1613               	andwf	(i2___ftmul@f2+1)^0,f,c
 16658   0039DE  0E00               	movlw	0
 16659   0039E0  1614               	andwf	(i2___ftmul@f2+2)^0,f,c
 16660   0039E2  0E00               	movlw	0
 16661   0039E4  6E19               	movwf	i2___ftmul@f3_as_product^0,c
 16662   0039E6  0E00               	movlw	0
 16663   0039E8  6E1A               	movwf	(i2___ftmul@f3_as_product+1)^0,c
 16664   0039EA  0E00               	movlw	0
 16665   0039EC  6E1B               	movwf	(i2___ftmul@f3_as_product+2)^0,c
 16666   0039EE  0E07               	movlw	7
 16667   0039F0  6E1C               	movwf	i2___ftmul@cntr^0,c
 16668   0039F2                     i2l5318:
 16669   0039F2  A00F               	btfss	i2___ftmul@f1^0,0,c
 16670   0039F4  D006               	goto	i2l5322
 16671   0039F6  5012               	movf	i2___ftmul@f2^0,w,c
 16672   0039F8  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 16673   0039FA  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 16674   0039FC  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 16675   0039FE  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 16676   003A00  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 16677   003A02                     i2l5322:
 16678   003A02  90D8               	bcf	status,0,c
 16679   003A04  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 16680   003A06  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 16681   003A08  320F               	rrcf	i2___ftmul@f1^0,f,c
 16682   003A0A  90D8               	bcf	status,0,c
 16683   003A0C  3612               	rlcf	i2___ftmul@f2^0,f,c
 16684   003A0E  3613               	rlcf	(i2___ftmul@f2+1)^0,f,c
 16685   003A10  3614               	rlcf	(i2___ftmul@f2+2)^0,f,c
 16686   003A12  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 16687   003A14  D7EE               	goto	i2l5318
 16688   003A16  0E09               	movlw	9
 16689   003A18  6E1C               	movwf	i2___ftmul@cntr^0,c
 16690   003A1A                     i2l5328:
 16691   003A1A  A00F               	btfss	i2___ftmul@f1^0,0,c
 16692   003A1C  D006               	goto	i2l5332
 16693   003A1E  5012               	movf	i2___ftmul@f2^0,w,c
 16694   003A20  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 16695   003A22  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 16696   003A24  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 16697   003A26  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 16698   003A28  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 16699   003A2A                     i2l5332:
 16700   003A2A  90D8               	bcf	status,0,c
 16701   003A2C  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 16702   003A2E  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 16703   003A30  320F               	rrcf	i2___ftmul@f1^0,f,c
 16704   003A32  90D8               	bcf	status,0,c
 16705   003A34  321B               	rrcf	(i2___ftmul@f3_as_product+2)^0,f,c
 16706   003A36  321A               	rrcf	(i2___ftmul@f3_as_product+1)^0,f,c
 16707   003A38  3219               	rrcf	i2___ftmul@f3_as_product^0,f,c
 16708   003A3A  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 16709   003A3C  D7EE               	goto	i2l5328
 16710   003A3E  C019  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 16711   003A42  C01A  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 16712   003A46  C01B  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 16713   003A4A  C018  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 16714   003A4E  C01D  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 16715   003A52  ECA3  F020         	call	i2___ftpack	;wreg free
 16716   003A56  C001  F00F         	movff	?i2___ftpack,?i2___ftmul
 16717   003A5A  C002  F010         	movff	?i2___ftpack+1,?i2___ftmul+1
 16718   003A5E  C003  F011         	movff	?i2___ftpack+2,?i2___ftmul+2
 16719   003A62  0012               	return		;funcret
 16720   003A64                     __end_ofi2___ftmul:
 16721                           	callstack 0
 16722                           
 16723 ;; *************** function i2__tdiv_to_l_ *****************
 16724 ;; Defined at:
 16725 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
 16726 ;; Parameters:    Size  Location     Type
 16727 ;;  f1              3    0[COMRAM] float 
 16728 ;;  f2              3    3[COMRAM] float 
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;  quot            4    9[COMRAM] unsigned long 
 16731 ;;  exp1            1   14[COMRAM] unsigned char 
 16732 ;;  cntr            1   13[COMRAM] unsigned char 
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  4    0[COMRAM] unsigned long 
 16735 ;; Registers used:
 16736 ;;		wreg, status,2, status,0
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16742 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16744 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16745 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16746 ;;Total ram usage:       15 bytes
 16747 ;; Hardware stack levels used: 1
 16748 ;; This function calls:
 16749 ;;		Nothing
 16750 ;; This function is called by:
 16751 ;;		i2_sprintf
 16752 ;; This function uses a non-reentrant model
 16753 ;;
 16754                           
 16755                           	psect	text67
 16756   00377C                     __ptext67:
 16757                           	callstack 0
 16758   00377C                     i2__tdiv_to_l_:
 16759                           	callstack 17
 16760                           
 16761                           ;incstack = 0
 16762   00377C  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16763   003780  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 16764   003782  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 16765   003784  3402               	rlcf	(i2__tdiv_to_l_@f1+1)^0,w,c
 16766   003786  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 16767   003788  E301               	bnc	u648_41
 16768   00378A  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 16769   00378C                     u648_41:
 16770   00378C  5007               	movf	??i2__tdiv_to_l_^0,w,c
 16771   00378E  6E0F               	movwf	i2__tdiv_to_l_@exp1^0,c
 16772   003790  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 16773   003792  A4D8               	btfss	status,2,c
 16774   003794  D009               	goto	i2l5808
 16775   003796                     i2u649_40:
 16776   003796  0E00               	movlw	0
 16777   003798  6E01               	movwf	?i2__tdiv_to_l_^0,c
 16778   00379A  0E00               	movlw	0
 16779   00379C  6E02               	movwf	(?i2__tdiv_to_l_+1)^0,c
 16780   00379E  0E00               	movlw	0
 16781   0037A0  6E03               	movwf	(?i2__tdiv_to_l_+2)^0,c
 16782   0037A2  0E00               	movlw	0
 16783   0037A4  6E04               	movwf	(?i2__tdiv_to_l_+3)^0,c
 16784   0037A6  0012               	return	
 16785   0037A8                     i2l5808:
 16786   0037A8  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16787   0037AC  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 16788   0037AE  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 16789   0037B0  3405               	rlcf	(i2__tdiv_to_l_@f2+1)^0,w,c
 16790   0037B2  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 16791   0037B4  E301               	bnc	u650_41
 16792   0037B6  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 16793   0037B8                     u650_41:
 16794   0037B8  5007               	movf	??i2__tdiv_to_l_^0,w,c
 16795   0037BA  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 16796   0037BC  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 16797   0037BE  B4D8               	btfsc	status,2,c
 16798   0037C0  D7EA               	goto	i2u649_40
 16799   0037C2  8E02               	bsf	(i2__tdiv_to_l_@f1+1)^0,7,c
 16800   0037C4  0EFF               	movlw	255
 16801   0037C6  1601               	andwf	i2__tdiv_to_l_@f1^0,f,c
 16802   0037C8  0EFF               	movlw	255
 16803   0037CA  1602               	andwf	(i2__tdiv_to_l_@f1+1)^0,f,c
 16804   0037CC  0E00               	movlw	0
 16805   0037CE  1603               	andwf	(i2__tdiv_to_l_@f1+2)^0,f,c
 16806   0037D0  8E05               	bsf	(i2__tdiv_to_l_@f2+1)^0,7,c
 16807   0037D2  0EFF               	movlw	255
 16808   0037D4  1604               	andwf	i2__tdiv_to_l_@f2^0,f,c
 16809   0037D6  0EFF               	movlw	255
 16810   0037D8  1605               	andwf	(i2__tdiv_to_l_@f2+1)^0,f,c
 16811   0037DA  0E00               	movlw	0
 16812   0037DC  1606               	andwf	(i2__tdiv_to_l_@f2+2)^0,f,c
 16813   0037DE  0E00               	movlw	0
 16814   0037E0  6E0A               	movwf	i2__tdiv_to_l_@quot^0,c
 16815   0037E2  0E00               	movlw	0
 16816   0037E4  6E0B               	movwf	(i2__tdiv_to_l_@quot+1)^0,c
 16817   0037E6  0E00               	movlw	0
 16818   0037E8  6E0C               	movwf	(i2__tdiv_to_l_@quot+2)^0,c
 16819   0037EA  0E00               	movlw	0
 16820   0037EC  6E0D               	movwf	(i2__tdiv_to_l_@quot+3)^0,c
 16821   0037EE  0E7F               	movlw	127
 16822   0037F0  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 16823   0037F2  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 16824   0037F4  0F98               	addlw	152
 16825   0037F6  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 16826   0037F8  0E18               	movlw	24
 16827   0037FA  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 16828   0037FC                     i2l1009:
 16829   0037FC  90D8               	bcf	status,0,c
 16830   0037FE  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 16831   003800  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 16832   003802  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 16833   003804  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 16834   003806  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 16835   003808  5C01               	subwf	i2__tdiv_to_l_@f1^0,w,c
 16836   00380A  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 16837   00380C  5802               	subwfb	(i2__tdiv_to_l_@f1+1)^0,w,c
 16838   00380E  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 16839   003810  5803               	subwfb	(i2__tdiv_to_l_@f1+2)^0,w,c
 16840   003812  A0D8               	btfss	status,0,c
 16841   003814  D007               	goto	i2l1010
 16842   003816  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 16843   003818  5E01               	subwf	i2__tdiv_to_l_@f1^0,f,c
 16844   00381A  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 16845   00381C  5A02               	subwfb	(i2__tdiv_to_l_@f1+1)^0,f,c
 16846   00381E  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 16847   003820  5A03               	subwfb	(i2__tdiv_to_l_@f1+2)^0,f,c
 16848   003822  800A               	bsf	i2__tdiv_to_l_@quot^0,0,c
 16849   003824                     i2l1010:
 16850   003824  90D8               	bcf	status,0,c
 16851   003826  3601               	rlcf	i2__tdiv_to_l_@f1^0,f,c
 16852   003828  3602               	rlcf	(i2__tdiv_to_l_@f1+1)^0,f,c
 16853   00382A  3603               	rlcf	(i2__tdiv_to_l_@f1+2)^0,f,c
 16854   00382C  2E0E               	decfsz	i2__tdiv_to_l_@cntr^0,f,c
 16855   00382E  D7E6               	goto	i2l1009
 16856   003830  AE0F               	btfss	i2__tdiv_to_l_@exp1^0,7,c
 16857   003832  D00D               	goto	i2l5848
 16858   003834  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 16859   003836  0A80               	xorlw	128
 16860   003838  0F97               	addlw	151
 16861   00383A  A0D8               	btfss	status,0,c
 16862   00383C  D7AC               	goto	i2u649_40
 16863   00383E                     i2l5844:
 16864   00383E  90D8               	bcf	status,0,c
 16865   003840  320D               	rrcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 16866   003842  320C               	rrcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 16867   003844  320B               	rrcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 16868   003846  320A               	rrcf	i2__tdiv_to_l_@quot^0,f,c
 16869   003848  3E0F               	incfsz	i2__tdiv_to_l_@exp1^0,f,c
 16870   00384A  D7F9               	goto	i2l5844
 16871   00384C  D00D               	goto	i2u656_40
 16872   00384E                     i2l5848:
 16873   00384E  0E17               	movlw	23
 16874   003850  640F               	cpfsgt	i2__tdiv_to_l_@exp1^0,c
 16875   003852  D007               	goto	i2l5856
 16876   003854  D7A0               	goto	i2u649_40
 16877   003856                     i2l5854:
 16878   003856  90D8               	bcf	status,0,c
 16879   003858  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 16880   00385A  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 16881   00385C  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 16882   00385E  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 16883   003860  060F               	decf	i2__tdiv_to_l_@exp1^0,f,c
 16884   003862                     i2l5856:
 16885   003862  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 16886   003864  A4D8               	btfss	status,2,c
 16887   003866  D7F7               	goto	i2l5854
 16888   003868                     i2u656_40:
 16889   003868  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16890   00386C  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16891   003870  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16892   003874  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16893   003878  0012               	return		;funcret
 16894   00387A                     __end_ofi2__tdiv_to_l_:
 16895                           	callstack 0
 16896                           
 16897 ;; *************** function i2__div_to_l_ *****************
 16898 ;; Defined at:
 16899 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
 16900 ;; Parameters:    Size  Location     Type
 16901 ;;  f1              3    0[COMRAM] unsigned long 
 16902 ;;  f2              3    3[COMRAM] unsigned long 
 16903 ;; Auto vars:     Size  Location     Type
 16904 ;;  quot            4    6[COMRAM] unsigned long 
 16905 ;;  exp1            1   11[COMRAM] unsigned char 
 16906 ;;  cntr            1   10[COMRAM] unsigned char 
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  4    0[COMRAM] unsigned long 
 16909 ;; Registers used:
 16910 ;;		wreg, status,2, status,0
 16911 ;; Tracked objects:
 16912 ;;		On entry : 0/0
 16913 ;;		On exit  : 0/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16916 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16917 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16919 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16920 ;;Total ram usage:       12 bytes
 16921 ;; Hardware stack levels used: 1
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		i2_sprintf
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           	psect	text68
 16930   003A64                     __ptext68:
 16931                           	callstack 0
 16932   003A64                     i2__div_to_l_:
 16933                           	callstack 17
 16934                           
 16935                           ;incstack = 0
 16936   003A64  3403               	rlcf	(i2__div_to_l_@f1+2)^0,w,c
 16937   003A66  3404               	rlcf	(i2__div_to_l_@f1+3)^0,w,c
 16938   003A68  6E0C               	movwf	i2__div_to_l_@exp1^0,c
 16939   003A6A  500C               	movf	i2__div_to_l_@exp1^0,w,c
 16940   003A6C  A4D8               	btfss	status,2,c
 16941   003A6E  D009               	goto	i2l5748
 16942   003A70                     i2u641_40:
 16943   003A70  0E00               	movlw	0
 16944   003A72  6E01               	movwf	?i2__div_to_l_^0,c
 16945   003A74  0E00               	movlw	0
 16946   003A76  6E02               	movwf	(?i2__div_to_l_+1)^0,c
 16947   003A78  0E00               	movlw	0
 16948   003A7A  6E03               	movwf	(?i2__div_to_l_+2)^0,c
 16949   003A7C  0E00               	movlw	0
 16950   003A7E  6E04               	movwf	(?i2__div_to_l_+3)^0,c
 16951   003A80  0012               	return	
 16952   003A82                     i2l5748:
 16953   003A82  3406               	rlcf	(i2__div_to_l_@f2+2)^0,w,c
 16954   003A84  3407               	rlcf	(i2__div_to_l_@f2+3)^0,w,c
 16955   003A86  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 16956   003A88  500B               	movf	i2__div_to_l_@cntr^0,w,c
 16957   003A8A  B4D8               	btfsc	status,2,c
 16958   003A8C  D7F1               	goto	i2u641_40
 16959   003A8E  8E03               	bsf	(i2__div_to_l_@f1+2)^0,7,c
 16960   003A90  0EFF               	movlw	255
 16961   003A92  1601               	andwf	i2__div_to_l_@f1^0,f,c
 16962   003A94  0EFF               	movlw	255
 16963   003A96  1602               	andwf	(i2__div_to_l_@f1+1)^0,f,c
 16964   003A98  0EFF               	movlw	255
 16965   003A9A  1603               	andwf	(i2__div_to_l_@f1+2)^0,f,c
 16966   003A9C  0E00               	movlw	0
 16967   003A9E  1604               	andwf	(i2__div_to_l_@f1+3)^0,f,c
 16968   003AA0  8E06               	bsf	(i2__div_to_l_@f2+2)^0,7,c
 16969   003AA2  0EFF               	movlw	255
 16970   003AA4  1604               	andwf	i2__div_to_l_@f2^0,f,c
 16971   003AA6  0EFF               	movlw	255
 16972   003AA8  1605               	andwf	(i2__div_to_l_@f2+1)^0,f,c
 16973   003AAA  0EFF               	movlw	255
 16974   003AAC  1606               	andwf	(i2__div_to_l_@f2+2)^0,f,c
 16975   003AAE  0E00               	movlw	0
 16976   003AB0  1607               	andwf	(i2__div_to_l_@f2+3)^0,f,c
 16977   003AB2  0E00               	movlw	0
 16978   003AB4  6E07               	movwf	i2__div_to_l_@quot^0,c
 16979   003AB6  0E00               	movlw	0
 16980   003AB8  6E08               	movwf	(i2__div_to_l_@quot+1)^0,c
 16981   003ABA  0E00               	movlw	0
 16982   003ABC  6E09               	movwf	(i2__div_to_l_@quot+2)^0,c
 16983   003ABE  0E00               	movlw	0
 16984   003AC0  6E0A               	movwf	(i2__div_to_l_@quot+3)^0,c
 16985   003AC2  0E7F               	movlw	127
 16986   003AC4  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 16987   003AC6  500B               	movf	i2__div_to_l_@cntr^0,w,c
 16988   003AC8  0FA0               	addlw	160
 16989   003ACA  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 16990   003ACC  0E20               	movlw	32
 16991   003ACE  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 16992   003AD0                     i2l5768:
 16993   003AD0  90D8               	bcf	status,0,c
 16994   003AD2  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 16995   003AD4  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 16996   003AD6  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 16997   003AD8  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 16998   003ADA  5004               	movf	i2__div_to_l_@f2^0,w,c
 16999   003ADC  5C01               	subwf	i2__div_to_l_@f1^0,w,c
 17000   003ADE  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 17001   003AE0  5802               	subwfb	(i2__div_to_l_@f1+1)^0,w,c
 17002   003AE2  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 17003   003AE4  5803               	subwfb	(i2__div_to_l_@f1+2)^0,w,c
 17004   003AE6  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 17005   003AE8  5804               	subwfb	(i2__div_to_l_@f1+3)^0,w,c
 17006   003AEA  A0D8               	btfss	status,0,c
 17007   003AEC  D009               	goto	i2l5776
 17008   003AEE  5004               	movf	i2__div_to_l_@f2^0,w,c
 17009   003AF0  5E01               	subwf	i2__div_to_l_@f1^0,f,c
 17010   003AF2  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 17011   003AF4  5A02               	subwfb	(i2__div_to_l_@f1+1)^0,f,c
 17012   003AF6  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 17013   003AF8  5A03               	subwfb	(i2__div_to_l_@f1+2)^0,f,c
 17014   003AFA  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 17015   003AFC  5A04               	subwfb	(i2__div_to_l_@f1+3)^0,f,c
 17016   003AFE  8007               	bsf	i2__div_to_l_@quot^0,0,c
 17017   003B00                     i2l5776:
 17018   003B00  90D8               	bcf	status,0,c
 17019   003B02  3601               	rlcf	i2__div_to_l_@f1^0,f,c
 17020   003B04  3602               	rlcf	(i2__div_to_l_@f1+1)^0,f,c
 17021   003B06  3603               	rlcf	(i2__div_to_l_@f1+2)^0,f,c
 17022   003B08  3604               	rlcf	(i2__div_to_l_@f1+3)^0,f,c
 17023   003B0A  2E0B               	decfsz	i2__div_to_l_@cntr^0,f,c
 17024   003B0C  D7E1               	goto	i2l5768
 17025   003B0E  AE0C               	btfss	i2__div_to_l_@exp1^0,7,c
 17026   003B10  D00D               	goto	i2l5792
 17027   003B12  500C               	movf	i2__div_to_l_@exp1^0,w,c
 17028   003B14  0A80               	xorlw	128
 17029   003B16  0F9F               	addlw	159
 17030   003B18  A0D8               	btfss	status,0,c
 17031   003B1A  D7AA               	goto	i2u641_40
 17032   003B1C                     i2l5788:
 17033   003B1C  90D8               	bcf	status,0,c
 17034   003B1E  320A               	rrcf	(i2__div_to_l_@quot+3)^0,f,c
 17035   003B20  3209               	rrcf	(i2__div_to_l_@quot+2)^0,f,c
 17036   003B22  3208               	rrcf	(i2__div_to_l_@quot+1)^0,f,c
 17037   003B24  3207               	rrcf	i2__div_to_l_@quot^0,f,c
 17038   003B26  3E0C               	incfsz	i2__div_to_l_@exp1^0,f,c
 17039   003B28  D7F9               	goto	i2l5788
 17040   003B2A  D00D               	goto	i2u647_40
 17041   003B2C                     i2l5792:
 17042   003B2C  0E1F               	movlw	31
 17043   003B2E  640C               	cpfsgt	i2__div_to_l_@exp1^0,c
 17044   003B30  D007               	goto	i2l5800
 17045   003B32  D79E               	goto	i2u641_40
 17046   003B34                     i2l5798:
 17047   003B34  90D8               	bcf	status,0,c
 17048   003B36  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 17049   003B38  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 17050   003B3A  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 17051   003B3C  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 17052   003B3E  060C               	decf	i2__div_to_l_@exp1^0,f,c
 17053   003B40                     i2l5800:
 17054   003B40  500C               	movf	i2__div_to_l_@exp1^0,w,c
 17055   003B42  A4D8               	btfss	status,2,c
 17056   003B44  D7F7               	goto	i2l5798
 17057   003B46                     i2u647_40:
 17058   003B46  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 17059   003B4A  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 17060   003B4E  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 17061   003B52  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 17062   003B56  0012               	return		;funcret
 17063   003B58                     __end_ofi2__div_to_l_:
 17064                           	callstack 0
 17065                           
 17066 ;; *************** function i2___wmul *****************
 17067 ;; Defined at:
 17068 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  multiplier      2    0[COMRAM] unsigned int 
 17071 ;;  multiplicand    2    2[COMRAM] unsigned int 
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;  product         2    4[COMRAM] unsigned int 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  2    0[COMRAM] unsigned int 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0, prodl, prodh
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/1
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;Total ram usage:        6 bytes
 17088 ;; Hardware stack levels used: 1
 17089 ;; This function calls:
 17090 ;;		Nothing
 17091 ;; This function is called by:
 17092 ;;		i2_update_lcd_Line4
 17093 ;;		i2_sprintf
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text69
 17098   0051B4                     __ptext69:
 17099                           	callstack 0
 17100   0051B4                     i2___wmul:
 17101                           	callstack 17
 17102                           
 17103                           ;incstack = 0
 17104   0051B4  5001               	movf	i2___wmul@multiplier^0,w,c
 17105   0051B6  0203               	mulwf	i2___wmul@multiplicand^0,c
 17106   0051B8  CFF3 F005          	movff	prodl,i2___wmul@product
 17107   0051BC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 17108   0051C0  5001               	movf	i2___wmul@multiplier^0,w,c
 17109   0051C2  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 17110   0051C4  50F3               	movf	243,w,c
 17111   0051C6  2606               	addwf	(i2___wmul@product+1)^0,f,c
 17112   0051C8  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 17113   0051CA  0203               	mulwf	i2___wmul@multiplicand^0,c
 17114   0051CC  50F3               	movf	243,w,c
 17115   0051CE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 17116   0051D0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 17117   0051D4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 17118   0051D8  0012               	return		;funcret
 17119   0051DA                     __end_ofi2___wmul:
 17120                           	callstack 0
 17121                           
 17122 ;; *************** function i2___lltoft *****************
 17123 ;; Defined at:
 17124 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;  c               4    8[COMRAM] unsigned long 
 17127 ;; Auto vars:     Size  Location     Type
 17128 ;;  exp             1   16[COMRAM] unsigned char 
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  3    8[COMRAM] float 
 17131 ;; Registers used:
 17132 ;;		wreg, status,2, status,0, cstack
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17141 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17142 ;;Total ram usage:        9 bytes
 17143 ;; Hardware stack levels used: 1
 17144 ;; Hardware stack levels required when called: 1
 17145 ;; This function calls:
 17146 ;;		i2___ftpack
 17147 ;; This function is called by:
 17148 ;;		i2_sprintf
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text70
 17153   004B86                     __ptext70:
 17154                           	callstack 0
 17155   004B86                     i2___lltoft:
 17156                           	callstack 16
 17157                           
 17158                           ;incstack = 0
 17159   004B86  0E8E               	movlw	142
 17160   004B88  6E11               	movwf	i2___lltoft@exp^0,c
 17161   004B8A  D006               	goto	i2l5954
 17162   004B8C                     i2l5952:
 17163   004B8C  90D8               	bcf	status,0,c
 17164   004B8E  320C               	rrcf	(i2___lltoft@c+3)^0,f,c
 17165   004B90  320B               	rrcf	(i2___lltoft@c+2)^0,f,c
 17166   004B92  320A               	rrcf	(i2___lltoft@c+1)^0,f,c
 17167   004B94  3209               	rrcf	i2___lltoft@c^0,f,c
 17168   004B96  2A11               	incf	i2___lltoft@exp^0,f,c
 17169   004B98                     i2l5954:
 17170   004B98  0E00               	movlw	0
 17171   004B9A  1409               	andwf	i2___lltoft@c^0,w,c
 17172   004B9C  6E0D               	movwf	??i2___lltoft^0,c
 17173   004B9E  0E00               	movlw	0
 17174   004BA0  140A               	andwf	(i2___lltoft@c+1)^0,w,c
 17175   004BA2  6E0E               	movwf	(??i2___lltoft+1)^0,c
 17176   004BA4  0E00               	movlw	0
 17177   004BA6  140B               	andwf	(i2___lltoft@c+2)^0,w,c
 17178   004BA8  6E0F               	movwf	(??i2___lltoft+2)^0,c
 17179   004BAA  0EFF               	movlw	255
 17180   004BAC  140C               	andwf	(i2___lltoft@c+3)^0,w,c
 17181   004BAE  6E10               	movwf	(??i2___lltoft+3)^0,c
 17182   004BB0  500D               	movf	??i2___lltoft^0,w,c
 17183   004BB2  100E               	iorwf	(??i2___lltoft+1)^0,w,c
 17184   004BB4  100F               	iorwf	(??i2___lltoft+2)^0,w,c
 17185   004BB6  1010               	iorwf	(??i2___lltoft+3)^0,w,c
 17186   004BB8  A4D8               	btfss	status,2,c
 17187   004BBA  D7E8               	goto	i2l5952
 17188   004BBC  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 17189   004BC0  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 17190   004BC4  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 17191   004BC8  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 17192   004BCC  0E00               	movlw	0
 17193   004BCE  6E05               	movwf	i2___ftpack@sign^0,c
 17194   004BD0  ECA3  F020         	call	i2___ftpack	;wreg free
 17195   004BD4  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 17196   004BD8  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 17197   004BDC  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 17198   004BE0  0012               	return		;funcret
 17199   004BE2                     __end_ofi2___lltoft:
 17200                           	callstack 0
 17201                           
 17202 ;; *************** function i2___llmod *****************
 17203 ;; Defined at:
 17204 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
 17205 ;; Parameters:    Size  Location     Type
 17206 ;;  dividend        4   13[COMRAM] unsigned long 
 17207 ;;  divisor         4   17[COMRAM] unsigned long 
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;  counter         1   21[COMRAM] unsigned char 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  4   13[COMRAM] unsigned long 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17222 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17223 ;;Total ram usage:        9 bytes
 17224 ;; Hardware stack levels used: 1
 17225 ;; This function calls:
 17226 ;;		Nothing
 17227 ;; This function is called by:
 17228 ;;		i2_sprintf
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232                           	psect	text71
 17233   0048E2                     __ptext71:
 17234                           	callstack 0
 17235   0048E2                     i2___llmod:
 17236                           	callstack 17
 17237                           
 17238                           ;incstack = 0
 17239   0048E2  5012               	movf	i2___llmod@divisor^0,w,c
 17240   0048E4  1013               	iorwf	(i2___llmod@divisor+1)^0,w,c
 17241   0048E6  1014               	iorwf	(i2___llmod@divisor+2)^0,w,c
 17242   0048E8  1015               	iorwf	(i2___llmod@divisor+3)^0,w,c
 17243   0048EA  B4D8               	btfsc	status,2,c
 17244   0048EC  D024               	goto	i2l1086
 17245   0048EE  0E01               	movlw	1
 17246   0048F0  6E16               	movwf	i2___llmod@counter^0,c
 17247   0048F2  D006               	goto	i2l5940
 17248   0048F4                     i2l5938:
 17249   0048F4  90D8               	bcf	status,0,c
 17250   0048F6  3612               	rlcf	i2___llmod@divisor^0,f,c
 17251   0048F8  3613               	rlcf	(i2___llmod@divisor+1)^0,f,c
 17252   0048FA  3614               	rlcf	(i2___llmod@divisor+2)^0,f,c
 17253   0048FC  3615               	rlcf	(i2___llmod@divisor+3)^0,f,c
 17254   0048FE  2A16               	incf	i2___llmod@counter^0,f,c
 17255   004900                     i2l5940:
 17256   004900  AE15               	btfss	(i2___llmod@divisor+3)^0,7,c
 17257   004902  D7F8               	goto	i2l5938
 17258   004904                     i2u671_40:
 17259   004904  5012               	movf	i2___llmod@divisor^0,w,c
 17260   004906  5C0E               	subwf	i2___llmod@dividend^0,w,c
 17261   004908  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 17262   00490A  580F               	subwfb	(i2___llmod@dividend+1)^0,w,c
 17263   00490C  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 17264   00490E  5810               	subwfb	(i2___llmod@dividend+2)^0,w,c
 17265   004910  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 17266   004912  5811               	subwfb	(i2___llmod@dividend+3)^0,w,c
 17267   004914  A0D8               	btfss	status,0,c
 17268   004916  D008               	goto	i2l5946
 17269   004918  5012               	movf	i2___llmod@divisor^0,w,c
 17270   00491A  5E0E               	subwf	i2___llmod@dividend^0,f,c
 17271   00491C  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 17272   00491E  5A0F               	subwfb	(i2___llmod@dividend+1)^0,f,c
 17273   004920  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 17274   004922  5A10               	subwfb	(i2___llmod@dividend+2)^0,f,c
 17275   004924  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 17276   004926  5A11               	subwfb	(i2___llmod@dividend+3)^0,f,c
 17277   004928                     i2l5946:
 17278   004928  90D8               	bcf	status,0,c
 17279   00492A  3215               	rrcf	(i2___llmod@divisor+3)^0,f,c
 17280   00492C  3214               	rrcf	(i2___llmod@divisor+2)^0,f,c
 17281   00492E  3213               	rrcf	(i2___llmod@divisor+1)^0,f,c
 17282   004930  3212               	rrcf	i2___llmod@divisor^0,f,c
 17283   004932  2E16               	decfsz	i2___llmod@counter^0,f,c
 17284   004934  D7E7               	goto	i2u671_40
 17285   004936                     i2l1086:
 17286   004936  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 17287   00493A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 17288   00493E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 17289   004942  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 17290   004946  0012               	return		;funcret
 17291   004948                     __end_ofi2___llmod:
 17292                           	callstack 0
 17293                           
 17294 ;; *************** function i2___lldiv *****************
 17295 ;; Defined at:
 17296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;  dividend        4    0[COMRAM] unsigned long 
 17299 ;;  divisor         4    4[COMRAM] unsigned long 
 17300 ;; Auto vars:     Size  Location     Type
 17301 ;;  quotient        4    8[COMRAM] unsigned long 
 17302 ;;  counter         1   12[COMRAM] unsigned char 
 17303 ;; Return value:  Size  Location     Type
 17304 ;;                  4    0[COMRAM] unsigned long 
 17305 ;; Registers used:
 17306 ;;		wreg, status,2, status,0
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17313 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17315 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17316 ;;Total ram usage:       13 bytes
 17317 ;; Hardware stack levels used: 1
 17318 ;; This function calls:
 17319 ;;		Nothing
 17320 ;; This function is called by:
 17321 ;;		i2_sprintf
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           	psect	text72
 17326   004380                     __ptext72:
 17327                           	callstack 0
 17328   004380                     i2___lldiv:
 17329                           	callstack 17
 17330                           
 17331                           ;incstack = 0
 17332   004380  0E00               	movlw	0
 17333   004382  6E09               	movwf	i2___lldiv@quotient^0,c
 17334   004384  0E00               	movlw	0
 17335   004386  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
 17336   004388  0E00               	movlw	0
 17337   00438A  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
 17338   00438C  0E00               	movlw	0
 17339   00438E  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
 17340   004390  5005               	movf	i2___lldiv@divisor^0,w,c
 17341   004392  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
 17342   004394  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
 17343   004396  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
 17344   004398  B4D8               	btfsc	status,2,c
 17345   00439A  D02A               	goto	i2l671
 17346   00439C  0E01               	movlw	1
 17347   00439E  6E0D               	movwf	i2___lldiv@counter^0,c
 17348   0043A0  D006               	goto	i2l5728
 17349   0043A2                     i2l5726:
 17350   0043A2  90D8               	bcf	status,0,c
 17351   0043A4  3605               	rlcf	i2___lldiv@divisor^0,f,c
 17352   0043A6  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
 17353   0043A8  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
 17354   0043AA  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
 17355   0043AC  2A0D               	incf	i2___lldiv@counter^0,f,c
 17356   0043AE                     i2l5728:
 17357   0043AE  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
 17358   0043B0  D7F8               	goto	i2l5726
 17359   0043B2                     i2u639_40:
 17360   0043B2  90D8               	bcf	status,0,c
 17361   0043B4  3609               	rlcf	i2___lldiv@quotient^0,f,c
 17362   0043B6  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
 17363   0043B8  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
 17364   0043BA  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
 17365   0043BC  5005               	movf	i2___lldiv@divisor^0,w,c
 17366   0043BE  5C01               	subwf	i2___lldiv@dividend^0,w,c
 17367   0043C0  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 17368   0043C2  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
 17369   0043C4  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 17370   0043C6  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
 17371   0043C8  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 17372   0043CA  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
 17373   0043CC  A0D8               	btfss	status,0,c
 17374   0043CE  D009               	goto	i2l5738
 17375   0043D0  5005               	movf	i2___lldiv@divisor^0,w,c
 17376   0043D2  5E01               	subwf	i2___lldiv@dividend^0,f,c
 17377   0043D4  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 17378   0043D6  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
 17379   0043D8  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 17380   0043DA  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
 17381   0043DC  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 17382   0043DE  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
 17383   0043E0  8009               	bsf	i2___lldiv@quotient^0,0,c
 17384   0043E2                     i2l5738:
 17385   0043E2  90D8               	bcf	status,0,c
 17386   0043E4  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
 17387   0043E6  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
 17388   0043E8  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
 17389   0043EA  3205               	rrcf	i2___lldiv@divisor^0,f,c
 17390   0043EC  2E0D               	decfsz	i2___lldiv@counter^0,f,c
 17391   0043EE  D7E1               	goto	i2u639_40
 17392   0043F0                     i2l671:
 17393   0043F0  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17394   0043F4  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17395   0043F8  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17396   0043FC  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17397   004400  0012               	return		;funcret
 17398   004402                     __end_ofi2___lldiv:
 17399                           	callstack 0
 17400                           
 17401 ;; *************** function i2___fttol *****************
 17402 ;; Defined at:
 17403 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  f1              3   59[COMRAM] float 
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;  lval            4   69[COMRAM] unsigned long 
 17408 ;;  exp1            1   73[COMRAM] unsigned char 
 17409 ;;  sign1           1   68[COMRAM] unsigned char 
 17410 ;; Return value:  Size  Location     Type
 17411 ;;                  4   59[COMRAM] long 
 17412 ;; Registers used:
 17413 ;;		wreg, status,2, status,0
 17414 ;; Tracked objects:
 17415 ;;		On entry : 0/1
 17416 ;;		On exit  : 0/0
 17417 ;;		Unchanged: 0/0
 17418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17422 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17423 ;;Total ram usage:       15 bytes
 17424 ;; Hardware stack levels used: 1
 17425 ;; This function calls:
 17426 ;;		Nothing
 17427 ;; This function is called by:
 17428 ;;		_Timer3_Int_Handling
 17429 ;;		i2_sprintf
 17430 ;; This function uses a non-reentrant model
 17431 ;;
 17432                           
 17433                           	psect	text73
 17434   003FC4                     __ptext73:
 17435                           	callstack 0
 17436   003FC4                     i2___fttol:
 17437                           	callstack 20
 17438                           
 17439                           ;incstack = 0
 17440   003FC4  C03E  F040         	movff	i2___fttol@f1+2,??i2___fttol
 17441   003FC8  6A41               	clrf	(??i2___fttol+1)^0,c
 17442   003FCA  6A42               	clrf	(??i2___fttol+2)^0,c
 17443   003FCC  343D               	rlcf	(i2___fttol@f1+1)^0,w,c
 17444   003FCE  3640               	rlcf	??i2___fttol^0,f,c
 17445   003FD0  E301               	bnc	u662_41
 17446   003FD2  8041               	bsf	(??i2___fttol+1)^0,0,c
 17447   003FD4                     u662_41:
 17448   003FD4  5040               	movf	??i2___fttol^0,w,c
 17449   003FD6  6E4A               	movwf	i2___fttol@exp1^0,c
 17450   003FD8  504A               	movf	i2___fttol@exp1^0,w,c
 17451   003FDA  A4D8               	btfss	status,2,c
 17452   003FDC  D009               	goto	i2l5894
 17453   003FDE                     i2u663_40:
 17454   003FDE  0E00               	movlw	0
 17455   003FE0  6E3C               	movwf	?i2___fttol^0,c
 17456   003FE2  0E00               	movlw	0
 17457   003FE4  6E3D               	movwf	(?i2___fttol+1)^0,c
 17458   003FE6  0E00               	movlw	0
 17459   003FE8  6E3E               	movwf	(?i2___fttol+2)^0,c
 17460   003FEA  0E00               	movlw	0
 17461   003FEC  6E3F               	movwf	(?i2___fttol+3)^0,c
 17462   003FEE  0012               	return	
 17463   003FF0                     i2l5894:
 17464   003FF0  0E17               	movlw	23
 17465   003FF2  6E40               	movwf	??i2___fttol^0,c
 17466   003FF4  C03C  F041         	movff	i2___fttol@f1,??i2___fttol+1
 17467   003FF8  C03D  F042         	movff	i2___fttol@f1+1,??i2___fttol+2
 17468   003FFC  C03E  F043         	movff	i2___fttol@f1+2,??i2___fttol+3
 17469   004000  2840               	incf	??i2___fttol^0,w,c
 17470   004002  6E44               	movwf	(??i2___fttol+4)^0,c
 17471   004004  D004               	goto	i2u664_40
 17472   004006                     i2u664_45:
 17473   004006  90D8               	bcf	status,0,c
 17474   004008  3243               	rrcf	(??i2___fttol+3)^0,f,c
 17475   00400A  3242               	rrcf	(??i2___fttol+2)^0,f,c
 17476   00400C  3241               	rrcf	(??i2___fttol+1)^0,f,c
 17477   00400E                     i2u664_40:
 17478   00400E  2E44               	decfsz	(??i2___fttol+4)^0,f,c
 17479   004010  D7FA               	goto	i2u664_45
 17480   004012  5041               	movf	(??i2___fttol+1)^0,w,c
 17481   004014  6E45               	movwf	i2___fttol@sign1^0,c
 17482   004016  8E3D               	bsf	(i2___fttol@f1+1)^0,7,c
 17483   004018  0EFF               	movlw	255
 17484   00401A  163C               	andwf	i2___fttol@f1^0,f,c
 17485   00401C  0EFF               	movlw	255
 17486   00401E  163D               	andwf	(i2___fttol@f1+1)^0,f,c
 17487   004020  0E00               	movlw	0
 17488   004022  163E               	andwf	(i2___fttol@f1+2)^0,f,c
 17489   004024  503C               	movf	i2___fttol@f1^0,w,c
 17490   004026  6E46               	movwf	i2___fttol@lval^0,c
 17491   004028  503D               	movf	(i2___fttol@f1+1)^0,w,c
 17492   00402A  6E47               	movwf	(i2___fttol@lval+1)^0,c
 17493   00402C  503E               	movf	(i2___fttol@f1+2)^0,w,c
 17494   00402E  6E48               	movwf	(i2___fttol@lval+2)^0,c
 17495   004030  6A49               	clrf	(i2___fttol@lval+3)^0,c
 17496   004032  0E8E               	movlw	142
 17497   004034  5E4A               	subwf	i2___fttol@exp1^0,f,c
 17498   004036  AE4A               	btfss	i2___fttol@exp1^0,7,c
 17499   004038  D00D               	goto	i2l5916
 17500   00403A  504A               	movf	i2___fttol@exp1^0,w,c
 17501   00403C  0A80               	xorlw	128
 17502   00403E  0F8F               	addlw	143
 17503   004040  A0D8               	btfss	status,0,c
 17504   004042  D7CD               	goto	i2u663_40
 17505   004044                     i2l5912:
 17506   004044  90D8               	bcf	status,0,c
 17507   004046  3249               	rrcf	(i2___fttol@lval+3)^0,f,c
 17508   004048  3248               	rrcf	(i2___fttol@lval+2)^0,f,c
 17509   00404A  3247               	rrcf	(i2___fttol@lval+1)^0,f,c
 17510   00404C  3246               	rrcf	i2___fttol@lval^0,f,c
 17511   00404E  3E4A               	incfsz	i2___fttol@exp1^0,f,c
 17512   004050  D7F9               	goto	i2l5912
 17513   004052  D00D               	goto	i2u668_40
 17514   004054                     i2l5916:
 17515   004054  0E17               	movlw	23
 17516   004056  644A               	cpfsgt	i2___fttol@exp1^0,c
 17517   004058  D007               	goto	i2l5924
 17518   00405A  D7C1               	goto	i2u663_40
 17519   00405C                     i2l5922:
 17520   00405C  90D8               	bcf	status,0,c
 17521   00405E  3646               	rlcf	i2___fttol@lval^0,f,c
 17522   004060  3647               	rlcf	(i2___fttol@lval+1)^0,f,c
 17523   004062  3648               	rlcf	(i2___fttol@lval+2)^0,f,c
 17524   004064  3649               	rlcf	(i2___fttol@lval+3)^0,f,c
 17525   004066  064A               	decf	i2___fttol@exp1^0,f,c
 17526   004068                     i2l5924:
 17527   004068  504A               	movf	i2___fttol@exp1^0,w,c
 17528   00406A  A4D8               	btfss	status,2,c
 17529   00406C  D7F7               	goto	i2l5922
 17530   00406E                     i2u668_40:
 17531   00406E  5045               	movf	i2___fttol@sign1^0,w,c
 17532   004070  B4D8               	btfsc	status,2,c
 17533   004072  D008               	goto	i2l5930
 17534   004074  1E49               	comf	(i2___fttol@lval+3)^0,f,c
 17535   004076  1E48               	comf	(i2___fttol@lval+2)^0,f,c
 17536   004078  1E47               	comf	(i2___fttol@lval+1)^0,f,c
 17537   00407A  6C46               	negf	i2___fttol@lval^0,c
 17538   00407C  0E00               	movlw	0
 17539   00407E  2247               	addwfc	(i2___fttol@lval+1)^0,f,c
 17540   004080  2248               	addwfc	(i2___fttol@lval+2)^0,f,c
 17541   004082  2249               	addwfc	(i2___fttol@lval+3)^0,f,c
 17542   004084                     i2l5930:
 17543   004084  C046  F03C         	movff	i2___fttol@lval,?i2___fttol
 17544   004088  C047  F03D         	movff	i2___fttol@lval+1,?i2___fttol+1
 17545   00408C  C048  F03E         	movff	i2___fttol@lval+2,?i2___fttol+2
 17546   004090  C049  F03F         	movff	i2___fttol@lval+3,?i2___fttol+3
 17547   004094  0012               	return		;funcret
 17548   004096                     __end_ofi2___fttol:
 17549                           	callstack 0
 17550                           
 17551 ;; *************** function i2___ftsub *****************
 17552 ;; Defined at:
 17553 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftsub.c"
 17554 ;; Parameters:    Size  Location     Type
 17555 ;;  f1              3   53[COMRAM] float 
 17556 ;;  f2              3   56[COMRAM] float 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;		None
 17559 ;; Return value:  Size  Location     Type
 17560 ;;                  3   53[COMRAM] float 
 17561 ;; Registers used:
 17562 ;;		wreg, status,2, status,0, cstack
 17563 ;; Tracked objects:
 17564 ;;		On entry : 0/1
 17565 ;;		On exit  : 0/0
 17566 ;;		Unchanged: 0/0
 17567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17568 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17571 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;Total ram usage:        6 bytes
 17573 ;; Hardware stack levels used: 1
 17574 ;; Hardware stack levels required when called: 2
 17575 ;; This function calls:
 17576 ;;		i2___ftadd
 17577 ;; This function is called by:
 17578 ;;		_Timer3_Int_Handling
 17579 ;;		i2_sprintf
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text74
 17584   004EBE                     __ptext74:
 17585                           	callstack 0
 17586   004EBE                     i2___ftsub:
 17587                           	callstack 18
 17588                           
 17589                           ;incstack = 0
 17590   004EBE  5039               	movf	i2___ftsub@f2^0,w,c
 17591   004EC0  103A               	iorwf	(i2___ftsub@f2+1)^0,w,c
 17592   004EC2  103B               	iorwf	(i2___ftsub@f2+2)^0,w,c
 17593   004EC4  B4D8               	btfsc	status,2,c
 17594   004EC6  D006               	goto	i2l5884
 17595   004EC8  0E00               	movlw	0
 17596   004ECA  1A39               	xorwf	i2___ftsub@f2^0,f,c
 17597   004ECC  0E00               	movlw	0
 17598   004ECE  1A3A               	xorwf	(i2___ftsub@f2+1)^0,f,c
 17599   004ED0  0E80               	movlw	128
 17600   004ED2  1A3B               	xorwf	(i2___ftsub@f2+2)^0,f,c
 17601   004ED4                     i2l5884:
 17602   004ED4  C036  F02A         	movff	i2___ftsub@f1,i2___ftadd@f1
 17603   004ED8  C037  F02B         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17604   004EDC  C038  F02C         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17605   004EE0  C039  F02D         	movff	i2___ftsub@f2,i2___ftadd@f2
 17606   004EE4  C03A  F02E         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17607   004EE8  C03B  F02F         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17608   004EEC  ECB9  F018         	call	i2___ftadd	;wreg free
 17609   004EF0  C02A  F036         	movff	?i2___ftadd,?i2___ftsub
 17610   004EF4  C02B  F037         	movff	?i2___ftadd+1,?i2___ftsub+1
 17611   004EF8  C02C  F038         	movff	?i2___ftadd+2,?i2___ftsub+2
 17612   004EFC  0012               	return		;funcret
 17613   004EFE                     __end_ofi2___ftsub:
 17614                           	callstack 0
 17615                           
 17616 ;; *************** function i2___ftadd *****************
 17617 ;; Defined at:
 17618 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
 17619 ;; Parameters:    Size  Location     Type
 17620 ;;  f1              3   41[COMRAM] float 
 17621 ;;  f2              3   44[COMRAM] float 
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;  exp1            1   52[COMRAM] unsigned char 
 17624 ;;  exp2            1   51[COMRAM] unsigned char 
 17625 ;;  sign            1   50[COMRAM] unsigned char 
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  3   41[COMRAM] float 
 17628 ;; Registers used:
 17629 ;;		wreg, status,2, status,0, cstack
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/1
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17635 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17637 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;Total ram usage:       12 bytes
 17640 ;; Hardware stack levels used: 1
 17641 ;; Hardware stack levels required when called: 1
 17642 ;; This function calls:
 17643 ;;		i2___ftpack
 17644 ;; This function is called by:
 17645 ;;		_Timer3_Int_Handling
 17646 ;;		i2_sprintf
 17647 ;;		i2___ftsub
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text75
 17652   003172                     __ptext75:
 17653                           	callstack 0
 17654   003172                     i2___ftadd:
 17655                           	callstack 18
 17656                           
 17657                           ;incstack = 0
 17658   003172  C02C  F030         	movff	i2___ftadd@f1+2,??i2___ftadd
 17659   003176  6A31               	clrf	(??i2___ftadd+1)^0,c
 17660   003178  6A32               	clrf	(??i2___ftadd+2)^0,c
 17661   00317A  342B               	rlcf	(i2___ftadd@f1+1)^0,w,c
 17662   00317C  3630               	rlcf	??i2___ftadd^0,f,c
 17663   00317E  E301               	bnc	u557_41
 17664   003180  8031               	bsf	(??i2___ftadd+1)^0,0,c
 17665   003182                     u557_41:
 17666   003182  5030               	movf	??i2___ftadd^0,w,c
 17667   003184  6E35               	movwf	i2___ftadd@exp1^0,c
 17668   003186  C02F  F030         	movff	i2___ftadd@f2+2,??i2___ftadd
 17669   00318A  6A31               	clrf	(??i2___ftadd+1)^0,c
 17670   00318C  6A32               	clrf	(??i2___ftadd+2)^0,c
 17671   00318E  342E               	rlcf	(i2___ftadd@f2+1)^0,w,c
 17672   003190  3630               	rlcf	??i2___ftadd^0,f,c
 17673   003192  E301               	bnc	u558_41
 17674   003194  8031               	bsf	(??i2___ftadd+1)^0,0,c
 17675   003196                     u558_41:
 17676   003196  5030               	movf	??i2___ftadd^0,w,c
 17677   003198  6E34               	movwf	i2___ftadd@exp2^0,c
 17678   00319A  5035               	movf	i2___ftadd@exp1^0,w,c
 17679   00319C  B4D8               	btfsc	status,2,c
 17680   00319E  D00A               	goto	i2u561_40
 17681   0031A0  5034               	movf	i2___ftadd@exp2^0,w,c
 17682   0031A2  5C35               	subwf	i2___ftadd@exp1^0,w,c
 17683   0031A4  B0D8               	btfsc	status,0,c
 17684   0031A6  D00D               	goto	i2l5230
 17685   0031A8  5035               	movf	i2___ftadd@exp1^0,w,c
 17686   0031AA  5C34               	subwf	i2___ftadd@exp2^0,w,c
 17687   0031AC  6E30               	movwf	??i2___ftadd^0,c
 17688   0031AE  0E18               	movlw	24
 17689   0031B0  6430               	cpfsgt	??i2___ftadd^0,c
 17690   0031B2  D007               	goto	i2l5230
 17691   0031B4                     i2u561_40:
 17692   0031B4  C02D  F02A         	movff	i2___ftadd@f2,?i2___ftadd
 17693   0031B8  C02E  F02B         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17694   0031BC  C02F  F02C         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17695   0031C0  0012               	return	
 17696   0031C2                     i2l5230:
 17697   0031C2  5034               	movf	i2___ftadd@exp2^0,w,c
 17698   0031C4  B4D8               	btfsc	status,2,c
 17699   0031C6  D00A               	goto	i2u564_40
 17700   0031C8  5035               	movf	i2___ftadd@exp1^0,w,c
 17701   0031CA  5C34               	subwf	i2___ftadd@exp2^0,w,c
 17702   0031CC  B0D8               	btfsc	status,0,c
 17703   0031CE  D00D               	goto	i2l5236
 17704   0031D0  5034               	movf	i2___ftadd@exp2^0,w,c
 17705   0031D2  5C35               	subwf	i2___ftadd@exp1^0,w,c
 17706   0031D4  6E30               	movwf	??i2___ftadd^0,c
 17707   0031D6  0E18               	movlw	24
 17708   0031D8  6430               	cpfsgt	??i2___ftadd^0,c
 17709   0031DA  D007               	goto	i2l5236
 17710   0031DC                     i2u564_40:
 17711   0031DC  C02A  F02A         	movff	i2___ftadd@f1,?i2___ftadd
 17712   0031E0  C02B  F02B         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17713   0031E4  C02C  F02C         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17714   0031E8  0012               	return	
 17715   0031EA                     i2l5236:
 17716   0031EA  0E06               	movlw	6
 17717   0031EC  6E33               	movwf	i2___ftadd@sign^0,c
 17718   0031EE  BE2C               	btfsc	(i2___ftadd@f1+2)^0,7,c
 17719   0031F0  8E33               	bsf	i2___ftadd@sign^0,7,c
 17720   0031F2  BE2F               	btfsc	(i2___ftadd@f2+2)^0,7,c
 17721   0031F4  8C33               	bsf	i2___ftadd@sign^0,6,c
 17722   0031F6  8E2B               	bsf	(i2___ftadd@f1+1)^0,7,c
 17723   0031F8  0EFF               	movlw	255
 17724   0031FA  162A               	andwf	i2___ftadd@f1^0,f,c
 17725   0031FC  0EFF               	movlw	255
 17726   0031FE  162B               	andwf	(i2___ftadd@f1+1)^0,f,c
 17727   003200  0E00               	movlw	0
 17728   003202  162C               	andwf	(i2___ftadd@f1+2)^0,f,c
 17729   003204  8E2E               	bsf	(i2___ftadd@f2+1)^0,7,c
 17730   003206  0EFF               	movlw	255
 17731   003208  162D               	andwf	i2___ftadd@f2^0,f,c
 17732   00320A  0EFF               	movlw	255
 17733   00320C  162E               	andwf	(i2___ftadd@f2+1)^0,f,c
 17734   00320E  0E00               	movlw	0
 17735   003210  162F               	andwf	(i2___ftadd@f2+2)^0,f,c
 17736   003212  5034               	movf	i2___ftadd@exp2^0,w,c
 17737   003214  5C35               	subwf	i2___ftadd@exp1^0,w,c
 17738   003216  B0D8               	btfsc	status,0,c
 17739   003218  D01B               	goto	i2l5262
 17740   00321A                     i2u567_40:
 17741   00321A  90D8               	bcf	status,0,c
 17742   00321C  362D               	rlcf	i2___ftadd@f2^0,f,c
 17743   00321E  362E               	rlcf	(i2___ftadd@f2+1)^0,f,c
 17744   003220  362F               	rlcf	(i2___ftadd@f2+2)^0,f,c
 17745   003222  0634               	decf	i2___ftadd@exp2^0,f,c
 17746   003224  5035               	movf	i2___ftadd@exp1^0,w,c
 17747   003226  1834               	xorwf	i2___ftadd@exp2^0,w,c
 17748   003228  B4D8               	btfsc	status,2,c
 17749   00322A  D00D               	goto	i2l5260
 17750   00322C  0633               	decf	i2___ftadd@sign^0,f,c
 17751   00322E  C033  F030         	movff	i2___ftadd@sign,??i2___ftadd
 17752   003232  0E07               	movlw	7
 17753   003234  1630               	andwf	??i2___ftadd^0,f,c
 17754   003236  B4D8               	btfsc	status,2,c
 17755   003238  D006               	goto	i2l5260
 17756   00323A  D7EF               	goto	i2u567_40
 17757   00323C                     i2l5258:
 17758   00323C  90D8               	bcf	status,0,c
 17759   00323E  322C               	rrcf	(i2___ftadd@f1+2)^0,f,c
 17760   003240  322B               	rrcf	(i2___ftadd@f1+1)^0,f,c
 17761   003242  322A               	rrcf	i2___ftadd@f1^0,f,c
 17762   003244  2A35               	incf	i2___ftadd@exp1^0,f,c
 17763   003246                     i2l5260:
 17764   003246  5034               	movf	i2___ftadd@exp2^0,w,c
 17765   003248  1835               	xorwf	i2___ftadd@exp1^0,w,c
 17766   00324A  B4D8               	btfsc	status,2,c
 17767   00324C  D01F               	goto	i2u574_40
 17768   00324E  D7F6               	goto	i2l5258
 17769   003250                     i2l5262:
 17770   003250  5035               	movf	i2___ftadd@exp1^0,w,c
 17771   003252  5C34               	subwf	i2___ftadd@exp2^0,w,c
 17772   003254  B0D8               	btfsc	status,0,c
 17773   003256  D01A               	goto	i2u574_40
 17774   003258                     i2u571_40:
 17775   003258  90D8               	bcf	status,0,c
 17776   00325A  362A               	rlcf	i2___ftadd@f1^0,f,c
 17777   00325C  362B               	rlcf	(i2___ftadd@f1+1)^0,f,c
 17778   00325E  362C               	rlcf	(i2___ftadd@f1+2)^0,f,c
 17779   003260  0635               	decf	i2___ftadd@exp1^0,f,c
 17780   003262  5035               	movf	i2___ftadd@exp1^0,w,c
 17781   003264  1834               	xorwf	i2___ftadd@exp2^0,w,c
 17782   003266  B4D8               	btfsc	status,2,c
 17783   003268  D00D               	goto	i2l5272
 17784   00326A  0633               	decf	i2___ftadd@sign^0,f,c
 17785   00326C  C033  F030         	movff	i2___ftadd@sign,??i2___ftadd
 17786   003270  0E07               	movlw	7
 17787   003272  1630               	andwf	??i2___ftadd^0,f,c
 17788   003274  B4D8               	btfsc	status,2,c
 17789   003276  D006               	goto	i2l5272
 17790   003278  D7EF               	goto	i2u571_40
 17791   00327A                     i2l5270:
 17792   00327A  90D8               	bcf	status,0,c
 17793   00327C  322F               	rrcf	(i2___ftadd@f2+2)^0,f,c
 17794   00327E  322E               	rrcf	(i2___ftadd@f2+1)^0,f,c
 17795   003280  322D               	rrcf	i2___ftadd@f2^0,f,c
 17796   003282  2A34               	incf	i2___ftadd@exp2^0,f,c
 17797   003284                     i2l5272:
 17798   003284  5034               	movf	i2___ftadd@exp2^0,w,c
 17799   003286  1835               	xorwf	i2___ftadd@exp1^0,w,c
 17800   003288  A4D8               	btfss	status,2,c
 17801   00328A  D7F7               	goto	i2l5270
 17802   00328C                     i2u574_40:
 17803   00328C  AE33               	btfss	i2___ftadd@sign^0,7,c
 17804   00328E  D00C               	goto	i2l991
 17805   003290  0EFF               	movlw	255
 17806   003292  1A2A               	xorwf	i2___ftadd@f1^0,f,c
 17807   003294  0EFF               	movlw	255
 17808   003296  1A2B               	xorwf	(i2___ftadd@f1+1)^0,f,c
 17809   003298  0EFF               	movlw	255
 17810   00329A  1A2C               	xorwf	(i2___ftadd@f1+2)^0,f,c
 17811   00329C  0E01               	movlw	1
 17812   00329E  262A               	addwf	i2___ftadd@f1^0,f,c
 17813   0032A0  0E00               	movlw	0
 17814   0032A2  222B               	addwfc	(i2___ftadd@f1+1)^0,f,c
 17815   0032A4  0E00               	movlw	0
 17816   0032A6  222C               	addwfc	(i2___ftadd@f1+2)^0,f,c
 17817   0032A8                     i2l991:
 17818   0032A8  AC33               	btfss	i2___ftadd@sign^0,6,c
 17819   0032AA  D00C               	goto	i2l5278
 17820   0032AC  0EFF               	movlw	255
 17821   0032AE  1A2D               	xorwf	i2___ftadd@f2^0,f,c
 17822   0032B0  0EFF               	movlw	255
 17823   0032B2  1A2E               	xorwf	(i2___ftadd@f2+1)^0,f,c
 17824   0032B4  0EFF               	movlw	255
 17825   0032B6  1A2F               	xorwf	(i2___ftadd@f2+2)^0,f,c
 17826   0032B8  0E01               	movlw	1
 17827   0032BA  262D               	addwf	i2___ftadd@f2^0,f,c
 17828   0032BC  0E00               	movlw	0
 17829   0032BE  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 17830   0032C0  0E00               	movlw	0
 17831   0032C2  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 17832   0032C4                     i2l5278:
 17833   0032C4  0E00               	movlw	0
 17834   0032C6  6E33               	movwf	i2___ftadd@sign^0,c
 17835   0032C8  502A               	movf	i2___ftadd@f1^0,w,c
 17836   0032CA  262D               	addwf	i2___ftadd@f2^0,f,c
 17837   0032CC  502B               	movf	(i2___ftadd@f1+1)^0,w,c
 17838   0032CE  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 17839   0032D0  502C               	movf	(i2___ftadd@f1+2)^0,w,c
 17840   0032D2  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 17841   0032D4  AE2F               	btfss	(i2___ftadd@f2+2)^0,7,c
 17842   0032D6  D00E               	goto	i2l5288
 17843   0032D8  0EFF               	movlw	255
 17844   0032DA  1A2D               	xorwf	i2___ftadd@f2^0,f,c
 17845   0032DC  0EFF               	movlw	255
 17846   0032DE  1A2E               	xorwf	(i2___ftadd@f2+1)^0,f,c
 17847   0032E0  0EFF               	movlw	255
 17848   0032E2  1A2F               	xorwf	(i2___ftadd@f2+2)^0,f,c
 17849   0032E4  0E01               	movlw	1
 17850   0032E6  262D               	addwf	i2___ftadd@f2^0,f,c
 17851   0032E8  0E00               	movlw	0
 17852   0032EA  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 17853   0032EC  0E00               	movlw	0
 17854   0032EE  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 17855   0032F0  0E01               	movlw	1
 17856   0032F2  6E33               	movwf	i2___ftadd@sign^0,c
 17857   0032F4                     i2l5288:
 17858   0032F4  C02D  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17859   0032F8  C02E  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17860   0032FC  C02F  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17861   003300  C035  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17862   003304  C033  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17863   003308  ECA3  F020         	call	i2___ftpack	;wreg free
 17864   00330C  C001  F02A         	movff	?i2___ftpack,?i2___ftadd
 17865   003310  C002  F02B         	movff	?i2___ftpack+1,?i2___ftadd+1
 17866   003314  C003  F02C         	movff	?i2___ftpack+2,?i2___ftadd+2
 17867   003318  0012               	return		;funcret
 17868   00331A                     __end_ofi2___ftadd:
 17869                           	callstack 0
 17870                           
 17871 ;; *************** function i2___ftpack *****************
 17872 ;; Defined at:
 17873 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;  arg             3    0[COMRAM] unsigned um
 17876 ;;  exp             1    3[COMRAM] unsigned char 
 17877 ;;  sign            1    4[COMRAM] unsigned char 
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;		None
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  3    0[COMRAM] float 
 17882 ;; Registers used:
 17883 ;;		wreg, status,2, status,0
 17884 ;; Tracked objects:
 17885 ;;		On entry : 0/1
 17886 ;;		On exit  : 0/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17889 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17893 ;;Total ram usage:        8 bytes
 17894 ;; Hardware stack levels used: 1
 17895 ;; This function calls:
 17896 ;;		Nothing
 17897 ;; This function is called by:
 17898 ;;		___lwtoft
 17899 ;;		i2___ftadd
 17900 ;;		i2___ftmul
 17901 ;;		i2___lltoft
 17902 ;; This function uses a non-reentrant model
 17903 ;;
 17904                           
 17905                           	psect	text76
 17906   004146                     __ptext76:
 17907                           	callstack 0
 17908   004146                     i2___ftpack:
 17909                           	callstack 18
 17910                           
 17911                           ;incstack = 0
 17912   004146  5004               	movf	i2___ftpack@exp^0,w,c
 17913   004148  B4D8               	btfsc	status,2,c
 17914   00414A  D005               	goto	i2u528_40
 17915   00414C  5001               	movf	i2___ftpack@arg^0,w,c
 17916   00414E  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
 17917   004150  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
 17918   004152  A4D8               	btfss	status,2,c
 17919   004154  D00C               	goto	i2l5044
 17920   004156                     i2u528_40:
 17921   004156  0E00               	movlw	0
 17922   004158  6E01               	movwf	?i2___ftpack^0,c
 17923   00415A  0E00               	movlw	0
 17924   00415C  6E02               	movwf	(?i2___ftpack+1)^0,c
 17925   00415E  0E00               	movlw	0
 17926   004160  6E03               	movwf	(?i2___ftpack+2)^0,c
 17927   004162  0012               	return	
 17928   004164                     i2l5042:
 17929   004164  2A04               	incf	i2___ftpack@exp^0,f,c
 17930   004166  90D8               	bcf	status,0,c
 17931   004168  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 17932   00416A  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 17933   00416C  3201               	rrcf	i2___ftpack@arg^0,f,c
 17934   00416E                     i2l5044:
 17935   00416E  0E00               	movlw	0
 17936   004170  1401               	andwf	i2___ftpack@arg^0,w,c
 17937   004172  6E06               	movwf	??i2___ftpack^0,c
 17938   004174  0E00               	movlw	0
 17939   004176  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 17940   004178  6E07               	movwf	(??i2___ftpack+1)^0,c
 17941   00417A  0EFE               	movlw	254
 17942   00417C  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 17943   00417E  6E08               	movwf	(??i2___ftpack+2)^0,c
 17944   004180  5006               	movf	??i2___ftpack^0,w,c
 17945   004182  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 17946   004184  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 17947   004186  B4D8               	btfsc	status,2,c
 17948   004188  D00C               	goto	i2l5050
 17949   00418A  D7EC               	goto	i2l5042
 17950   00418C                     i2l5046:
 17951   00418C  2A04               	incf	i2___ftpack@exp^0,f,c
 17952   00418E  0E01               	movlw	1
 17953   004190  2601               	addwf	i2___ftpack@arg^0,f,c
 17954   004192  0E00               	movlw	0
 17955   004194  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
 17956   004196  0E00               	movlw	0
 17957   004198  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
 17958   00419A  90D8               	bcf	status,0,c
 17959   00419C  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 17960   00419E  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 17961   0041A0  3201               	rrcf	i2___ftpack@arg^0,f,c
 17962   0041A2                     i2l5050:
 17963   0041A2  0E00               	movlw	0
 17964   0041A4  1401               	andwf	i2___ftpack@arg^0,w,c
 17965   0041A6  6E06               	movwf	??i2___ftpack^0,c
 17966   0041A8  0E00               	movlw	0
 17967   0041AA  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 17968   0041AC  6E07               	movwf	(??i2___ftpack+1)^0,c
 17969   0041AE  0EFF               	movlw	255
 17970   0041B0  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 17971   0041B2  6E08               	movwf	(??i2___ftpack+2)^0,c
 17972   0041B4  5006               	movf	??i2___ftpack^0,w,c
 17973   0041B6  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 17974   0041B8  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 17975   0041BA  B4D8               	btfsc	status,2,c
 17976   0041BC  D006               	goto	i2l5054
 17977   0041BE  D7E6               	goto	i2l5046
 17978   0041C0                     i2l5052:
 17979   0041C0  0604               	decf	i2___ftpack@exp^0,f,c
 17980   0041C2  90D8               	bcf	status,0,c
 17981   0041C4  3601               	rlcf	i2___ftpack@arg^0,f,c
 17982   0041C6  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
 17983   0041C8  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
 17984   0041CA                     i2l5054:
 17985   0041CA  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
 17986   0041CC  D003               	goto	i2u532_40
 17987   0041CE  0E02               	movlw	2
 17988   0041D0  6004               	cpfslt	i2___ftpack@exp^0,c
 17989   0041D2  D7F6               	goto	i2l5052
 17990   0041D4                     i2u532_40:
 17991   0041D4  A004               	btfss	i2___ftpack@exp^0,0,c
 17992   0041D6  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
 17993   0041D8  90D8               	bcf	status,0,c
 17994   0041DA  3204               	rrcf	i2___ftpack@exp^0,f,c
 17995   0041DC  5004               	movf	i2___ftpack@exp^0,w,c
 17996   0041DE  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
 17997   0041E0  5005               	movf	i2___ftpack@sign^0,w,c
 17998   0041E2  A4D8               	btfss	status,2,c
 17999   0041E4  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
 18000   0041E6  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 18001   0041EA  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 18002   0041EE  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 18003   0041F2  0012               	return		;funcret
 18004   0041F4                     __end_ofi2___ftpack:
 18005                           	callstack 0
 18006                           
 18007 ;; *************** function i2___ftneg *****************
 18008 ;; Defined at:
 18009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftneg.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;  f1              3    0[COMRAM] float 
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;		None
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  3    0[COMRAM] float 
 18016 ;; Registers used:
 18017 ;;		wreg, status,2, status,0
 18018 ;; Tracked objects:
 18019 ;;		On entry : 3F/0
 18020 ;;		On exit  : 3F/0
 18021 ;;		Unchanged: 3F/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18027 ;;Total ram usage:        3 bytes
 18028 ;; Hardware stack levels used: 1
 18029 ;; This function calls:
 18030 ;;		Nothing
 18031 ;; This function is called by:
 18032 ;;		i2_sprintf
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text77
 18037   005224                     __ptext77:
 18038                           	callstack 0
 18039   005224                     i2___ftneg:
 18040                           	callstack 17
 18041                           
 18042                           ; BSR set to: 0
 18043                           
 18044                           ;incstack = 0
 18045   005224  5001               	movf	i2___ftneg@f1^0,w,c
 18046   005226  1002               	iorwf	(i2___ftneg@f1+1)^0,w,c
 18047   005228  1003               	iorwf	(i2___ftneg@f1+2)^0,w,c
 18048   00522A  B4D8               	btfsc	status,2,c
 18049   00522C  D006               	goto	i2l1041
 18050                           
 18051                           ; BSR set to: 0
 18052   00522E  0E00               	movlw	0
 18053   005230  1A01               	xorwf	i2___ftneg@f1^0,f,c
 18054   005232  0E00               	movlw	0
 18055   005234  1A02               	xorwf	(i2___ftneg@f1+1)^0,f,c
 18056   005236  0E80               	movlw	128
 18057   005238  1A03               	xorwf	(i2___ftneg@f1+2)^0,f,c
 18058   00523A                     i2l1041:
 18059                           
 18060                           ; BSR set to: 0
 18061   00523A  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 18062   00523E  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 18063   005242  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 18064                           
 18065                           ; BSR set to: 0
 18066   005246  0012               	return		;funcret
 18067   005248                     __end_ofi2___ftneg:
 18068                           	callstack 0
 18069                           
 18070 ;; *************** function i2___ftge *****************
 18071 ;; Defined at:
 18072 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  ff1             3   53[COMRAM] float 
 18075 ;;  ff2             3   56[COMRAM] float 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;		None
 18078 ;; Return value:  Size  Location     Type
 18079 ;;		None               void
 18080 ;; Registers used:
 18081 ;;		wreg, status,2, status,0
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/1
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18090 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18091 ;;Total ram usage:        9 bytes
 18092 ;; Hardware stack levels used: 1
 18093 ;; This function calls:
 18094 ;;		Nothing
 18095 ;; This function is called by:
 18096 ;;		_Timer3_Int_Handling
 18097 ;;		i2_sprintf
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           	psect	text78
 18102   0045DA                     __ptext78:
 18103                           	callstack 0
 18104   0045DA                     i2___ftge:
 18105                           	callstack 20
 18106                           
 18107                           ; BSR set to: 0
 18108                           ;incstack = 0
 18109   0045DA  AE38               	btfss	(i2___ftge@ff1+2)^0,7,c
 18110   0045DC  D00F               	goto	i2l5862
 18111   0045DE  0E00               	movlw	0
 18112   0045E0  6E3C               	movwf	??i2___ftge^0,c
 18113   0045E2  0E00               	movlw	0
 18114   0045E4  6E3D               	movwf	(??i2___ftge+1)^0,c
 18115   0045E6  0E80               	movlw	128
 18116   0045E8  6E3E               	movwf	(??i2___ftge+2)^0,c
 18117   0045EA  5036               	movf	i2___ftge@ff1^0,w,c
 18118   0045EC  5C3C               	subwf	??i2___ftge^0,w,c
 18119   0045EE  6E36               	movwf	i2___ftge@ff1^0,c
 18120   0045F0  5037               	movf	(i2___ftge@ff1+1)^0,w,c
 18121   0045F2  583D               	subwfb	(??i2___ftge+1)^0,w,c
 18122   0045F4  6E37               	movwf	(i2___ftge@ff1+1)^0,c
 18123   0045F6  5038               	movf	(i2___ftge@ff1+2)^0,w,c
 18124   0045F8  583E               	subwfb	(??i2___ftge+2)^0,w,c
 18125   0045FA  6E38               	movwf	(i2___ftge@ff1+2)^0,c
 18126   0045FC                     i2l5862:
 18127   0045FC  AE3B               	btfss	(i2___ftge@ff2+2)^0,7,c
 18128   0045FE  D00F               	goto	i2l5866
 18129   004600  0E00               	movlw	0
 18130   004602  6E3C               	movwf	??i2___ftge^0,c
 18131   004604  0E00               	movlw	0
 18132   004606  6E3D               	movwf	(??i2___ftge+1)^0,c
 18133   004608  0E80               	movlw	128
 18134   00460A  6E3E               	movwf	(??i2___ftge+2)^0,c
 18135   00460C  5039               	movf	i2___ftge@ff2^0,w,c
 18136   00460E  5C3C               	subwf	??i2___ftge^0,w,c
 18137   004610  6E39               	movwf	i2___ftge@ff2^0,c
 18138   004612  503A               	movf	(i2___ftge@ff2+1)^0,w,c
 18139   004614  583D               	subwfb	(??i2___ftge+1)^0,w,c
 18140   004616  6E3A               	movwf	(i2___ftge@ff2+1)^0,c
 18141   004618  503B               	movf	(i2___ftge@ff2+2)^0,w,c
 18142   00461A  583E               	subwfb	(??i2___ftge+2)^0,w,c
 18143   00461C  6E3B               	movwf	(i2___ftge@ff2+2)^0,c
 18144   00461E                     i2l5866:
 18145   00461E  0E00               	movlw	0
 18146   004620  1A36               	xorwf	i2___ftge@ff1^0,f,c
 18147   004622  0E00               	movlw	0
 18148   004624  1A37               	xorwf	(i2___ftge@ff1+1)^0,f,c
 18149   004626  0E80               	movlw	128
 18150   004628  1A38               	xorwf	(i2___ftge@ff1+2)^0,f,c
 18151   00462A  0E00               	movlw	0
 18152   00462C  1A39               	xorwf	i2___ftge@ff2^0,f,c
 18153   00462E  0E00               	movlw	0
 18154   004630  1A3A               	xorwf	(i2___ftge@ff2+1)^0,f,c
 18155   004632  0E80               	movlw	128
 18156   004634  1A3B               	xorwf	(i2___ftge@ff2+2)^0,f,c
 18157   004636  5039               	movf	i2___ftge@ff2^0,w,c
 18158   004638  5C36               	subwf	i2___ftge@ff1^0,w,c
 18159   00463A  503A               	movf	(i2___ftge@ff2+1)^0,w,c
 18160   00463C  5837               	subwfb	(i2___ftge@ff1+1)^0,w,c
 18161   00463E  503B               	movf	(i2___ftge@ff2+2)^0,w,c
 18162   004640  5838               	subwfb	(i2___ftge@ff1+2)^0,w,c
 18163   004642  B0D8               	btfsc	status,0,c
 18164   004644  D002               	goto	i2l5872
 18165   004646  90D8               	bcf	status,0,c
 18166   004648  0012               	return	
 18167   00464A                     i2l5872:
 18168   00464A  80D8               	bsf	status,0,c
 18169   00464C  0012               	return		;funcret
 18170   00464E                     __end_ofi2___ftge:
 18171                           	callstack 0
 18172                           
 18173 ;; *************** function i2_set_baoundares *****************
 18174 ;; Defined at:
 18175 ;;		line 279 in file "Cooking_Main.c"
 18176 ;; Parameters:    Size  Location     Type
 18177 ;;		None
 18178 ;; Auto vars:     Size  Location     Type
 18179 ;;		None
 18180 ;; Return value:  Size  Location     Type
 18181 ;;                  1    wreg      void 
 18182 ;; Registers used:
 18183 ;;		wreg, status,2, status,0
 18184 ;; Tracked objects:
 18185 ;;		On entry : 3E/1
 18186 ;;		On exit  : 3F/0
 18187 ;;		Unchanged: 0/0
 18188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18193 ;;Total ram usage:        0 bytes
 18194 ;; Hardware stack levels used: 1
 18195 ;; This function calls:
 18196 ;;		Nothing
 18197 ;; This function is called by:
 18198 ;;		i2_update_lcd_Line1
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           	psect	text79
 18203   003C42                     __ptext79:
 18204                           	callstack 0
 18205   003C42                     i2_set_baoundares:
 18206                           	callstack 18
 18207                           
 18208                           ;Cooking_Main.c: 280: if(count_sec > 59) {
 18209                           
 18210                           ;incstack = 0
 18211   003C42  0100               	movlb	0	; () banked
 18212   003C44  BFCF               	btfsc	(_count_sec+1)& (0+255),7,b
 18213   003C46  D00C               	goto	i2l6318
 18214   003C48  51CF               	movf	(_count_sec+1)& (0+255),w,b
 18215   003C4A  E104               	bnz	i2u722_40
 18216   003C4C  0E3C               	movlw	60
 18217   003C4E  5DCE               	subwf	_count_sec& (0+255),w,b
 18218   003C50  A0D8               	btfss	status,0,c
 18219   003C52  D006               	goto	i2l6318
 18220   003C54                     i2u722_40:
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;Cooking_Main.c: 281: count_min++;
 18224   003C54  4BCC               	infsnz	_count_min& (0+255),f,b
 18225   003C56  2BCD               	incf	(_count_min+1)& (0+255),f,b
 18226                           
 18227                           ; BSR set to: 0
 18228                           ;Cooking_Main.c: 282: count_sec = 0;
 18229   003C58  0E00               	movlw	0
 18230   003C5A  6FCF               	movwf	(_count_sec+1)& (0+255),b
 18231   003C5C  0E00               	movlw	0
 18232   003C5E  6FCE               	movwf	_count_sec& (0+255),b
 18233   003C60                     i2l6318:
 18234                           
 18235                           ; BSR set to: 0
 18236                           ;Cooking_Main.c: 283: };Cooking_Main.c: 284: if(count_min > 59) {
 18237   003C60  BFCD               	btfsc	(_count_min+1)& (0+255),7,b
 18238   003C62  D00C               	goto	i2l6324
 18239   003C64  51CD               	movf	(_count_min+1)& (0+255),w,b
 18240   003C66  E104               	bnz	i2u723_40
 18241   003C68  0E3C               	movlw	60
 18242   003C6A  5DCC               	subwf	_count_min& (0+255),w,b
 18243   003C6C  A0D8               	btfss	status,0,c
 18244   003C6E  D006               	goto	i2l6324
 18245   003C70                     i2u723_40:
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;Cooking_Main.c: 285: count_hour++;
 18249   003C70  4BCA               	infsnz	_count_hour& (0+255),f,b
 18250   003C72  2BCB               	incf	(_count_hour+1)& (0+255),f,b
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;Cooking_Main.c: 286: count_min = 0;
 18254   003C74  0E00               	movlw	0
 18255   003C76  6FCD               	movwf	(_count_min+1)& (0+255),b
 18256   003C78  0E00               	movlw	0
 18257   003C7A  6FCC               	movwf	_count_min& (0+255),b
 18258   003C7C                     i2l6324:
 18259                           
 18260                           ; BSR set to: 0
 18261                           ;Cooking_Main.c: 287: };Cooking_Main.c: 288: if(count_hour > 5){
 18262   003C7C  BFCB               	btfsc	(_count_hour+1)& (0+255),7,b
 18263   003C7E  D00A               	goto	i2l6328
 18264   003C80  51CB               	movf	(_count_hour+1)& (0+255),w,b
 18265   003C82  E104               	bnz	i2u724_40
 18266   003C84  0E06               	movlw	6
 18267   003C86  5DCA               	subwf	_count_hour& (0+255),w,b
 18268   003C88  A0D8               	btfss	status,0,c
 18269   003C8A  D004               	goto	i2l6328
 18270   003C8C                     i2u724_40:
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;Cooking_Main.c: 289: count_hour = 5;
 18274   003C8C  0E00               	movlw	0
 18275   003C8E  6FCB               	movwf	(_count_hour+1)& (0+255),b
 18276   003C90  0E05               	movlw	5
 18277   003C92  6FCA               	movwf	_count_hour& (0+255),b
 18278   003C94                     i2l6328:
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;Cooking_Main.c: 290: };Cooking_Main.c: 292: if(count_sec <= 0 && !PORTBbits.RB4 && Cook
      +                          ing_Mode != 5 && Cooking_Mode != 6) {
 18282   003C94  BFCF               	btfsc	(_count_sec+1)& (0+255),7,b
 18283   003C96  D005               	goto	i2u725_40
 18284   003C98  51CF               	movf	(_count_sec+1)& (0+255),w,b
 18285   003C9A  E116               	bnz	i2l6340
 18286   003C9C  05CE               	decf	_count_sec& (0+255),w,b
 18287   003C9E  B0D8               	btfsc	status,0,c
 18288   003CA0  D013               	goto	i2l6340
 18289   003CA2                     i2u725_40:
 18290                           
 18291                           ; BSR set to: 0
 18292   003CA2  B881               	btfsc	129,4,c	;volatile
 18293   003CA4  D011               	goto	i2l6340
 18294                           
 18295                           ; BSR set to: 0
 18296   003CA6  0E05               	movlw	5
 18297   003CA8  187D               	xorwf	_Cooking_Mode^0,w,c
 18298   003CAA  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18299   003CAC  B4D8               	btfsc	status,2,c
 18300   003CAE  D00C               	goto	i2l6340
 18301                           
 18302                           ; BSR set to: 0
 18303   003CB0  0E06               	movlw	6
 18304   003CB2  187D               	xorwf	_Cooking_Mode^0,w,c
 18305   003CB4  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18306   003CB6  B4D8               	btfsc	status,2,c
 18307   003CB8  D007               	goto	i2l6340
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;Cooking_Main.c: 293: count_min--;
 18311   003CBA  07CC               	decf	_count_min& (0+255),f,b
 18312   003CBC  A0D8               	btfss	status,0,c
 18313   003CBE  07CD               	decf	(_count_min+1)& (0+255),f,b
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;Cooking_Main.c: 294: count_sec = 59;
 18317   003CC0  0E00               	movlw	0
 18318   003CC2  6FCF               	movwf	(_count_sec+1)& (0+255),b
 18319   003CC4  0E3B               	movlw	59
 18320   003CC6  6FCE               	movwf	_count_sec& (0+255),b
 18321   003CC8                     i2l6340:
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;Cooking_Main.c: 295: };Cooking_Main.c: 296: if(count_min <= 0 && !PORTBbits.RB4 && Cook
      +                          ing_Mode != 5 && Cooking_Mode != 6) {
 18325   003CC8  BFCD               	btfsc	(_count_min+1)& (0+255),7,b
 18326   003CCA  D005               	goto	i2u729_40
 18327   003CCC  51CD               	movf	(_count_min+1)& (0+255),w,b
 18328   003CCE  E116               	bnz	i2l6352
 18329   003CD0  05CC               	decf	_count_min& (0+255),w,b
 18330   003CD2  B0D8               	btfsc	status,0,c
 18331   003CD4  D013               	goto	i2l6352
 18332   003CD6                     i2u729_40:
 18333                           
 18334                           ; BSR set to: 0
 18335   003CD6  B881               	btfsc	129,4,c	;volatile
 18336   003CD8  D011               	goto	i2l6352
 18337                           
 18338                           ; BSR set to: 0
 18339   003CDA  0E05               	movlw	5
 18340   003CDC  187D               	xorwf	_Cooking_Mode^0,w,c
 18341   003CDE  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18342   003CE0  B4D8               	btfsc	status,2,c
 18343   003CE2  D00C               	goto	i2l6352
 18344                           
 18345                           ; BSR set to: 0
 18346   003CE4  0E06               	movlw	6
 18347   003CE6  187D               	xorwf	_Cooking_Mode^0,w,c
 18348   003CE8  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18349   003CEA  B4D8               	btfsc	status,2,c
 18350   003CEC  D007               	goto	i2l6352
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;Cooking_Main.c: 297: count_hour--;
 18354   003CEE  07CA               	decf	_count_hour& (0+255),f,b
 18355   003CF0  A0D8               	btfss	status,0,c
 18356   003CF2  07CB               	decf	(_count_hour+1)& (0+255),f,b
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;Cooking_Main.c: 298: count_min = 59;
 18360   003CF4  0E00               	movlw	0
 18361   003CF6  6FCD               	movwf	(_count_min+1)& (0+255),b
 18362   003CF8  0E3B               	movlw	59
 18363   003CFA  6FCC               	movwf	_count_min& (0+255),b
 18364   003CFC                     i2l6352:
 18365                           
 18366                           ; BSR set to: 0
 18367                           ;Cooking_Main.c: 299: };Cooking_Main.c: 300: if(count_hour <= 0 && !PORTBbits.RB4 && Coo
      +                          king_Mode != 5 && Cooking_Mode != 6){
 18368   003CFC  BFCB               	btfsc	(_count_hour+1)& (0+255),7,b
 18369   003CFE  D005               	goto	i2u733_40
 18370   003D00  51CB               	movf	(_count_hour+1)& (0+255),w,b
 18371   003D02  E113               	bnz	i2l298
 18372   003D04  05CA               	decf	_count_hour& (0+255),w,b
 18373   003D06  B0D8               	btfsc	status,0,c
 18374   003D08  0012               	return	
 18375   003D0A                     i2u733_40:
 18376                           
 18377                           ; BSR set to: 0
 18378   003D0A  B881               	btfsc	129,4,c	;volatile
 18379   003D0C  0012               	return	
 18380                           
 18381                           ; BSR set to: 0
 18382   003D0E  0E05               	movlw	5
 18383   003D10  187D               	xorwf	_Cooking_Mode^0,w,c
 18384   003D12  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18385   003D14  B4D8               	btfsc	status,2,c
 18386   003D16  0012               	return	
 18387                           
 18388                           ; BSR set to: 0
 18389   003D18  0E06               	movlw	6
 18390   003D1A  187D               	xorwf	_Cooking_Mode^0,w,c
 18391   003D1C  107E               	iorwf	(_Cooking_Mode+1)^0,w,c
 18392   003D1E  B4D8               	btfsc	status,2,c
 18393   003D20  0012               	return	
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;Cooking_Main.c: 301: count_hour = 5;
 18397   003D22  0E00               	movlw	0
 18398   003D24  6FCB               	movwf	(_count_hour+1)& (0+255),b
 18399   003D26  0E05               	movlw	5
 18400   003D28  6FCA               	movwf	_count_hour& (0+255),b
 18401   003D2A                     i2l298:
 18402                           
 18403                           ; BSR set to: 0
 18404   003D2A  0012               	return		;funcret
 18405   003D2C                     __end_ofi2_set_baoundares:
 18406                           	callstack 0
 18407                           
 18408 ;; *************** function i2_lcd_puts *****************
 18409 ;; Defined at:
 18410 ;;		line 120 in file "lcd_x8.c"
 18411 ;; Parameters:    Size  Location     Type
 18412 ;;  s               2   14[COMRAM] PTR unsigned char 
 18413 ;;		 -> i2update_lcd_Line4@Buffer(16), i2update_lcd_Line3@Buffer(16), i2update_lcd_Line2@Buffer(16), i2update_lcd_Line1@
      +Buffer(16), 
 18414 ;;		 -> update_lcd_Line4@Buffer(16), update_lcd_Line3@Buffer(16), update_lcd_Line2@Buffer(16), update_lcd_Line1@Buffer(1
      +6), 
 18415 ;; Auto vars:     Size  Location     Type
 18416 ;;		None
 18417 ;; Return value:  Size  Location     Type
 18418 ;;                  1    wreg      void 
 18419 ;; Registers used:
 18420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18421 ;; Tracked objects:
 18422 ;;		On entry : 0/0
 18423 ;;		On exit  : 0/0
 18424 ;;		Unchanged: 0/0
 18425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18430 ;;Total ram usage:        2 bytes
 18431 ;; Hardware stack levels used: 1
 18432 ;; Hardware stack levels required when called: 5
 18433 ;; This function calls:
 18434 ;;		i2_lcd_putc
 18435 ;; This function is called by:
 18436 ;;		i2_update_lcd_Line1
 18437 ;;		i2_update_lcd_Line2
 18438 ;;		i2_update_lcd_Line3
 18439 ;;		i2_update_lcd_Line4
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443                           	psect	text80
 18444   005248                     __ptext80:
 18445                           	callstack 0
 18446   005248                     i2_lcd_puts:
 18447                           	callstack 13
 18448                           
 18449                           ;lcd_x8.c: 121: while (*s) {
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;incstack = 0
 18453   005248  D009               	goto	i2l8894
 18454   00524A                     i2l8890:
 18455                           
 18456                           ;lcd_x8.c: 122: lcd_putc(*s);
 18457   00524A  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 18458   00524E  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 18459   005252  50DF               	movf	indf2,w,c
 18460   005254  EC1E  F026         	call	i2_lcd_putc
 18461                           
 18462                           ;lcd_x8.c: 123: s++;
 18463   005258  4A0F               	infsnz	i2lcd_puts@s^0,f,c
 18464   00525A  2A10               	incf	(i2lcd_puts@s+1)^0,f,c
 18465   00525C                     i2l8894:
 18466   00525C  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 18467   005260  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 18468   005264  50DF               	movf	indf2,w,c
 18469   005266  B4D8               	btfsc	status,2,c
 18470   005268  0012               	return	
 18471   00526A  D7EF               	goto	i2l8890
 18472   00526C                     __end_ofi2_lcd_puts:
 18473                           	callstack 0
 18474                           
 18475 ;; *************** function i2_lcd_putc *****************
 18476 ;; Defined at:
 18477 ;;		line 106 in file "lcd_x8.c"
 18478 ;; Parameters:    Size  Location     Type
 18479 ;;  c               1    wreg     unsigned char 
 18480 ;; Auto vars:     Size  Location     Type
 18481 ;;  c               1   13[COMRAM] unsigned char 
 18482 ;; Return value:  Size  Location     Type
 18483 ;;                  1    wreg      void 
 18484 ;; Registers used:
 18485 ;;		wreg, status,2, status,0, cstack
 18486 ;; Tracked objects:
 18487 ;;		On entry : 0/0
 18488 ;;		On exit  : 0/0
 18489 ;;		Unchanged: 0/0
 18490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18495 ;;Total ram usage:        1 bytes
 18496 ;; Hardware stack levels used: 1
 18497 ;; Hardware stack levels required when called: 4
 18498 ;; This function calls:
 18499 ;;		i2_delay_ms
 18500 ;;		i2_lcd_gotoxy
 18501 ;;		i2_lcd_send_byte
 18502 ;; This function is called by:
 18503 ;;		i2_lcd_puts
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text81
 18508   004C3C                     __ptext81:
 18509                           	callstack 0
 18510   004C3C                     i2_lcd_putc:
 18511                           	callstack 13
 18512                           
 18513                           ;incstack = 0
 18514                           ;i2lcd_putc@c stored from wreg
 18515   004C3C  6E0E               	movwf	i2lcd_putc@c^0,c
 18516                           
 18517                           ;lcd_x8.c: 107: switch (c) {
 18518   004C3E  D01E               	goto	i2l5652
 18519   004C40                     i2l5642:
 18520   004C40  0E01               	movlw	1
 18521   004C42  6E09               	movwf	i2lcd_send_byte@n^0,c
 18522   004C44  0E00               	movlw	0
 18523   004C46  EC96  F026         	call	i2_lcd_send_byte
 18524                           
 18525                           ;lcd_x8.c: 109: delay_ms(2);
 18526   004C4A  0E00               	movlw	0
 18527   004C4C  6E02               	movwf	(i2delay_ms@n+1)^0,c
 18528   004C4E  0E02               	movlw	2
 18529   004C50  6E01               	movwf	i2delay_ms@n^0,c
 18530   004C52  ECED  F028         	call	i2_delay_ms	;wreg free
 18531                           
 18532                           ;lcd_x8.c: 110: break;
 18533   004C56  0012               	return	
 18534   004C58                     i2l5644:
 18535   004C58  0E02               	movlw	2
 18536   004C5A  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 18537   004C5C  0E01               	movlw	1
 18538   004C5E  ECFD  F026         	call	i2_lcd_gotoxy
 18539                           
 18540                           ;lcd_x8.c: 112: break;
 18541   004C62  0012               	return	
 18542   004C64                     i2l5646:
 18543   004C64  0E10               	movlw	16
 18544   004C66  6E09               	movwf	i2lcd_send_byte@n^0,c
 18545   004C68  0E00               	movlw	0
 18546   004C6A  EC96  F026         	call	i2_lcd_send_byte
 18547                           
 18548                           ;lcd_x8.c: 114: break;
 18549   004C6E  0012               	return	
 18550   004C70                     i2l5648:
 18551   004C70  C00E  F009         	movff	i2lcd_putc@c,i2lcd_send_byte@n
 18552   004C74  0E01               	movlw	1
 18553   004C76  EC96  F026         	call	i2_lcd_send_byte
 18554                           
 18555                           ;lcd_x8.c: 116: break;
 18556   004C7A  0012               	return	
 18557   004C7C                     i2l5652:
 18558   004C7C  500E               	movf	i2lcd_putc@c^0,w,c
 18559                           
 18560                           ; Switch size 1, requested type "simple"
 18561                           ; Number of cases is 3, Range of values is 8 to 12
 18562                           ; switch strategies available:
 18563                           ; Name         Instructions Cycles
 18564                           ; simple_byte           10     6 (average)
 18565                           ;	Chosen strategy is simple_byte
 18566   004C7E  0A08               	xorlw	8	; case 8
 18567   004C80  B4D8               	btfsc	status,2,c
 18568   004C82  D7F0               	goto	i2l5646
 18569   004C84  0A02               	xorlw	2	; case 10
 18570   004C86  B4D8               	btfsc	status,2,c
 18571   004C88  D7E7               	goto	i2l5644
 18572   004C8A  0A06               	xorlw	6	; case 12
 18573   004C8C  B4D8               	btfsc	status,2,c
 18574   004C8E  D7D8               	goto	i2l5642
 18575   004C90  D7EF               	goto	i2l5648
 18576   004C92                     __end_ofi2_lcd_putc:
 18577                           	callstack 0
 18578                           
 18579 ;; *************** function i2_lcd_gotoxy *****************
 18580 ;; Defined at:
 18581 ;;		line 89 in file "lcd_x8.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;  x               1    wreg     unsigned char 
 18584 ;;  y               1   10[COMRAM] unsigned char 
 18585 ;; Auto vars:     Size  Location     Type
 18586 ;;  x               1   11[COMRAM] unsigned char 
 18587 ;;  address         1   12[COMRAM] unsigned char 
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0, cstack
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/1
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;Total ram usage:        3 bytes
 18602 ;; Hardware stack levels used: 1
 18603 ;; Hardware stack levels required when called: 3
 18604 ;; This function calls:
 18605 ;;		i2_lcd_send_byte
 18606 ;; This function is called by:
 18607 ;;		i2_lcd_putc
 18608 ;;		i2_update_lcd_Line1
 18609 ;;		i2_update_lcd_Line2
 18610 ;;		i2_update_lcd_Line3
 18611 ;;		i2_update_lcd_Line4
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           	psect	text82
 18616   004DFA                     __ptext82:
 18617                           	callstack 0
 18618   004DFA                     i2_lcd_gotoxy:
 18619                           	callstack 13
 18620                           
 18621                           ;incstack = 0
 18622                           ;i2lcd_gotoxy@x stored from wreg
 18623   004DFA  6E0C               	movwf	i2lcd_gotoxy@x^0,c
 18624                           
 18625                           ;lcd_x8.c: 90: unsigned char address;;lcd_x8.c: 92: switch (y) {
 18626   004DFC  D009               	goto	i2l5136
 18627   004DFE                     i2l5126:
 18628   004DFE  0E80               	movlw	128
 18629   004E00  D005               	goto	L47
 18630   004E02                     i2l5128:
 18631   004E02  0EC0               	movlw	192
 18632   004E04  D003               	goto	L47
 18633   004E06                     i2l5130:
 18634   004E06  0E90               	movlw	144
 18635   004E08  D001               	goto	L47
 18636   004E0A                     i2l5132:
 18637   004E0A  0ED0               	movlw	208
 18638   004E0C                     L47:
 18639   004E0C  6E0D               	movwf	i2lcd_gotoxy@address^0,c
 18640                           
 18641                           ;lcd_x8.c: 100: break;
 18642   004E0E  D00D               	goto	i2l5138
 18643   004E10                     i2l5136:
 18644   004E10  500B               	movf	i2lcd_gotoxy@y^0,w,c
 18645                           
 18646                           ; Switch size 1, requested type "simple"
 18647                           ; Number of cases is 4, Range of values is 1 to 4
 18648                           ; switch strategies available:
 18649                           ; Name         Instructions Cycles
 18650                           ; simple_byte           13     7 (average)
 18651                           ;	Chosen strategy is simple_byte
 18652   004E12  0A01               	xorlw	1	; case 1
 18653   004E14  B4D8               	btfsc	status,2,c
 18654   004E16  D7F3               	goto	i2l5126
 18655   004E18  0A03               	xorlw	3	; case 2
 18656   004E1A  B4D8               	btfsc	status,2,c
 18657   004E1C  D7F2               	goto	i2l5128
 18658   004E1E  0A01               	xorlw	1	; case 3
 18659   004E20  B4D8               	btfsc	status,2,c
 18660   004E22  D7F1               	goto	i2l5130
 18661   004E24  0A07               	xorlw	7	; case 4
 18662   004E26  B4D8               	btfsc	status,2,c
 18663   004E28  D7F0               	goto	i2l5132
 18664   004E2A                     i2l5138:
 18665                           
 18666                           ;lcd_x8.c: 102: address += x - 1;
 18667   004E2A  040C               	decf	i2lcd_gotoxy@x^0,w,c
 18668   004E2C  260D               	addwf	i2lcd_gotoxy@address^0,f,c
 18669                           
 18670                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
 18671   004E2E  500D               	movf	i2lcd_gotoxy@address^0,w,c
 18672   004E30  0980               	iorlw	128
 18673   004E32  6E09               	movwf	i2lcd_send_byte@n^0,c
 18674   004E34  0E00               	movlw	0
 18675   004E36  EC96  F026         	call	i2_lcd_send_byte
 18676   004E3A  0012               	return		;funcret
 18677   004E3C                     __end_ofi2_lcd_gotoxy:
 18678                           	callstack 0
 18679                           
 18680 ;; *************** function i2_lcd_send_byte *****************
 18681 ;; Defined at:
 18682 ;;		line 39 in file "lcd_x8.c"
 18683 ;; Parameters:    Size  Location     Type
 18684 ;;  cm_data         1    wreg     unsigned char 
 18685 ;;  n               1    8[COMRAM] unsigned char 
 18686 ;; Auto vars:     Size  Location     Type
 18687 ;;  cm_data         1    9[COMRAM] unsigned char 
 18688 ;; Return value:  Size  Location     Type
 18689 ;;                  1    wreg      void 
 18690 ;; Registers used:
 18691 ;;		wreg, status,2, status,0, cstack
 18692 ;; Tracked objects:
 18693 ;;		On entry : 0/0
 18694 ;;		On exit  : 0/0
 18695 ;;		Unchanged: 0/0
 18696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18701 ;;Total ram usage:        2 bytes
 18702 ;; Hardware stack levels used: 1
 18703 ;; Hardware stack levels required when called: 2
 18704 ;; This function calls:
 18705 ;;		i2_delay_cycles
 18706 ;;		i2_delay_ms
 18707 ;;		i2_lcd_send_nibble
 18708 ;; This function is called by:
 18709 ;;		i2_lcd_gotoxy
 18710 ;;		i2_lcd_putc
 18711 ;; This function uses a non-reentrant model
 18712 ;;
 18713                           
 18714                           	psect	text83
 18715   004D2C                     __ptext83:
 18716                           	callstack 0
 18717   004D2C                     i2_lcd_send_byte:
 18718                           	callstack 14
 18719                           
 18720                           ;incstack = 0
 18721                           ;i2lcd_send_byte@cm_data stored from wreg
 18722   004D2C  6E0A               	movwf	i2lcd_send_byte@cm_data^0,c
 18723                           
 18724                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 18725   004D2E  B00A               	btfsc	i2lcd_send_byte@cm_data^0,0,c
 18726   004D30  D002               	bra	i2u525_45
 18727   004D32  9484               	bcf	132,2,c	;volatile
 18728   004D34  D001               	bra	i2u525_46
 18729   004D36                     i2u525_45:
 18730   004D36  8484               	bsf	132,2,c	;volatile
 18731   004D38                     i2u525_46:
 18732                           
 18733                           ;lcd_x8.c: 44: delay_cycles(1);
 18734   004D38  0E01               	movlw	1
 18735   004D3A  EC3A  F028         	call	i2_delay_cycles
 18736                           
 18737                           ;lcd_x8.c: 46: delay_cycles(1);
 18738   004D3E  0E01               	movlw	1
 18739   004D40  EC3A  F028         	call	i2_delay_cycles
 18740                           
 18741                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 18742   004D44  9284               	bcf	132,1,c	;volatile
 18743                           
 18744                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 18745   004D46  3809               	swapf	i2lcd_send_byte@n^0,w,c
 18746   004D48  0B0F               	andlw	15
 18747   004D4A  EC47  F029         	call	i2_lcd_send_nibble
 18748                           
 18749                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 18750   004D4E  5009               	movf	i2lcd_send_byte@n^0,w,c
 18751   004D50  0B0F               	andlw	15
 18752   004D52  EC47  F029         	call	i2_lcd_send_nibble
 18753                           
 18754                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 18755   004D56  500A               	movf	i2lcd_send_byte@cm_data^0,w,c
 18756   004D58  B4D8               	btfsc	status,2,c
 18757   004D5A  D005               	goto	i2l5032
 18758   004D5C  0E32               	movlw	50
 18759   004D5E                     i2u1281_47:
 18760   004D5E  0004               	clrwdt	
 18761   004D60  2EE8               	decfsz	wreg,f,c
 18762   004D62  D7FD               	bra	i2u1281_47
 18763   004D64  0012               	return	
 18764   004D66                     i2l5032:
 18765                           
 18766                           ;lcd_x8.c: 51: else;lcd_x8.c: 52: delay_ms(2);
 18767   004D66  0E00               	movlw	0
 18768   004D68  6E02               	movwf	(i2delay_ms@n+1)^0,c
 18769   004D6A  0E02               	movlw	2
 18770   004D6C  6E01               	movwf	i2delay_ms@n^0,c
 18771   004D6E  ECED  F028         	call	i2_delay_ms	;wreg free
 18772   004D72  0012               	return		;funcret
 18773   004D74                     __end_ofi2_lcd_send_byte:
 18774                           	callstack 0
 18775                           
 18776 ;; *************** function i2_lcd_send_nibble *****************
 18777 ;; Defined at:
 18778 ;;		line 29 in file "lcd_x8.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;  n               1    wreg     unsigned char 
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;  n               1    7[COMRAM] unsigned char 
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      void 
 18785 ;; Registers used:
 18786 ;;		wreg, status,2, status,0, cstack
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18796 ;;Total ram usage:        2 bytes
 18797 ;; Hardware stack levels used: 1
 18798 ;; Hardware stack levels required when called: 1
 18799 ;; This function calls:
 18800 ;;		i2_delay_cycles
 18801 ;; This function is called by:
 18802 ;;		i2_lcd_send_byte
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           	psect	text84
 18807   00528E                     __ptext84:
 18808                           	callstack 0
 18809   00528E                     i2_lcd_send_nibble:
 18810                           	callstack 14
 18811                           
 18812                           ;incstack = 0
 18813                           ;i2lcd_send_nibble@n stored from wreg
 18814   00528E  6E08               	movwf	i2lcd_send_nibble@n^0,c
 18815                           
 18816                           ;lcd_x8.c: 31: lcd.data = n;
 18817   005290  C008  F007         	movff	i2lcd_send_nibble@n,??i2_lcd_send_nibble
 18818   005294  3A07               	swapf	??i2_lcd_send_nibble^0,f,c
 18819   005296  5083               	movf	131,w,c
 18820   005298  1807               	xorwf	??i2_lcd_send_nibble^0,w,c
 18821   00529A  0B0F               	andlw	-241
 18822   00529C  1807               	xorwf	??i2_lcd_send_nibble^0,w,c
 18823   00529E  6E83               	movwf	131,c
 18824                           
 18825                           ;lcd_x8.c: 33: delay_cycles(1);
 18826   0052A0  0E01               	movlw	1
 18827   0052A2  EC3A  F028         	call	i2_delay_cycles
 18828                           
 18829                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 18830   0052A6  8284               	bsf	132,1,c	;volatile
 18831                           
 18832                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 18833   0052A8  0004               	clrwdt	
 18834   0052AA  F000               	nop		;2 cycle nop
 18835                           
 18836                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 18837   0052AC  9284               	bcf	132,1,c	;volatile
 18838   0052AE  0012               	return		;funcret
 18839   0052B0                     __end_ofi2_lcd_send_nibble:
 18840                           	callstack 0
 18841                           
 18842 ;; *************** function i2_delay_cycles *****************
 18843 ;; Defined at:
 18844 ;;		line 20 in file "lcd_x8.c"
 18845 ;; Parameters:    Size  Location     Type
 18846 ;;  n               1    wreg     unsigned char 
 18847 ;; Auto vars:     Size  Location     Type
 18848 ;;  n               1    3[COMRAM] unsigned char 
 18849 ;;  x               2    4[COMRAM] int 
 18850 ;; Return value:  Size  Location     Type
 18851 ;;                  1    wreg      void 
 18852 ;; Registers used:
 18853 ;;		wreg, status,2, status,0
 18854 ;; Tracked objects:
 18855 ;;		On entry : 0/0
 18856 ;;		On exit  : 0/0
 18857 ;;		Unchanged: 0/0
 18858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18860 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18861 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18863 ;;Total ram usage:        6 bytes
 18864 ;; Hardware stack levels used: 1
 18865 ;; This function calls:
 18866 ;;		Nothing
 18867 ;; This function is called by:
 18868 ;;		i2_lcd_send_nibble
 18869 ;;		i2_lcd_send_byte
 18870 ;; This function uses a non-reentrant model
 18871 ;;
 18872                           
 18873                           	psect	text85
 18874   005074                     __ptext85:
 18875                           	callstack 0
 18876   005074                     i2_delay_cycles:
 18877                           	callstack 14
 18878                           
 18879                           ;incstack = 0
 18880                           ;i2delay_cycles@n stored from wreg
 18881   005074  6E04               	movwf	i2delay_cycles@n^0,c
 18882                           
 18883                           ;lcd_x8.c: 21: int x;;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 18884   005076  0E00               	movlw	0
 18885   005078  6E06               	movwf	(i2delay_cycles@x+1)^0,c
 18886   00507A  0E00               	movlw	0
 18887   00507C  6E05               	movwf	i2delay_cycles@x^0,c
 18888   00507E  D003               	goto	i2l4976
 18889   005080                     i2l18:
 18890   005080  0004               	clrwdt		;# 
 18891   005082  4A05               	infsnz	i2delay_cycles@x^0,f,c
 18892   005084  2A06               	incf	(i2delay_cycles@x+1)^0,f,c
 18893   005086                     i2l4976:
 18894   005086  5004               	movf	i2delay_cycles@n^0,w,c
 18895   005088  6E01               	movwf	??i2_delay_cycles^0,c
 18896   00508A  6A02               	clrf	(??i2_delay_cycles+1)^0,c
 18897   00508C  5005               	movf	i2delay_cycles@x^0,w,c
 18898   00508E  5C01               	subwf	??i2_delay_cycles^0,w,c
 18899   005090  5002               	movf	(??i2_delay_cycles+1)^0,w,c
 18900   005092  0A80               	xorlw	128
 18901   005094  6E03               	movwf	(??i2_delay_cycles+2)^0,c
 18902   005096  5006               	movf	(i2delay_cycles@x+1)^0,w,c
 18903   005098  0A80               	xorlw	128
 18904   00509A  5803               	subwfb	(??i2_delay_cycles+2)^0,w,c
 18905   00509C  A0D8               	btfss	status,0,c
 18906   00509E  0012               	return	
 18907   0050A0  D7EF               	goto	i2l18
 18908   0050A2                     __end_ofi2_delay_cycles:
 18909                           	callstack 0
 18910                           
 18911 ;; *************** function i2_reloadTimer0 *****************
 18912 ;; Defined at:
 18913 ;;		line 105 in file "Cooking_Main.c"
 18914 ;; Parameters:    Size  Location     Type
 18915 ;;		None
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;		None
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  1    wreg      void 
 18920 ;; Registers used:
 18921 ;;		wreg, status,2
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18931 ;;Total ram usage:        0 bytes
 18932 ;; Hardware stack levels used: 1
 18933 ;; This function calls:
 18934 ;;		Nothing
 18935 ;; This function is called by:
 18936 ;;		_Timer0_Int_Handling
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940                           	psect	text86
 18941   00533A                     __ptext86:
 18942                           	callstack 0
 18943   00533A                     i2_reloadTimer0:
 18944                           	callstack 20
 18945                           
 18946                           ;Cooking_Main.c: 107: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 18947                           
 18948                           ;incstack = 0
 18949   00533A  0E0B               	movlw	11
 18950   00533C  6ED7               	movwf	215,c	;volatile
 18951                           
 18952                           ;Cooking_Main.c: 108: TMR0L = (unsigned char)(3036 & 0x00FF );
 18953   00533E  0EDC               	movlw	220
 18954   005340  6ED6               	movwf	214,c	;volatile
 18955   005342  0012               	return		;funcret
 18956   005344                     __end_ofi2_reloadTimer0:
 18957                           	callstack 0
 18958                           
 18959 ;; *************** function _Stop_Int_Handling *****************
 18960 ;; Defined at:
 18961 ;;		line 226 in file "Cooking_Main.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;		None
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;		None
 18966 ;; Return value:  Size  Location     Type
 18967 ;;                  1    wreg      void 
 18968 ;; Registers used:
 18969 ;;		wreg, status,2, status,0, cstack
 18970 ;; Tracked objects:
 18971 ;;		On entry : 0/0
 18972 ;;		On exit  : 0/0
 18973 ;;		Unchanged: 0/0
 18974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18979 ;;Total ram usage:        0 bytes
 18980 ;; Hardware stack levels used: 1
 18981 ;; Hardware stack levels required when called: 1
 18982 ;; This function calls:
 18983 ;;		i2_delay_ms
 18984 ;; This function is called by:
 18985 ;;		_highIsr
 18986 ;; This function uses a non-reentrant model
 18987 ;;
 18988                           
 18989                           	psect	text87
 18990   0050F4                     __ptext87:
 18991                           	callstack 0
 18992   0050F4                     _Stop_Int_Handling:
 18993                           	callstack 20
 18994                           
 18995                           ;Cooking_Main.c: 228: INTCON3bits.INT2F = 0;
 18996                           
 18997                           ;incstack = 0
 18998   0050F4  92F0               	bcf	240,1,c	;volatile
 18999                           
 19000                           ;Cooking_Main.c: 229: delay_ms(20);
 19001   0050F6  0E00               	movlw	0
 19002   0050F8  6E02               	movwf	(i2delay_ms@n+1)^0,c
 19003   0050FA  0E14               	movlw	20
 19004   0050FC  6E01               	movwf	i2delay_ms@n^0,c
 19005   0050FE  ECED  F028         	call	i2_delay_ms	;wreg free
 19006                           
 19007                           ;Cooking_Main.c: 230: if(PORTBbits.RB2)
 19008   005102  B481               	btfsc	129,2,c	;volatile
 19009   005104  0012               	return	
 19010                           
 19011                           ;Cooking_Main.c: 233: Cooking = 0;
 19012   005106  0E00               	movlw	0
 19013   005108  0101               	movlb	1	; () banked
 19014   00510A  6F8C               	movwf	(_Cooking+1)& (0+255),b
 19015   00510C  0E00               	movlw	0
 19016   00510E  6F8B               	movwf	_Cooking& (0+255),b
 19017                           
 19018                           ;Cooking_Main.c: 234: Heating = 0;
 19019   005110  0E00               	movlw	0
 19020   005112  6F8A               	movwf	(_Heating+1)& (0+255),b
 19021   005114  0E00               	movlw	0
 19022   005116  6F89               	movwf	_Heating& (0+255),b
 19023                           
 19024                           ; BSR set to: 1
 19025                           ;Cooking_Main.c: 235: T0CONbits.TMR0ON = 0;
 19026   005118  9ED5               	bcf	213,7,c	;volatile
 19027   00511A  0012               	return		;funcret
 19028   00511C                     __end_of_Stop_Int_Handling:
 19029                           	callstack 0
 19030                           
 19031 ;; *************** function _Start_Int_Handling *****************
 19032 ;; Defined at:
 19033 ;;		line 212 in file "Cooking_Main.c"
 19034 ;; Parameters:    Size  Location     Type
 19035 ;;		None
 19036 ;; Auto vars:     Size  Location     Type
 19037 ;;		None
 19038 ;; Return value:  Size  Location     Type
 19039 ;;                  1    wreg      void 
 19040 ;; Registers used:
 19041 ;;		wreg, status,2, status,0, cstack
 19042 ;; Tracked objects:
 19043 ;;		On entry : 0/0
 19044 ;;		On exit  : 0/0
 19045 ;;		Unchanged: 0/0
 19046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19051 ;;Total ram usage:        0 bytes
 19052 ;; Hardware stack levels used: 1
 19053 ;; Hardware stack levels required when called: 1
 19054 ;; This function calls:
 19055 ;;		i2_delay_ms
 19056 ;; This function is called by:
 19057 ;;		_highIsr
 19058 ;; This function uses a non-reentrant model
 19059 ;;
 19060                           
 19061                           	psect	text88
 19062   004E3C                     __ptext88:
 19063                           	callstack 0
 19064   004E3C                     _Start_Int_Handling:
 19065                           	callstack 20
 19066                           
 19067                           ;Cooking_Main.c: 214: INTCON3bits.INT1F = 0;
 19068                           
 19069                           ;incstack = 0
 19070   004E3C  90F0               	bcf	240,0,c	;volatile
 19071                           
 19072                           ;Cooking_Main.c: 215: delay_ms(20);
 19073   004E3E  0E00               	movlw	0
 19074   004E40  6E02               	movwf	(i2delay_ms@n+1)^0,c
 19075   004E42  0E14               	movlw	20
 19076   004E44  6E01               	movwf	i2delay_ms@n^0,c
 19077   004E46  ECED  F028         	call	i2_delay_ms	;wreg free
 19078                           
 19079                           ;Cooking_Main.c: 216: if(PORTBbits.RB1)
 19080   004E4A  B281               	btfsc	129,1,c	;volatile
 19081   004E4C  0012               	return	
 19082                           
 19083                           ;Cooking_Main.c: 218: if(count_hour != 0 || count_min != 0 || count_sec != 0)
 19084   004E4E  0100               	movlb	0	; () banked
 19085   004E50  51CA               	movf	_count_hour& (0+255),w,b
 19086   004E52  11CB               	iorwf	(_count_hour+1)& (0+255),w,b
 19087   004E54  A4D8               	btfss	status,2,c
 19088   004E56  D008               	goto	i2u995_40
 19089                           
 19090                           ; BSR set to: 0
 19091   004E58  51CC               	movf	_count_min& (0+255),w,b
 19092   004E5A  11CD               	iorwf	(_count_min+1)& (0+255),w,b
 19093   004E5C  A4D8               	btfss	status,2,c
 19094   004E5E  D004               	goto	i2u995_40
 19095                           
 19096                           ; BSR set to: 0
 19097   004E60  51CE               	movf	_count_sec& (0+255),w,b
 19098   004E62  11CF               	iorwf	(_count_sec+1)& (0+255),w,b
 19099   004E64  B4D8               	btfsc	status,2,c
 19100   004E66  0012               	return	
 19101   004E68                     i2u995_40:
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;Cooking_Main.c: 219: {;Cooking_Main.c: 220: Cooking = 1;
 19105   004E68  0E00               	movlw	0
 19106   004E6A  0101               	movlb	1	; () banked
 19107   004E6C  6F8C               	movwf	(_Cooking+1)& (0+255),b
 19108   004E6E  0E01               	movlw	1
 19109   004E70  6F8B               	movwf	_Cooking& (0+255),b
 19110                           
 19111                           ;Cooking_Main.c: 221: Heating = 1;
 19112   004E72  0E00               	movlw	0
 19113   004E74  6F8A               	movwf	(_Heating+1)& (0+255),b
 19114   004E76  0E01               	movlw	1
 19115   004E78  6F89               	movwf	_Heating& (0+255),b
 19116                           
 19117                           ; BSR set to: 1
 19118                           ;Cooking_Main.c: 222: T0CONbits.TMR0ON = 1;
 19119   004E7A  8ED5               	bsf	213,7,c	;volatile
 19120   004E7C  0012               	return		;funcret
 19121   004E7E                     __end_of_Start_Int_Handling:
 19122                           	callstack 0
 19123                           
 19124 ;; *************** function i2_delay_ms *****************
 19125 ;; Defined at:
 19126 ;;		line 12 in file "lcd_x8.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;  n               2    0[COMRAM] unsigned int 
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;  x               2    2[COMRAM] int 
 19131 ;; Return value:  Size  Location     Type
 19132 ;;                  1    wreg      void 
 19133 ;; Registers used:
 19134 ;;		wreg, status,2, status,0
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19144 ;;Total ram usage:        4 bytes
 19145 ;; Hardware stack levels used: 1
 19146 ;; This function calls:
 19147 ;;		Nothing
 19148 ;; This function is called by:
 19149 ;;		_setting_Mode_Int_Handling
 19150 ;;		_Start_Int_Handling
 19151 ;;		_Stop_Int_Handling
 19152 ;;		i2_lcd_send_byte
 19153 ;;		i2_lcd_putc
 19154 ;; This function uses a non-reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text89
 19158   0051DA                     __ptext89:
 19159                           	callstack 0
 19160   0051DA                     i2_delay_ms:
 19161                           	callstack 20
 19162                           
 19163                           ;lcd_x8.c: 13: int x;;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 19164                           
 19165                           ;incstack = 0
 19166   0051DA  0E00               	movlw	0
 19167   0051DC  6E04               	movwf	(i2delay_ms@x+1)^0,c
 19168   0051DE  0E00               	movlw	0
 19169   0051E0  6E03               	movwf	i2delay_ms@x^0,c
 19170   0051E2  D007               	goto	i2l11
 19171   0051E4                     i2l4986:
 19172                           
 19173                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 19174   0051E4  0EC8               	movlw	200
 19175   0051E6                     i2u1282_47:
 19176   0051E6  0004               	clrwdt	
 19177   0051E8  0004               	clrwdt	
 19178   0051EA  2EE8               	decfsz	wreg,f,c
 19179   0051EC  D7FC               	bra	i2u1282_47
 19180   0051EE  4A03               	infsnz	i2delay_ms@x^0,f,c
 19181   0051F0  2A04               	incf	(i2delay_ms@x+1)^0,f,c
 19182   0051F2                     i2l11:
 19183   0051F2  5003               	movf	i2delay_ms@x^0,w,c
 19184   0051F4  5C01               	subwf	i2delay_ms@n^0,w,c
 19185   0051F6  5004               	movf	(i2delay_ms@x+1)^0,w,c
 19186   0051F8  5802               	subwfb	(i2delay_ms@n+1)^0,w,c
 19187   0051FA  A0D8               	btfss	status,0,c
 19188   0051FC  0012               	return	
 19189   0051FE  D7F2               	goto	i2l4986
 19190   005200                     __end_ofi2_delay_ms:
 19191                           	callstack 0
 19192                           
 19193                           	psect	rparam
 19194   000000                     
 19195                           	psect	temp
 19196   00007F                     btemp:
 19197                           	callstack 0
 19198   00007F                     	ds	1
 19199   000000                     int$flags	set	btemp
 19200   000000                     wtemp8	set	btemp+1
 19201   000000                     ttemp5	set	btemp+1
 19202   000000                     ttemp6	set	btemp+4
 19203   000000                     ttemp7	set	btemp+8
 19204                           
 19205                           	psect	idloc
 19206                           
 19207                           ;Config register IDLOC0 @ 0x200000
 19208                           ;	unspecified, using default values
 19209   200000                     	org	2097152
 19210   200000  FF                 	db	255
 19211                           
 19212                           ;Config register IDLOC1 @ 0x200001
 19213                           ;	unspecified, using default values
 19214   200001                     	org	2097153
 19215   200001  FF                 	db	255
 19216                           
 19217                           ;Config register IDLOC2 @ 0x200002
 19218                           ;	unspecified, using default values
 19219   200002                     	org	2097154
 19220   200002  FF                 	db	255
 19221                           
 19222                           ;Config register IDLOC3 @ 0x200003
 19223                           ;	unspecified, using default values
 19224   200003                     	org	2097155
 19225   200003  FF                 	db	255
 19226                           
 19227                           ;Config register IDLOC4 @ 0x200004
 19228                           ;	unspecified, using default values
 19229   200004                     	org	2097156
 19230   200004  FF                 	db	255
 19231                           
 19232                           ;Config register IDLOC5 @ 0x200005
 19233                           ;	unspecified, using default values
 19234   200005                     	org	2097157
 19235   200005  FF                 	db	255
 19236                           
 19237                           ;Config register IDLOC6 @ 0x200006
 19238                           ;	unspecified, using default values
 19239   200006                     	org	2097158
 19240   200006  FF                 	db	255
 19241                           
 19242                           ;Config register IDLOC7 @ 0x200007
 19243                           ;	unspecified, using default values
 19244   200007                     	org	2097159
 19245   200007  FF                 	db	255
 19246                           
 19247                           	psect	config
 19248                           
 19249                           ; Padding undefined space
 19250   300000                     	org	3145728
 19251   300000  FF                 	db	255
 19252                           
 19253                           ;Config register CONFIG1H @ 0x300001
 19254                           ;	Oscillator Selection bits
 19255                           ;	OSC = XT, XT oscillator
 19256                           ;	Fail-Safe Clock Monitor Enable bit
 19257                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 19258                           ;	Internal/External Oscillator Switchover bit
 19259                           ;	IESO = OFF, Oscillator Switchover mode disabled
 19260   300001                     	org	3145729
 19261   300001  01                 	db	1
 19262                           
 19263                           ;Config register CONFIG2L @ 0x300002
 19264                           ;	Power-up Timer Enable bit
 19265                           ;	PWRT = OFF, PWRT disabled
 19266                           ;	Brown-out Reset Enable bits
 19267                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 19268                           ;	Brown Out Reset Voltage bits
 19269                           ;	BORV = 3, Minimum setting
 19270   300002                     	org	3145730
 19271   300002  1F                 	db	31
 19272                           
 19273                           ;Config register CONFIG2H @ 0x300003
 19274                           ;	Watchdog Timer Enable bit
 19275                           ;	WDT = ON, WDT enabled
 19276                           ;	Watchdog Timer Postscale Select bits
 19277                           ;	WDTPS = 32768, 1:32768
 19278   300003                     	org	3145731
 19279   300003  1F                 	db	31
 19280                           
 19281                           ; Padding undefined space
 19282   300004                     	org	3145732
 19283   300004  FF                 	db	255
 19284                           
 19285                           ;Config register CONFIG3H @ 0x300005
 19286                           ;	CCP2 MUX bit
 19287                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 19288                           ;	PORTB A/D Enable bit
 19289                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 19290                           ;	Low-Power Timer1 Oscillator Enable bit
 19291                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 19292                           ;	MCLR Pin Enable bit
 19293                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 19294   300005                     	org	3145733
 19295   300005  83                 	db	131
 19296                           
 19297                           ;Config register CONFIG4L @ 0x300006
 19298                           ;	Stack Full/Underflow Reset Enable bit
 19299                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19300                           ;	Single-Supply ICSP Enable bit
 19301                           ;	LVP = ON, Single-Supply ICSP enabled
 19302                           ;	Extended Instruction Set Enable bit
 19303                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 19304                           ;	Background Debugger Enable bit
 19305                           ;	DEBUG = 0x1, unprogrammed default
 19306   300006                     	org	3145734
 19307   300006  85                 	db	133
 19308                           
 19309                           ; Padding undefined space
 19310   300007                     	org	3145735
 19311   300007  FF                 	db	255
 19312                           
 19313                           ;Config register CONFIG5L @ 0x300008
 19314                           ;	Code Protection bit
 19315                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 19316                           ;	Code Protection bit
 19317                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 19318                           ;	Code Protection bit
 19319                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 19320                           ;	Code Protection bit
 19321                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 19322   300008                     	org	3145736
 19323   300008  0F                 	db	15
 19324                           
 19325                           ;Config register CONFIG5H @ 0x300009
 19326                           ;	Boot Block Code Protection bit
 19327                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 19328                           ;	Data EEPROM Code Protection bit
 19329                           ;	CPD = OFF, Data EEPROM not code-protected
 19330   300009                     	org	3145737
 19331   300009  C0                 	db	192
 19332                           
 19333                           ;Config register CONFIG6L @ 0x30000A
 19334                           ;	Write Protection bit
 19335                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 19336                           ;	Write Protection bit
 19337                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 19338                           ;	Write Protection bit
 19339                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 19340                           ;	Write Protection bit
 19341                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 19342   30000A                     	org	3145738
 19343   30000A  0F                 	db	15
 19344                           
 19345                           ;Config register CONFIG6H @ 0x30000B
 19346                           ;	Configuration Register Write Protection bit
 19347                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 19348                           ;	Boot Block Write Protection bit
 19349                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 19350                           ;	Data EEPROM Write Protection bit
 19351                           ;	WRTD = OFF, Data EEPROM not write-protected
 19352   30000B                     	org	3145739
 19353   30000B  E0                 	db	224
 19354                           
 19355                           ;Config register CONFIG7L @ 0x30000C
 19356                           ;	Table Read Protection bit
 19357                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 19358                           ;	Table Read Protection bit
 19359                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 19360                           ;	Table Read Protection bit
 19361                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 19362                           ;	Table Read Protection bit
 19363                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 19364   30000C                     	org	3145740
 19365   30000C  0F                 	db	15
 19366                           
 19367                           ;Config register CONFIG7H @ 0x30000D
 19368                           ;	Boot Block Table Read Protection bit
 19369                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 19370   30000D                     	org	3145741
 19371   30000D  40                 	db	64
 19372                           tosu	equ	0xFFF
 19373                           tosh	equ	0xFFE
 19374                           tosl	equ	0xFFD
 19375                           stkptr	equ	0xFFC
 19376                           pclatu	equ	0xFFB
 19377                           pclath	equ	0xFFA
 19378                           pcl	equ	0xFF9
 19379                           tblptru	equ	0xFF8
 19380                           tblptrh	equ	0xFF7
 19381                           tblptrl	equ	0xFF6
 19382                           tablat	equ	0xFF5
 19383                           prodh	equ	0xFF4
 19384                           prodl	equ	0xFF3
 19385                           indf0	equ	0xFEF
 19386                           postinc0	equ	0xFEE
 19387                           postdec0	equ	0xFED
 19388                           preinc0	equ	0xFEC
 19389                           plusw0	equ	0xFEB
 19390                           fsr0h	equ	0xFEA
 19391                           fsr0l	equ	0xFE9
 19392                           wreg	equ	0xFE8
 19393                           indf1	equ	0xFE7
 19394                           postinc1	equ	0xFE6
 19395                           postdec1	equ	0xFE5
 19396                           preinc1	equ	0xFE4
 19397                           plusw1	equ	0xFE3
 19398                           fsr1h	equ	0xFE2
 19399                           fsr1l	equ	0xFE1
 19400                           bsr	equ	0xFE0
 19401                           indf2	equ	0xFDF
 19402                           postinc2	equ	0xFDE
 19403                           postdec2	equ	0xFDD
 19404                           preinc2	equ	0xFDC
 19405                           plusw2	equ	0xFDB
 19406                           fsr2h	equ	0xFDA
 19407                           fsr2l	equ	0xFD9
 19408                           status	equ	0xFD8

Data Sizes:
    Strings     168
    Constant    194
    Data        4
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128     63      86
    BANK1           256    127     143
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf$1034	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_21(CODE[17]), STR_20(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_19(CODE[7]), sprintf@c(BANK1[1]), ?_sprintf(BANK1[2]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[3]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[4]), STR_3(CODE[3]), STR_2(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_9(CODE[3]), NULL(NULL[0]), 
		 -> STR_7(CODE[18]), STR_4(CODE[18]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), update_lcd_Line4@Buffer(BANK1[16]), NULL(NULL[0]), update_lcd_Line3@Buffer(BANK1[16]), 
		 -> update_lcd_Line2@Buffer(BANK1[16]), update_lcd_Line1@Buffer(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    update_lcd_Line4@MD	PTR unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 

    sp__intToString	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    sp__malloc	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    update_lcd_Line3@HT	PTR unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[3]), STR_5(CODE[4]), 

    update_lcd_Line2@CK	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 16
		 -> update_lcd_Line4@Buffer(BANK1[16]), update_lcd_Line3@Buffer(BANK1[16]), update_lcd_Line2@Buffer(BANK1[16]), update_lcd_Line1@Buffer(BANK1[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _setting_Mode_Int_Handling->i2_delay_ms
    _Timer3_Int_Handling->i2___fttol
    ___lwtoft->i2___ftpack
    i2_update_lcd->i2_update_lcd_Line4
    i2_update_lcd_Line4->i2_sprintf
    i2_update_lcd_Line3->i2_sprintf
    i2_update_lcd_Line2->i2_sprintf
    i2_update_lcd_Line1->i2_sprintf
    i2_sprintf->i2___fttol
    i2_scale->i2___ftmul
    i2___awdiv->i2___awmod
    i2_fround->i2___ftmul
    i2___lbdiv->i2___lbmod
    i2___ftmul->i2___awdiv
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2___ftsub
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2___ftge->i2___ftadd
    i2_lcd_puts->i2_lcd_putc
    i2_lcd_putc->i2_lcd_gotoxy
    i2_lcd_gotoxy->i2_lcd_send_byte
    i2_lcd_send_byte->i2_lcd_send_nibble
    i2_lcd_send_nibble->i2_delay_cycles
    _Stop_Int_Handling->i2_delay_ms
    _Start_Int_Handling->i2_delay_ms

Critical Paths under _main in BANK0

    _sprintf->___llmod
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in BANK0

    i2_update_lcd_Line4->i2_sprintf
    i2_update_lcd_Line3->i2_sprintf
    i2_update_lcd_Line2->i2_sprintf
    i2_update_lcd_Line1->i2_sprintf

Critical Paths under _main in BANK1

    _update_lcd->_update_lcd_Line4
    _update_lcd_Line4->_sprintf
    _update_lcd_Line3->_sprintf
    _update_lcd_Line2->_sprintf
    _update_lcd_Line1->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _read_adc_voltage->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0  314017
                                            121 BANK1      6     6      0
                            ___ftdiv
                            ___ftmul
                           _delay_ms
                         _initTimers
                    _init_adc_no_lib
                          _init_pwm1
                           _lcd_init
                           _lcd_putc
                   _read_adc_voltage
                     _set_baoundares
                         _setupPorts
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           0     0      0  279547
                   _update_lcd_Line1
                   _update_lcd_Line2
                   _update_lcd_Line3
                   _update_lcd_Line4
 ---------------------------------------------------------------------------------
 (2) _update_lcd_Line4                                    27    27      0   70923
                                             97 BANK1     24    24      0
                             ___wmul
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_Line3                                    21    21      0   69531
                                             97 BANK1     21    21      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_Line2                                    21    21      0   69531
                                             97 BANK1     21    21      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_Line1                                    22    22      0   69562
                                             97 BANK1     22    22      0
                         _lcd_gotoxy
                           _lcd_puts
                     _set_baoundares
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             59    49     10   58729
                                             39 BANK1     58    48     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   11109
                                              9 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1513
                                             42 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1705
                                             48 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             42 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              12     9      3    8625
                                              9 BANK1     12     9      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (5) ___lbmod                                              4     3      1     502
                                             42 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     511
                                             46 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    7262
                                             56 BANK0      6     0      6
                                              0 BANK1      9     9      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     455
                                             42 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     598
                                             42 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3520
                                             50 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             55 BANK0      8     0      8
                                              0 BANK1      1     1      0
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     922
                                             42 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     906
                                             16 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6389
                                             33 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5583
                                             21 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     121
                                             42 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     692
                                             42 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _set_baoundares                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             2     0      2    7422
                                             56 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    6907
                                             55 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    2875
                                             52 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                     9     6      3    9588
                                             24 BANK1      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___wmul
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                             42 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1219
                                             42 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4674
                                              9 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3551
                                             50 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3328
                                             42 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    4170
                                             52 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_byte                                        2     1      1    2348
                                             50 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_send_nibble                                      2     2      0      68
                                             48 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (7) _delay_cycles                                         6     6      0      46
                                             42 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) _delay_ms                                             4     2      2    1640
                                             42 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimers                                           0     0      0       0
                       _reloadTimer0
                       _reloadTimer3
 ---------------------------------------------------------------------------------
 (2) _reloadTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reloadTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _highIsr                                             10    10      0   96139
                                            114 COMRAM    10    10      0
                 _Start_Int_Handling
                  _Stop_Int_Handling
                _Timer0_Int_Handling
                _Timer3_Int_Handling
          _setting_Mode_Int_Handling
 ---------------------------------------------------------------------------------
 (10) _setting_Mode_Int_Handling                           0     0      0     176
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (10) _Timer3_Int_Handling                                 2     2      0    4660
                                             74 COMRAM     2     2      0
                    _Heating_Control
                           ___lwtoft
                          i2___ftadd
                           i2___ftge
                          i2___ftsub
                          i2___fttol
                     i2_reloadTimer3
 ---------------------------------------------------------------------------------
 (11) i2_reloadTimer3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) ___lwtoft                                            3     0      3     641
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) _Heating_Control                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Timer0_Int_Handling                                 0     0      0   90951
                     i2_reloadTimer0
                       i2_update_lcd
 ---------------------------------------------------------------------------------
 (11) i2_update_lcd                                        0     0      0   90951
                 i2_update_lcd_Line1
                 i2_update_lcd_Line2
                 i2_update_lcd_Line3
                 i2_update_lcd_Line4
 ---------------------------------------------------------------------------------
 (12) i2_update_lcd_Line4                                 27    27      0   23135
                                             90 COMRAM    24    24      0
                           i2___wmul
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_update_lcd_Line3                                 21    21      0   22595
                                             90 COMRAM    21    21      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_update_lcd_Line2                                 21    21      0   22595
                                             90 COMRAM    21    21      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_update_lcd_Line1                                 22    22      0   22626
                                             90 COMRAM    22    22      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                   i2_set_baoundares
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_sprintf                                          59    49     10   19916
                                             74 COMRAM    16     6     10
                                              0 BANK0     42    42      0
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (14) i2_scale                                             7     4      3    3314
                                             29 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     608
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     664
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (14) i2_fround                                           12     9      3    2321
                                             29 COMRAM    12     9      3
                          i2___ftmul
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (15) i2___lbmod                                           4     3      1     237
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (15) i2___lbdiv                                           4     3      1     240
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftmul                                          15     9      6    1599
                                             14 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                          i2___lbdiv (ARG)
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (14) i2__div_to_l_                                       12     6      6     498
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     367
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2___lltoft                                          9     5      4     638
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___lldiv                                          13     5      8     422
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) i2___fttol                                          15    11      4     356
                                             59 COMRAM    15    11      4
                          i2___ftmul (ARG)
                          i2___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftsub                                           6     0      6    1710
                                             53 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftadd                                          12     6      6    1539
                                             41 COMRAM    12     6      6
                           ___lwtoft (ARG)
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (14) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (11) i2___ftge                                            9     3      6     344
                                             53 COMRAM     9     3      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_set_baoundares                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_lcd_puts                                          2     0      2    1651
                                             14 COMRAM     2     0      2
                         i2_lcd_putc
 ---------------------------------------------------------------------------------
 (14) i2_lcd_putc                                          1     1      0    1411
                                             13 COMRAM     1     1      0
                         i2_delay_ms
                       i2_lcd_gotoxy
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (15) i2_lcd_gotoxy                                        3     2      1     709
                                             10 COMRAM     3     2      1
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (15) i2_lcd_send_byte                                     2     1      1     482
                                              8 COMRAM     2     1      1
                     i2_delay_cycles
                         i2_delay_ms
                  i2_lcd_send_nibble
 ---------------------------------------------------------------------------------
 (16) i2_lcd_send_nibble                                   2     2      0      68
                                              6 COMRAM     2     2      0
                     i2_delay_cycles
 ---------------------------------------------------------------------------------
 (17) i2_delay_cycles                                      6     6      0      46
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (11) i2_reloadTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Stop_Int_Handling                                   0     0      0     176
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (10) _Start_Int_Handling                                  0     0      0     176
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (11) i2_delay_ms                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
   ___ftmul
   _delay_ms
   _initTimers
     _reloadTimer0
     _reloadTimer3
   _init_adc_no_lib
   _init_pwm1
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _read_adc_voltage
     ___awtoft
     ___ftdiv
     ___wmul
     _read_adc_raw_no_lib
   _set_baoundares
   _setupPorts
   _update_lcd
     _update_lcd_Line1
       _lcd_gotoxy
       _lcd_puts
         _lcd_putc
       _set_baoundares
       _sprintf
         ___awdiv
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___ftmul
             ___lbdiv
             ___lbmod
         ___ftge
         ___ftmul
         ___ftneg
         ___ftsub
           ___ftadd
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
           _scale (ARG)
             ___awdiv
             ___awmod
             ___ftmul
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
         ___wmul
         __div_to_l_
         __tdiv_to_l_
         _fround
         _isdigit
         _scale
     _update_lcd_Line2
       _lcd_gotoxy
       _lcd_puts
       _sprintf
     _update_lcd_Line3
       _lcd_gotoxy
       _lcd_puts
       _sprintf
     _update_lcd_Line4
       ___wmul
       _lcd_gotoxy
       _lcd_puts
       _sprintf

 _highIsr (ROOT)
   _Start_Int_Handling
     i2_delay_ms
   _Stop_Int_Handling
     i2_delay_ms
   _Timer0_Int_Handling
     i2_reloadTimer0
     i2_update_lcd
       i2_update_lcd_Line1
         i2_lcd_gotoxy
           i2_lcd_send_byte
             i2_delay_cycles
             i2_delay_ms
             i2_lcd_send_nibble
               i2_delay_cycles
         i2_lcd_puts
           i2_lcd_putc
             i2_delay_ms
             i2_lcd_gotoxy
             i2_lcd_send_byte
         i2_set_baoundares
         i2_sprintf
           i2___awdiv
             i2___awmod (ARG)
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_fround (ARG)
               i2___ftmul
                 i2___awdiv (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lbdiv (ARG)
                   i2___lbmod (ARG)
                 i2___lbmod (ARG)
               i2___lbdiv
               i2___lbmod
           i2___ftge
             ___lwtoft (ARG)
             i2___ftadd (ARG)
           i2___ftmul
           i2___ftneg
           i2___ftsub
             i2___ftadd
             i2___lltoft (ARG)
               i2___ftpack
           i2___fttol
             i2___ftmul (ARG)
             i2___ftsub (ARG)
           i2___lldiv
           i2___llmod
             i2___lldiv (ARG)
           i2___lltoft
           i2___wmul
           i2__div_to_l_
           i2__tdiv_to_l_
           i2_fround
           i2_isdigit
           i2_scale
             i2___awdiv
             i2___awmod
             i2___ftmul
       i2_update_lcd_Line2
         i2_lcd_gotoxy
         i2_lcd_puts
         i2_sprintf
       i2_update_lcd_Line3
         i2_lcd_gotoxy
         i2_lcd_puts
         i2_sprintf
       i2_update_lcd_Line4
         i2___wmul
         i2_lcd_gotoxy
         i2_lcd_puts
         i2_sprintf
   _Timer3_Int_Handling
     _Heating_Control
     ___lwtoft
     i2___ftadd
     i2___ftge
     i2___ftsub
     i2___fttol
     i2_reloadTimer3
   _setting_Mode_Int_Handling
     i2_delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7F      8F       7       55.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3F      56       5       67.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITBIGSFRhhhhhl     18      0       0      38        0.0%
BITBIGSFRhllllh      E      0       0      43        0.0%
BITBIGSFRhhhhhh      D      0       0      37        0.0%
BITBIGSFRhlllll      D      0       0      45        0.0%
BITBIGSFRhlllh       9      0       0      42        0.0%
BITBIGSFRhhhhl       9      0       0      39        0.0%
BITBIGSFRhlllll      6      0       0      44        0.0%
BITBIGSFRhhhl        6      0       0      40        0.0%
BITBIGSFRhllh        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163      20        0.0%
DATA                 0      0     163       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 09 22:28:31 2023

              i2lcd_gotoxy@address 000D                  ?_read_adc_voltage 0118  
             ?_Timer3_Int_Handling 0001                     i2_reloadTimer0 533A  
                   i2_reloadTimer3 5330                 ??_read_adc_voltage 00BE  
                               l11 50E6                                 l18 4FF4  
                               _AN 00BF                                 l81 4E98  
                   ?_lcd_send_byte 00B2                       ___awdiv@sign 00B5  
              ___wmul@multiplicand 00AC                         i2___ftpack 4146  
                     ___ftadd@exp1 0120                       ___ftadd@exp2 011F  
                       i2___lltoft 4B86                       ___ftadd@sign 011E  
                              l352 2646                                l336 2512  
                              l610 0ED2                                l363 26C8  
                              l347 262C                                l348 2630  
                              l373 2746                                l614 0E42  
                              l534 0834                                l358 2686  
                              l519 07D0                                l368 2704  
                              l561 0B26                                l385 27DA  
                              l298 3C40                                l378 2782  
                              l547 091E                                l468 0212  
                              l469 0214                                l671 42EA  
                              l598 0D70                                l991 3100  
                              _PR2 0FCB                                _lcd 0F83  
                     ___awmod@sign 00AF          read_adc_voltage@raw_value 011F  
                              wreg 0FE8                         i2_delay_ms 51DA  
                      main@channel 017E                        lcd_gotoxy@x 00B5  
                      lcd_gotoxy@y 00B4                    i2sprintf@tmpval 0096  
                     ___ftdiv@cntr 0112                       ___ftdiv@sign 0117  
                             l1002 3DE0                               l1010 3726  
                             l1041 5134                               l1009 36FE  
                             l1086 46AE                               l5002 50D6  
                             l6100 3740                               l6110 3758  
                             l6120 389A                               l6112 3764  
                             l6104 3750                               l6140 38E8  
                             l5086 4CD4                               l6214 44A0  
                             l6054 5286                               l7040 3B92  
                             l6224 44EE                               l6160 3934  
                             l6064 36AA                               l7034 3B76  
                             l6218 44C2                               l6170 394C  
                             l7044 3BAA                               l6172 3958  
                             l6164 3944                               l6148 3918  
                             l8014 4AE4                               l5390 4D84  
                             l5384 4D78                               l7056 3BDE  
                             l9000 0240                               l5386 4D7C  
                             l5394 4D8A                               l6186 429C  
                             l9002 024A                               l8028 4B0C  
                             l5388 4D80                               l5396 4DA6  
                             l7068 3C12                               l6188 42A8  
                             l9012 02AA                               l9004 0250  
                             l6198 42DC                               l9030 02F4  
                             l9022 02CE                               l9200 07D6  
                             l9120 05F2                               l9112 05AC  
                             l9104 0546                               l9016 02C0  
                             l9050 036E                               l9042 0346  
                             l9018 02C8                               l9220 082A  
                             l9140 06DC                               l9124 061A  
                             l9108 056C                               l9028 02E2  
                             l4982 4FFC                               l9230 0844  
                             l9134 0672                               l9070 040A  
                             l9054 0382                               l9038 032E  
                             l9062 039A                               l9400 0CB8  
                             l9216 0816                               l9208 07F0  
                             l9240 08D6                               l9160 0742  
                             l9152 0714                               l9080 044C  
                             l9048 035A                               l9064 03F6  
                       i2_lcd_putc 4C3C                               l8522 3042  
                             l9242 08E0                               l9250 08FA  
                             l9138 06D8                               l9306 0ADE  
                             l9058 0394                               l5980 4C18  
                             l8516 301A                               l8604 33B2  
                             l9500 0E82                               l9420 0D4A  
                             l9412 0D16                               l9332 0B64  
                             l9172 0770                               l9180 078C  
                             l9164 0754                               l5974 4BE6  
                             l8614 33EA                               l8702 4726  
                             l9414 0D1E                               l9406 0CE2  
                             l9334 0B68                               l9326 0B4A  
                             l8480 40B6                               l5976 4C00  
                             l5984 4C24                               l8544 3094  
                             l8608 33CE                               l8712 4F14  
                             l8640 4218                               l9520 0ED4  
                             l9512 0EBC                               l9360 0BDC  
                             l9272 0998                               l9256 0922  
                             l9096 04E0                               l8490 4112  
                             l8482 40C0                               l5978 4C0C  
                             l8546 309E                               l8618 3406  
                             l8634 4208                               l9522 0F4A  
                             l9426 0D66                               l9418 0D42  
                             l9362 0BE0                               l9346 0BA0  
                             l8492 411C                               l8484 40DE  
                             l8564 311C                               l8556 30D2  
                             l8548 30A8                               l8812 4DD0  
                             l8724 4F30                               l8716 4F1A  
                             l8804 24D4                               l9532 0FCE  
                             l9436 0D80                               l9348 0BA4  
                             l9284 0A7C                               l9268 0948  
                             l9188 07A6                               l9196 07C0  
                             l8902 5158                               l8574 314C  
                             l8558 30DC                               l8822 3F1C  
                             l8590 3378                               l8742 503E  
                             l8734 5026                               l8646 422E  
                             l8662 4260                               l9382 0C54  
                             l9286 0A88                               l9294 0AA2  
                             l9702 3488                               l8488 40F4  
                             l8840 3F72                               l8584 334A  
                             l8728 4F38                               l8648 4236  
                             l9536 1026                               l9528 0FAA  
                             l9544 1050                               l9448 0DBA  
                             l9456 0DD0                               l9392 0C8E  
                             l9376 0C18                               l8920 005C  
                             l9712 3526                               l9704 34C6  
                       i2_lcd_puts 5248                               l9730 3D54  
                             l8850 3F8A                               l8666 426E  
                             l8658 4256                               l8682 46E0  
                             l9538 1042                               l9466 0DF4  
                             l9386 0C74                               l9378 0C34  
                             l8922 0060                               l9714 3536  
                             l8852 3F96                               l8844 3F82  
                             l8780 2272                               l9492 0E52  
                             l8924 0064                               l8916 0046  
                             l8908 0026                               l9900 260E  
                             l8766 2DA2                               l8758 2CF2  
                             l8694 470E                               l8686 46EE  
                             l8678 46D4                               l8790 2330  
                             l9398 0CB0                               l8918 0058  
                             l9662 482A                               l9910 263C  
                             l9902 2616                               l9736 3D7C  
                             l8880 4A78                               l8688 46F6  
                             l9496 0E78                               l8952 013C  
                             l8936 00B0                               l8944 010C  
                             l8928 006A                               l9920 2664  
                             l8858 3FB2                               l8874 469E  
                             l8866 4664                               l8882 4A84  
                             l8698 4718                               l8786 230C  
                             l8970 0190                               l9690 345E  
                             l9756 3DBA                               l8868 4672  
                             l8980 01E4                               l8972 0196  
                             l9676 47BE                               l9692 3466  
                             l8798 243A                               l8990 0210  
                             l8974 01A0                               l8982 01FA  
                             l9694 346E                               l9686 344E  
                             l9918 2660                               STR_1 FF57  
                             l8992 0218                               l9696 3476  
                             l9688 3456                               l9936 26A4  
                             l9928 2680                               STR_2 FFE1  
                             STR_3 FFF9                               l9778 4F8A  
                             l8898 5144                               l8986 0208  
                             l9698 347E                               l9954 26E2  
                             l9938 26A8                               l9874 2532  
                             STR_4 FF6E                               STR_5 FFE1  
                             l8988 020C                               l9972 2722  
                             l9956 26E6                               l9884 25CC  
                             STR_6 FFF9                               STR_7 FF80  
                             l9990 2760                               l9974 2726  
                             l9894 25FA                               l9878 258E  
                             l9886 25DA                               l9992 2764  
                             _IPR1 0F9F                               _IPR2 0FA2  
                             _PIE1 0F9D                               _PIE2 0FA0  
                             u7000 395E                               u7020 42AC  
                             i2l11 51F2                               u5355 4CA0  
                             u5356 4CA2                               _PIR1 0F9E  
                             i2l18 5080                               _PIR2 0FA1  
                             u8410 3B6A                               u8420 3B86  
                             u8430 3BA2                               u8520 3C20  
                             u8440 3BB8                               u6930 376A  
                             u6851 368E                               u6940 3888  
                             u6860 3698                               u6871 36BA  
                             u8480 3BEC                   ?_lcd_send_nibble 0001  
               update_lcd_Line2@CK 0164                 update_lcd_Line2@CT 0161  
               update_lcd_Line3@HT 0164                 update_lcd_Line4@MD 0177  
               update_lcd_Line3@SP 0161                 update_lcd_Line1@hh 0165  
               update_lcd_Line1@mm 0163             i2lcd_send_byte@cm_data 000A  
                 _update_lcd_Line1 4948                 update_lcd_Line1@ss 0161  
                 _update_lcd_Line2 480C                   _update_lcd_Line3 47A0  
                 _update_lcd_Line4 3444                               _main 24F8  
                     ___ftpack@arg 00AA                       ___ftpack@exp 00AD  
                             fsr1h 0FE2                               fsr2h 0FDA  
                             indf1 0FE7                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             btemp 007F                       i2___ftadd@f1 002A  
                     i2___ftadd@f2 002D                       i2___ftge@ff1 0036  
                     i2___ftge@ff2 0039                               prodh 0FF4  
                             prodl 0FF3                               start 000E  
                  __end_ofi2_scale 2BE0                        main@voltage 017B  
                     i2___ftneg@f1 0001                       _sprintf$1025 013B  
                     _sprintf$1034 0143                       _sprintf$1026 013D  
                     _sprintf$1027 013F                       _sprintf$1028 0141  
           __end_ofi2_reloadTimer0 5344             __end_ofi2_reloadTimer3 533A  
                     _sprintf$1740 0137              ??_Timer3_Int_Handling 004B  
                     ___ftmul@cntr 0107               __end_ofi2_update_lcd 5310  
                     i2___ftmul@f1 000F                       i2___ftmul@f2 0012  
                     ___param_bank 0000                       ___ftmul@sign 0108  
                     i2___ftsub@f1 0036                       i2___ftsub@f2 0039  
                     i2___fttol@f1 003C                       ___fttol@exp1 011E  
                     i2___lltoft@c 0009                       ___fttol@lval 011A  
                            l10010 27AA                              l10012 27AE  
                            l10032 2802                              l10034 2806  
                            l10050 283A               __end_of_delay_cycles 5018  
                            ?_main 0001                    __end_of___awdiv 4278  
                  __end_of___lbdiv 4F3C                    __end_of___ftadd 3172  
                            STR_10 FFF1                              STR_11 FFE9  
                            STR_12 FFF5                              STR_20 FF92  
                            STR_13 FFE5                              STR_21 FFA3  
                            STR_14 FFFC                              STR_15 FFED  
                            STR_16 FFDD                              STR_17 FFB4  
                            STR_18 FFC5                              STR_19 FFD6  
                  __end_of___awmod 4730                    __end_of___lbmod 5046  
                  __end_of___ftdiv 3E12                    __end_of___ftneg 5142  
                  __end_of___lldiv 42FC                              u11001 3F00  
                            u11010 3F0A                              u11020 3F3A  
                            u11025 3F32                              u10420 40A8  
                            u11060 3F9C                              u10501 2FEE  
                  __end_of___ftmul 3444                              u11310 031E  
                            u12040 0DFE                              u11240 027E  
                            _T0CON 0FD5                              u10530 300C  
                            u11090 4678                              u12050 0E20  
                            u11250 0284                              u10460 4126  
                            u12140 1070                    ___awdiv@divisor 00B2  
                            u10701 3330                              u11317 0314  
                            u10630 30B0                              u12150 1092  
                            u11430 057E                              u12231 3D3C  
                            u11247 0274                              u10560 3034  
                            u12160 10AC                              u11600 07FE  
                            u11520 073C                              u11440 05BE  
                  __end_of___llmod 46C0                              u10721 335E  
                            u12251 3D64                              u10491 2FDA  
                  __end_of___ftsub 4DFA                              u10660 30E4  
                  __end_of___fttol 3FC4                              u10590 3072  
                            u11470 05F2                              u11390 0484  
                            u11720 0ABA                              u10850 46FA  
                            u11650 0908                              u11395 047A  
                            u11660 0918                              u10790 423A  
                            u12711 27D0                              u11680 0934  
                            _T3CON 0FB1                              u10890 4F1E  
                            u11940 0D0C                              u12807 50D8  
                            u12781 2830                              u12797 4CCC  
                            i2l610 1F7A                              i2l614 1EEA  
                            i2l534 18DC                              i2l519 1878  
                            i2l561 1BCE                              i2l298 3D2A  
                            i2l547 19C6                              i2l468 12BE  
                            i2l469 12C0                              i2l671 43F0  
                            i2l598 1E18                    ___awdiv@counter 00B4  
                            i2l991 32A8                              _TMR0H 0FD7  
                            _TMR0L 0FD6                              _TMR3H 0FB3  
                            _TMR3L 0FB2            read_adc_voltage@channel 011E  
                     i2__div_to_l_ 3A64                              _TRISA 0F92  
                            _TRISB 0F93                              _TRISC 0F94  
                            _TRISD 0F95                              _TRISE 0F96  
                     ___lltoft@exp 00BA                    __end_of_highIsr 4566  
                       i2isdigit@c 0003                      ___awtoft@sign 00B5  
                  __end_of_dpowers FF57                         i2scale@scl 0024  
                            _scale 215E                    __end_of_isdigit 528E  
                  _init_adc_no_lib 5310         __end_ofi2_update_lcd_Line1 4B86  
       __end_ofi2_update_lcd_Line2 4A70         __end_ofi2_update_lcd_Line3 4A0E  
       __end_ofi2_update_lcd_Line4 367C                      ___ftpack@sign 00AE  
                            tablat 0FF5                   __end_ofi2___ftge 464E  
                 __end_ofi2___wmul 51DA                              ttemp5 0080  
                            ttemp6 0083                              ttemp7 0087  
                            status 0FD8            read_adc_voltage@voltage 011B  
                            wtemp8 0080                    __end_of_sprintf 10C0  
                    i2___lbmod@rem 0004                    ___lbdiv@divisor 00AE  
                      i2delay_ms@n 0001                        i2delay_ms@x 0003  
                ??i2_lcd_send_byte 000A                   __end_ofi2_fround 2FC8  
                  ___lbdiv@counter 00B0                    ?i2_reloadTimer0 0001  
                  ?i2_reloadTimer3 0001                    __initialization 4CE2  
                i2___lldiv@divisor 0005                       __end_of_main 2878  
                  ??_lcd_send_byte 00B3                  i2___lldiv@counter 000D  
                    i2___ftmul@exp 0018                        ?i2___ftpack 0001  
                      ?i2___lltoft 0009                             ??_main 0179  
                    ___fttol@sign1 0119        ??_setting_Mode_Int_Handling 0005  
                    __activetblptr 0002                         i2sprintf@c 00A7  
                       i2sprintf@f 004D                        i2lcd_putc@c 000E  
                      i2lcd_puts@s 000F                        ?i2_delay_ms 0001  
                     i2_lcd_gotoxy 4DFA                             _ADCON0 0FC2  
                           _ADCON1 0FC1                             _ADCON2 0FC0  
                 i2lcd_send_byte@n 0009                   ___llmod@dividend 00B7  
                           ?_scale 0109                             _ADRESH 0FC4  
                           _ADRESL 0FC3                             _CCPR1L 0FBE  
                 ___awdiv@dividend 00B0                   __end_of___awtoft 4FAE  
                 __end_of___ftpack 4146                        ?i2_lcd_putc 0001  
                      ?i2_lcd_puts 000F                   __end_of___lltoft 4ACE  
                           i2l1010 3824                             i2l1041 523A  
                           i2l1009 37FC                             i2l1086 4936  
                           i2l5032 4D66                             i2l5130 4E06  
                           i2l5050 41A2                             i2l5042 4164  
                           i2l5210 477E                             i2l5202 475E  
                           i2l5132 4E0A                             i2l5052 41C0  
                           i2l5044 416E                             i2l5204 4766  
                           i2l5126 4DFE                             i2l5054 41CA  
                           i2l5046 418C                             i2l5230 31C2  
                           i2l5150 4310                             i2l5214 4788  
                           i2l5128 4E02                             i2l5136 4E10  
                           i2l5304 39C0                             i2l5138 4E2A  
                           i2l5322 3A02                             i2l5162 4336  
                           i2l5218 4796                             i2l7002 20F6  
                           i2l5260 3246                             i2l5236 31EA  
                           i2l5332 3A2A                             i2l5164 433E  
                           i2l5156 4320                             i2l5270 327A  
                           i2l5262 3250                             i2l5318 39F2  
                           i2l5350 4F54                             i2l5182 4376  
                           i2l5174 435E                             i2l5272 3284  
                           i2l5328 3A1A                             i2l5258 323C  
                           i2l5346 4F4E                             i2l5362 4F72  
                           i2l5178 4368                             i2l5194 4744  
                           i2l6410 11E8                             i2l6402 11B8  
                           i2l6340 3CC8                             i2l6324 3C7C  
                           i2l6500 13F2                             i2l8100 3E36  
                           i2l6318 3C60                             i2l5278 32C4  
                           i2l5358 4F6A                             i2l5198 4750  
                           i2l5710 2BBC                             i2l6430 1242  
                           i2l6352 3CFC                             i2l6328 3C94  
                           i2l5288 32F4                             i2l5800 3B40  
                           i2l5376 50C4                             i2l5368 50AC  
                           i2l5704 2B2C                             i2l6512 142E  
                           i2l6432 124C                             i2l6520 1444  
                           i2l6440 12A6                             i2l8112 3ECA  
                           i2l8120 3EE8                             _INTCON 0FF2  
                           i2l5642 4C40                             i2l5298 3998  
                           i2l6610 17BC                             i2l6506 1406  
                           i2l6450 12C4                             i2l6522 14A0  
                           i2l8106 3E82                             i2l5644 4C58  
                           i2l5652 4C7C                             i2l6700 1988  
                           i2l6516 143E                             i2l6508 141A  
                           i2l6460 12F6                             i2l6444 12B4  
                           i2l6428 123C                             i2l6380 110E  
                           i2l8116 3EDE                             i2l5646 4C64  
                           i2l5726 43A2                             i2l6630 1818  
                           i2l6622 17FC                             i2l6470 1356  
                           i2l6462 12FC                             i2l6446 12B8  
                           i2l6438 1290                             i2l6382 1112  
                           i2l6374 10F4                             i2l6366 10D4  
                           i2l8134 506E                             i2l5648 4C70  
                           i2l5912 4044                             i2l5728 43AE  
                           i2l5808 37A8                             i2l5672 2F88  
                           i2l5664 2EE4                             i2l6528 14B4  
                           i2l6480 137A                             i2l6448 12BC  
                           i2l6376 1106                             i2l5930 4084  
                           i2l5922 405C                             i2l5738 43E2  
                           i2l6730 1A40                             i2l6714 19CA  
                           i2l6618 17EA                             i2l6570 1652  
                           i2l6562 15EC                             i2l6554 1586  
                           i2l6538 14F4                             i2l6474 136C  
                           i2l6458 12EC                             i2l6394 115E  
                           i2l6378 110A                             i2l6386 1118  
                           i2l5924 4068                             i2l5916 4054  
                           i2l5940 4900                             i2l5748 3A82  
                           i2l5844 383E                             i2l5692 2A0C  
                           i2l6820 1C88                             i2l6804 1C48  
                           i2l6708 19A2                             i2l6476 1374  
                           i2l5862 45FC                             i2l5854 3856  
                           i2l5686 297C                             i2l6806 1C4C  
                           i2l6742 1B24                             i2l6726 19F0  
                           i2l6646 184E                             i2l6654 1868  
                           i2l6638 1834                             i2l6582 16C2  
                           i2l6566 1612                             i2l6486 138E  
                           i2l4976 5086                             i2l5872 464A  
                           i2l5952 4B8C                             i2l5792 3B2C  
                           i2l5776 3B00                             i2l5768 3AD0  
                           i2l5856 3862                             i2l5848 384E  
                           i2l5696 2A30                             i2l6840 1CFC  
                           i2l6744 1B30                             i2l6752 1B4A  
                           i2l6592 171A                             i2l6488 13A0  
                           i2l6496 13DA                             i2l8096 3E28  
                           i2l4986 51E4                             i2l5866 461E  
                           i2l5946 4928                             i2l5938 48F4  
                           i2l5954 4B98                             i2l6906 1E62  
                           i2l6914 1E78                             i2l6850 1D36  
                           i2l6818 1C84                             i2l6834 1CC0  
                           i2l6674 18BE                             i2l6658 187E  
                           i2l6666 1898                             i2l6578 169C  
                           i2l5884 4ED4                             i2l5788 3B1C  
                           i2l6924 1E9C                             i2l6844 1D1C  
                           i2l6836 1CDC                             i2l6596 1780  
                           i2l6764 1B86                             i2l5894 3FF0  
                           i2l5798 3B34                             i2l6950 1EFA  
                           i2l6870 1DBE                             i2l6790 1C0C  
                           i2l6678 18D2                             i2l6598 1784  
                           i2l5968 52E4                             i2l6872 1DC6  
                           i2l6864 1D8A                             i2l6856 1D58  
                           i2l6792 1C10                             i2l6784 1BF2  
                           i2l6688 18EC                             i2l7840 458E  
                           i2l6970 1F64                             i2l6954 1F20  
                           i2l6858 1D60                             i2l6698 197E  
                           i2l9610 3584                             i2l6980 1FF0  
                           i2l6884 1E0E                             i2l6876 1DEA  
                           i2l9612 358C                             i2l6990 2074  
                           i2l6958 1F2A                             i2l6894 1E28  
                           i2l6878 1DF2                             i2l9614 3594  
                           i2l9606 3574                             i2l9622 35AE  
                           i2l7854 45D2                             i2l9632 3642  
                           i2l9616 359C                             i2l9608 357C  
                           i2l9624 35EA                             i2l6994 20CC  
                           i2l6986 2050                             i2l6978 1F7C  
                           i2l9634 364E                             i2l9618 35A4  
                           i2l6996 20E8                             i2l9820 4468  
                           i2l9582 4A2C                             i2l9814 4456  
                           i2l9806 443E                             i2l9824 4474  
                           i2l8890 524A                             i2l9596 49CA  
                           i2l8894 525C                          ??i2_scale 0021  
                 __end_of___lwtoft 5224                             u650_41 37B8  
                           u580_41 39A8                             u557_41 3182  
                           u558_41 3196                             u662_41 3FD4  
                           u648_41 378C           i2update_lcd_Line1@Buffer 005B  
                           u578_41 3980           i2update_lcd_Line2@Buffer 005B  
         i2update_lcd_Line3@Buffer 005B           i2update_lcd_Line4@Buffer 005D  
                 __end_of_delay_ms 50F4                       i2_scale$2007 0021  
                 __end_of__powers_ FEE8                   __end_of_lcd_init 4B2A  
                 __end_of_lcd_putc 4C3C                   __end_of_lcd_puts 5168  
                           ___ftge 447E                             ___wmul 5168  
                        ??___awdiv 00B4                          ??___lbdiv 00AF  
                        ??___ftadd 011B                          ??___awmod 00AE  
                       _Hysteresis 0187                          ??___lbmod 00AB  
                        ??___ftdiv 010F                          ??___ftneg 00AD  
                        ??___lldiv 00B2                          ??___ftmul 0100  
                        ??___llmod 00BF                          ??___ftsub 00BE  
                        ??___fttol 0114                             _fround 2BE0  
                           clear_0 4D08                             clear_1 4D14  
                 ___awdiv@quotient 00B6                    ___awmod@divisor 00AC  
                           isa$std 0001                    ___awmod@counter 00AE  
                        ??_highIsr 0073                     i2___awdiv@sign 000C  
            ___ftmul@f3_as_product 0104            __end_of_init_adc_no_lib 531C  
              i2update_lcd_Line4@H 006F                   i2_set_baoundares 3C42  
                        ??_isdigit 00AA                  __end_ofi2___awdiv 4380  
                __end_ofi2___lbdiv 4F76                  __end_ofi2___ftadd 331A  
                __end_ofi2___awmod 47A0                  __end_ofi2___lbmod 50CC  
                   i2___ftadd@exp1 0035                     i2___ftadd@exp2 0034  
                __end_ofi2___ftneg 5248                  __end_ofi2___lldiv 4402  
                __end_ofi2___ftmul 3A64                  __end_ofi2___llmod 4948  
                __end_ofi2___ftsub 4EFE                  __end_ofi2___fttol 4096  
                   i2___ftadd@sign 0033                       __mediumconst FE94  
                           tblptrh 0FF7                             tblptrl 0FF6  
                           tblptru 0FF8                     i2___awmod@sign 0006  
                        ??_sprintf 0131                   ___lbdiv@dividend 00AF  
                 _Int_Heat_Counter 00C8                  __end_ofi2_isdigit 52EC  
                  ___lbmod@divisor 00AA                         __accesstop 0080  
          __end_of__initialization 4D1E          _setting_Mode_Int_Handling 5046  
                  ___lbmod@counter 00AC                         ___ftadd@f1 0115  
                       ___ftadd@f2 0118                         ___ftge@ff1 00AA  
                       ___ftge@ff2 00AD                      i2sprintf@ccnt 0092  
                    i2sprintf@flag 00A8                      i2sprintf@eexp 009A  
                    i2sprintf@fval 009C                      ___rparam_used 0001  
                    i2sprintf@prec 00A5                         ___ftdiv@f1 0109  
                       ___ftdiv@f2 010C                         ___ftdiv@f3 0113  
                __end_ofi2_sprintf 215E                         ___ftneg@f1 00AA  
                       ___awtoft@c 00B2                     i2___ftpack@arg 0001  
               i2__tdiv_to_l_@exp1 000F                  i2___llmod@divisor 0012  
                   i2___ftpack@exp 0004                 i2__tdiv_to_l_@cntr 000E  
                i2___llmod@counter 0016                 i2__tdiv_to_l_@quot 000A  
                       ___ftmul@f1 00B8                         ___ftmul@f2 00BB  
                       ___ftsub@f1 0121                         ___ftsub@f2 0124  
                       ___fttol@f1 0110                     __pcstackCOMRAM 0001  
               i2___lldiv@dividend 0001                       __pidataBANK0 534C  
                   i2_sprintf$1025 0083                     i2_sprintf$1034 008B  
                   i2_sprintf$1026 0085                     i2_sprintf$1027 0087  
                   i2_sprintf$1028 0089                     i2_sprintf$2008 0080  
                       ___lltoft@c 00B2                     i2___ftmul@cntr 001C  
                    __end_of_scale 24F8                     i2___ftmul@sign 001D  
         Timer3_Int_Handling@error 004B                   ___lbdiv@quotient 00B1  
                   i2___fttol@exp1 004A           __end_of_update_lcd_Line1 49AC  
         __end_of_update_lcd_Line2 4878           __end_of_update_lcd_Line3 480C  
         __end_of_update_lcd_Line4 356A                         ___lwtoft@c 0009  
                   i2___fttol@lval 0046                          ?i2___ftge 0036  
                        ?i2___wmul 0001                      i2__tdiv_to_l_ 377C  
                       __div_to_l_ 387A                          ?i2_fround 001E  
                lcd_gotoxy@address 00B6                       i2_update_lcd 52FE  
                  __div_to_l_@exp1 00B5                    __div_to_l_@cntr 00B4  
                          ??_scale 00BE                     i2___lltoft@exp 0011  
                  __div_to_l_@quot 00B0                       sprintf@width 015A  
               i2___lldiv@quotient 0009                         __pbssBANK0 00BF  
                       __pbssBANK1 017F                        i2sprintf@ap 0094  
                      i2sprintf@cp 008E                        i2sprintf@sp 004B  
                 i2__tdiv_to_l_@f1 0001                   i2__tdiv_to_l_@f2 0004  
      __end_of_read_adc_raw_no_lib 4EBE                       _delay_cycles 4FE4  
                    __div_to_l_@f1 00AA                      __div_to_l_@f2 00AD  
                    ?_reloadTimer0 0001                      ?_reloadTimer3 0001  
                   lcd_send_byte@n 00B2                            ?___ftge 00AA  
                          ?___wmul 00AA                  _Stop_Int_Handling 50F4  
                 lcd_send_nibble@n 00B1                            _CCP1CON 0FBD  
                          ?_fround 0109                          ?___awtoft 00B2  
                        ?___ftpack 00AA                 ?_Stop_Int_Handling 0001  
                        ?___lltoft 00B2                     ?i2__tdiv_to_l_ 0001  
                       ??i2___ftge 003C                          ?___lwtoft 0009  
                       ??i2___wmul 0005                   ?_init_adc_no_lib 0001  
                          _INTCON2 0FF1                            _INTCON3 0FF0  
                       ??i2_fround 0021                        _SetUp_Point 017F  
              ??_Stop_Int_Handling 0005                          ?_delay_ms 00AA  
                       _lcd_gotoxy 4D74                    i2_lcd_send_byte 4D2C  
                        ?_lcd_init 0001                          ?_lcd_putc 0001  
                        ?_lcd_puts 00B8                            i2_scale 2878  
                 ??i2_reloadTimer0 0001                   ??i2_reloadTimer3 0001  
                          _Heating 0189        __end_of_Timer3_Int_Handling 3EEE  
                   _set_baoundares 3B58                            _Cooking 018B  
                   ??_reloadTimer0 00AA                     ??_reloadTimer3 00AA  
                       _count_hour 00CA                  __end_of__npowers_ FF0F  
                          __Hparam 0000                         _scale$1739 010C  
                          __Lparam 0000          __end_of_Stop_Int_Handling 511C  
               i2_update_lcd_Line1 4B2A                 i2_update_lcd_Line2 4A0E  
               i2_update_lcd_Line3 49AC                 i2_update_lcd_Line4 356A  
                          ___awdiv 41F4                            ___lbdiv 4EFE  
                          ___ftadd 2FC8                            ___awmod 46C0  
                          ___lbmod 5018                            ___ftdiv 3D2C  
                       _initTimers 4FAE                            ___ftneg 511C  
                          ___lldiv 4278                            ___ftmul 331A  
                          ___llmod 464E                            ___ftsub 4DB8  
                          ___fttol 3EEE                       _Cooking_Mode 007D  
                     _Cooking_Temp 0182                            __pcinit 4CE2  
                     ??i2___ftpack 0006                         ??___awtoft 00B5  
                       ??___ftpack 00AF            i2___ftmul@f3_as_product 0019  
                          __ramtop 1000                ?i2_update_lcd_Line1 0001  
              ?i2_update_lcd_Line2 0001                ?i2_update_lcd_Line3 0001  
              ?i2_update_lcd_Line4 0001                       ??i2___lltoft 000D  
                       ??___lltoft 00B6                            __ptext0 24F8  
                          __ptext1 52EC                            __ptext2 3444  
                          __ptext3 47A0                            __ptext4 480C  
                          __ptext5 4948                            __ptext6 0012  
                          __ptext7 215E                            __ptext8 46C0  
                          __ptext9 41F4                            _highIsr 0008  
                       ??___lwtoft 000C                          _T0CONbits 0FD5  
                    i2_fround$2005 0026                      i2_fround$2006 0023  
                ??_Heating_Control 0001                  __end_of_hexpowers FF2F  
                      ?__div_to_l_ 00AA                            _dpowers FF2F  
                     i2fround@prec 0029                            _isdigit 526C  
                        _T3CONbits 0FB1                  __end_of_init_pwm1 534C  
                 ___awmod@dividend 00AA                       ??i2_delay_ms 0003  
                       ??_delay_ms 00AC                            _sprintf 0012  
                       ??_lcd_init 00B4                       ??i2_lcd_putc 000E  
                     ??i2_lcd_puts 0011                     __pintcode_body 44F2  
                       ??_lcd_putc 00B7                         ??_lcd_puts 00BA  
             end_of_initialization 4D1E                  __end_of_octpowers FEC1  
           __end_of_set_baoundares 3C42               i2update_lcd_Line2@CK 006E  
             i2update_lcd_Line2@CT 006B               i2update_lcd_Line3@HT 006E  
             i2update_lcd_Line4@MD 0071               ??i2_update_lcd_Line1 005B  
             ??i2_update_lcd_Line2 005B               ??i2_update_lcd_Line3 005B  
             ??i2_update_lcd_Line4 005B               i2update_lcd_Line3@SP 006B  
             i2update_lcd_Line1@hh 006F               i2update_lcd_Line1@mm 006D  
             i2update_lcd_Line1@ss 006B                      __Lmediumconst FE94  
                          int_func 44F2                i2___wmul@multiplier 0001  
             lcd_send_byte@cm_data 00B3                 __end_ofi2___ftpack 41F4  
                        i2u1281_47 4D5E                          i2u1282_47 51E6  
         __end_ofi2_set_baoundares 3D2C                 __end_ofi2___lltoft 4BE2  
                  ___lldiv@divisor 00AE                    ___lldiv@counter 00B6  
                i2_lcd_send_nibble 528E                            postdec1 0FE5  
                          postdec2 0FDD                            postinc0 0FEE  
                          postinc2 0FDE                 __end_ofi2_delay_ms 5200  
                   __tdiv_to_l_@f1 00AA                     __tdiv_to_l_@f2 00AD  
            __end_of_lcd_send_byte 4CE2                    ??i2__tdiv_to_l_ 0007  
               ?i2_lcd_send_nibble 0001                      ??__tdiv_to_l_ 00B0  
               __end_ofi2_lcd_putc 4C92            __end_ofi2_lcd_send_byte 4D74  
               __end_ofi2_lcd_puts 526C                          _PORTAbits 0F80  
                        _PORTBbits 0F81                          _PORTCbits 0F82  
                        _PORTEbits 0F84                         _setupPorts 52B0  
              ??i2_lcd_send_nibble 0007                   ___lbmod@dividend 00AB  
                 _read_adc_voltage 4878                        ?_lcd_gotoxy 00B4  
                       _update_lcd 52EC               _Percent_Heat_Counter 0185  
                        i2___awdiv 42FC                          i2___lbdiv 4F3C  
                        i2___ftadd 3172                          i2___awmod 4730  
                  _LCD_INIT_STRING 00D2                          i2___lbmod 50A2  
                        i2___ftneg 5224                          i2___lldiv 4380  
                        i2___ftmul 3970                          i2___llmod 48E2  
                        i2___ftsub 4EBE                          i2___fttol 3FC4  
                  ?_set_baoundares 0001                        ___lbmod@rem 00AD  
                   i2sprintf@width 00A3                        ___ftdiv@exp 0116  
               i2___llmod@dividend 000E                 i2___awdiv@dividend 0007  
                update_lcd_Line4@H 0175                    i2___ftpack@sign 0005  
                        i2_isdigit 52CE          __end_ofi2_lcd_send_nibble 52B0  
                   i2_delay_cycles 5074                        ___ftmul@exp 0103  
       __end_of_Start_Int_Handling 4E7E                          i2_sprintf 10C0  
                      ?_initTimers 0001                     __end_of___ftge 44F2  
                   __end_of___wmul 518E  __end_of_setting_Mode_Int_Handling 5074  
                    delay_cycles@n 00AD                      delay_cycles@x 00AE  
                ??_lcd_send_nibble 00B0                     __end_of_fround 2DE4  
                ?_update_lcd_Line1 0001                  ?_update_lcd_Line2 0001  
                ?_update_lcd_Line3 0001                  ?_update_lcd_Line4 0001  
                 i2___wmul@product 0005               __end_of_reloadTimer0 5330  
             __end_of_reloadTimer3 5326                start_initialization 4CE2  
               ??_update_lcd_Line1 00BF                 ??_update_lcd_Line2 00BF  
               ??_update_lcd_Line3 00BF                 ??_update_lcd_Line4 0161  
               i2___awdiv@quotient 000D                _Timer0_Int_Handling 4402  
              __end_of__tdiv_to_l_ 377C                    i2___fttol@sign1 0045  
                       ?i2___awdiv 0007                         ?i2___lbdiv 0005  
                       ?i2___ftadd 002A                         ?i2___awmod 0001  
                       ?i2___lbmod 0001                         ?i2___ftneg 0001  
                       ?i2___lldiv 0001                         ?i2___ftmul 000F  
                       ?i2___llmod 000E                         ?i2___ftsub 0036  
                       ?i2___fttol 003C                          _Buzzer_ON 00D0  
           __end_ofi2_delay_cycles 50A2                    ___llmod@divisor 00BB  
                  ___llmod@counter 0100                 i2___lbdiv@dividend 0006  
                       ?i2_isdigit 0001               ?_Timer0_Int_Handling 0001  
                         ??___ftge 00B0                           ??___wmul 00AE  
                       ?i2_sprintf 004B                        __pdataBANK0 00D2  
     read_adc_raw_no_lib@raw_value 00AE                           ??_fround 010C  
            _update_lcd_Line4$1736 0163                      sprintf@tmpval 014D  
                 ?i2_lcd_send_byte 0009                        ?_setupPorts 0001  
                       fround@prec 0114                      ?i2__div_to_l_ 0001  
                     i2sprintf@idx 008D                       i2sprintf@len 0090  
                      __pbssCOMRAM 007D                       i2sprintf@val 009F  
                    __pcstackBANK0 0080                      __pcstackBANK1 0100  
               i2___lbdiv@quotient 0008                        ?_update_lcd 0001  
                     _isdigit$1486 00AB                      i2lcd_gotoxy@x 000C  
                    i2lcd_gotoxy@y 000B                           ?i2_scale 001E  
                      sprintf@ccnt 0149                        sprintf@flag 015F  
                      sprintf@eexp 0151                        sprintf@fval 0153  
                      sprintf@prec 015C                    ?i2_delay_cycles 0001  
            ??_Timer0_Int_Handling 0073                    _Heating_Control 4566  
                        __pintcode 0008                      __pmediumconst FE94  
                         ?___awdiv 00B0                           ?___lbdiv 00AE  
                         ?___ftadd 0115                           ?___awmod 00AA  
                         ?___lbmod 00AA                           ?___ftdiv 0109  
                         ?___ftneg 00AA                           ?___lldiv 00AA  
                         ?___ftmul 00B8                           ?___llmod 00B7  
                         ?___ftsub 0121                          __npowers_ FEE8  
                         ?___fttol 0110                        __tdiv_to_l_ 367C  
                         ?_highIsr 0001                     ??i2__div_to_l_ 0007  
                     ??__div_to_l_ 00B0                 i2lcd_send_nibble@n 0008  
                         ?_isdigit 0001                          _count_min 00CC  
                        _count_sec 00CE                      ?i2_lcd_gotoxy 000B  
                        _hexpowers FF0F                        ??i2___awdiv 000B  
                      ??i2___lbdiv 0006                        ??i2___ftadd 0030  
                      ??i2___awmod 0005                           ?_sprintf 0127  
                      ??i2___lbmod 0002                          _init_pwm1 5344  
                      ??i2___ftneg 0004                        ??i2___lldiv 0009  
                      ??i2___ftmul 0015                        ??i2___llmod 0016  
                      ??i2___ftsub 003C                        ??i2___fttol 0040  
                   ___wmul@product 00AE                          delay_ms@n 00AA  
                        delay_ms@x 00AC                          _octpowers FE95  
                      ??i2_isdigit 0001                  ?i2_set_baoundares 0001  
               __end_of__div_to_l_ 3970                           _PIR2bits 0FA1  
                         i2u532_40 41D4           __end_of_read_adc_voltage 48E2  
                         i2u525_45 4D36                           i2u525_46 4D38  
                         i2u528_40 4156                           i2u561_40 31B4  
                         i2u641_40 3A70                           i2u722_40 3C54  
                         i2u554_40 476A                           i2u723_40 3C70  
                         i2u571_40 3258                           i2u724_40 3C8C  
                         i2u564_40 31DC                           i2u548_40 4342  
                         i2u733_40 3D0A                           i2u725_40 3CA2  
                         i2u574_40 328C                           i2u567_40 321A  
                         i2u663_40 3FDE                           i2u639_40 43B2  
                         i2u671_40 4904                           i2u647_40 3B46  
                         i2u664_40 400E                           i2u656_40 3868  
                         i2u664_45 4006                           i2u729_40 3CD6  
                         i2u649_40 3796                           i2u585_40 4F58  
                         i2u817_40 1DB4                           i2u770_40 169C  
                         i2u762_40 152C                           i2u754_40 13CA  
                         i2u762_45 1522                           i2u754_47 13C0  
                         i2u827_40 1EA6                           i2u747_40 132A  
                         i2u747_47 1320                           i2u668_40 406E  
                         i2u828_40 1EC8                           i2u748_40 1330  
                         i2u837_40 2116                           i2u838_40 2138  
                         i2u766_40 1624                           i2u839_40 2152  
                         i2u791_40 19DC                           i2u783_40 18A6  
                         i2u775_40 17E4                           i2u767_40 1664  
                         i2u795_40 1B62                           i2u788_40 19B0  
                         i2u789_40 19C0                           i2u986_40 3E30  
                         i2u995_40 4E68                           i2u988_40 3EC2  
               ??i2_set_baoundares 0001         read_adc_raw_no_lib@channel 00B0  
                      ??i2_sprintf 0055                    i2__div_to_l_@f1 0001  
                  i2__div_to_l_@f2 0004                         _ADCON0bits 0FC2  
                ___wmul@multiplier 00AA                           i2___ftge 45DA  
                         i2___wmul 51B4                          lcd_init@i 00B4  
                        lcd_putc@c 00B7                  i2___awdiv@divisor 0009  
                        lcd_puts@s 00B8                           i2_fround 2DE4  
                   ??i2_lcd_gotoxy 000C                   ??_set_baoundares 00AA  
                i2___awdiv@counter 000B                       ??_lcd_gotoxy 00B5  
                       ?_init_pwm1 0001                        _INTCON3bits 0FF0  
                        copy_data0 4CF6                 i2___awmod@dividend 0001  
          __end_of_Heating_Control 45DA                    _lcd_send_nibble 518E  
                     _reloadTimer0 5326                       _reloadTimer3 531C  
                         __Hrparam 0000             update_lcd_Line1@Buffer 0167  
                i2___lbdiv@divisor 0005             update_lcd_Line2@Buffer 0166  
                i2___lbdiv@counter 0007                           __Lrparam 0000  
           update_lcd_Line3@Buffer 0166             update_lcd_Line4@Buffer 0165  
                     ??_initTimers 00AA            i2_update_lcd_Line4$2004 006D  
               __end_of_lcd_gotoxy 4DB8              i2___wmul@multiplicand 0003  
                         ___awtoft 4F76                           ___ftpack 4096  
                      _fround$1737 0111                        _fround$1738 010E  
                         ___lltoft 4A70              __end_ofi2__tdiv_to_l_ 387A  
                         ___lwtoft 5200                         sprintf@idx 013A  
                       sprintf@len 0147                         sprintf@val 0156  
                         _delay_ms 50CC                 _Start_Int_Handling 4E3C  
                    ?i2_update_lcd 0001                           __ptext10 526C  
                         __ptext11 2BE0                           __ptext20 3EEE  
                         __ptext12 5018                           __ptext21 4DB8  
                         __ptext13 4EFE                           __ptext30 4878  
                         __ptext22 2FC8                           __ptext14 331A  
                         __ptext31 4E7E                           __ptext23 511C  
                         __ptext15 367C                           __ptext40 50CC  
                         __ptext32 5168                           __ptext24 447E  
                         __ptext16 387A                           __ptext41 5344  
                         __ptext33 3D2C                           __ptext25 3B58  
                         __ptext17 4A70                           __ptext50 5200  
                         __ptext42 5310                           __ptext34 4F76  
                         __ptext26 5142                           __ptext18 464E  
                         __ptext51 4566                           __ptext43 4FAE  
                         __ptext35 4096                           __ptext27 4BE2  
                         __ptext19 4278                           __ptext60 4730  
                         __ptext52 4402                           __ptext44 531C  
                         __ptext36 4ACE                           __ptext28 4D74  
                         __ptext61 42FC                           __ptext53 52FE  
                         __ptext45 5326                           __ptext37 4C92  
                         __ptext29 52B0                           __ptext70 4B86  
                         __ptext62 52CE                           __ptext54 356A  
                         __ptext38 518E                           __ptext71 48E2  
                         __ptext63 2DE4                           __ptext55 49AC  
                         __ptext47 5046                           __ptext39 4FE4  
                         __ptext80 5248                           __ptext72 4380  
                         __ptext64 50A2                           __ptext56 4A0E  
                         __ptext48 3E12                           __ptext81 4C3C  
                         __ptext73 3FC4                           __ptext65 4F3C  
                         __ptext57 4B2A                           __ptext49 5330  
                         __ptext82 4DFA                           __ptext74 4EBE  
                         __ptext66 3970                           __ptext58 10C0  
                         __ptext83 4D2C                           __ptext75 3172  
                         __ptext67 377C                           __ptext59 2878  
                         __ptext84 528E                           __ptext76 4146  
                         __ptext68 3A64                           __ptext85 5074  
                         __ptext77 5224                           __ptext69 51B4  
                         __ptext86 533A                           __ptext78 45DA  
                         __ptext87 50F4                           __ptext79 3C42  
                         __ptext88 4E3C                           __ptext89 51DA  
                         __powers_ FEC1                           _lcd_init 4ACE  
                         _lcd_putc 4BE2                           _lcd_puts 5142  
               i2___lbmod@dividend 0002                     i2_isdigit$1486 0002  
               __end_of_initTimers 4FE4                ?_Start_Int_Handling 0001  
                    ?_delay_cycles 0001               __end_ofi2__div_to_l_ 3B58  
                ??_init_adc_no_lib 00AA                       _Setting_Mode 018D  
                         isa$xinst 0000                           int$flags 007F  
             ??_Start_Int_Handling 0005         ?_setting_Mode_Int_Handling 0001  
                     ??_setupPorts 00AA                  i2___awmod@divisor 0003  
                i2___awmod@counter 0005                         _INTCONbits 0FF2  
                   ??i2_update_lcd 0073                       ??_update_lcd 00BF  
                         isdigit@c 00AC                _read_adc_raw_no_lib 4E7E  
                         scale@scl 010F                        ??_init_pwm1 00AA  
                 ??i2_delay_cycles 0001                           intlevel2 0000  
                        sprintf@ap 014B                          sprintf@cp 0145  
          __end_of_lcd_send_nibble 51B4                   __tdiv_to_l_@exp1 00B8  
                 __tdiv_to_l_@cntr 00B7                          sprintf@sp 0127  
                   ??_delay_cycles 00AA                   __tdiv_to_l_@quot 00B3  
                 ?_Heating_Control 0001                   ___lldiv@dividend 00AA  
                i2___lbmod@divisor 0001                  i2___lbmod@counter 0003  
               __end_of_setupPorts 52CE               __end_ofi2_lcd_gotoxy 4E3C  
             ?_read_adc_raw_no_lib 00AA                 __end_of_update_lcd 52FE  
                    _lcd_send_byte 4C92                       ?__tdiv_to_l_ 00AA  
                         sprintf@c 015E                           sprintf@f 0129  
                 ___lldiv@quotient 00B2                    i2delay_cycles@n 0004  
                  i2delay_cycles@x 0005                _Timer3_Int_Handling 3E12  
      __end_of_Timer0_Int_Handling 447E                  i2__div_to_l_@exp1 000C  
                i2__div_to_l_@cntr 000B                  i2__div_to_l_@quot 0007  
            ??_read_adc_raw_no_lib 00AC  
