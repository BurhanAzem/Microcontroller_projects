

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 26 12:01:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111   000000                     
   112                           ; Generated 09/02/2023 GMT
   113                           ; 
   114                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F4620 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146   000000                     
   147                           	psect	idataBANK0
   148   00460C                     __pidataBANK0:
   149                           	callstack 0
   150                           
   151                           ;initializer for _LCD_INIT_STRING
   152   00460C  28                 	db	40
   153   00460D  0C                 	db	12
   154   00460E  01                 	db	1
   155   00460F  06                 	db	6
   156                           
   157                           	psect	mediumconst
   158   00FE9A                     __pmediumconst:
   159                           	callstack 0
   160   00FE9A  00                 	db	0
   161   00FE9B                     __powers_:
   162                           	callstack 0
   163   00FE9B  00                 	db	0
   164   00FE9C  80                 	db	128
   165   00FE9D  3F                 	db	63
   166   00FE9E  00                 	db	0
   167   00FE9F  20                 	db	32
   168   00FEA0  41                 	db	65
   169   00FEA1  00                 	db	0
   170   00FEA2  C8                 	db	200
   171   00FEA3  42                 	db	66
   172   00FEA4  00                 	db	0
   173   00FEA5  7A                 	db	122
   174   00FEA6  44                 	db	68
   175   00FEA7  40                 	db	64
   176   00FEA8  1C                 	db	28
   177   00FEA9  46                 	db	70
   178   00FEAA  50                 	db	80
   179   00FEAB  C3                 	db	195
   180   00FEAC  47                 	db	71
   181   00FEAD  24                 	db	36
   182   00FEAE  74                 	db	116
   183   00FEAF  49                 	db	73
   184   00FEB0  97                 	db	151
   185   00FEB1  18                 	db	24
   186   00FEB2  4B                 	db	75
   187   00FEB3  BC                 	db	188
   188   00FEB4  BE                 	db	190
   189   00FEB5  4C                 	db	76
   190   00FEB6  6B                 	db	107
   191   00FEB7  6E                 	db	110
   192   00FEB8  4E                 	db	78
   193   00FEB9  03                 	db	3
   194   00FEBA  15                 	db	21
   195   00FEBB  50                 	db	80
   196   00FEBC  79                 	db	121
   197   00FEBD  AD                 	db	173
   198   00FEBE  60                 	db	96
   199   00FEBF  F3                 	db	243
   200   00FEC0  49                 	db	73
   201   00FEC1  71                 	db	113
   202   00FEC2                     __end_of__powers_:
   203                           	callstack 0
   204   00FEC2                     __npowers_:
   205                           	callstack 0
   206   00FEC2  00                 	db	0
   207   00FEC3  80                 	db	128
   208   00FEC4  3F                 	db	63
   209   00FEC5  CD                 	db	205
   210   00FEC6  CC                 	db	204
   211   00FEC7  3D                 	db	61
   212   00FEC8  D7                 	db	215
   213   00FEC9  23                 	db	35
   214   00FECA  3C                 	db	60
   215   00FECB  12                 	db	18
   216   00FECC  83                 	db	131
   217   00FECD  3A                 	db	58
   218   00FECE  B7                 	db	183
   219   00FECF  D1                 	db	209
   220   00FED0  38                 	db	56
   221   00FED1  C6                 	db	198
   222   00FED2  27                 	db	39
   223   00FED3  37                 	db	55
   224   00FED4  38                 	db	56
   225   00FED5  86                 	db	134
   226   00FED6  35                 	db	53
   227   00FED7  C0                 	db	192
   228   00FED8  D6                 	db	214
   229   00FED9  33                 	db	51
   230   00FEDA  CC                 	db	204
   231   00FEDB  2B                 	db	43
   232   00FEDC  32                 	db	50
   233   00FEDD  70                 	db	112
   234   00FEDE  89                 	db	137
   235   00FEDF  30                 	db	48
   236   00FEE0  E7                 	db	231
   237   00FEE1  DB                 	db	219
   238   00FEE2  2E                 	db	46
   239   00FEE3  E5                 	db	229
   240   00FEE4  3C                 	db	60
   241   00FEE5  1E                 	db	30
   242   00FEE6  42                 	db	66
   243   00FEE7  A2                 	db	162
   244   00FEE8  0D                 	db	13
   245   00FEE9                     __end_of__npowers_:
   246                           	callstack 0
   247   00FEE9                     _dpowers:
   248                           	callstack 0
   249   00FEE9  0001               	dw	1
   250   00FEEB  0000               	dw	0
   251   00FEED  000A               	dw	10
   252   00FEEF  0000               	dw	0
   253   00FEF1  0064               	dw	100
   254   00FEF3  0000               	dw	0
   255   00FEF5  03E8               	dw	1000
   256   00FEF7  0000               	dw	0
   257   00FEF9  2710               	dw	10000
   258   00FEFB  0000               	dw	0
   259   00FEFD  86A0               	dw	34464
   260   00FEFF  0001               	dw	1
   261   00FF01  4240               	dw	16960
   262   00FF03  000F               	dw	15
   263   00FF05  9680               	dw	38528
   264   00FF07  0098               	dw	152
   265   00FF09  E100               	dw	57600
   266   00FF0B  05F5               	dw	1525
   267   00FF0D  CA00               	dw	51712
   268   00FF0F  3B9A               	dw	15258
   269   00FF11                     __end_of_dpowers:
   270                           	callstack 0
   271   000000                     _INTCON2	set	4081
   272   000000                     _ADCON1	set	4033
   273   000000                     _TXREG	set	4013
   274   000000                     _RCREG	set	4014
   275   000000                     _SPBRG	set	4015
   276   000000                     _ADRESL	set	4035
   277   000000                     _ADRESH	set	4036
   278   000000                     _TRISCbits	set	3988
   279   000000                     _INTCON3	set	4080
   280   000000                     _T0CONbits	set	4053
   281   000000                     _RCSTAbits	set	4011
   282   000000                     _TXSTAbits	set	4012
   283   000000                     _ADCON0bits	set	4034
   284   000000                     _PORTBbits	set	3969
   285   000000                     _PIR1bits	set	3998
   286   000000                     _RCSTA	set	4011
   287   000000                     _TXSTA	set	4012
   288   000000                     _BAUDCONbits	set	4024
   289   000000                     _ADCON2	set	4032
   290   000000                     _ADCON0	set	4034
   291   000000                     _T0CON	set	4053
   292   000000                     _TMR0L	set	4054
   293   000000                     _TMR0H	set	4055
   294   000000                     _SPBRGH	set	4016
   295   000000                     _INTCON3bits	set	4080
   296   000000                     _INTCONbits	set	4082
   297   000000                     _PORTEbits	set	3972
   298   000000                     _PORTCbits	set	3970
   299   000000                     _TRISA	set	3986
   300   000000                     _TRISB	set	3987
   301   000000                     _TRISE	set	3990
   302   000000                     _TRISD	set	3989
   303   000000                     _TRISC	set	3988
   304   00FF11                     STR_22:
   305                           
   306                           ; BSR set to: 1
   307   00FF11  0D                 	db	13
   308   00FF12  0D                 	db	13
   309   00FF13  52                 	db	82	;'R'
   310   00FF14  65                 	db	101	;'e'
   311   00FF15  61                 	db	97	;'a'
   312   00FF16  64                 	db	100	;'d'
   313   00FF17  69                 	db	105	;'i'
   314   00FF18  6E                 	db	110	;'n'
   315   00FF19  67                 	db	103	;'g'
   316   00FF1A  20                 	db	32
   317   00FF1B  41                 	db	65	;'A'
   318   00FF1C  4E                 	db	78	;'N'
   319   00FF1D  30                 	db	48	;'0'
   320   00FF1E  2C                 	db	44
   321   00FF1F  20                 	db	32
   322   00FF20  41                 	db	65	;'A'
   323   00FF21  4E                 	db	78	;'N'
   324   00FF22  31                 	db	49	;'1'
   325   00FF23  2C                 	db	44
   326   00FF24  20                 	db	32
   327   00FF25  41                 	db	65	;'A'
   328   00FF26  4E                 	db	78	;'N'
   329   00FF27  32                 	db	50	;'2'
   330   00FF28  0D                 	db	13
   331   00FF29  0D                 	db	13
   332   00FF2A  00                 	db	0
   333   00FF2B                     STR_10:
   334                           
   335                           ; BSR set to: 1
   336   00FF2B  73                 	db	115	;'s'
   337   00FF2C  65                 	db	101	;'e'
   338   00FF2D  74                 	db	116	;'t'
   339   00FF2E  75                 	db	117	;'u'
   340   00FF2F  70                 	db	112	;'p'
   341   00FF30  2F                 	db	47
   342   00FF31  25                 	db	37
   343   00FF32  30                 	db	48	;'0'
   344   00FF33  32                 	db	50	;'2'
   345   00FF34  64                 	db	100	;'d'
   346   00FF35  3A                 	db	58	;':'
   347   00FF36  25                 	db	37
   348   00FF37  30                 	db	48	;'0'
   349   00FF38  32                 	db	50	;'2'
   350   00FF39  64                 	db	100	;'d'
   351   00FF3A  3A                 	db	58	;':'
   352   00FF3B  25                 	db	37
   353   00FF3C  30                 	db	48	;'0'
   354   00FF3D  32                 	db	50	;'2'
   355   00FF3E  64                 	db	100	;'d'
   356   00FF3F  00                 	db	0
   357   00FF40                     STR_11:
   358                           
   359                           ; BSR set to: 1
   360   00FF40  25                 	db	37
   361   00FF41  34                 	db	52	;'4'
   362   00FF42  2E                 	db	46
   363   00FF43  32                 	db	50	;'2'
   364   00FF44  66                 	db	102	;'f'
   365   00FF45  56                 	db	86	;'V'
   366   00FF46  20                 	db	32
   367   00FF47  7C                 	db	124
   368   00FF48  20                 	db	32
   369   00FF49  25                 	db	37
   370   00FF4A  34                 	db	52	;'4'
   371   00FF4B  2E                 	db	46
   372   00FF4C  32                 	db	50	;'2'
   373   00FF4D  66                 	db	102	;'f'
   374   00FF4E  56                 	db	86	;'V'
   375   00FF4F  20                 	db	32
   376   00FF50  20                 	db	32
   377   00FF51  20                 	db	32
   378   00FF52  20                 	db	32
   379   00FF53  00                 	db	0
   380   00FF54                     STR_14:
   381                           
   382                           ; BSR set to: 1
   383   00FF54  20                 	db	32
   384   00FF55  20                 	db	32
   385   00FF56  20                 	db	32
   386   00FF57  20                 	db	32
   387   00FF58  20                 	db	32
   388   00FF59  20                 	db	32
   389   00FF5A  20                 	db	32
   390   00FF5B  20                 	db	32
   391   00FF5C  20                 	db	32
   392   00FF5D  20                 	db	32
   393   00FF5E  20                 	db	32
   394   00FF5F  20                 	db	32
   395   00FF60  20                 	db	32
   396   00FF61  20                 	db	32
   397   00FF62  20                 	db	32
   398   00FF63  20                 	db	32
   399   00FF64  00                 	db	0
   400   00FF65                     STR_19:
   401                           
   402                           ; BSR set to: 1
   403   00FF65  42                 	db	66	;'B'
   404   00FF66  55                 	db	85	;'U'
   405   00FF67  52                 	db	82	;'R'
   406   00FF68  48                 	db	72	;'H'
   407   00FF69  41                 	db	65	;'A'
   408   00FF6A  4E                 	db	78	;'N'
   409   00FF6B  20                 	db	32
   410   00FF6C  41                 	db	65	;'A'
   411   00FF6D  5A                 	db	90	;'Z'
   412   00FF6E  45                 	db	69	;'E'
   413   00FF6F  4D                 	db	77	;'M'
   414   00FF70  20                 	db	32
   415   00FF71  41                 	db	65	;'A'
   416   00FF72  4E                 	db	78	;'N'
   417   00FF73  44                 	db	68	;'D'
   418   00FF74  20                 	db	32
   419   00FF75  00                 	db	0
   420   00FF76                     STR_18:
   421                           
   422                           ; BSR set to: 1
   423   00FF76  57                 	db	87	;'W'
   424   00FF77  45                 	db	69	;'E'
   425   00FF78  4C                 	db	76	;'L'
   426   00FF79  43                 	db	67	;'C'
   427   00FF7A  4F                 	db	79	;'O'
   428   00FF7B  4D                 	db	77	;'M'
   429   00FF7C  45                 	db	69	;'E'
   430   00FF7D  20                 	db	32
   431   00FF7E  46                 	db	70	;'F'
   432   00FF7F  52                 	db	82	;'R'
   433   00FF80  4F                 	db	79	;'O'
   434   00FF81  4D                 	db	77	;'M'
   435   00FF82  20                 	db	32
   436   00FF83  4D                 	db	77	;'M'
   437   00FF84  45                 	db	69	;'E'
   438   00FF85  20                 	db	32
   439   00FF86  00                 	db	0
   440   00FF87                     STR_13:
   441                           
   442                           ; BSR set to: 1
   443   00FF87  20                 	db	32
   444   00FF88  4F                 	db	79	;'O'
   445   00FF89  55                 	db	85	;'U'
   446   00FF8A  52                 	db	82	;'R'
   447   00FF8B  20                 	db	32
   448   00FF8C  47                 	db	71	;'G'
   449   00FF8D  52                 	db	82	;'R'
   450   00FF8E  45                 	db	69	;'E'
   451   00FF8F  41                 	db	65	;'A'
   452   00FF90  54                 	db	84	;'T'
   453   00FF91  20                 	db	32
   454   00FF92  57                 	db	87	;'W'
   455   00FF93  4F                 	db	79	;'O'
   456   00FF94  52                 	db	82	;'R'
   457   00FF95  4B                 	db	75	;'K'
   458   00FF96  20                 	db	32
   459   00FF97  00                 	db	0
   460   00FF98                     STR_20:
   461                           
   462                           ; BSR set to: 1
   463   00FF98  46                 	db	70	;'F'
   464   00FF99  52                 	db	82	;'R'
   465   00FF9A  4F                 	db	79	;'O'
   466   00FF9B  4D                 	db	77	;'M'
   467   00FF9C  20                 	db	32
   468   00FF9D  4D                 	db	77	;'M'
   469   00FF9E  59                 	db	89	;'Y'
   470   00FF9F  20                 	db	32
   471   00FFA0  50                 	db	80	;'P'
   472   00FFA1  41                 	db	65	;'A'
   473   00FFA2  52                 	db	82	;'R'
   474   00FFA3  54                 	db	84	;'T'
   475   00FFA4  4E                 	db	78	;'N'
   476   00FFA5  45                 	db	69	;'E'
   477   00FFA6  52                 	db	82	;'R'
   478   00FFA7  20                 	db	32
   479   00FFA8  00                 	db	0
   480   00FFA9                     STR_9:
   481                           
   482                           ; BSR set to: 1
   483   00FFA9  4E                 	db	78	;'N'
   484   00FFAA  6F                 	db	111	;'o'
   485   00FFAB  72                 	db	114	;'r'
   486   00FFAC  6D                 	db	109	;'m'
   487   00FFAD  61                 	db	97	;'a'
   488   00FFAE  6C                 	db	108	;'l'
   489   00FFAF  20                 	db	32
   490   00FFB0  20                 	db	32
   491   00FFB1  20                 	db	32
   492   00FFB2  20                 	db	32
   493   00FFB3  20                 	db	32
   494   00FFB4  20                 	db	32
   495   00FFB5  20                 	db	32
   496   00FFB6  20                 	db	32
   497   00FFB7  20                 	db	32
   498   00FFB8  00                 	db	0
   499   00FFB9                     STR_21:
   500                           
   501                           ; BSR set to: 1
   502   00FFB9  42                 	db	66	;'B'
   503   00FFBA  41                 	db	65	;'A'
   504   00FFBB  53                 	db	83	;'S'
   505   00FFBC  53                 	db	83	;'S'
   506   00FFBD  41                 	db	65	;'A'
   507   00FFBE  4D                 	db	77	;'M'
   508   00FFBF  20                 	db	32
   509   00FFC0  54                 	db	84	;'T'
   510   00FFC1  55                 	db	85	;'U'
   511   00FFC2  46                 	db	70	;'F'
   512   00FFC3  46                 	db	70	;'F'
   513   00FFC4  41                 	db	65	;'A'
   514   00FFC5  48                 	db	72	;'H'
   515   00FFC6  41                 	db	65	;'A'
   516   00FFC7  20                 	db	32
   517   00FFC8  00                 	db	0
   518   00FFC9                     STR_12:
   519                           
   520                           ; BSR set to: 1
   521   00FFC9  20                 	db	32
   522   00FFCA  20                 	db	32
   523   00FFCB  57                 	db	87	;'W'
   524   00FFCC  45                 	db	69	;'E'
   525   00FFCD  4C                 	db	76	;'L'
   526   00FFCE  43                 	db	67	;'C'
   527   00FFCF  4F                 	db	79	;'O'
   528   00FFD0  4D                 	db	77	;'M'
   529   00FFD1  45                 	db	69	;'E'
   530   00FFD2  20                 	db	32
   531   00FFD3  54                 	db	84	;'T'
   532   00FFD4  4F                 	db	79	;'O'
   533   00FFD5  20                 	db	32
   534   00FFD6  20                 	db	32
   535   00FFD7  00                 	db	0
   536   00FFD8                     STR_1:
   537                           
   538                           ; BSR set to: 1
   539   00FFD8  2F                 	db	47
   540   00FFD9  54                 	db	84	;'T'
   541   00FFDA  3D                 	db	61	;'='
   542   00FFDB  25                 	db	37
   543   00FFDC  34                 	db	52	;'4'
   544   00FFDD  2E                 	db	46
   545   00FFDE  32                 	db	50	;'2'
   546   00FFDF  66                 	db	102	;'f'
   547   00FFE0  43                 	db	67	;'C'
   548   00FFE1  00                 	db	0
   549   00FFE2                     STR_7:
   550                           
   551                           ; BSR set to: 1
   552   00FFE2  20                 	db	32
   553   00FFE3  7C                 	db	124
   554   00FFE4  20                 	db	32
   555   00FFE5  48                 	db	72	;'H'
   556   00FFE6  3A                 	db	58	;':'
   557   00FFE7  25                 	db	37
   558   00FFE8  73                 	db	115	;'s'
   559   00FFE9  09                 	db	9
   560   00FFEA  00                 	db	0
   561   00FFEB                     STR_23:
   562                           
   563                           ; BSR set to: 1
   564   00FFEB  28                 	db	40
   565   00FFEC  6E                 	db	110	;'n'
   566   00FFED  75                 	db	117	;'u'
   567   00FFEE  6C                 	db	108	;'l'
   568   00FFEF  6C                 	db	108	;'l'
   569   00FFF0  29                 	db	41
   570   00FFF1  00                 	db	0
   571   00FFF2                     STR_4:
   572                           
   573                           ; BSR set to: 1
   574   00FFF2  43                 	db	67	;'C'
   575   00FFF3  3A                 	db	58	;':'
   576   00FFF4  25                 	db	37
   577   00FFF5  73                 	db	115	;'s'
   578   00FFF6  00                 	db	0
   579   00FFF7                     STR_3:
   580                           
   581                           ; BSR set to: 1
   582   00FFF7  4F                 	db	79	;'O'
   583   00FFF8  46                 	db	70	;'F'
   584   00FFF9  46                 	db	70	;'F'
   585   00FFFA  00                 	db	0
   586   00FFFB                     STR_2:
   587                           
   588                           ; BSR set to: 1
   589   00FFFB  4F                 	db	79	;'O'
   590   00FFFC  4E                 	db	78	;'N'
   591   00FFFD  00                 	db	0
   592   00FFFE  00                 	db	0	; dummy byte at the end
   593   000000                     
   594                           ; #config settings
   595                           
   596                           	psect	cinit
   597   003FC0                     __pcinit:
   598                           	callstack 0
   599   003FC0                     start_initialization:
   600                           	callstack 0
   601   003FC0                     __initialization:
   602                           	callstack 0
   603                           
   604                           ; Initialize objects allocated to BANK0 (4 bytes)
   605                           ; load TBLPTR registers with __pidataBANK0
   606   003FC0  0E0C               	movlw	low __pidataBANK0
   607   003FC2  6EF6               	movwf	tblptrl,c
   608   003FC4  0E46               	movlw	high __pidataBANK0
   609   003FC6  6EF7               	movwf	tblptrh,c
   610   003FC8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   611   003FCA  6EF8               	movwf	tblptru,c
   612   003FCC  EE00  F0DB         	lfsr	0,__pdataBANK0
   613   003FD0  EE10 F004          	lfsr	1,4
   614   003FD4                     copy_data0:
   615   003FD4  0009               	tblrd		*+
   616   003FD6  CFF5 FFEE          	movff	tablat,postinc0
   617   003FDA  50E5               	movf	postdec1,w,c
   618   003FDC  50E1               	movf	fsr1l,w,c
   619   003FDE  E1FA               	bnz	copy_data0
   620                           
   621                           ; Clear objects allocated to BANK1 (53 bytes)
   622   003FE0  EE01  F04D         	lfsr	0,__pbssBANK1
   623   003FE4  0E35               	movlw	53
   624   003FE6                     clear_0:
   625   003FE6  6AEE               	clrf	postinc0,c
   626   003FE8  06E8               	decf	wreg,f,c
   627   003FEA  E1FD               	bnz	clear_0
   628                           
   629                           ; Clear objects allocated to BANK0 (1 bytes)
   630   003FEC  0100               	movlb	0
   631   003FEE  6BDF               	clrf	__pbssBANK0& (0+255),b
   632                           
   633                           ; Clear objects allocated to COMRAM (2 bytes)
   634   003FF0  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   635   003FF2  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   636   003FF4                     end_of_initialization:
   637                           	callstack 0
   638   003FF4                     __end_of__initialization:
   639                           	callstack 0
   640   003FF4  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   641   003FF6  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   642   003FF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   643   003FFA  6EF8               	movwf	tblptru,c
   644   003FFC  0100               	movlb	0
   645   003FFE  EFDF  F00F         	goto	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMRAM
   648   00007B                     __pbssCOMRAM:
   649                           	callstack 0
   650   00007B                     _Setup_Mode:
   651                           	callstack 0
   652   00007B                     	ds	2
   653                           
   654                           	psect	bssBANK0
   655   0000DF                     __pbssBANK0:
   656                           	callstack 0
   657   0000DF                     _ReceivedChar:
   658                           	callstack 0
   659   0000DF                     	ds	1
   660                           
   661                           	psect	dataBANK0
   662   0000DB                     __pdataBANK0:
   663                           	callstack 0
   664   0000DB                     _LCD_INIT_STRING:
   665                           	callstack 0
   666   0000DB                     	ds	4
   667                           
   668                           	psect	bssBANK1
   669   00014D                     __pbssBANK1:
   670                           	callstack 0
   671   00014D                     _BufferSer:
   672                           	callstack 0
   673   00014D                     	ds	32
   674   00016D                     _AN:
   675                           	callstack 0
   676   00016D                     	ds	9
   677   000176                     _heater:
   678                           	callstack 0
   679   000176                     	ds	2
   680   000178                     _coolar:
   681                           	callstack 0
   682   000178                     	ds	2
   683   00017A                     _Clock_Mode:
   684                           	callstack 0
   685   00017A                     	ds	2
   686   00017C                     _count_hour:
   687                           	callstack 0
   688   00017C                     	ds	2
   689   00017E                     _count_min:
   690                           	callstack 0
   691   00017E                     	ds	2
   692   000180                     _count_sec:
   693                           	callstack 0
   694   000180                     	ds	2
   695                           
   696                           	psect	cstackBANK1
   697   000100                     __pcstackBANK1:
   698                           	callstack 0
   699   000100                     ?_sprintf:
   700                           	callstack 0
   701   000100                     sprintf@sp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x0
   705   000100                     	ds	2
   706   000102                     sprintf@f:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x2
   710   000102                     	ds	8
   711   00010A                     ??_sprintf:
   712                           
   713                           ; 1 bytes @ 0xA
   714   00010A                     	ds	6
   715   000110                     _sprintf$1749:
   716                           	callstack 0
   717                           
   718                           ; 3 bytes @ 0x10
   719   000110                     	ds	3
   720   000113                     sprintf@cp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x13
   724   000113                     	ds	2
   725   000115                     sprintf@ap:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x15
   729   000115                     	ds	2
   730   000117                     sprintf@len:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x17
   734   000117                     	ds	2
   735   000119                     sprintf@tmpval:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x19
   739   000119                     	ds	4
   740   00011D                     sprintf@val:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x1D
   744   00011D                     	ds	4
   745   000121                     sprintf@eexp:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x21
   749   000121                     	ds	2
   750   000123                     sprintf@flag:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x23
   754   000123                     	ds	2
   755   000125                     sprintf@fval:
   756                           	callstack 0
   757                           
   758                           ; 3 bytes @ 0x25
   759   000125                     	ds	3
   760   000128                     sprintf@width:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x28
   764   000128                     	ds	2
   765   00012A                     sprintf@prec:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2A
   769   00012A                     	ds	2
   770   00012C                     sprintf@c:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x2C
   774   00012C                     	ds	1
   775   00012D                     update_lcd_timer@ss:
   776                           	callstack 0
   777   00012D                     update_lcd_setup@ss:
   778                           	callstack 0
   779   00012D                     update_lcd_temp@Buffer:
   780                           	callstack 0
   781   00012D                     update_lcd_COOLER@Buffer:
   782                           	callstack 0
   783   00012D                     updete_lcd_AN@Buffer:
   784                           	callstack 0
   785   00012D                     lcd_welcome@Buffer:
   786                           	callstack 0
   787                           
   788                           ; 16 bytes @ 0x2D
   789   00012D                     	ds	2
   790   00012F                     update_lcd_timer@mm:
   791                           	callstack 0
   792   00012F                     update_lcd_setup@mm:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x2F
   796   00012F                     	ds	2
   797   000131                     update_lcd_timer@hh:
   798                           	callstack 0
   799   000131                     update_lcd_setup@hh:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x31
   803   000131                     	ds	2
   804   000133                     update_lcd_timer@Buffer:
   805                           	callstack 0
   806   000133                     update_lcd_setup@Buffer:
   807                           	callstack 0
   808                           
   809                           ; 16 bytes @ 0x33
   810   000133                     	ds	10
   811   00013D                     update_lcd_COOLER@mode:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x3D
   815   00013D                     	ds	6
   816   000143                     ??_main:
   817                           
   818                           ; 1 bytes @ 0x43
   819   000143                     	ds	2
   820   000145                     main@clock_mode:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x45
   824   000145                     	ds	2
   825   000147                     main@setup_mode:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x47
   829   000147                     	ds	2
   830   000149                     main@voltage:
   831                           	callstack 0
   832                           
   833                           ; 3 bytes @ 0x49
   834   000149                     	ds	3
   835   00014C                     main@channel:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x4C
   839   00014C                     	ds	1
   840                           
   841                           	psect	cstackBANK0
   842   000080                     __pcstackBANK0:
   843                           	callstack 0
   844   000080                     i2update_lcd_timer@Buffer:
   845                           	callstack 0
   846   000080                     i2update_lcd_setup@Buffer:
   847                           	callstack 0
   848                           
   849                           ; 16 bytes @ 0x0
   850   000080                     	ds	16
   851   000090                     i2update_lcd_timer@ss:
   852                           	callstack 0
   853   000090                     i2update_lcd_setup@ss:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x10
   857   000090                     	ds	2
   858   000092                     i2update_lcd_timer@mm:
   859                           	callstack 0
   860   000092                     i2update_lcd_setup@mm:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x12
   864   000092                     	ds	2
   865   000094                     i2update_lcd_timer@hh:
   866                           	callstack 0
   867   000094                     i2update_lcd_setup@hh:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x14
   871   000094                     	ds	2
   872   000096                     ??_highIsr:
   873                           
   874                           ; 1 bytes @ 0x16
   875   000096                     	ds	10
   876   0000A0                     ??_isdigit:
   877   0000A0                     ??_delay_cycles:
   878   0000A0                     ?_read_adc_raw_no_lib:
   879                           	callstack 0
   880   0000A0                     ?___wmul:
   881                           	callstack 0
   882   0000A0                     ?___awmod:
   883                           	callstack 0
   884   0000A0                     ?___ftpack:
   885                           	callstack 0
   886   0000A0                     ?___ftneg:
   887                           	callstack 0
   888   0000A0                     ?__tdiv_to_l_:
   889                           	callstack 0
   890   0000A0                     ?__div_to_l_:
   891                           	callstack 0
   892   0000A0                     ?___lldiv:
   893                           	callstack 0
   894   0000A0                     send_byte_no_lib@c:
   895                           	callstack 0
   896   0000A0                     ___lbmod@divisor:
   897                           	callstack 0
   898   0000A0                     delay_ms@n:
   899                           	callstack 0
   900   0000A0                     ___wmul@multiplier:
   901                           	callstack 0
   902   0000A0                     ___awmod@dividend:
   903                           	callstack 0
   904   0000A0                     __div_to_l_@f1:
   905                           	callstack 0
   906   0000A0                     ___ftpack@arg:
   907                           	callstack 0
   908   0000A0                     __tdiv_to_l_@f1:
   909                           	callstack 0
   910   0000A0                     ___ftge@ff1:
   911                           	callstack 0
   912   0000A0                     ___ftneg@f1:
   913                           	callstack 0
   914   0000A0                     ___lldiv@dividend:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x20
   918   0000A0                     	ds	1
   919   0000A1                     ___lbmod@dividend:
   920                           	callstack 0
   921   0000A1                     _isdigit$1506:
   922                           	callstack 0
   923   0000A1                     send_string_no_lib@p:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x21
   927   0000A1                     	ds	1
   928   0000A2                     ??_read_adc_raw_no_lib:
   929   0000A2                     ___lbmod@counter:
   930                           	callstack 0
   931   0000A2                     isdigit@c:
   932                           	callstack 0
   933   0000A2                     delay_ms@x:
   934                           	callstack 0
   935   0000A2                     ___wmul@multiplicand:
   936                           	callstack 0
   937   0000A2                     ___awmod@divisor:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x22
   941   0000A2                     	ds	1
   942   0000A3                     delay_cycles@n:
   943                           	callstack 0
   944   0000A3                     ___ftpack@exp:
   945                           	callstack 0
   946   0000A3                     ___lbmod@rem:
   947                           	callstack 0
   948   0000A3                     __div_to_l_@f2:
   949                           	callstack 0
   950   0000A3                     __tdiv_to_l_@f2:
   951                           	callstack 0
   952   0000A3                     ___ftge@ff2:
   953                           	callstack 0
   954                           
   955                           ; 3 bytes @ 0x23
   956   0000A3                     	ds	1
   957   0000A4                     ___awmod@counter:
   958                           	callstack 0
   959   0000A4                     ___ftpack@sign:
   960                           	callstack 0
   961   0000A4                     ___lbdiv@divisor:
   962                           	callstack 0
   963   0000A4                     read_adc_raw_no_lib@raw_value:
   964                           	callstack 0
   965   0000A4                     delay_cycles@x:
   966                           	callstack 0
   967   0000A4                     ___wmul@product:
   968                           	callstack 0
   969   0000A4                     ___lldiv@divisor:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x24
   973   0000A4                     	ds	1
   974   0000A5                     ??___ftpack:
   975   0000A5                     ___awmod@sign:
   976                           	callstack 0
   977   0000A5                     ___lbdiv@dividend:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x25
   981   0000A5                     	ds	1
   982   0000A6                     ??__tdiv_to_l_:
   983   0000A6                     ??_lcd_send_nibble:
   984   0000A6                     ??___ftge:
   985   0000A6                     ?___awdiv:
   986                           	callstack 0
   987   0000A6                     read_adc_raw_no_lib@channel:
   988                           	callstack 0
   989   0000A6                     ___lbdiv@counter:
   990                           	callstack 0
   991   0000A6                     ___awdiv@dividend:
   992                           	callstack 0
   993   0000A6                     __div_to_l_@quot:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x26
   997   0000A6                     	ds	1
   998   0000A7                     lcd_send_nibble@n:
   999                           	callstack 0
  1000   0000A7                     ___lbdiv@quotient:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x27
  1004   0000A7                     	ds	1
  1005   0000A8                     ?___awtoft:
  1006                           	callstack 0
  1007   0000A8                     ?___lltoft:
  1008                           	callstack 0
  1009   0000A8                     lcd_send_byte@n:
  1010                           	callstack 0
  1011   0000A8                     ___awdiv@divisor:
  1012                           	callstack 0
  1013   0000A8                     ___awtoft@c:
  1014                           	callstack 0
  1015   0000A8                     ___lldiv@quotient:
  1016                           	callstack 0
  1017   0000A8                     ___lltoft@c:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x28
  1021   0000A8                     	ds	1
  1022   0000A9                     lcd_send_byte@cm_data:
  1023                           	callstack 0
  1024   0000A9                     __tdiv_to_l_@quot:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x29
  1028   0000A9                     	ds	1
  1029   0000AA                     lcd_init@i:
  1030                           	callstack 0
  1031   0000AA                     lcd_gotoxy@y:
  1032                           	callstack 0
  1033   0000AA                     ___awdiv@counter:
  1034                           	callstack 0
  1035   0000AA                     __div_to_l_@cntr:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x2A
  1039   0000AA                     	ds	1
  1040   0000AB                     lcd_gotoxy@x:
  1041                           	callstack 0
  1042   0000AB                     ___awdiv@sign:
  1043                           	callstack 0
  1044   0000AB                     ___awtoft@sign:
  1045                           	callstack 0
  1046   0000AB                     __div_to_l_@exp1:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x2B
  1050   0000AB                     	ds	1
  1051   0000AC                     ??___lltoft:
  1052   0000AC                     ?___ftdiv:
  1053                           	callstack 0
  1054   0000AC                     lcd_gotoxy@address:
  1055                           	callstack 0
  1056   0000AC                     ___lldiv@counter:
  1057                           	callstack 0
  1058   0000AC                     ___awdiv@quotient:
  1059                           	callstack 0
  1060   0000AC                     ___ftdiv@f1:
  1061                           	callstack 0
  1062                           
  1063                           ; 3 bytes @ 0x2C
  1064   0000AC                     	ds	1
  1065   0000AD                     ?___llmod:
  1066                           	callstack 0
  1067   0000AD                     lcd_putc@c:
  1068                           	callstack 0
  1069   0000AD                     __tdiv_to_l_@cntr:
  1070                           	callstack 0
  1071   0000AD                     ___llmod@dividend:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x2D
  1075   0000AD                     	ds	1
  1076   0000AE                     ?___ftmul:
  1077                           	callstack 0
  1078   0000AE                     __tdiv_to_l_@exp1:
  1079                           	callstack 0
  1080   0000AE                     lcd_puts@s:
  1081                           	callstack 0
  1082   0000AE                     ___ftmul@f1:
  1083                           	callstack 0
  1084                           
  1085                           ; 3 bytes @ 0x2E
  1086   0000AE                     	ds	1
  1087   0000AF                     ___ftdiv@f2:
  1088                           	callstack 0
  1089                           
  1090                           ; 3 bytes @ 0x2F
  1091   0000AF                     	ds	1
  1092   0000B0                     ___lltoft@exp:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x30
  1096   0000B0                     	ds	1
  1097   0000B1                     ___ftmul@f2:
  1098                           	callstack 0
  1099   0000B1                     ___llmod@divisor:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x31
  1103   0000B1                     	ds	1
  1104   0000B2                     ??___ftdiv:
  1105                           
  1106                           ; 1 bytes @ 0x32
  1107   0000B2                     	ds	2
  1108   0000B4                     ??___ftmul:
  1109                           
  1110                           ; 1 bytes @ 0x34
  1111   0000B4                     	ds	1
  1112   0000B5                     ___ftdiv@cntr:
  1113                           	callstack 0
  1114   0000B5                     ___llmod@counter:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x35
  1118   0000B5                     	ds	1
  1119   0000B6                     ___ftdiv@f3:
  1120                           	callstack 0
  1121                           
  1122                           ; 3 bytes @ 0x36
  1123   0000B6                     	ds	1
  1124   0000B7                     ___ftmul@exp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x37
  1128   0000B7                     	ds	1
  1129   0000B8                     ___ftmul@f3_as_product:
  1130                           	callstack 0
  1131                           
  1132                           ; 3 bytes @ 0x38
  1133   0000B8                     	ds	1
  1134   0000B9                     ___ftdiv@exp:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x39
  1138   0000B9                     	ds	1
  1139   0000BA                     ___ftdiv@sign:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x3A
  1143   0000BA                     	ds	1
  1144   0000BB                     ?_read_adc_voltage:
  1145                           	callstack 0
  1146   0000BB                     ___ftmul@cntr:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x3B
  1150   0000BB                     	ds	1
  1151   0000BC                     ___ftmul@sign:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x3C
  1155   0000BC                     	ds	1
  1156   0000BD                     ?_fround:
  1157                           	callstack 0
  1158   0000BD                     ?_scale:
  1159                           	callstack 0
  1160                           
  1161                           ; 3 bytes @ 0x3D
  1162   0000BD                     	ds	1
  1163   0000BE                     read_adc_voltage@voltage:
  1164                           	callstack 0
  1165                           
  1166                           ; 3 bytes @ 0x3E
  1167   0000BE                     	ds	2
  1168   0000C0                     ??_fround:
  1169   0000C0                     _scale$1748:
  1170                           	callstack 0
  1171                           
  1172                           ; 3 bytes @ 0x40
  1173   0000C0                     	ds	1
  1174   0000C1                     read_adc_voltage@channel:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x41
  1178   0000C1                     	ds	1
  1179   0000C2                     read_adc_voltage@raw_value:
  1180                           	callstack 0
  1181   0000C2                     _fround$1747:
  1182                           	callstack 0
  1183                           
  1184                           ; 3 bytes @ 0x42
  1185   0000C2                     	ds	1
  1186   0000C3                     scale@scl:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x43
  1190   0000C3                     	ds	1
  1191   0000C4                     ?___fttol:
  1192                           	callstack 0
  1193   0000C4                     ___fttol@f1:
  1194                           	callstack 0
  1195                           
  1196                           ; 3 bytes @ 0x44
  1197   0000C4                     	ds	1
  1198   0000C5                     _fround$1746:
  1199                           	callstack 0
  1200                           
  1201                           ; 3 bytes @ 0x45
  1202   0000C5                     	ds	3
  1203   0000C8                     ??___fttol:
  1204   0000C8                     fround@prec:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x48
  1208   0000C8                     	ds	1
  1209   0000C9                     ?___ftadd:
  1210                           	callstack 0
  1211   0000C9                     ___ftadd@f1:
  1212                           	callstack 0
  1213                           
  1214                           ; 3 bytes @ 0x49
  1215   0000C9                     	ds	3
  1216   0000CC                     ___ftadd@f2:
  1217                           	callstack 0
  1218                           
  1219                           ; 3 bytes @ 0x4C
  1220   0000CC                     	ds	1
  1221   0000CD                     ___fttol@sign1:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x4D
  1225   0000CD                     	ds	1
  1226   0000CE                     ___fttol@lval:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x4E
  1230   0000CE                     	ds	1
  1231   0000CF                     ??___ftadd:
  1232                           
  1233                           ; 1 bytes @ 0x4F
  1234   0000CF                     	ds	3
  1235   0000D2                     ___ftadd@sign:
  1236                           	callstack 0
  1237   0000D2                     ___fttol@exp1:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x52
  1241   0000D2                     	ds	1
  1242   0000D3                     ___ftadd@exp2:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x53
  1246   0000D3                     	ds	1
  1247   0000D4                     ___ftadd@exp1:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x54
  1251   0000D4                     	ds	1
  1252   0000D5                     ?___ftsub:
  1253                           	callstack 0
  1254   0000D5                     ___ftsub@f1:
  1255                           	callstack 0
  1256                           
  1257                           ; 3 bytes @ 0x55
  1258   0000D5                     	ds	3
  1259   0000D8                     ___ftsub@f2:
  1260                           	callstack 0
  1261                           
  1262                           ; 3 bytes @ 0x58
  1263   0000D8                     	ds	3
  1264   0000DB                     
  1265                           ; 1 bytes @ 0x5B
  1266                           
  1267                           	psect	cstackCOMRAM
  1268   000001                     __pcstackCOMRAM:
  1269                           	callstack 0
  1270   000001                     ??i2_delay_cycles:
  1271   000001                     ??i2_isdigit:
  1272   000001                     ?i2___wmul:
  1273                           	callstack 0
  1274   000001                     ?i2___awmod:
  1275                           	callstack 0
  1276   000001                     ?i2___ftpack:
  1277                           	callstack 0
  1278   000001                     ?i2___ftneg:
  1279                           	callstack 0
  1280   000001                     ?i2___lldiv:
  1281                           	callstack 0
  1282   000001                     ?i2__div_to_l_:
  1283                           	callstack 0
  1284   000001                     ?i2__tdiv_to_l_:
  1285                           	callstack 0
  1286   000001                     i2___lbmod@divisor:
  1287                           	callstack 0
  1288   000001                     i2delay_ms@n:
  1289                           	callstack 0
  1290   000001                     i2___wmul@multiplier:
  1291                           	callstack 0
  1292   000001                     i2___awmod@dividend:
  1293                           	callstack 0
  1294   000001                     i2__div_to_l_@f1:
  1295                           	callstack 0
  1296   000001                     i2___ftpack@arg:
  1297                           	callstack 0
  1298   000001                     i2__tdiv_to_l_@f1:
  1299                           	callstack 0
  1300   000001                     i2___ftge@ff1:
  1301                           	callstack 0
  1302   000001                     i2___ftneg@f1:
  1303                           	callstack 0
  1304   000001                     i2___lldiv@dividend:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x0
  1308   000001                     	ds	1
  1309   000002                     i2___lbmod@dividend:
  1310                           	callstack 0
  1311   000002                     i2_isdigit$1506:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x1
  1315   000002                     	ds	1
  1316   000003                     i2___lbmod@counter:
  1317                           	callstack 0
  1318   000003                     i2isdigit@c:
  1319                           	callstack 0
  1320   000003                     i2delay_ms@x:
  1321                           	callstack 0
  1322   000003                     i2___wmul@multiplicand:
  1323                           	callstack 0
  1324   000003                     i2___awmod@divisor:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x2
  1328   000003                     	ds	1
  1329   000004                     i2delay_cycles@n:
  1330                           	callstack 0
  1331   000004                     i2___ftpack@exp:
  1332                           	callstack 0
  1333   000004                     i2___lbmod@rem:
  1334                           	callstack 0
  1335   000004                     i2__div_to_l_@f2:
  1336                           	callstack 0
  1337   000004                     i2__tdiv_to_l_@f2:
  1338                           	callstack 0
  1339   000004                     i2___ftge@ff2:
  1340                           	callstack 0
  1341                           
  1342                           ; 3 bytes @ 0x3
  1343   000004                     	ds	1
  1344   000005                     i2___awmod@counter:
  1345                           	callstack 0
  1346   000005                     i2___ftpack@sign:
  1347                           	callstack 0
  1348   000005                     i2___lbdiv@divisor:
  1349                           	callstack 0
  1350   000005                     i2delay_cycles@x:
  1351                           	callstack 0
  1352   000005                     i2___wmul@product:
  1353                           	callstack 0
  1354   000005                     i2___lldiv@divisor:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x4
  1358   000005                     	ds	1
  1359   000006                     ??i2___ftpack:
  1360   000006                     i2___awmod@sign:
  1361                           	callstack 0
  1362   000006                     i2___lbdiv@dividend:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x5
  1366   000006                     	ds	1
  1367   000007                     ??i2_lcd_send_nibble:
  1368   000007                     ??i2__tdiv_to_l_:
  1369   000007                     ??i2___ftge:
  1370   000007                     ?i2___awdiv:
  1371                           	callstack 0
  1372   000007                     i2___lbdiv@counter:
  1373                           	callstack 0
  1374   000007                     i2___awdiv@dividend:
  1375                           	callstack 0
  1376   000007                     i2__div_to_l_@quot:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x6
  1380   000007                     	ds	1
  1381   000008                     i2lcd_send_nibble@n:
  1382                           	callstack 0
  1383   000008                     i2___lbdiv@quotient:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x7
  1387   000008                     	ds	1
  1388   000009                     ?i2___lltoft:
  1389                           	callstack 0
  1390   000009                     i2lcd_send_byte@n:
  1391                           	callstack 0
  1392   000009                     i2___awdiv@divisor:
  1393                           	callstack 0
  1394   000009                     i2___lldiv@quotient:
  1395                           	callstack 0
  1396   000009                     i2___lltoft@c:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x8
  1400   000009                     	ds	1
  1401   00000A                     i2lcd_send_byte@cm_data:
  1402                           	callstack 0
  1403   00000A                     i2__tdiv_to_l_@quot:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x9
  1407   00000A                     	ds	1
  1408   00000B                     i2lcd_gotoxy@y:
  1409                           	callstack 0
  1410   00000B                     i2___awdiv@counter:
  1411                           	callstack 0
  1412   00000B                     i2__div_to_l_@cntr:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0xA
  1416   00000B                     	ds	1
  1417   00000C                     i2lcd_gotoxy@x:
  1418                           	callstack 0
  1419   00000C                     i2___awdiv@sign:
  1420                           	callstack 0
  1421   00000C                     i2__div_to_l_@exp1:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0xB
  1425   00000C                     	ds	1
  1426   00000D                     ??i2___lltoft:
  1427   00000D                     i2lcd_gotoxy@address:
  1428                           	callstack 0
  1429   00000D                     i2___lldiv@counter:
  1430                           	callstack 0
  1431   00000D                     i2___awdiv@quotient:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0xC
  1435   00000D                     	ds	1
  1436   00000E                     ?i2___llmod:
  1437                           	callstack 0
  1438   00000E                     i2lcd_putc@c:
  1439                           	callstack 0
  1440   00000E                     i2__tdiv_to_l_@cntr:
  1441                           	callstack 0
  1442   00000E                     i2___llmod@dividend:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0xD
  1446   00000E                     	ds	1
  1447   00000F                     ?i2___ftmul:
  1448                           	callstack 0
  1449   00000F                     i2__tdiv_to_l_@exp1:
  1450                           	callstack 0
  1451   00000F                     i2lcd_puts@s:
  1452                           	callstack 0
  1453   00000F                     i2___ftmul@f1:
  1454                           	callstack 0
  1455                           
  1456                           ; 3 bytes @ 0xE
  1457   00000F                     	ds	2
  1458   000011                     i2___lltoft@exp:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x10
  1462   000011                     	ds	1
  1463   000012                     i2___ftmul@f2:
  1464                           	callstack 0
  1465   000012                     i2___llmod@divisor:
  1466                           	callstack 0
  1467                           
  1468                           ; 4 bytes @ 0x11
  1469   000012                     	ds	3
  1470   000015                     ??i2___ftmul:
  1471                           
  1472                           ; 1 bytes @ 0x14
  1473   000015                     	ds	1
  1474   000016                     i2___llmod@counter:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x15
  1478   000016                     	ds	2
  1479   000018                     i2___ftmul@exp:
  1480                           	callstack 0
  1481                           
  1482                           ; 1 bytes @ 0x17
  1483   000018                     	ds	1
  1484   000019                     i2___ftmul@f3_as_product:
  1485                           	callstack 0
  1486                           
  1487                           ; 3 bytes @ 0x18
  1488   000019                     	ds	3
  1489   00001C                     i2___ftmul@cntr:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x1B
  1493   00001C                     	ds	1
  1494   00001D                     i2___ftmul@sign:
  1495                           	callstack 0
  1496                           
  1497                           ; 1 bytes @ 0x1C
  1498   00001D                     	ds	1
  1499   00001E                     ?i2_fround:
  1500                           	callstack 0
  1501   00001E                     ?i2_scale:
  1502                           	callstack 0
  1503                           
  1504                           ; 3 bytes @ 0x1D
  1505   00001E                     	ds	3
  1506   000021                     ??i2_fround:
  1507   000021                     i2_scale$2004:
  1508                           	callstack 0
  1509                           
  1510                           ; 3 bytes @ 0x20
  1511   000021                     	ds	2
  1512   000023                     i2_fround$2003:
  1513                           	callstack 0
  1514                           
  1515                           ; 3 bytes @ 0x22
  1516   000023                     	ds	1
  1517   000024                     i2scale@scl:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x23
  1521   000024                     	ds	1
  1522   000025                     ?i2___fttol:
  1523                           	callstack 0
  1524   000025                     i2___fttol@f1:
  1525                           	callstack 0
  1526                           
  1527                           ; 3 bytes @ 0x24
  1528   000025                     	ds	1
  1529   000026                     i2_fround$2002:
  1530                           	callstack 0
  1531                           
  1532                           ; 3 bytes @ 0x25
  1533   000026                     	ds	3
  1534   000029                     ??i2___fttol:
  1535   000029                     i2fround@prec:
  1536                           	callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x28
  1539   000029                     	ds	1
  1540   00002A                     ?i2___ftadd:
  1541                           	callstack 0
  1542   00002A                     i2___ftadd@f1:
  1543                           	callstack 0
  1544                           
  1545                           ; 3 bytes @ 0x29
  1546   00002A                     	ds	3
  1547   00002D                     i2___ftadd@f2:
  1548                           	callstack 0
  1549                           
  1550                           ; 3 bytes @ 0x2C
  1551   00002D                     	ds	1
  1552   00002E                     i2___fttol@sign1:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x2D
  1556   00002E                     	ds	1
  1557   00002F                     i2___fttol@lval:
  1558                           	callstack 0
  1559                           
  1560                           ; 4 bytes @ 0x2E
  1561   00002F                     	ds	1
  1562   000030                     ??i2___ftadd:
  1563                           
  1564                           ; 1 bytes @ 0x2F
  1565   000030                     	ds	3
  1566   000033                     i2___ftadd@sign:
  1567                           	callstack 0
  1568   000033                     i2___fttol@exp1:
  1569                           	callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x32
  1572   000033                     	ds	1
  1573   000034                     i2___ftadd@exp2:
  1574                           	callstack 0
  1575                           
  1576                           ; 1 bytes @ 0x33
  1577   000034                     	ds	1
  1578   000035                     i2___ftadd@exp1:
  1579                           	callstack 0
  1580                           
  1581                           ; 1 bytes @ 0x34
  1582   000035                     	ds	1
  1583   000036                     ?i2___ftsub:
  1584                           	callstack 0
  1585   000036                     i2___ftsub@f1:
  1586                           	callstack 0
  1587                           
  1588                           ; 3 bytes @ 0x35
  1589   000036                     	ds	3
  1590   000039                     i2___ftsub@f2:
  1591                           	callstack 0
  1592                           
  1593                           ; 3 bytes @ 0x38
  1594   000039                     	ds	3
  1595   00003C                     ?i2_sprintf:
  1596                           	callstack 0
  1597   00003C                     i2sprintf@sp:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x3B
  1601   00003C                     	ds	2
  1602   00003E                     i2sprintf@f:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x3D
  1606   00003E                     	ds	8
  1607   000046                     ??i2_sprintf:
  1608                           
  1609                           ; 1 bytes @ 0x45
  1610   000046                     	ds	6
  1611   00004C                     i2_sprintf$2005:
  1612                           	callstack 0
  1613                           
  1614                           ; 3 bytes @ 0x4B
  1615   00004C                     	ds	3
  1616   00004F                     i2sprintf@cp:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x4E
  1620   00004F                     	ds	2
  1621   000051                     i2sprintf@ap:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x50
  1625   000051                     	ds	2
  1626   000053                     i2sprintf@len:
  1627                           	callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x52
  1630   000053                     	ds	2
  1631   000055                     i2sprintf@tmpval:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x54
  1635   000055                     	ds	4
  1636   000059                     i2sprintf@val:
  1637                           	callstack 0
  1638                           
  1639                           ; 4 bytes @ 0x58
  1640   000059                     	ds	4
  1641   00005D                     i2sprintf@eexp:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x5C
  1645   00005D                     	ds	2
  1646   00005F                     i2sprintf@flag:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x5E
  1650   00005F                     	ds	2
  1651   000061                     i2sprintf@fval:
  1652                           	callstack 0
  1653                           
  1654                           ; 3 bytes @ 0x60
  1655   000061                     	ds	3
  1656   000064                     i2sprintf@width:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x63
  1660   000064                     	ds	2
  1661   000066                     i2sprintf@prec:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x65
  1665   000066                     	ds	2
  1666   000068                     i2sprintf@c:
  1667                           	callstack 0
  1668                           
  1669                           ; 1 bytes @ 0x67
  1670   000068                     	ds	1
  1671   000069                     i2update_lcd_temp@Buffer:
  1672                           	callstack 0
  1673   000069                     i2update_lcd_COOLER@Buffer:
  1674                           	callstack 0
  1675   000069                     i2updete_lcd_AN@Buffer:
  1676                           	callstack 0
  1677                           
  1678                           ; 16 bytes @ 0x68
  1679   000069                     	ds	16
  1680   000079                     i2update_lcd_COOLER@mode:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x78
  1684   000079                     	ds	2
  1685   00007B                     
  1686                           ; 1 bytes @ 0x7A
  1687 ;;
  1688 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1689 ;;
  1690 ;; *************** function _main *****************
  1691 ;; Defined at:
  1692 ;;		line 348 in file "Pic_App.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  voltage         3   73[BANK1 ] float 
  1697 ;;  temp            3    0        float 
  1698 ;;  setup_mode      2   71[BANK1 ] int 
  1699 ;;  clock_mode      2   69[BANK1 ] int 
  1700 ;;  RPS             2    0        int 
  1701 ;;  channel         1   76[BANK1 ] unsigned char 
  1702 ;;  SendToSerial    1    0        unsigned char 
  1703 ;;  RecvedChar      1    0        unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2  231[None  ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:       10 bytes
  1718 ;; Hardware stack levels required when called: 17
  1719 ;; This function calls:
  1720 ;;		___ftmul
  1721 ;;		_delay_ms
  1722 ;;		_initMode
  1723 ;;		_initTimer0
  1724 ;;		_init_adc_no_lib
  1725 ;;		_lcd_init
  1726 ;;		_lcd_putc
  1727 ;;		_lcd_welcome
  1728 ;;		_read_adc_voltage
  1729 ;;		_reloadTimer0
  1730 ;;		_send_string_no_lib
  1731 ;;		_setupPorts
  1732 ;;		_setupSerial
  1733 ;;		_update_lcd
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text0
  1740   001FBE                     __ptext0:
  1741                           	callstack 0
  1742   001FBE                     _main:
  1743                           	callstack 14
  1744                           
  1745                           ;Pic_App.c: 351: unsigned char channel;;Pic_App.c: 352: float voltage;;Pic_App.c: 353: f
      +                          loat temp;;Pic_App.c: 354: setupPorts();
  1746                           
  1747                           ;incstack = 0
  1748   001FBE  ECCB  F022         	call	_setupPorts	;wreg free
  1749                           
  1750                           ;Pic_App.c: 355: setupSerial();
  1751   001FC2  EC9C  F022         	call	_setupSerial	;wreg free
  1752                           
  1753                           ;Pic_App.c: 356: lcd_init();
  1754   001FC6  EC43  F01E         	call	_lcd_init	;wreg free
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Pic_App.c: 357: init_adc_no_lib();
  1758   001FCA  ECF6  F022         	call	_init_adc_no_lib	;wreg free
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;Pic_App.c: 359: lcd_welcome();
  1762   001FCE  ECBC  F00E         	call	_lcd_welcome	;wreg free
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;Pic_App.c: 360: PORTCbits.RC5 = 1;
  1766   001FD2  8A82               	bsf	130,5,c	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;Pic_App.c: 361: send_string_no_lib((unsigned char *) "\r\rReading AN0, AN1, AN2\r\r");
  1770   001FD4  0E11               	movlw	low STR_22
  1771   001FD6  6FA1               	movwf	send_string_no_lib@p& (0+255),b
  1772   001FD8  0EFF               	movlw	high STR_22
  1773   001FDA  6FA2               	movwf	(send_string_no_lib@p+1)& (0+255),b
  1774   001FDC  EC79  F021         	call	_send_string_no_lib	;wreg free
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;Pic_App.c: 362: lcd_putc('\f');
  1778   001FE0  0E0C               	movlw	12
  1779   001FE2  ECCD  F01E         	call	_lcd_putc
  1780                           
  1781                           ;Pic_App.c: 365: int RPS;;Pic_App.c: 366: initTimer0();
  1782   001FE6  ECAC  F022         	call	_initTimer0	;wreg free
  1783                           
  1784                           ;Pic_App.c: 367: initMode();
  1785   001FEA  EC08  F023         	call	_initMode	;wreg free
  1786                           
  1787                           ;Pic_App.c: 368: INTCON3 = 0x18;
  1788   001FEE  0E18               	movlw	24
  1789   001FF0  6EF0               	movwf	240,c	;volatile
  1790                           
  1791                           ;Pic_App.c: 369: TRISCbits.RC0 = 1;
  1792   001FF2  8094               	bsf	148,0,c	;volatile
  1793   001FF4                     l9307:
  1794                           
  1795                           ;Pic_App.c: 370: T0CONbits.TMR0ON = 1;
  1796   001FF4  8ED5               	bsf	213,7,c	;volatile
  1797                           
  1798                           ;Pic_App.c: 372: clock_mode = Clock_Mode;
  1799   001FF6  C17A  F145         	movff	_Clock_Mode,main@clock_mode
  1800   001FFA  C17B  F146         	movff	_Clock_Mode+1,main@clock_mode+1
  1801                           
  1802                           ;Pic_App.c: 373: setup_mode = Setup_Mode;
  1803   001FFE  C07B  F147         	movff	_Setup_Mode,main@setup_mode
  1804   002002  C07C  F148         	movff	_Setup_Mode+1,main@setup_mode+1
  1805   002006  0004               	clrwdt		;# 
  1806                           
  1807                           ;Pic_App.c: 375: PORTCbits.RC5 = !PORTCbits.RC5;
  1808   002008  BA82               	btfsc	130,5,c	;volatile
  1809   00200A  D004               	goto	u11580
  1810   00200C  0101               	movlb	1	; () banked
  1811   00200E  6B43               	clrf	??_main& (0+255),b
  1812   002010  2B43               	incf	??_main& (0+255),f,b
  1813   002012  D002               	goto	u11598
  1814   002014                     u11580:
  1815   002014  0101               	movlb	1	; () banked
  1816   002016  6B43               	clrf	??_main& (0+255),b
  1817   002018                     u11598:
  1818   002018  3B43               	swapf	??_main& (0+255),f,b
  1819   00201A  4743               	rlncf	??_main& (0+255),f,b
  1820   00201C  5082               	movf	130,w,c	;volatile
  1821   00201E  1943               	xorwf	??_main& (0+255),w,b
  1822   002020  0BDF               	andlw	-33
  1823   002022  1943               	xorwf	??_main& (0+255),w,b
  1824   002024  6E82               	movwf	130,c	;volatile
  1825                           
  1826                           ; BSR set to: 1
  1827                           ;Pic_App.c: 377: for (channel = 0; channel < 3; channel++) {
  1828   002026  0E00               	movlw	0
  1829   002028  6F4C               	movwf	main@channel& (0+255),b
  1830   00202A                     l9321:
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;Pic_App.c: 379: if(channel == 2)
  1834   00202A  0E02               	movlw	2
  1835   00202C  194C               	xorwf	main@channel& (0+255),w,b
  1836   00202E  A4D8               	btfss	status,2,c
  1837   002030  D027               	goto	l9327
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;Pic_App.c: 380: {;Pic_App.c: 381: voltage = read_adc_voltage((unsigned char) channel);
  1841   002032  514C               	movf	main@channel& (0+255),w,b
  1842   002034  EC46  F01D         	call	_read_adc_voltage
  1843   002038  C0BB  F149         	movff	?_read_adc_voltage,main@voltage
  1844   00203C  C0BC  F14A         	movff	?_read_adc_voltage+1,main@voltage+1
  1845   002040  C0BD  F14B         	movff	?_read_adc_voltage+2,main@voltage+2
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;Pic_App.c: 382: AN[channel] = voltage * 100;
  1849   002044  C149  F0AE         	movff	main@voltage,___ftmul@f1
  1850   002048  C14A  F0AF         	movff	main@voltage+1,___ftmul@f1+1
  1851   00204C  C14B  F0B0         	movff	main@voltage+2,___ftmul@f1+2
  1852   002050  0E00               	movlw	0
  1853   002052  6FB1               	movwf	___ftmul@f2& (0+255),b
  1854   002054  0EC8               	movlw	200
  1855   002056  6FB2               	movwf	(___ftmul@f2+1)& (0+255),b
  1856   002058  0E42               	movlw	66
  1857   00205A  6FB3               	movwf	(___ftmul@f2+2)& (0+255),b
  1858   00205C  ECFE  F015         	call	___ftmul	;wreg free
  1859   002060  0101               	movlb	1	; () banked
  1860   002062  514C               	movf	main@channel& (0+255),w,b
  1861   002064  0D03               	mullw	3
  1862   002066  0E6D               	movlw	low _AN
  1863   002068  24F3               	addwf	243,w,c
  1864   00206A  6ED9               	movwf	fsr2l,c
  1865   00206C  0E01               	movlw	high _AN
  1866   00206E  20F4               	addwfc	prodh,w,c
  1867   002070  6EDA               	movwf	fsr2h,c
  1868   002072  C0AE  FFDE         	movff	?___ftmul,postinc2
  1869   002076  C0AF  FFDE         	movff	?___ftmul+1,postinc2
  1870   00207A  C0B0  FFDE         	movff	?___ftmul+2,postinc2
  1871                           
  1872                           ;Pic_App.c: 383: }
  1873   00207E  D018               	goto	l9331
  1874   002080                     l9327:
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;Pic_App.c: 384: else{;Pic_App.c: 385: voltage = read_adc_voltage((unsigned char) channe
      +                          l);
  1878   002080  514C               	movf	main@channel& (0+255),w,b
  1879   002082  EC46  F01D         	call	_read_adc_voltage
  1880   002086  C0BB  F149         	movff	?_read_adc_voltage,main@voltage
  1881   00208A  C0BC  F14A         	movff	?_read_adc_voltage+1,main@voltage+1
  1882   00208E  C0BD  F14B         	movff	?_read_adc_voltage+2,main@voltage+2
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;Pic_App.c: 386: AN[channel] = voltage;
  1886   002092  0101               	movlb	1	; () banked
  1887   002094  514C               	movf	main@channel& (0+255),w,b
  1888   002096  0D03               	mullw	3
  1889   002098  0E6D               	movlw	low _AN
  1890   00209A  24F3               	addwf	243,w,c
  1891   00209C  6ED9               	movwf	fsr2l,c
  1892   00209E  0E01               	movlw	high _AN
  1893   0020A0  20F4               	addwfc	prodh,w,c
  1894   0020A2  6EDA               	movwf	fsr2h,c
  1895   0020A4  C149  FFDE         	movff	main@voltage,postinc2
  1896   0020A8  C14A  FFDE         	movff	main@voltage+1,postinc2
  1897   0020AC  C14B  FFDE         	movff	main@voltage+2,postinc2
  1898   0020B0                     l9331:
  1899                           
  1900                           ; BSR set to: 1
  1901   0020B0  2B4C               	incf	main@channel& (0+255),f,b
  1902                           
  1903                           ; BSR set to: 1
  1904   0020B2  0E02               	movlw	2
  1905   0020B4  654C               	cpfsgt	main@channel& (0+255),b
  1906   0020B6  D7B9               	goto	l9321
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;Pic_App.c: 387: };Pic_App.c: 388: };Pic_App.c: 389: delay_ms(20);
  1910   0020B8  0E00               	movlw	0
  1911   0020BA  0100               	movlb	0	; () banked
  1912   0020BC  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  1913   0020BE  0E14               	movlw	20
  1914   0020C0  6FA0               	movwf	delay_ms@n& (0+255),b
  1915   0020C2  ECD0  F021         	call	_delay_ms	;wreg free
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;Pic_App.c: 390: update_lcd();
  1919   0020C6  ECD8  F022         	call	_update_lcd	;wreg free
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Pic_App.c: 391: if(coolar){
  1923   0020CA  0101               	movlb	1	; () banked
  1924   0020CC  5178               	movf	_coolar& (0+255),w,b
  1925   0020CE  1179               	iorwf	(_coolar+1)& (0+255),w,b
  1926   0020D0  B4D8               	btfsc	status,2,c
  1927   0020D2  D002               	goto	l237
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;Pic_App.c: 392: PORTCbits.RC2 = 1;
  1931   0020D4  8482               	bsf	130,2,c	;volatile
  1932                           
  1933                           ;Pic_App.c: 393: }
  1934   0020D6  D001               	goto	l9343
  1935   0020D8                     l237:
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;Pic_App.c: 394: else{;Pic_App.c: 395: PORTCbits.RC2 = 0;
  1939   0020D8  9482               	bcf	130,2,c	;volatile
  1940   0020DA                     l9343:
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;Pic_App.c: 396: };Pic_App.c: 397: if(heater){
  1944   0020DA  5176               	movf	_heater& (0+255),w,b
  1945   0020DC  1177               	iorwf	(_heater+1)& (0+255),w,b
  1946   0020DE  B4D8               	btfsc	status,2,c
  1947   0020E0  D002               	goto	l239
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;Pic_App.c: 398: PORTCbits.RC4 = 1;
  1951   0020E2  8882               	bsf	130,4,c	;volatile
  1952                           
  1953                           ;Pic_App.c: 399: }
  1954   0020E4  D001               	goto	l9347
  1955   0020E6                     l239:
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;Pic_App.c: 400: else{;Pic_App.c: 401: PORTCbits.RC4 = 0;
  1959   0020E6  9882               	bcf	130,4,c	;volatile
  1960   0020E8                     l9347:
  1961                           
  1962                           ; BSR set to: 1
  1963                           ;Pic_App.c: 402: };Pic_App.c: 404: if(!clock_mode){
  1964   0020E8  5145               	movf	main@clock_mode& (0+255),w,b
  1965   0020EA  1146               	iorwf	(main@clock_mode+1)& (0+255),w,b
  1966   0020EC  A4D8               	btfss	status,2,c
  1967   0020EE  D003               	goto	l9353
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;Pic_App.c: 405: update_lcd();
  1971   0020F0  ECD8  F022         	call	_update_lcd	;wreg free
  1972   0020F4  D77F               	goto	l9307
  1973   0020F6                     l9353:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;Pic_App.c: 408: else{;Pic_App.c: 409: update_lcd();
  1977   0020F6  ECD8  F022         	call	_update_lcd	;wreg free
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;Pic_App.c: 410: T0CONbits.TMR0ON = 0;
  1981   0020FA  9ED5               	bcf	213,7,c	;volatile
  1982                           
  1983                           ;Pic_App.c: 411: switch(setup_mode){
  1984   0020FC  D062               	goto	l9413
  1985   0020FE                     l244:
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;Pic_App.c: 413: if(!PORTBbits.RB3){
  1989   0020FE  B681               	btfsc	129,3,c	;volatile
  1990   002100  D00E               	goto	l9365
  1991                           
  1992                           ; BSR set to: 1
  1993                           ;Pic_App.c: 414: delay_ms(250);
  1994   002102  0E00               	movlw	0
  1995   002104  0100               	movlb	0	; () banked
  1996   002106  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  1997   002108  0EFA               	movlw	250
  1998   00210A  6FA0               	movwf	delay_ms@n& (0+255),b
  1999   00210C  ECD0  F021         	call	_delay_ms	;wreg free
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;Pic_App.c: 415: if(!PORTBbits.RB3)
  2003   002110  B681               	btfsc	129,3,c	;volatile
  2004   002112  D003               	goto	l9363
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;Pic_App.c: 416: {;Pic_App.c: 417: count_sec ++;
  2008   002114  0101               	movlb	1	; () banked
  2009   002116  4B80               	infsnz	_count_sec& (0+255),f,b
  2010   002118  2B81               	incf	(_count_sec+1)& (0+255),f,b
  2011   00211A                     l9363:
  2012                           
  2013                           ;Pic_App.c: 418: };Pic_App.c: 419: update_lcd();
  2014   00211A  ECD8  F022         	call	_update_lcd	;wreg free
  2015   00211E                     l9365:
  2016                           
  2017                           ;Pic_App.c: 420: };Pic_App.c: 421: if(!PORTBbits.RB4){
  2018   00211E  B881               	btfsc	129,4,c	;volatile
  2019   002120  D063               	goto	l9415
  2020                           
  2021                           ;Pic_App.c: 422: delay_ms(250);
  2022   002122  0E00               	movlw	0
  2023   002124  0100               	movlb	0	; () banked
  2024   002126  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  2025   002128  0EFA               	movlw	250
  2026   00212A  6FA0               	movwf	delay_ms@n& (0+255),b
  2027   00212C  ECD0  F021         	call	_delay_ms	;wreg free
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;Pic_App.c: 423: if(!PORTBbits.RB4)
  2031   002130  B881               	btfsc	129,4,c	;volatile
  2032   002132  D004               	goto	l9373
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;Pic_App.c: 424: {;Pic_App.c: 425: count_sec --;
  2036   002134  0101               	movlb	1	; () banked
  2037   002136  0780               	decf	_count_sec& (0+255),f,b
  2038   002138  A0D8               	btfss	status,0,c
  2039   00213A  0781               	decf	(_count_sec+1)& (0+255),f,b
  2040   00213C                     l9373:
  2041                           
  2042                           ;Pic_App.c: 426: };Pic_App.c: 427: update_lcd();
  2043   00213C  ECD8  F022         	call	_update_lcd	;wreg free
  2044   002140  D053               	goto	l9415
  2045   002142                     l250:
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;Pic_App.c: 431: if(!PORTBbits.RB3){
  2049   002142  B681               	btfsc	129,3,c	;volatile
  2050   002144  D00E               	goto	l9383
  2051                           
  2052                           ; BSR set to: 1
  2053                           ;Pic_App.c: 432: delay_ms(250);
  2054   002146  0E00               	movlw	0
  2055   002148  0100               	movlb	0	; () banked
  2056   00214A  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  2057   00214C  0EFA               	movlw	250
  2058   00214E  6FA0               	movwf	delay_ms@n& (0+255),b
  2059   002150  ECD0  F021         	call	_delay_ms	;wreg free
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;Pic_App.c: 433: if(!PORTBbits.RB3)
  2063   002154  B681               	btfsc	129,3,c	;volatile
  2064   002156  D003               	goto	l9381
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;Pic_App.c: 434: {;Pic_App.c: 435: count_min ++;
  2068   002158  0101               	movlb	1	; () banked
  2069   00215A  4B7E               	infsnz	_count_min& (0+255),f,b
  2070   00215C  2B7F               	incf	(_count_min+1)& (0+255),f,b
  2071   00215E                     l9381:
  2072                           
  2073                           ;Pic_App.c: 436: };Pic_App.c: 437: update_lcd();
  2074   00215E  ECD8  F022         	call	_update_lcd	;wreg free
  2075   002162                     l9383:
  2076                           
  2077                           ;Pic_App.c: 438: };Pic_App.c: 439: if(!PORTBbits.RB4){
  2078   002162  B881               	btfsc	129,4,c	;volatile
  2079   002164  D041               	goto	l9415
  2080                           
  2081                           ;Pic_App.c: 440: delay_ms(250);
  2082   002166  0E00               	movlw	0
  2083   002168  0100               	movlb	0	; () banked
  2084   00216A  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  2085   00216C  0EFA               	movlw	250
  2086   00216E  6FA0               	movwf	delay_ms@n& (0+255),b
  2087   002170  ECD0  F021         	call	_delay_ms	;wreg free
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;Pic_App.c: 441: if(!PORTBbits.RB4)
  2091   002174  B881               	btfsc	129,4,c	;volatile
  2092   002176  D7E2               	goto	l9373
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;Pic_App.c: 442: {;Pic_App.c: 443: count_min --;
  2096   002178  0101               	movlb	1	; () banked
  2097   00217A  077E               	decf	_count_min& (0+255),f,b
  2098   00217C  A0D8               	btfss	status,0,c
  2099   00217E  077F               	decf	(_count_min+1)& (0+255),f,b
  2100   002180  D7DD               	goto	l9373
  2101   002182                     l255:
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;Pic_App.c: 449: if(!PORTBbits.RB3){
  2105   002182  B681               	btfsc	129,3,c	;volatile
  2106   002184  D00E               	goto	l9401
  2107                           
  2108                           ; BSR set to: 1
  2109                           ;Pic_App.c: 450: delay_ms(250);
  2110   002186  0E00               	movlw	0
  2111   002188  0100               	movlb	0	; () banked
  2112   00218A  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  2113   00218C  0EFA               	movlw	250
  2114   00218E  6FA0               	movwf	delay_ms@n& (0+255),b
  2115   002190  ECD0  F021         	call	_delay_ms	;wreg free
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;Pic_App.c: 451: if(!PORTBbits.RB3)
  2119   002194  B681               	btfsc	129,3,c	;volatile
  2120   002196  D003               	goto	l9399
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;Pic_App.c: 452: {;Pic_App.c: 453: count_hour ++;
  2124   002198  0101               	movlb	1	; () banked
  2125   00219A  4B7C               	infsnz	_count_hour& (0+255),f,b
  2126   00219C  2B7D               	incf	(_count_hour+1)& (0+255),f,b
  2127   00219E                     l9399:
  2128                           
  2129                           ;Pic_App.c: 454: };Pic_App.c: 455: update_lcd();
  2130   00219E  ECD8  F022         	call	_update_lcd	;wreg free
  2131   0021A2                     l9401:
  2132                           
  2133                           ;Pic_App.c: 456: };Pic_App.c: 458: if(!PORTBbits.RB4){
  2134   0021A2  B881               	btfsc	129,4,c	;volatile
  2135   0021A4  D021               	goto	l9415
  2136                           
  2137                           ;Pic_App.c: 459: delay_ms(250);
  2138   0021A6  0E00               	movlw	0
  2139   0021A8  0100               	movlb	0	; () banked
  2140   0021AA  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  2141   0021AC  0EFA               	movlw	250
  2142   0021AE  6FA0               	movwf	delay_ms@n& (0+255),b
  2143   0021B0  ECD0  F021         	call	_delay_ms	;wreg free
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;Pic_App.c: 460: if(!PORTBbits.RB4)
  2147   0021B4  B881               	btfsc	129,4,c	;volatile
  2148   0021B6  D7C2               	goto	l9373
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;Pic_App.c: 461: {;Pic_App.c: 462: count_hour --;
  2152   0021B8  0101               	movlb	1	; () banked
  2153   0021BA  077C               	decf	_count_hour& (0+255),f,b
  2154   0021BC  A0D8               	btfss	status,0,c
  2155   0021BE  077D               	decf	(_count_hour+1)& (0+255),f,b
  2156   0021C0  D7BD               	goto	l9373
  2157   0021C2                     l9413:
  2158                           
  2159                           ; BSR set to: 0
  2160   0021C2  C147  F143         	movff	main@setup_mode,??_main
  2161   0021C6  C148  F144         	movff	main@setup_mode+1,??_main+1
  2162                           
  2163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2164                           ; Switch size 1, requested type "simple"
  2165                           ; Number of cases is 1, Range of values is 0 to 0
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte            4     3 (average)
  2169                           ;	Chosen strategy is simple_byte
  2170   0021CA  0101               	movlb	1	; () banked
  2171   0021CC  5144               	movf	(??_main+1)& (0+255),w,b
  2172   0021CE  0A00               	xorlw	0	; case 0
  2173   0021D0  A4D8               	btfss	status,2,c
  2174   0021D2  D00A               	goto	l9415
  2175                           
  2176                           ; BSR set to: 1
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 3, Range of values is 0 to 2
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte           10     6 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183   0021D4  5143               	movf	??_main& (0+255),w,b
  2184   0021D6  0A00               	xorlw	0	; case 0
  2185   0021D8  B4D8               	btfsc	status,2,c
  2186   0021DA  D791               	goto	l244
  2187   0021DC  0A01               	xorlw	1	; case 1
  2188   0021DE  B4D8               	btfsc	status,2,c
  2189   0021E0  D7B0               	goto	l250
  2190   0021E2  0A03               	xorlw	3	; case 2
  2191   0021E4  B4D8               	btfsc	status,2,c
  2192   0021E6  D7CD               	goto	l255
  2193   0021E8                     l9415:
  2194                           
  2195                           ;Pic_App.c: 468: reloadTimer0();
  2196   0021E8  ECFC  F022         	call	_reloadTimer0	;wreg free
  2197   0021EC  D703               	goto	l9307
  2198   0021EE                     __end_of_main:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _update_lcd *****************
  2202 ;; Defined at:
  2203 ;;		line 277 in file "Pic_App.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 3F/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 16
  2224 ;; This function calls:
  2225 ;;		_update_lcd_COOLER
  2226 ;;		_update_lcd_setup
  2227 ;;		_update_lcd_temp
  2228 ;;		_update_lcd_timer
  2229 ;;		_updete_lcd_AN
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text1
  2236   0045B0                     __ptext1:
  2237                           	callstack 0
  2238   0045B0                     _update_lcd:
  2239                           	callstack 14
  2240                           
  2241                           ;Pic_App.c: 278: update_lcd_timer();
  2242                           
  2243                           ;incstack = 0
  2244   0045B0  ECAF  F01D         	call	_update_lcd_timer	;wreg free
  2245                           
  2246                           ;Pic_App.c: 279: update_lcd_temp();
  2247   0045B4  ECA1  F020         	call	_update_lcd_temp	;wreg free
  2248                           
  2249                           ;Pic_App.c: 280: update_lcd_COOLER();
  2250   0045B8  EC07  F01A         	call	_update_lcd_COOLER	;wreg free
  2251                           
  2252                           ;Pic_App.c: 281: update_lcd_setup();
  2253   0045BC  EC51  F01A         	call	_update_lcd_setup	;wreg free
  2254                           
  2255                           ;Pic_App.c: 282: updete_lcd_AN();
  2256   0045C0  EC76  F01F         	call	_updete_lcd_AN	;wreg free
  2257                           
  2258                           ; BSR set to: 0
  2259   0045C4  0012               	return		;funcret
  2260   0045C6                     __end_of_update_lcd:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _updete_lcd_AN *****************
  2264 ;; Defined at:
  2265 ;;		line 271 in file "Pic_App.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  Buffer         16   45[BANK1 ] unsigned char [16]
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 3F/0
  2276 ;;		On exit  : 3F/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;Total ram usage:       16 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 15
  2286 ;; This function calls:
  2287 ;;		_lcd_gotoxy
  2288 ;;		_lcd_puts
  2289 ;;		_sprintf
  2290 ;; This function is called by:
  2291 ;;		_update_lcd
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text2
  2296   003EEC                     __ptext2:
  2297                           	callstack 0
  2298   003EEC                     _updete_lcd_AN:
  2299                           	callstack 14
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;Pic_App.c: 272: unsigned char Buffer[16];;Pic_App.c: 273: lcd_gotoxy(1, 4);
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;incstack = 0
  2306   003EEC  0E04               	movlw	4
  2307   003EEE  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2308   003EF0  0E01               	movlw	1
  2309   003EF2  ECBE  F01F         	call	_lcd_gotoxy
  2310                           
  2311                           ;Pic_App.c: 274: sprintf(Buffer, "%4.2fV | %4.2fV    ", AN[0], AN[1]);
  2312   003EF6  0E2D               	movlw	low updete_lcd_AN@Buffer
  2313   003EF8  0101               	movlb	1	; () banked
  2314   003EFA  6F00               	movwf	sprintf@sp& (0+255),b
  2315   003EFC  0E01               	movlw	high updete_lcd_AN@Buffer
  2316   003EFE  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2317   003F00  0E40               	movlw	low STR_11
  2318   003F02  6F02               	movwf	sprintf@f& (0+255),b
  2319   003F04  0EFF               	movlw	high STR_11
  2320   003F06  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2321   003F08  C16D  F104         	movff	_AN,?_sprintf+4
  2322   003F0C  C16E  F105         	movff	_AN+1,?_sprintf+5
  2323   003F10  C16F  F106         	movff	_AN+2,?_sprintf+6
  2324   003F14  C170  F107         	movff	_AN+3,?_sprintf+7
  2325   003F18  C171  F108         	movff	_AN+4,?_sprintf+8
  2326   003F1C  C172  F109         	movff	_AN+5,?_sprintf+9
  2327   003F20  EC09  F000         	call	_sprintf	;wreg free
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;Pic_App.c: 275: lcd_puts(Buffer);
  2331   003F24  0E2D               	movlw	low updete_lcd_AN@Buffer
  2332   003F26  0100               	movlb	0	; () banked
  2333   003F28  6FAE               	movwf	lcd_puts@s& (0+255),b
  2334   003F2A  0E01               	movlw	high updete_lcd_AN@Buffer
  2335   003F2C  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2336   003F2E  EC0A  F022         	call	_lcd_puts	;wreg free
  2337                           
  2338                           ; BSR set to: 0
  2339   003F32  0012               	return		;funcret
  2340   003F34                     __end_of_updete_lcd_AN:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _update_lcd_timer *****************
  2344 ;; Defined at:
  2345 ;;		line 241 in file "Pic_App.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  Buffer         16   51[BANK1 ] unsigned char [16]
  2350 ;;  hh              2   49[BANK1 ] int 
  2351 ;;  mm              2   47[BANK1 ] int 
  2352 ;;  ss              2   45[BANK1 ] int 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 3F/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:       22 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 15
  2369 ;; This function calls:
  2370 ;;		_lcd_gotoxy
  2371 ;;		_lcd_puts
  2372 ;;		_set_baoundares
  2373 ;;		_sprintf
  2374 ;; This function is called by:
  2375 ;;		_update_lcd
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text3
  2380   003B5E                     __ptext3:
  2381                           	callstack 0
  2382   003B5E                     _update_lcd_timer:
  2383                           	callstack 14
  2384                           
  2385                           ;Pic_App.c: 242: unsigned char Buffer[16];;Pic_App.c: 243: set_baoundares();
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;incstack = 0
  2389   003B5E  EC61  F019         	call	_set_baoundares	;wreg free
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;Pic_App.c: 244: int ss = count_sec;
  2393   003B62  C180  F12D         	movff	_count_sec,update_lcd_timer@ss
  2394   003B66  C181  F12E         	movff	_count_sec+1,update_lcd_timer@ss+1
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;Pic_App.c: 245: int mm = count_min;
  2398   003B6A  C17E  F12F         	movff	_count_min,update_lcd_timer@mm
  2399   003B6E  C17F  F130         	movff	_count_min+1,update_lcd_timer@mm+1
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;Pic_App.c: 246: int hh = count_hour;
  2403   003B72  C17C  F131         	movff	_count_hour,update_lcd_timer@hh
  2404   003B76  C17D  F132         	movff	_count_hour+1,update_lcd_timer@hh+1
  2405                           
  2406                           ;Pic_App.c: 248: lcd_gotoxy(1, 1);
  2407   003B7A  0E01               	movlw	1
  2408   003B7C  0100               	movlb	0	; () banked
  2409   003B7E  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2410   003B80  0E01               	movlw	1
  2411   003B82  ECBE  F01F         	call	_lcd_gotoxy
  2412                           
  2413                           ;Pic_App.c: 249: sprintf(Buffer, "%02d:%02d:%02d", hh, mm, ss);
  2414   003B86  0E33               	movlw	low update_lcd_timer@Buffer
  2415   003B88  0101               	movlb	1	; () banked
  2416   003B8A  6F00               	movwf	sprintf@sp& (0+255),b
  2417   003B8C  0E01               	movlw	high update_lcd_timer@Buffer
  2418   003B8E  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2419   003B90  0E31               	movlw	low (STR_10+6)
  2420   003B92  6F02               	movwf	sprintf@f& (0+255),b
  2421   003B94  0EFF               	movlw	high (STR_10+6)
  2422   003B96  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2423   003B98  C131  F104         	movff	update_lcd_timer@hh,?_sprintf+4
  2424   003B9C  C132  F105         	movff	update_lcd_timer@hh+1,?_sprintf+5
  2425   003BA0  C12F  F106         	movff	update_lcd_timer@mm,?_sprintf+6
  2426   003BA4  C130  F107         	movff	update_lcd_timer@mm+1,?_sprintf+7
  2427   003BA8  C12D  F108         	movff	update_lcd_timer@ss,?_sprintf+8
  2428   003BAC  C12E  F109         	movff	update_lcd_timer@ss+1,?_sprintf+9
  2429   003BB0  EC09  F000         	call	_sprintf	;wreg free
  2430                           
  2431                           ; BSR set to: 1
  2432                           ;Pic_App.c: 250: lcd_puts(Buffer);
  2433   003BB4  0E33               	movlw	low update_lcd_timer@Buffer
  2434   003BB6  0100               	movlb	0	; () banked
  2435   003BB8  6FAE               	movwf	lcd_puts@s& (0+255),b
  2436   003BBA  0E01               	movlw	high update_lcd_timer@Buffer
  2437   003BBC  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2438   003BBE  EC0A  F022         	call	_lcd_puts	;wreg free
  2439                           
  2440                           ; BSR set to: 0
  2441   003BC2  0012               	return		;funcret
  2442   003BC4                     __end_of_update_lcd_timer:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _update_lcd_temp *****************
  2446 ;; Defined at:
  2447 ;;		line 210 in file "Pic_App.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  Buffer         16   45[BANK1 ] unsigned char [16]
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 3F/0
  2458 ;;		On exit  : 3F/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;Total ram usage:       16 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 15
  2468 ;; This function calls:
  2469 ;;		_lcd_gotoxy
  2470 ;;		_lcd_puts
  2471 ;;		_sprintf
  2472 ;; This function is called by:
  2473 ;;		_update_lcd
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text4
  2478   004142                     __ptext4:
  2479                           	callstack 0
  2480   004142                     _update_lcd_temp:
  2481                           	callstack 14
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;Pic_App.c: 211: unsigned char Buffer[16];;Pic_App.c: 212: lcd_gotoxy(9, 1);
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;incstack = 0
  2488   004142  0E01               	movlw	1
  2489   004144  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2490   004146  0E09               	movlw	9
  2491   004148  ECBE  F01F         	call	_lcd_gotoxy
  2492                           
  2493                           ;Pic_App.c: 213: sprintf(Buffer, "/T=%4.2fC", AN[2]);
  2494   00414C  0E2D               	movlw	low update_lcd_temp@Buffer
  2495   00414E  0101               	movlb	1	; () banked
  2496   004150  6F00               	movwf	sprintf@sp& (0+255),b
  2497   004152  0E01               	movlw	high update_lcd_temp@Buffer
  2498   004154  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2499   004156  0ED8               	movlw	low STR_1
  2500   004158  6F02               	movwf	sprintf@f& (0+255),b
  2501   00415A  0EFF               	movlw	high STR_1
  2502   00415C  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2503   00415E  C173  F104         	movff	_AN+6,?_sprintf+4
  2504   004162  C174  F105         	movff	_AN+7,?_sprintf+5
  2505   004166  C175  F106         	movff	_AN+8,?_sprintf+6
  2506   00416A  EC09  F000         	call	_sprintf	;wreg free
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;Pic_App.c: 214: lcd_puts(Buffer);
  2510   00416E  0E2D               	movlw	low update_lcd_temp@Buffer
  2511   004170  0100               	movlb	0	; () banked
  2512   004172  6FAE               	movwf	lcd_puts@s& (0+255),b
  2513   004174  0E01               	movlw	high update_lcd_temp@Buffer
  2514   004176  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2515   004178  EC0A  F022         	call	_lcd_puts	;wreg free
  2516                           
  2517                           ; BSR set to: 0
  2518   00417C  0012               	return		;funcret
  2519   00417E                     __end_of_update_lcd_temp:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _update_lcd_setup *****************
  2523 ;; Defined at:
  2524 ;;		line 253 in file "Pic_App.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  Buffer         16   51[BANK1 ] unsigned char [16]
  2529 ;;  hh              2   49[BANK1 ] int 
  2530 ;;  mm              2   47[BANK1 ] int 
  2531 ;;  ss              2   45[BANK1 ] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 3F/0
  2538 ;;		On exit  : 3F/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;Total ram usage:       22 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 15
  2548 ;; This function calls:
  2549 ;;		_lcd_gotoxy
  2550 ;;		_lcd_puts
  2551 ;;		_set_baoundares
  2552 ;;		_sprintf
  2553 ;; This function is called by:
  2554 ;;		_update_lcd
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text5
  2559   0034A2                     __ptext5:
  2560                           	callstack 0
  2561   0034A2                     _update_lcd_setup:
  2562                           	callstack 14
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;Pic_App.c: 254: unsigned char Buffer[16];;Pic_App.c: 255: set_baoundares();
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;incstack = 0
  2569   0034A2  EC61  F019         	call	_set_baoundares	;wreg free
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;Pic_App.c: 256: int ss = count_sec;
  2573   0034A6  C180  F12D         	movff	_count_sec,update_lcd_setup@ss
  2574   0034AA  C181  F12E         	movff	_count_sec+1,update_lcd_setup@ss+1
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;Pic_App.c: 257: int mm = count_min;
  2578   0034AE  C17E  F12F         	movff	_count_min,update_lcd_setup@mm
  2579   0034B2  C17F  F130         	movff	_count_min+1,update_lcd_setup@mm+1
  2580                           
  2581                           ; BSR set to: 1
  2582                           ;Pic_App.c: 258: int hh = count_hour;
  2583   0034B6  C17C  F131         	movff	_count_hour,update_lcd_setup@hh
  2584   0034BA  C17D  F132         	movff	_count_hour+1,update_lcd_setup@hh+1
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;Pic_App.c: 259: if(!Clock_Mode){
  2588   0034BE  517A               	movf	_Clock_Mode& (0+255),w,b
  2589   0034C0  117B               	iorwf	(_Clock_Mode+1)& (0+255),w,b
  2590   0034C2  A4D8               	btfss	status,2,c
  2591   0034C4  D019               	goto	l9025
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;Pic_App.c: 260: lcd_gotoxy(1, 3);
  2595   0034C6  0E03               	movlw	3
  2596   0034C8  0100               	movlb	0	; () banked
  2597   0034CA  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2598   0034CC  0E01               	movlw	1
  2599   0034CE  ECBE  F01F         	call	_lcd_gotoxy
  2600                           
  2601                           ;Pic_App.c: 261: sprintf(Buffer, "Normal         ");
  2602   0034D2  0E33               	movlw	low update_lcd_setup@Buffer
  2603   0034D4  0101               	movlb	1	; () banked
  2604   0034D6  6F00               	movwf	sprintf@sp& (0+255),b
  2605   0034D8  0E01               	movlw	high update_lcd_setup@Buffer
  2606   0034DA  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2607   0034DC  0EA9               	movlw	low STR_9
  2608   0034DE  6F02               	movwf	sprintf@f& (0+255),b
  2609   0034E0  0EFF               	movlw	high STR_9
  2610   0034E2  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2611   0034E4  EC09  F000         	call	_sprintf	;wreg free
  2612   0034E8                     l9023:
  2613                           
  2614                           ; BSR set to: 1
  2615                           ;Pic_App.c: 262: lcd_puts(Buffer);
  2616   0034E8  0E33               	movlw	low update_lcd_setup@Buffer
  2617   0034EA  0100               	movlb	0	; () banked
  2618   0034EC  6FAE               	movwf	lcd_puts@s& (0+255),b
  2619   0034EE  0E01               	movlw	high update_lcd_setup@Buffer
  2620   0034F0  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2621   0034F2  EC0A  F022         	call	_lcd_puts	;wreg free
  2622                           
  2623                           ;Pic_App.c: 263: }
  2624   0034F6  0012               	return	
  2625   0034F8                     l9025:
  2626                           
  2627                           ; BSR set to: 1
  2628                           ;Pic_App.c: 264: else{;Pic_App.c: 265: lcd_gotoxy(1, 3);
  2629   0034F8  0E03               	movlw	3
  2630   0034FA  0100               	movlb	0	; () banked
  2631   0034FC  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2632   0034FE  0E01               	movlw	1
  2633   003500  ECBE  F01F         	call	_lcd_gotoxy
  2634                           
  2635                           ;Pic_App.c: 266: sprintf(Buffer, "setup/%02d:%02d:%02d", hh, mm, ss);
  2636   003504  0E33               	movlw	low update_lcd_setup@Buffer
  2637   003506  0101               	movlb	1	; () banked
  2638   003508  6F00               	movwf	sprintf@sp& (0+255),b
  2639   00350A  0E01               	movlw	high update_lcd_setup@Buffer
  2640   00350C  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2641   00350E  0E2B               	movlw	low STR_10
  2642   003510  6F02               	movwf	sprintf@f& (0+255),b
  2643   003512  0EFF               	movlw	high STR_10
  2644   003514  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2645   003516  C131  F104         	movff	update_lcd_setup@hh,?_sprintf+4
  2646   00351A  C132  F105         	movff	update_lcd_setup@hh+1,?_sprintf+5
  2647   00351E  C12F  F106         	movff	update_lcd_setup@mm,?_sprintf+6
  2648   003522  C130  F107         	movff	update_lcd_setup@mm+1,?_sprintf+7
  2649   003526  C12D  F108         	movff	update_lcd_setup@ss,?_sprintf+8
  2650   00352A  C12E  F109         	movff	update_lcd_setup@ss+1,?_sprintf+9
  2651   00352E  EC09  F000         	call	_sprintf	;wreg free
  2652   003532  D7DA               	goto	l9023
  2653   003534                     __end_of_update_lcd_setup:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _set_baoundares *****************
  2657 ;; Defined at:
  2658 ;;		line 184 in file "Pic_App.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2  190[None  ] int 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 3F/1
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 9
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_update_lcd_timer
  2683 ;;		_update_lcd_setup
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text6
  2688   0032C2                     __ptext6:
  2689                           	callstack 0
  2690   0032C2                     _set_baoundares:
  2691                           	callstack 19
  2692                           
  2693                           ;Pic_App.c: 185: if(count_sec > 59) {
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;incstack = 0
  2697   0032C2  0101               	movlb	1	; () banked
  2698   0032C4  5181               	movf	(_count_sec+1)& (0+255),w,b
  2699   0032C6  E104               	bnz	u6010
  2700   0032C8  0E3C               	movlw	60
  2701   0032CA  5D80               	subwf	_count_sec& (0+255),w,b
  2702   0032CC  A0D8               	btfss	status,0,c
  2703   0032CE  D006               	goto	l5439
  2704   0032D0                     u6010:
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;Pic_App.c: 186: count_min++;
  2708   0032D0  4B7E               	infsnz	_count_min& (0+255),f,b
  2709   0032D2  2B7F               	incf	(_count_min+1)& (0+255),f,b
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;Pic_App.c: 187: count_sec = 0;
  2713   0032D4  0E00               	movlw	0
  2714   0032D6  6F81               	movwf	(_count_sec+1)& (0+255),b
  2715   0032D8  0E00               	movlw	0
  2716   0032DA  6F80               	movwf	_count_sec& (0+255),b
  2717   0032DC                     l5439:
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;Pic_App.c: 188: };Pic_App.c: 189: if(count_min > 59) {
  2721   0032DC  517F               	movf	(_count_min+1)& (0+255),w,b
  2722   0032DE  E104               	bnz	u6020
  2723   0032E0  0E3C               	movlw	60
  2724   0032E2  5D7E               	subwf	_count_min& (0+255),w,b
  2725   0032E4  A0D8               	btfss	status,0,c
  2726   0032E6  D006               	goto	l5445
  2727   0032E8                     u6020:
  2728                           
  2729                           ; BSR set to: 1
  2730                           ;Pic_App.c: 190: count_hour++;
  2731   0032E8  4B7C               	infsnz	_count_hour& (0+255),f,b
  2732   0032EA  2B7D               	incf	(_count_hour+1)& (0+255),f,b
  2733                           
  2734                           ; BSR set to: 1
  2735                           ;Pic_App.c: 191: count_min = 0;
  2736   0032EC  0E00               	movlw	0
  2737   0032EE  6F7F               	movwf	(_count_min+1)& (0+255),b
  2738   0032F0  0E00               	movlw	0
  2739   0032F2  6F7E               	movwf	_count_min& (0+255),b
  2740   0032F4                     l5445:
  2741                           
  2742                           ; BSR set to: 1
  2743                           ;Pic_App.c: 192: };Pic_App.c: 193: if(count_hour > 23){
  2744   0032F4  517D               	movf	(_count_hour+1)& (0+255),w,b
  2745   0032F6  E104               	bnz	u6030
  2746   0032F8  0E18               	movlw	24
  2747   0032FA  5D7C               	subwf	_count_hour& (0+255),w,b
  2748   0032FC  A0D8               	btfss	status,0,c
  2749   0032FE  D004               	goto	l5449
  2750   003300                     u6030:
  2751                           
  2752                           ; BSR set to: 1
  2753                           ;Pic_App.c: 194: count_hour = 0;
  2754   003300  0E00               	movlw	0
  2755   003302  6F7D               	movwf	(_count_hour+1)& (0+255),b
  2756   003304  0E00               	movlw	0
  2757   003306  6F7C               	movwf	_count_hour& (0+255),b
  2758   003308                     l5449:
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;Pic_App.c: 195: };Pic_App.c: 197: if(count_sec <= 0 && !PORTBbits.RB4 && Setup_Mode == 
      +                          0) {
  2762   003308  5180               	movf	_count_sec& (0+255),w,b
  2763   00330A  1181               	iorwf	(_count_sec+1)& (0+255),w,b
  2764   00330C  B4D8               	btfsc	status,2,c
  2765                           
  2766                           ; BSR set to: 1
  2767   00330E  B881               	btfsc	129,4,c	;volatile
  2768   003310  D00B               	goto	l5459
  2769                           
  2770                           ; BSR set to: 1
  2771   003312  507B               	movf	_Setup_Mode^0,w,c
  2772   003314  107C               	iorwf	(_Setup_Mode+1)^0,w,c
  2773   003316  A4D8               	btfss	status,2,c
  2774   003318  D007               	goto	l5459
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;Pic_App.c: 198: count_min--;
  2778   00331A  077E               	decf	_count_min& (0+255),f,b
  2779   00331C  A0D8               	btfss	status,0,c
  2780   00331E  077F               	decf	(_count_min+1)& (0+255),f,b
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;Pic_App.c: 199: count_sec = 59;
  2784   003320  0E00               	movlw	0
  2785   003322  6F81               	movwf	(_count_sec+1)& (0+255),b
  2786   003324  0E3B               	movlw	59
  2787   003326  6F80               	movwf	_count_sec& (0+255),b
  2788   003328                     l5459:
  2789                           
  2790                           ; BSR set to: 1
  2791                           ;Pic_App.c: 200: };Pic_App.c: 201: if(count_min <= 0 && !PORTBbits.RB4 && Setup_Mode == 
      +                          1) {
  2792   003328  517E               	movf	_count_min& (0+255),w,b
  2793   00332A  117F               	iorwf	(_count_min+1)& (0+255),w,b
  2794   00332C  B4D8               	btfsc	status,2,c
  2795                           
  2796                           ; BSR set to: 1
  2797   00332E  B881               	btfsc	129,4,c	;volatile
  2798   003330  D00B               	goto	l5469
  2799                           
  2800                           ; BSR set to: 1
  2801   003332  047B               	decf	_Setup_Mode^0,w,c
  2802   003334  107C               	iorwf	(_Setup_Mode+1)^0,w,c
  2803   003336  A4D8               	btfss	status,2,c
  2804   003338  D007               	goto	l5469
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;Pic_App.c: 202: count_hour--;
  2808   00333A  077C               	decf	_count_hour& (0+255),f,b
  2809   00333C  A0D8               	btfss	status,0,c
  2810   00333E  077D               	decf	(_count_hour+1)& (0+255),f,b
  2811                           
  2812                           ; BSR set to: 1
  2813                           ;Pic_App.c: 203: count_min = 59;
  2814   003340  0E00               	movlw	0
  2815   003342  6F7F               	movwf	(_count_min+1)& (0+255),b
  2816   003344  0E3B               	movlw	59
  2817   003346  6F7E               	movwf	_count_min& (0+255),b
  2818   003348                     l5469:
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;Pic_App.c: 204: };Pic_App.c: 205: if(count_hour <= 0 && !PORTBbits.RB4 && Setup_Mode ==
      +                           2){
  2822   003348  517C               	movf	_count_hour& (0+255),w,b
  2823   00334A  117D               	iorwf	(_count_hour+1)& (0+255),w,b
  2824   00334C  A4D8               	btfss	status,2,c
  2825   00334E  0012               	return	
  2826                           
  2827                           ; BSR set to: 1
  2828   003350  B881               	btfsc	129,4,c	;volatile
  2829   003352  0012               	return	
  2830                           
  2831                           ; BSR set to: 1
  2832   003354  0E02               	movlw	2
  2833   003356  187B               	xorwf	_Setup_Mode^0,w,c
  2834   003358  107C               	iorwf	(_Setup_Mode+1)^0,w,c
  2835   00335A  A4D8               	btfss	status,2,c
  2836   00335C  0012               	return	
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;Pic_App.c: 206: count_hour = 23;
  2840   00335E  0E00               	movlw	0
  2841   003360  6F7D               	movwf	(_count_hour+1)& (0+255),b
  2842   003362  0E17               	movlw	23
  2843   003364  6F7C               	movwf	_count_hour& (0+255),b
  2844                           
  2845                           ; BSR set to: 1
  2846   003366  0012               	return		;funcret
  2847   003368                     __end_of_set_baoundares:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _update_lcd_COOLER *****************
  2851 ;; Defined at:
  2852 ;;		line 218 in file "Pic_App.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  Buffer         16   45[BANK1 ] unsigned char [16]
  2857 ;;  mode            2   61[BANK1 ] PTR unsigned char 
  2858 ;;		 -> STR_6(4), STR_5(3), STR_3(4), STR_2(3), 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 3F/0
  2865 ;;		On exit  : 3F/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:       18 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 15
  2875 ;; This function calls:
  2876 ;;		_lcd_gotoxy
  2877 ;;		_lcd_puts
  2878 ;;		_sprintf
  2879 ;; This function is called by:
  2880 ;;		_update_lcd
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text7
  2885   00340E                     __ptext7:
  2886                           	callstack 0
  2887   00340E                     _update_lcd_COOLER:
  2888                           	callstack 14
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;Pic_App.c: 219: unsigned char Buffer[16];;Pic_App.c: 220: lcd_gotoxy(1, 2);
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;incstack = 0
  2895   00340E  0E02               	movlw	2
  2896   003410  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  2897   003412  0E01               	movlw	1
  2898   003414  ECBE  F01F         	call	_lcd_gotoxy
  2899                           
  2900                           ;Pic_App.c: 221: char *mode;;Pic_App.c: 222: if(coolar){
  2901   003418  0101               	movlb	1	; () banked
  2902   00341A  5178               	movf	_coolar& (0+255),w,b
  2903   00341C  1179               	iorwf	(_coolar+1)& (0+255),w,b
  2904   00341E  B4D8               	btfsc	status,2,c
  2905   003420  D004               	goto	l8981
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;Pic_App.c: 223: mode = "ON";
  2909   003422  0EFB               	movlw	low STR_2
  2910   003424  6F3D               	movwf	update_lcd_COOLER@mode& (0+255),b
  2911   003426  0EFF               	movlw	high STR_2
  2912   003428  D003               	goto	L1
  2913   00342A                     l8981:
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;Pic_App.c: 225: else{;Pic_App.c: 226: mode = "OFF";
  2917   00342A  0EF7               	movlw	low STR_3
  2918   00342C  6F3D               	movwf	update_lcd_COOLER@mode& (0+255),b
  2919   00342E  0EFF               	movlw	high STR_3
  2920   003430                     L1:
  2921   003430  6F3E               	movwf	(update_lcd_COOLER@mode+1)& (0+255),b
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;Pic_App.c: 227: };Pic_App.c: 228: sprintf(Buffer, "C:%s", mode);
  2925   003432  0E2D               	movlw	low update_lcd_COOLER@Buffer
  2926   003434  6F00               	movwf	sprintf@sp& (0+255),b
  2927   003436  0E01               	movlw	high update_lcd_COOLER@Buffer
  2928   003438  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2929   00343A  0EF2               	movlw	low STR_4
  2930   00343C  6F02               	movwf	sprintf@f& (0+255),b
  2931   00343E  0EFF               	movlw	high STR_4
  2932   003440  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2933   003442  C13D  F104         	movff	update_lcd_COOLER@mode,?_sprintf+4
  2934   003446  C13E  F105         	movff	update_lcd_COOLER@mode+1,?_sprintf+5
  2935   00344A  EC09  F000         	call	_sprintf	;wreg free
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;Pic_App.c: 229: lcd_puts(Buffer);
  2939   00344E  0E2D               	movlw	low update_lcd_COOLER@Buffer
  2940   003450  0100               	movlb	0	; () banked
  2941   003452  6FAE               	movwf	lcd_puts@s& (0+255),b
  2942   003454  0E01               	movlw	high update_lcd_COOLER@Buffer
  2943   003456  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2944   003458  EC0A  F022         	call	_lcd_puts	;wreg free
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;Pic_App.c: 230: if(heater){
  2948   00345C  0101               	movlb	1	; () banked
  2949   00345E  5176               	movf	_heater& (0+255),w,b
  2950   003460  1177               	iorwf	(_heater+1)& (0+255),w,b
  2951   003462  B4D8               	btfsc	status,2,c
  2952   003464  D004               	goto	l8991
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;Pic_App.c: 231: mode = "ON";
  2956   003466  0EFB               	movlw	low STR_2
  2957   003468  6F3D               	movwf	update_lcd_COOLER@mode& (0+255),b
  2958   00346A  0EFF               	movlw	high STR_2
  2959   00346C  D003               	goto	L2
  2960   00346E                     l8991:
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;Pic_App.c: 233: else{;Pic_App.c: 234: mode = "OFF";
  2964   00346E  0EF7               	movlw	low STR_3
  2965   003470  6F3D               	movwf	update_lcd_COOLER@mode& (0+255),b
  2966   003472  0EFF               	movlw	high STR_3
  2967   003474                     L2:
  2968   003474  6F3E               	movwf	(update_lcd_COOLER@mode+1)& (0+255),b
  2969                           
  2970                           ; BSR set to: 1
  2971                           ;Pic_App.c: 235: };Pic_App.c: 236: sprintf(Buffer, " | H:%s\t", mode);
  2972   003476  0E2D               	movlw	low update_lcd_COOLER@Buffer
  2973   003478  6F00               	movwf	sprintf@sp& (0+255),b
  2974   00347A  0E01               	movlw	high update_lcd_COOLER@Buffer
  2975   00347C  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2976   00347E  0EE2               	movlw	low STR_7
  2977   003480  6F02               	movwf	sprintf@f& (0+255),b
  2978   003482  0EFF               	movlw	high STR_7
  2979   003484  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2980   003486  C13D  F104         	movff	update_lcd_COOLER@mode,?_sprintf+4
  2981   00348A  C13E  F105         	movff	update_lcd_COOLER@mode+1,?_sprintf+5
  2982   00348E  EC09  F000         	call	_sprintf	;wreg free
  2983                           
  2984                           ; BSR set to: 1
  2985                           ;Pic_App.c: 237: lcd_puts(Buffer);
  2986   003492  0E2D               	movlw	low update_lcd_COOLER@Buffer
  2987   003494  0100               	movlb	0	; () banked
  2988   003496  6FAE               	movwf	lcd_puts@s& (0+255),b
  2989   003498  0E01               	movlw	high update_lcd_COOLER@Buffer
  2990   00349A  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  2991   00349C  EC0A  F022         	call	_lcd_puts	;wreg free
  2992                           
  2993                           ; BSR set to: 0
  2994   0034A0  0012               	return		;funcret
  2995   0034A2                     __end_of_update_lcd_COOLER:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _setupSerial *****************
  2999 ;; Defined at:
  3000 ;;		line 3 in file "my_ser.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  dummy           1    0        unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 9
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text8
  3029   004538                     __ptext8:
  3030                           	callstack 0
  3031   004538                     _setupSerial:
  3032                           	callstack 21
  3033                           
  3034                           ;my_ser.c: 4: unsigned char dummy;;my_ser.c: 5: BAUDCONbits.BRG16 = 0;
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;incstack = 0
  3038   004538  96B8               	bcf	184,3,c	;volatile
  3039                           
  3040                           ;my_ser.c: 6: TXSTA = 0;
  3041   00453A  0E00               	movlw	0
  3042   00453C  6EAC               	movwf	172,c	;volatile
  3043                           
  3044                           ;my_ser.c: 7: SPBRG = 25;
  3045   00453E  0E19               	movlw	25
  3046   004540  6EAF               	movwf	175,c	;volatile
  3047                           
  3048                           ;my_ser.c: 8: SPBRGH = 0;
  3049   004542  0E00               	movlw	0
  3050   004544  6EB0               	movwf	176,c	;volatile
  3051                           
  3052                           ;my_ser.c: 9: TXSTAbits.BRGH = 1;
  3053   004546  84AC               	bsf	172,2,c	;volatile
  3054                           
  3055                           ;my_ser.c: 10: TXSTAbits.TXEN = 1;
  3056   004548  8AAC               	bsf	172,5,c	;volatile
  3057                           
  3058                           ;my_ser.c: 12: RCSTA = 0;
  3059   00454A  0E00               	movlw	0
  3060   00454C  6EAB               	movwf	171,c	;volatile
  3061                           
  3062                           ;my_ser.c: 13: RCSTAbits.CREN = 1;
  3063   00454E  88AB               	bsf	171,4,c	;volatile
  3064                           
  3065                           ;my_ser.c: 14: RCSTAbits.SPEN = 1;
  3066   004550  8EAB               	bsf	171,7,c	;volatile
  3067   004552  50AE               	movf	174,w,c	;volatile
  3068   004554  50AE               	movf	174,w,c	;volatile
  3069   004556  0012               	return		;funcret
  3070   004558                     __end_of_setupSerial:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _setupPorts *****************
  3074 ;; Defined at:
  3075 ;;		line 154 in file "Pic_App.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 9
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text9
  3104   004596                     __ptext9:
  3105                           	callstack 0
  3106   004596                     _setupPorts:
  3107                           	callstack 21
  3108                           
  3109                           ;Pic_App.c: 155: ADCON0 = 0;
  3110                           
  3111                           ;incstack = 0
  3112   004596  0E00               	movlw	0
  3113   004598  6EC2               	movwf	194,c	;volatile
  3114                           
  3115                           ;Pic_App.c: 156: ADCON1 = 0b00001100;
  3116   00459A  0E0C               	movlw	12
  3117   00459C  6EC1               	movwf	193,c	;volatile
  3118                           
  3119                           ;Pic_App.c: 158: TRISB = 0xFF;
  3120   00459E  6893               	setf	147,c	;volatile
  3121                           
  3122                           ;Pic_App.c: 159: TRISC = 0x80;
  3123   0045A0  0E80               	movlw	128
  3124   0045A2  6E94               	movwf	148,c	;volatile
  3125                           
  3126                           ;Pic_App.c: 160: TRISA = 0xFF;
  3127   0045A4  6892               	setf	146,c	;volatile
  3128                           
  3129                           ;Pic_App.c: 161: TRISD = 0x00;
  3130   0045A6  0E00               	movlw	0
  3131   0045A8  6E95               	movwf	149,c	;volatile
  3132                           
  3133                           ;Pic_App.c: 162: TRISE = 0x00;
  3134   0045AA  0E00               	movlw	0
  3135   0045AC  6E96               	movwf	150,c	;volatile
  3136   0045AE  0012               	return		;funcret
  3137   0045B0                     __end_of_setupPorts:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _send_string_no_lib *****************
  3141 ;; Defined at:
  3142 ;;		line 47 in file "my_ser.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  p               2   33[BANK0 ] PTR unsigned char 
  3145 ;;		 -> STR_22(26), 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 3F/0
  3154 ;;		On exit  : 3F/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;Total ram usage:        2 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 10
  3164 ;; This function calls:
  3165 ;;		_send_byte_no_lib
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text10
  3172   0042F2                     __ptext10:
  3173                           	callstack 0
  3174   0042F2                     _send_string_no_lib:
  3175                           	callstack 20
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;my_ser.c: 48: while (*p) {
  3179                           
  3180                           ;incstack = 0
  3181   0042F2  D00B               	goto	l6531
  3182   0042F4                     l6527:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;my_ser.c: 49: send_byte_no_lib(*p);
  3186   0042F4  C0A1  FFF6         	movff	send_string_no_lib@p,tblptrl
  3187   0042F8  C0A2  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  3188   0042FC                     	if	0	;tblptru may be non-zero
  3189   0042FC                     	endif
  3190   0042FC                     	if	0	;tblptru may be non-zero
  3191   0042FC                     	endif
  3192   0042FC  0008               	tblrd		*
  3193   0042FE  50F5               	movf	tablat,w,c
  3194   004300  ECEE  F022         	call	_send_byte_no_lib
  3195                           
  3196                           ;my_ser.c: 50: p++;
  3197   004304  0100               	movlb	0	; () banked
  3198   004306  4BA1               	infsnz	send_string_no_lib@p& (0+255),f,b
  3199   004308  2BA2               	incf	(send_string_no_lib@p+1)& (0+255),f,b
  3200   00430A                     l6531:
  3201                           
  3202                           ; BSR set to: 0
  3203   00430A  C0A1  FFF6         	movff	send_string_no_lib@p,tblptrl
  3204   00430E  C0A2  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  3205   004312                     	if	0	;tblptru may be non-zero
  3206   004312                     	endif
  3207   004312                     	if	0	;tblptru may be non-zero
  3208   004312                     	endif
  3209   004312  0008               	tblrd		*
  3210   004314  50F5               	movf	tablat,w,c
  3211   004316  0900               	iorlw	0
  3212   004318  B4D8               	btfsc	status,2,c
  3213   00431A  0012               	return	
  3214   00431C  D7EB               	goto	l6527
  3215   00431E                     __end_of_send_string_no_lib:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _send_byte_no_lib *****************
  3219 ;; Defined at:
  3220 ;;		line 39 in file "my_ser.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  c               1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  c               1   32[BANK0 ] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 3F/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 9
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_send_string_no_lib
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text11
  3249   0045DC                     __ptext11:
  3250                           	callstack 0
  3251   0045DC                     _send_byte_no_lib:
  3252                           	callstack 20
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;incstack = 0
  3256                           ;send_byte_no_lib@c stored from wreg
  3257   0045DC  6FA0               	movwf	send_byte_no_lib@c& (0+255),b
  3258                           
  3259                           ;my_ser.c: 40: while (!TXSTAbits.TRMT)
  3260   0045DE  D001               	goto	l62
  3261   0045E0                     l63:
  3262   0045E0  0004               	clrwdt		;# 
  3263   0045E2                     l62:
  3264   0045E2  A2AC               	btfss	172,1,c	;volatile
  3265   0045E4  D7FD               	goto	l63
  3266                           
  3267                           ;my_ser.c: 43: };my_ser.c: 44: TXREG = c;
  3268   0045E6  C0A0  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  3269   0045EA  0012               	return		;funcret
  3270   0045EC                     __end_of_send_byte_no_lib:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _reloadTimer0 *****************
  3274 ;; Defined at:
  3275 ;;		line 94 in file "Pic_App.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/1
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 9
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text12
  3304   0045F8                     __ptext12:
  3305                           	callstack 0
  3306   0045F8                     _reloadTimer0:
  3307                           	callstack 21
  3308                           
  3309                           ;Pic_App.c: 96: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
  3310                           
  3311                           ;incstack = 0
  3312   0045F8  0E0B               	movlw	11
  3313   0045FA  6ED7               	movwf	215,c	;volatile
  3314                           
  3315                           ;Pic_App.c: 97: TMR0L = (unsigned char)(3036 & 0x00FF );
  3316   0045FC  0EDC               	movlw	220
  3317   0045FE  6ED6               	movwf	214,c	;volatile
  3318   004600  0012               	return		;funcret
  3319   004602                     __end_of_reloadTimer0:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _read_adc_voltage *****************
  3323 ;; Defined at:
  3324 ;;		line 48 in file "my_adc.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  channel         1    wreg     unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  channel         1   65[BANK0 ] unsigned char 
  3329 ;;  voltage         3   62[BANK0 ] float 
  3330 ;;  raw_value       2   66[BANK0 ] int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  3   59[BANK0 ] float 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 3F/1
  3337 ;;		On exit  : 3F/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        9 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 11
  3347 ;; This function calls:
  3348 ;;		___awtoft
  3349 ;;		___ftdiv
  3350 ;;		___wmul
  3351 ;;		_read_adc_raw_no_lib
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text13
  3358   003A8C                     __ptext13:
  3359                           	callstack 0
  3360   003A8C                     _read_adc_voltage:
  3361                           	callstack 19
  3362                           
  3363                           ;incstack = 0
  3364                           ;read_adc_voltage@channel stored from wreg
  3365   003A8C  0100               	movlb	0	; () banked
  3366   003A8E  6FC1               	movwf	read_adc_voltage@channel& (0+255),b
  3367                           
  3368                           ;my_adc.c: 49: int raw_value;;my_adc.c: 50: float voltage;;my_adc.c: 51: raw_value = rea
      +                          d_adc_raw_no_lib(channel);
  3369   003A90  0100               	movlb	0	; () banked
  3370   003A92  51C1               	movf	read_adc_voltage@channel& (0+255),w,b
  3371   003A94  EC82  F020         	call	_read_adc_raw_no_lib
  3372   003A98  C0A0  F0C2         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  3373   003A9C  C0A1  F0C3         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;my_adc.c: 52: voltage = (raw_value * 5) / 1023.0;
  3377   003AA0  C0C2  F0A0         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  3378   003AA4  C0C3  F0A1         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  3379   003AA8  0E00               	movlw	0
  3380   003AAA  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3381   003AAC  0E05               	movlw	5
  3382   003AAE  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  3383   003AB0  ECE4  F021         	call	___wmul	;wreg free
  3384   003AB4  C0A0  F0A8         	movff	?___wmul,___awtoft@c
  3385   003AB8  C0A1  F0A9         	movff	?___wmul+1,___awtoft@c+1
  3386   003ABC  ECFA  F020         	call	___awtoft	;wreg free
  3387   003AC0  C0A8  F0AC         	movff	?___awtoft,___ftdiv@f1
  3388   003AC4  C0A9  F0AD         	movff	?___awtoft+1,___ftdiv@f1+1
  3389   003AC8  C0AA  F0AE         	movff	?___awtoft+2,___ftdiv@f1+2
  3390   003ACC  0EC0               	movlw	192
  3391   003ACE  6FAF               	movwf	___ftdiv@f2& (0+255),b
  3392   003AD0  0E7F               	movlw	127
  3393   003AD2  6FB0               	movwf	(___ftdiv@f2+1)& (0+255),b
  3394   003AD4  0E44               	movlw	68
  3395   003AD6  6FB1               	movwf	(___ftdiv@f2+2)& (0+255),b
  3396   003AD8  EC6C  F017         	call	___ftdiv	;wreg free
  3397   003ADC  C0AC  F0BE         	movff	?___ftdiv,read_adc_voltage@voltage
  3398   003AE0  C0AD  F0BF         	movff	?___ftdiv+1,read_adc_voltage@voltage+1
  3399   003AE4  C0AE  F0C0         	movff	?___ftdiv+2,read_adc_voltage@voltage+2
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;my_adc.c: 53: return voltage;
  3403   003AE8  C0BE  F0BB         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  3404   003AEC  C0BF  F0BC         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  3405   003AF0  C0C0  F0BD         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  3406                           
  3407                           ; BSR set to: 0
  3408   003AF4  0012               	return		;funcret
  3409   003AF6                     __end_of_read_adc_voltage:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _read_adc_raw_no_lib *****************
  3413 ;; Defined at:
  3414 ;;		line 32 in file "my_adc.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  channel         1    wreg     unsigned char 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  channel         1   38[BANK0 ] unsigned char 
  3419 ;;  raw_value       2   36[BANK0 ] int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   32[BANK0 ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 3F/0
  3426 ;;		On exit  : 3F/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;Total ram usage:        7 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 9
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_read_adc_voltage
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text14
  3444   004104                     __ptext14:
  3445                           	callstack 0
  3446   004104                     _read_adc_raw_no_lib:
  3447                           	callstack 20
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451                           ;read_adc_raw_no_lib@channel stored from wreg
  3452   004104  6FA6               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  3453                           
  3454                           ;my_adc.c: 33: int raw_value;;my_adc.c: 34: ADCON0bits.CHS = channel;
  3455   004106  C0A6  F0A2         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  3456   00410A  0100               	movlb	0	; () banked
  3457   00410C  47A2               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3458   00410E  47A2               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3459   004110  50C2               	movf	194,w,c	;volatile
  3460   004112  19A2               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3461   004114  0BC3               	andlw	-61
  3462   004116  19A2               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3463   004118  6EC2               	movwf	194,c	;volatile
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;my_adc.c: 37: ADCON0bits.GO = 1;
  3467   00411A  82C2               	bsf	194,1,c	;volatile
  3468   00411C                     l16:
  3469   00411C  B2C2               	btfsc	194,1,c	;volatile
  3470   00411E  D7FE               	goto	l16
  3471                           
  3472                           ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
  3473   004120  50C3               	movf	195,w,c	;volatile
  3474   004122  CFC4 F0A2          	movff	4036,??_read_adc_raw_no_lib	;volatile
  3475   004126  0100               	movlb	0	; () banked
  3476   004128  6BA3               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  3477   00412A  C0A2  F0A3         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  3478   00412E  6BA2               	clrf	??_read_adc_raw_no_lib& (0+255),b
  3479   004130  11A2               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3480   004132  6FA4               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  3481   004134  51A3               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  3482   004136  6FA5               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;my_adc.c: 45: return raw_value;
  3486   004138  C0A4  F0A0         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  3487   00413C  C0A5  F0A1         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  3488                           
  3489                           ; BSR set to: 0
  3490   004140  0012               	return		;funcret
  3491   004142                     __end_of_read_adc_raw_no_lib:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function ___ftdiv *****************
  3495 ;; Defined at:
  3496 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdiv.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  f1              3   44[BANK0 ] float 
  3499 ;;  f2              3   47[BANK0 ] float 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  f3              3   54[BANK0 ] float 
  3502 ;;  sign            1   58[BANK0 ] unsigned char 
  3503 ;;  exp             1   57[BANK0 ] unsigned char 
  3504 ;;  cntr            1   53[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  3   44[BANK0 ] float 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 3F/0
  3511 ;;		On exit  : 3F/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3514 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;Total ram usage:       15 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 10
  3521 ;; This function calls:
  3522 ;;		___ftpack
  3523 ;; This function is called by:
  3524 ;;		_read_adc_voltage
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text15
  3529   002ED8                     __ptext15:
  3530                           	callstack 0
  3531   002ED8                     ___ftdiv:
  3532                           	callstack 19
  3533                           
  3534                           ; BSR set to: 0
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;incstack = 0
  3538   002ED8  C0AE  F0B2         	movff	___ftdiv@f1+2,??___ftdiv
  3539   002EDC  6BB3               	clrf	(??___ftdiv+1)& (0+255),b
  3540   002EDE  6BB4               	clrf	(??___ftdiv+2)& (0+255),b
  3541   002EE0  35AD               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3542   002EE2  37B2               	rlcf	??___ftdiv& (0+255),f,b
  3543   002EE4  E301               	bnc	u11421
  3544   002EE6  81B3               	bsf	(??___ftdiv+1)& (0+255),0,b
  3545   002EE8                     u11421:
  3546   002EE8  51B2               	movf	??___ftdiv& (0+255),w,b
  3547   002EEA  6FB9               	movwf	___ftdiv@exp& (0+255),b
  3548   002EEC  51B9               	movf	___ftdiv@exp& (0+255),w,b
  3549   002EEE  A4D8               	btfss	status,2,c
  3550   002EF0  D007               	goto	l9043
  3551                           
  3552                           ; BSR set to: 0
  3553   002EF2  0E00               	movlw	0
  3554   002EF4  6FAC               	movwf	?___ftdiv& (0+255),b
  3555   002EF6  0E00               	movlw	0
  3556   002EF8  6FAD               	movwf	(?___ftdiv+1)& (0+255),b
  3557   002EFA  0E00               	movlw	0
  3558   002EFC  6FAE               	movwf	(?___ftdiv+2)& (0+255),b
  3559   002EFE  0012               	return	
  3560   002F00                     l9043:
  3561                           
  3562                           ; BSR set to: 0
  3563   002F00  C0B1  F0B2         	movff	___ftdiv@f2+2,??___ftdiv
  3564   002F04  6BB3               	clrf	(??___ftdiv+1)& (0+255),b
  3565   002F06  6BB4               	clrf	(??___ftdiv+2)& (0+255),b
  3566   002F08  35B0               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3567   002F0A  37B2               	rlcf	??___ftdiv& (0+255),f,b
  3568   002F0C  E301               	bnc	u11441
  3569   002F0E  81B3               	bsf	(??___ftdiv+1)& (0+255),0,b
  3570   002F10                     u11441:
  3571   002F10  51B2               	movf	??___ftdiv& (0+255),w,b
  3572   002F12  6FBA               	movwf	___ftdiv@sign& (0+255),b
  3573   002F14  51BA               	movf	___ftdiv@sign& (0+255),w,b
  3574   002F16  A4D8               	btfss	status,2,c
  3575   002F18  D007               	goto	l9049
  3576                           
  3577                           ; BSR set to: 0
  3578   002F1A  0E00               	movlw	0
  3579   002F1C  6FAC               	movwf	?___ftdiv& (0+255),b
  3580   002F1E  0E00               	movlw	0
  3581   002F20  6FAD               	movwf	(?___ftdiv+1)& (0+255),b
  3582   002F22  0E00               	movlw	0
  3583   002F24  6FAE               	movwf	(?___ftdiv+2)& (0+255),b
  3584   002F26  0012               	return	
  3585   002F28                     l9049:
  3586                           
  3587                           ; BSR set to: 0
  3588   002F28  0E00               	movlw	0
  3589   002F2A  6FB6               	movwf	___ftdiv@f3& (0+255),b
  3590   002F2C  0E00               	movlw	0
  3591   002F2E  6FB7               	movwf	(___ftdiv@f3+1)& (0+255),b
  3592   002F30  0E00               	movlw	0
  3593   002F32  6FB8               	movwf	(___ftdiv@f3+2)& (0+255),b
  3594                           
  3595                           ; BSR set to: 0
  3596   002F34  51BA               	movf	___ftdiv@sign& (0+255),w,b
  3597   002F36  0F89               	addlw	137
  3598   002F38  5FB9               	subwf	___ftdiv@exp& (0+255),f,b
  3599                           
  3600                           ; BSR set to: 0
  3601   002F3A  C0AE  F0BA         	movff	___ftdiv@f1+2,___ftdiv@sign
  3602                           
  3603                           ; BSR set to: 0
  3604   002F3E  51B1               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3605   002F40  1BBA               	xorwf	___ftdiv@sign& (0+255),f,b
  3606                           
  3607                           ; BSR set to: 0
  3608   002F42  0E80               	movlw	128
  3609   002F44  17BA               	andwf	___ftdiv@sign& (0+255),f,b
  3610                           
  3611                           ; BSR set to: 0
  3612   002F46  8FAD               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3613                           
  3614                           ; BSR set to: 0
  3615   002F48  0EFF               	movlw	255
  3616   002F4A  17AC               	andwf	___ftdiv@f1& (0+255),f,b
  3617   002F4C  0EFF               	movlw	255
  3618   002F4E  17AD               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3619   002F50  0E00               	movlw	0
  3620   002F52  17AE               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3621                           
  3622                           ; BSR set to: 0
  3623   002F54  8FB0               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3624                           
  3625                           ; BSR set to: 0
  3626   002F56  0EFF               	movlw	255
  3627   002F58  17AF               	andwf	___ftdiv@f2& (0+255),f,b
  3628   002F5A  0EFF               	movlw	255
  3629   002F5C  17B0               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3630   002F5E  0E00               	movlw	0
  3631   002F60  17B1               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3632                           
  3633                           ; BSR set to: 0
  3634   002F62  0E18               	movlw	24
  3635   002F64  6FB5               	movwf	___ftdiv@cntr& (0+255),b
  3636   002F66                     l9069:
  3637                           
  3638                           ; BSR set to: 0
  3639   002F66  90D8               	bcf	status,0,c
  3640   002F68  37B6               	rlcf	___ftdiv@f3& (0+255),f,b
  3641   002F6A  37B7               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3642   002F6C  37B8               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3643                           
  3644                           ; BSR set to: 0
  3645   002F6E  51AF               	movf	___ftdiv@f2& (0+255),w,b
  3646   002F70  5DAC               	subwf	___ftdiv@f1& (0+255),w,b
  3647   002F72  51B0               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3648   002F74  59AD               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3649   002F76  51B1               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3650   002F78  59AE               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3651   002F7A  A0D8               	btfss	status,0,c
  3652   002F7C  D007               	goto	l839
  3653                           
  3654                           ; BSR set to: 0
  3655   002F7E  51AF               	movf	___ftdiv@f2& (0+255),w,b
  3656   002F80  5FAC               	subwf	___ftdiv@f1& (0+255),f,b
  3657   002F82  51B0               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3658   002F84  5BAD               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3659   002F86  51B1               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3660   002F88  5BAE               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3661                           
  3662                           ; BSR set to: 0
  3663   002F8A  81B6               	bsf	___ftdiv@f3& (0+255),0,b
  3664   002F8C                     l839:
  3665                           
  3666                           ; BSR set to: 0
  3667   002F8C  90D8               	bcf	status,0,c
  3668   002F8E  37AC               	rlcf	___ftdiv@f1& (0+255),f,b
  3669   002F90  37AD               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3670   002F92  37AE               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3671                           
  3672                           ; BSR set to: 0
  3673   002F94  2FB5               	decfsz	___ftdiv@cntr& (0+255),f,b
  3674   002F96  D7E7               	goto	l9069
  3675                           
  3676                           ; BSR set to: 0
  3677   002F98  C0B6  F0A0         	movff	___ftdiv@f3,___ftpack@arg
  3678   002F9C  C0B7  F0A1         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3679   002FA0  C0B8  F0A2         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3680   002FA4  C0B9  F0A3         	movff	___ftdiv@exp,___ftpack@exp
  3681   002FA8  C0BA  F0A4         	movff	___ftdiv@sign,___ftpack@sign
  3682   002FAC  ECB3  F018         	call	___ftpack	;wreg free
  3683   002FB0  C0A0  F0AC         	movff	?___ftpack,?___ftdiv
  3684   002FB4  C0A1  F0AD         	movff	?___ftpack+1,?___ftdiv+1
  3685   002FB8  C0A2  F0AE         	movff	?___ftpack+2,?___ftdiv+2
  3686                           
  3687                           ; BSR set to: 0
  3688   002FBC  0012               	return		;funcret
  3689   002FBE                     __end_of___ftdiv:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function ___awtoft *****************
  3693 ;; Defined at:
  3694 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awtoft.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  c               2   40[BANK0 ] int 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  sign            1   43[BANK0 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  3   40[BANK0 ] float 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 3F/0
  3705 ;;		On exit  : 3F/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3708 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;Total ram usage:        4 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 10
  3715 ;; This function calls:
  3716 ;;		___ftpack
  3717 ;; This function is called by:
  3718 ;;		_read_adc_voltage
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text16
  3723   0041F4                     __ptext16:
  3724                           	callstack 0
  3725   0041F4                     ___awtoft:
  3726                           	callstack 19
  3727                           
  3728                           ; BSR set to: 0
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;incstack = 0
  3732   0041F4  0E00               	movlw	0
  3733   0041F6  6FAB               	movwf	___awtoft@sign& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736   0041F8  AFA9               	btfss	(___awtoft@c+1)& (0+255),7,b
  3737   0041FA  D006               	goto	l9091
  3738                           
  3739                           ; BSR set to: 0
  3740   0041FC  6DA8               	negf	___awtoft@c& (0+255),b
  3741   0041FE  1FA9               	comf	(___awtoft@c+1)& (0+255),f,b
  3742   004200  B0D8               	btfsc	status,0,c
  3743   004202  2BA9               	incf	(___awtoft@c+1)& (0+255),f,b
  3744                           
  3745                           ; BSR set to: 0
  3746   004204  0E01               	movlw	1
  3747   004206  6FAB               	movwf	___awtoft@sign& (0+255),b
  3748   004208                     l9091:
  3749                           
  3750                           ; BSR set to: 0
  3751   004208  C0A8  F0A0         	movff	___awtoft@c,___ftpack@arg
  3752   00420C  C0A9  F0A1         	movff	___awtoft@c+1,___ftpack@arg+1
  3753   004210  6BA2               	clrf	(___ftpack@arg+2)& (0+255),b
  3754   004212  0E8E               	movlw	142
  3755   004214  6FA3               	movwf	___ftpack@exp& (0+255),b
  3756   004216  C0AB  F0A4         	movff	___awtoft@sign,___ftpack@sign
  3757   00421A  ECB3  F018         	call	___ftpack	;wreg free
  3758   00421E  C0A0  F0A8         	movff	?___ftpack,?___awtoft
  3759   004222  C0A1  F0A9         	movff	?___ftpack+1,?___awtoft+1
  3760   004226  C0A2  F0AA         	movff	?___ftpack+2,?___awtoft+2
  3761                           
  3762                           ; BSR set to: 0
  3763   00422A  0012               	return		;funcret
  3764   00422C                     __end_of___awtoft:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _lcd_welcome *****************
  3768 ;; Defined at:
  3769 ;;		line 291 in file "Pic_App.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  Buffer         16   45[BANK1 ] unsigned char [16]
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 3F/0
  3780 ;;		On exit  : 3F/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:       16 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 15
  3790 ;; This function calls:
  3791 ;;		_delay_ms
  3792 ;;		_lcd_gotoxy
  3793 ;;		_lcd_puts
  3794 ;;		_sprintf
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text17
  3801   001D78                     __ptext17:
  3802                           	callstack 0
  3803   001D78                     _lcd_welcome:
  3804                           	callstack 15
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;Pic_App.c: 292: unsigned char Buffer[16];;Pic_App.c: 293: lcd_gotoxy(1, 1);
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;incstack = 0
  3811   001D78  0E01               	movlw	1
  3812   001D7A  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3813   001D7C  0E01               	movlw	1
  3814   001D7E  ECBE  F01F         	call	_lcd_gotoxy
  3815                           
  3816                           ;Pic_App.c: 294: sprintf(Buffer, "  WELCOME TO  ");
  3817   001D82  0E2D               	movlw	low lcd_welcome@Buffer
  3818   001D84  0101               	movlb	1	; () banked
  3819   001D86  6F00               	movwf	sprintf@sp& (0+255),b
  3820   001D88  0E01               	movlw	high lcd_welcome@Buffer
  3821   001D8A  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3822   001D8C  0EC9               	movlw	low STR_12
  3823   001D8E  6F02               	movwf	sprintf@f& (0+255),b
  3824   001D90  0EFF               	movlw	high STR_12
  3825   001D92  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3826   001D94  EC09  F000         	call	_sprintf	;wreg free
  3827                           
  3828                           ; BSR set to: 1
  3829                           ;Pic_App.c: 295: lcd_puts(Buffer);
  3830   001D98  0E2D               	movlw	low lcd_welcome@Buffer
  3831   001D9A  0100               	movlb	0	; () banked
  3832   001D9C  6FAE               	movwf	lcd_puts@s& (0+255),b
  3833   001D9E  0E01               	movlw	high lcd_welcome@Buffer
  3834   001DA0  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  3835   001DA2  EC0A  F022         	call	_lcd_puts	;wreg free
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;Pic_App.c: 296: delay_ms(2000);
  3839   001DA6  0E07               	movlw	7
  3840   001DA8  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  3841   001DAA  0ED0               	movlw	208
  3842   001DAC  6FA0               	movwf	delay_ms@n& (0+255),b
  3843   001DAE  ECD0  F021         	call	_delay_ms	;wreg free
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;Pic_App.c: 298: lcd_gotoxy(1, 3);
  3847   001DB2  0E03               	movlw	3
  3848   001DB4  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3849   001DB6  0E01               	movlw	1
  3850   001DB8  ECBE  F01F         	call	_lcd_gotoxy
  3851                           
  3852                           ;Pic_App.c: 299: sprintf(Buffer, " OUR GREAT WORK ");
  3853   001DBC  0E2D               	movlw	low lcd_welcome@Buffer
  3854   001DBE  0101               	movlb	1	; () banked
  3855   001DC0  6F00               	movwf	sprintf@sp& (0+255),b
  3856   001DC2  0E01               	movlw	high lcd_welcome@Buffer
  3857   001DC4  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3858   001DC6  0E87               	movlw	low STR_13
  3859   001DC8  6F02               	movwf	sprintf@f& (0+255),b
  3860   001DCA  0EFF               	movlw	high STR_13
  3861   001DCC  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3862   001DCE  EC09  F000         	call	_sprintf	;wreg free
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;Pic_App.c: 300: lcd_puts(Buffer);
  3866   001DD2  0E2D               	movlw	low lcd_welcome@Buffer
  3867   001DD4  0100               	movlb	0	; () banked
  3868   001DD6  6FAE               	movwf	lcd_puts@s& (0+255),b
  3869   001DD8  0E01               	movlw	high lcd_welcome@Buffer
  3870   001DDA  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  3871   001DDC  EC0A  F022         	call	_lcd_puts	;wreg free
  3872                           
  3873                           ;Pic_App.c: 301: delay_ms(2000);
  3874   001DE0  0E07               	movlw	7
  3875   001DE2  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  3876   001DE4  0ED0               	movlw	208
  3877   001DE6  6FA0               	movwf	delay_ms@n& (0+255),b
  3878   001DE8  ECD0  F021         	call	_delay_ms	;wreg free
  3879                           
  3880                           ;Pic_App.c: 303: lcd_gotoxy(1, 1);
  3881   001DEC  0E01               	movlw	1
  3882   001DEE  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3883   001DF0  0E01               	movlw	1
  3884   001DF2  ECBE  F01F         	call	_lcd_gotoxy
  3885                           
  3886                           ;Pic_App.c: 304: sprintf(Buffer, "                ");
  3887   001DF6  0E2D               	movlw	low lcd_welcome@Buffer
  3888   001DF8  0101               	movlb	1	; () banked
  3889   001DFA  6F00               	movwf	sprintf@sp& (0+255),b
  3890   001DFC  0E01               	movlw	high lcd_welcome@Buffer
  3891   001DFE  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3892   001E00  0E54               	movlw	low STR_14
  3893   001E02  6F02               	movwf	sprintf@f& (0+255),b
  3894   001E04  0EFF               	movlw	high STR_14
  3895   001E06  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3896   001E08  EC09  F000         	call	_sprintf	;wreg free
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;Pic_App.c: 305: lcd_puts(Buffer);
  3900   001E0C  0E2D               	movlw	low lcd_welcome@Buffer
  3901   001E0E  0100               	movlb	0	; () banked
  3902   001E10  6FAE               	movwf	lcd_puts@s& (0+255),b
  3903   001E12  0E01               	movlw	high lcd_welcome@Buffer
  3904   001E14  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  3905   001E16  EC0A  F022         	call	_lcd_puts	;wreg free
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;Pic_App.c: 306: delay_ms(200);
  3909   001E1A  0E00               	movlw	0
  3910   001E1C  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  3911   001E1E  0EC8               	movlw	200
  3912   001E20  6FA0               	movwf	delay_ms@n& (0+255),b
  3913   001E22  ECD0  F021         	call	_delay_ms	;wreg free
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;Pic_App.c: 308: lcd_gotoxy(1, 2);
  3917   001E26  0E02               	movlw	2
  3918   001E28  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3919   001E2A  0E01               	movlw	1
  3920   001E2C  ECBE  F01F         	call	_lcd_gotoxy
  3921                           
  3922                           ;Pic_App.c: 309: sprintf(Buffer, "                ");
  3923   001E30  0E2D               	movlw	low lcd_welcome@Buffer
  3924   001E32  0101               	movlb	1	; () banked
  3925   001E34  6F00               	movwf	sprintf@sp& (0+255),b
  3926   001E36  0E01               	movlw	high lcd_welcome@Buffer
  3927   001E38  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3928   001E3A  0E54               	movlw	low STR_14
  3929   001E3C  6F02               	movwf	sprintf@f& (0+255),b
  3930   001E3E  0EFF               	movlw	high STR_14
  3931   001E40  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3932   001E42  EC09  F000         	call	_sprintf	;wreg free
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;Pic_App.c: 310: lcd_puts(Buffer);
  3936   001E46  0E2D               	movlw	low lcd_welcome@Buffer
  3937   001E48  0100               	movlb	0	; () banked
  3938   001E4A  6FAE               	movwf	lcd_puts@s& (0+255),b
  3939   001E4C  0E01               	movlw	high lcd_welcome@Buffer
  3940   001E4E  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  3941   001E50  EC0A  F022         	call	_lcd_puts	;wreg free
  3942                           
  3943                           ;Pic_App.c: 311: delay_ms(200);
  3944   001E54  0E00               	movlw	0
  3945   001E56  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  3946   001E58  0EC8               	movlw	200
  3947   001E5A  6FA0               	movwf	delay_ms@n& (0+255),b
  3948   001E5C  ECD0  F021         	call	_delay_ms	;wreg free
  3949                           
  3950                           ;Pic_App.c: 313: lcd_gotoxy(1, 3);
  3951   001E60  0E03               	movlw	3
  3952   001E62  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3953   001E64  0E01               	movlw	1
  3954   001E66  ECBE  F01F         	call	_lcd_gotoxy
  3955                           
  3956                           ;Pic_App.c: 314: sprintf(Buffer, "                ");
  3957   001E6A  0E2D               	movlw	low lcd_welcome@Buffer
  3958   001E6C  0101               	movlb	1	; () banked
  3959   001E6E  6F00               	movwf	sprintf@sp& (0+255),b
  3960   001E70  0E01               	movlw	high lcd_welcome@Buffer
  3961   001E72  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3962   001E74  0E54               	movlw	low STR_14
  3963   001E76  6F02               	movwf	sprintf@f& (0+255),b
  3964   001E78  0EFF               	movlw	high STR_14
  3965   001E7A  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3966   001E7C  EC09  F000         	call	_sprintf	;wreg free
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;Pic_App.c: 315: lcd_puts(Buffer);
  3970   001E80  0E2D               	movlw	low lcd_welcome@Buffer
  3971   001E82  0100               	movlb	0	; () banked
  3972   001E84  6FAE               	movwf	lcd_puts@s& (0+255),b
  3973   001E86  0E01               	movlw	high lcd_welcome@Buffer
  3974   001E88  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  3975   001E8A  EC0A  F022         	call	_lcd_puts	;wreg free
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;Pic_App.c: 316: delay_ms(200);
  3979   001E8E  0E00               	movlw	0
  3980   001E90  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  3981   001E92  0EC8               	movlw	200
  3982   001E94  6FA0               	movwf	delay_ms@n& (0+255),b
  3983   001E96  ECD0  F021         	call	_delay_ms	;wreg free
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;Pic_App.c: 318: lcd_gotoxy(1, 4);
  3987   001E9A  0E04               	movlw	4
  3988   001E9C  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  3989   001E9E  0E01               	movlw	1
  3990   001EA0  ECBE  F01F         	call	_lcd_gotoxy
  3991                           
  3992                           ;Pic_App.c: 319: sprintf(Buffer, "                ");
  3993   001EA4  0E2D               	movlw	low lcd_welcome@Buffer
  3994   001EA6  0101               	movlb	1	; () banked
  3995   001EA8  6F00               	movwf	sprintf@sp& (0+255),b
  3996   001EAA  0E01               	movlw	high lcd_welcome@Buffer
  3997   001EAC  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3998   001EAE  0E54               	movlw	low STR_14
  3999   001EB0  6F02               	movwf	sprintf@f& (0+255),b
  4000   001EB2  0EFF               	movlw	high STR_14
  4001   001EB4  6F03               	movwf	(sprintf@f+1)& (0+255),b
  4002   001EB6  EC09  F000         	call	_sprintf	;wreg free
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;Pic_App.c: 320: lcd_puts(Buffer);
  4006   001EBA  0E2D               	movlw	low lcd_welcome@Buffer
  4007   001EBC  0100               	movlb	0	; () banked
  4008   001EBE  6FAE               	movwf	lcd_puts@s& (0+255),b
  4009   001EC0  0E01               	movlw	high lcd_welcome@Buffer
  4010   001EC2  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  4011   001EC4  EC0A  F022         	call	_lcd_puts	;wreg free
  4012                           
  4013                           ;Pic_App.c: 321: delay_ms(200);
  4014   001EC8  0E00               	movlw	0
  4015   001ECA  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  4016   001ECC  0EC8               	movlw	200
  4017   001ECE  6FA0               	movwf	delay_ms@n& (0+255),b
  4018   001ED0  ECD0  F021         	call	_delay_ms	;wreg free
  4019                           
  4020                           ;Pic_App.c: 324: lcd_gotoxy(1, 1);
  4021   001ED4  0E01               	movlw	1
  4022   001ED6  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  4023   001ED8  0E01               	movlw	1
  4024   001EDA  ECBE  F01F         	call	_lcd_gotoxy
  4025                           
  4026                           ;Pic_App.c: 325: sprintf(Buffer, "WELCOME FROM ME ");
  4027   001EDE  0E2D               	movlw	low lcd_welcome@Buffer
  4028   001EE0  0101               	movlb	1	; () banked
  4029   001EE2  6F00               	movwf	sprintf@sp& (0+255),b
  4030   001EE4  0E01               	movlw	high lcd_welcome@Buffer
  4031   001EE6  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  4032   001EE8  0E76               	movlw	low STR_18
  4033   001EEA  6F02               	movwf	sprintf@f& (0+255),b
  4034   001EEC  0EFF               	movlw	high STR_18
  4035   001EEE  6F03               	movwf	(sprintf@f+1)& (0+255),b
  4036   001EF0  EC09  F000         	call	_sprintf	;wreg free
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;Pic_App.c: 326: lcd_puts(Buffer);
  4040   001EF4  0E2D               	movlw	low lcd_welcome@Buffer
  4041   001EF6  0100               	movlb	0	; () banked
  4042   001EF8  6FAE               	movwf	lcd_puts@s& (0+255),b
  4043   001EFA  0E01               	movlw	high lcd_welcome@Buffer
  4044   001EFC  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  4045   001EFE  EC0A  F022         	call	_lcd_puts	;wreg free
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;Pic_App.c: 327: delay_ms(2000);
  4049   001F02  0E07               	movlw	7
  4050   001F04  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  4051   001F06  0ED0               	movlw	208
  4052   001F08  6FA0               	movwf	delay_ms@n& (0+255),b
  4053   001F0A  ECD0  F021         	call	_delay_ms	;wreg free
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;Pic_App.c: 329: lcd_gotoxy(1, 3);
  4057   001F0E  0E03               	movlw	3
  4058   001F10  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  4059   001F12  0E01               	movlw	1
  4060   001F14  ECBE  F01F         	call	_lcd_gotoxy
  4061                           
  4062                           ;Pic_App.c: 330: sprintf(Buffer, "BURHAN AZEM AND ");
  4063   001F18  0E2D               	movlw	low lcd_welcome@Buffer
  4064   001F1A  0101               	movlb	1	; () banked
  4065   001F1C  6F00               	movwf	sprintf@sp& (0+255),b
  4066   001F1E  0E01               	movlw	high lcd_welcome@Buffer
  4067   001F20  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  4068   001F22  0E65               	movlw	low STR_19
  4069   001F24  6F02               	movwf	sprintf@f& (0+255),b
  4070   001F26  0EFF               	movlw	high STR_19
  4071   001F28  6F03               	movwf	(sprintf@f+1)& (0+255),b
  4072   001F2A  EC09  F000         	call	_sprintf	;wreg free
  4073                           
  4074                           ; BSR set to: 1
  4075                           ;Pic_App.c: 331: lcd_puts(Buffer);
  4076   001F2E  0E2D               	movlw	low lcd_welcome@Buffer
  4077   001F30  0100               	movlb	0	; () banked
  4078   001F32  6FAE               	movwf	lcd_puts@s& (0+255),b
  4079   001F34  0E01               	movlw	high lcd_welcome@Buffer
  4080   001F36  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  4081   001F38  EC0A  F022         	call	_lcd_puts	;wreg free
  4082                           
  4083                           ;Pic_App.c: 332: delay_ms(2000);
  4084   001F3C  0E07               	movlw	7
  4085   001F3E  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  4086   001F40  0ED0               	movlw	208
  4087   001F42  6FA0               	movwf	delay_ms@n& (0+255),b
  4088   001F44  ECD0  F021         	call	_delay_ms	;wreg free
  4089                           
  4090                           ;Pic_App.c: 334: lcd_gotoxy(1, 1);
  4091   001F48  0E01               	movlw	1
  4092   001F4A  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  4093   001F4C  0E01               	movlw	1
  4094   001F4E  ECBE  F01F         	call	_lcd_gotoxy
  4095                           
  4096                           ;Pic_App.c: 335: sprintf(Buffer, "FROM MY PARTNER ");
  4097   001F52  0E2D               	movlw	low lcd_welcome@Buffer
  4098   001F54  0101               	movlb	1	; () banked
  4099   001F56  6F00               	movwf	sprintf@sp& (0+255),b
  4100   001F58  0E01               	movlw	high lcd_welcome@Buffer
  4101   001F5A  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  4102   001F5C  0E98               	movlw	low STR_20
  4103   001F5E  6F02               	movwf	sprintf@f& (0+255),b
  4104   001F60  0EFF               	movlw	high STR_20
  4105   001F62  6F03               	movwf	(sprintf@f+1)& (0+255),b
  4106   001F64  EC09  F000         	call	_sprintf	;wreg free
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;Pic_App.c: 336: lcd_puts(Buffer);
  4110   001F68  0E2D               	movlw	low lcd_welcome@Buffer
  4111   001F6A  0100               	movlb	0	; () banked
  4112   001F6C  6FAE               	movwf	lcd_puts@s& (0+255),b
  4113   001F6E  0E01               	movlw	high lcd_welcome@Buffer
  4114   001F70  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  4115   001F72  EC0A  F022         	call	_lcd_puts	;wreg free
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;Pic_App.c: 337: delay_ms(2000);
  4119   001F76  0E07               	movlw	7
  4120   001F78  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  4121   001F7A  0ED0               	movlw	208
  4122   001F7C  6FA0               	movwf	delay_ms@n& (0+255),b
  4123   001F7E  ECD0  F021         	call	_delay_ms	;wreg free
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;Pic_App.c: 340: lcd_gotoxy(1, 3);
  4127   001F82  0E03               	movlw	3
  4128   001F84  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  4129   001F86  0E01               	movlw	1
  4130   001F88  ECBE  F01F         	call	_lcd_gotoxy
  4131                           
  4132                           ;Pic_App.c: 341: sprintf(Buffer, "BASSAM TUFFAHA ");
  4133   001F8C  0E2D               	movlw	low lcd_welcome@Buffer
  4134   001F8E  0101               	movlb	1	; () banked
  4135   001F90  6F00               	movwf	sprintf@sp& (0+255),b
  4136   001F92  0E01               	movlw	high lcd_welcome@Buffer
  4137   001F94  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  4138   001F96  0EB9               	movlw	low STR_21
  4139   001F98  6F02               	movwf	sprintf@f& (0+255),b
  4140   001F9A  0EFF               	movlw	high STR_21
  4141   001F9C  6F03               	movwf	(sprintf@f+1)& (0+255),b
  4142   001F9E  EC09  F000         	call	_sprintf	;wreg free
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;Pic_App.c: 342: lcd_puts(Buffer);
  4146   001FA2  0E2D               	movlw	low lcd_welcome@Buffer
  4147   001FA4  0100               	movlb	0	; () banked
  4148   001FA6  6FAE               	movwf	lcd_puts@s& (0+255),b
  4149   001FA8  0E01               	movlw	high lcd_welcome@Buffer
  4150   001FAA  6FAF               	movwf	(lcd_puts@s+1)& (0+255),b
  4151   001FAC  EC0A  F022         	call	_lcd_puts	;wreg free
  4152                           
  4153                           ;Pic_App.c: 343: delay_ms(4000);
  4154   001FB0  0E0F               	movlw	15
  4155   001FB2  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  4156   001FB4  0EA0               	movlw	160
  4157   001FB6  6FA0               	movwf	delay_ms@n& (0+255),b
  4158   001FB8  ECD0  F021         	call	_delay_ms	;wreg free
  4159                           
  4160                           ; BSR set to: 0
  4161   001FBC  0012               	return		;funcret
  4162   001FBE                     __end_of_lcd_welcome:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _sprintf *****************
  4166 ;; Defined at:
  4167 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  4170 ;;		 -> lcd_welcome@Buffer(16), updete_lcd_AN@Buffer(16), update_lcd_setup@Buffer(16), update_lcd_timer@Buffer(16), 
  4171 ;;		 -> update_lcd_COOLER@Buffer(16), update_lcd_temp@Buffer(16), 
  4172 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  4173 ;;		 -> STR_21(16), STR_20(17), STR_19(17), STR_18(17), 
  4174 ;;		 -> STR_17(17), STR_16(17), STR_15(17), STR_14(17), 
  4175 ;;		 -> STR_13(17), STR_12(15), STR_11(20), STR_10(21), 
  4176 ;;		 -> STR_9(16), STR_8(15), STR_7(9), STR_4(5), 
  4177 ;;		 -> STR_1(10), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  val             4   29[BANK1 ] unsigned long 
  4180 ;;  tmpval          4   25[BANK1 ] struct .
  4181 ;;  fval            3   37[BANK1 ] struct .
  4182 ;;  prec            2   42[BANK1 ] int 
  4183 ;;  width           2   40[BANK1 ] int 
  4184 ;;  flag            2   35[BANK1 ] unsigned short 
  4185 ;;  eexp            2   33[BANK1 ] int 
  4186 ;;  len             2   23[BANK1 ] unsigned int 
  4187 ;;  ap              2   21[BANK1 ] PTR void [1]
  4188 ;;		 -> ?_sprintf(2), 
  4189 ;;  cp              2   19[BANK1 ] PTR const unsigned char 
  4190 ;;		 -> STR_23(7), ?_sprintf(2), STR_6(4), STR_5(3), 
  4191 ;;		 -> STR_3(4), STR_2(3), 
  4192 ;;  c               1   44[BANK1 ] unsigned char 
  4193 ;;  d               1    0        unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2    0[BANK1 ] int 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 3F/1
  4200 ;;		On exit  : 3F/1
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:       45 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 12
  4210 ;; This function calls:
  4211 ;;		___awdiv
  4212 ;;		___ftadd
  4213 ;;		___ftge
  4214 ;;		___ftmul
  4215 ;;		___ftneg
  4216 ;;		___ftsub
  4217 ;;		___fttol
  4218 ;;		___lldiv
  4219 ;;		___llmod
  4220 ;;		___lltoft
  4221 ;;		___wmul
  4222 ;;		__div_to_l_
  4223 ;;		__tdiv_to_l_
  4224 ;;		_fround
  4225 ;;		_isdigit
  4226 ;;		_scale
  4227 ;; This function is called by:
  4228 ;;		_update_lcd_temp
  4229 ;;		_update_lcd_COOLER
  4230 ;;		_update_lcd_timer
  4231 ;;		_update_lcd_setup
  4232 ;;		_updete_lcd_AN
  4233 ;;		_lcd_welcome
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text18
  4238   000012                     __ptext18:
  4239                           	callstack 0
  4240   000012                     _sprintf:
  4241                           	callstack 16
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;incstack = 0
  4248   000012  0E04               	movlw	low (?_sprintf+4)
  4249   000014  6F15               	movwf	sprintf@ap& (0+255),b
  4250   000016  0E01               	movlw	high (?_sprintf+4)
  4251   000018  6F16               	movwf	(sprintf@ap+1)& (0+255),b
  4252                           
  4253                           ;doprnt.c: 553: while((c = *f++)) {
  4254   00001A  EFA9  F005         	goto	u10590
  4255   00001E                     l8163:
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;doprnt.c: 555: if(c != '%')
  4259   00001E  0E25               	movlw	37
  4260   000020  192C               	xorwf	sprintf@c& (0+255),w,b
  4261   000022  B4D8               	btfsc	status,2,c
  4262   000024  D00A               	goto	l8169
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4266   000026  C100  FFD9         	movff	sprintf@sp,fsr2l
  4267   00002A  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4268   00002E  C12C  FFDF         	movff	sprintf@c,indf2
  4269                           
  4270                           ; BSR set to: 1
  4271   000032  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4272   000034  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4273                           
  4274                           ;doprnt.c: 559: continue;
  4275   000036  EFA9  F005         	goto	u10590
  4276   00003A                     l8169:
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  4280   00003A  0E00               	movlw	0
  4281   00003C  6F29               	movwf	(sprintf@width+1)& (0+255),b
  4282   00003E  0E00               	movlw	0
  4283   000040  6F28               	movwf	sprintf@width& (0+255),b
  4284                           
  4285                           ;doprnt.c: 565: flag = 0;
  4286   000042  0E00               	movlw	0
  4287   000044  6F24               	movwf	(sprintf@flag+1)& (0+255),b
  4288   000046  0E00               	movlw	0
  4289   000048  6F23               	movwf	sprintf@flag& (0+255),b
  4290   00004A  D003               	goto	l8175
  4291   00004C                     l8171:
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;doprnt.c: 597: flag |= 0x04;
  4295   00004C  8523               	bsf	sprintf@flag& (0+255),2,b
  4296                           
  4297                           ;doprnt.c: 598: f++;
  4298   00004E  4B02               	infsnz	sprintf@f& (0+255),f,b
  4299   000050  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4300   000052                     l8175:
  4301                           
  4302                           ; BSR set to: 1
  4303   000052  C102  FFF6         	movff	sprintf@f,tblptrl
  4304   000056  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4305   00005A                     	if	0	;tblptru may be non-zero
  4306   00005A                     	endif
  4307   00005A                     	if	0	;tblptru may be non-zero
  4308   00005A                     	endif
  4309   00005A  0008               	tblrd		*
  4310   00005C  50F5               	movf	tablat,w,c
  4311                           
  4312                           ; Switch size 1, requested type "simple"
  4313                           ; Number of cases is 1, Range of values is 48 to 48
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte            4     3 (average)
  4317                           ;	Chosen strategy is simple_byte
  4318   00005E  0A30               	xorlw	48	; case 48
  4319   000060  B4D8               	btfsc	status,2,c
  4320   000062  D7F4               	goto	l8171
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  4324   000064  C102  FFF6         	movff	sprintf@f,tblptrl
  4325   000068  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4326   00006C                     	if	0	;tblptru may be non-zero
  4327   00006C                     	endif
  4328   00006C                     	if	0	;tblptru may be non-zero
  4329   00006C                     	endif
  4330   00006C  0008               	tblrd		*
  4331   00006E  50F5               	movf	tablat,w,c
  4332   000070  EC7A  F022         	call	_isdigit
  4333   000074  A0D8               	btfss	status,0,c
  4334   000076  D032               	goto	u9990
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;doprnt.c: 615: width = 0;
  4338   000078  0E00               	movlw	0
  4339   00007A  0101               	movlb	1	; () banked
  4340   00007C  6F29               	movwf	(sprintf@width+1)& (0+255),b
  4341   00007E  0E00               	movlw	0
  4342   000080  6F28               	movwf	sprintf@width& (0+255),b
  4343   000082                     l8181:
  4344                           
  4345                           ;doprnt.c: 617: width *= 10;
  4346   000082  C128  F0A0         	movff	sprintf@width,___wmul@multiplier
  4347   000086  C129  F0A1         	movff	sprintf@width+1,___wmul@multiplier+1
  4348   00008A  0E00               	movlw	0
  4349   00008C  0100               	movlb	0	; () banked
  4350   00008E  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4351   000090  0E0A               	movlw	10
  4352   000092  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  4353   000094  ECE4  F021         	call	___wmul	;wreg free
  4354   000098  C0A0  F128         	movff	?___wmul,sprintf@width
  4355   00009C  C0A1  F129         	movff	?___wmul+1,sprintf@width+1
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;doprnt.c: 618: width += *f++ - '0';
  4359   0000A0  C102  FFF6         	movff	sprintf@f,tblptrl
  4360   0000A4  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4361   0000A8                     	if	0	;tblptru may be non-zero
  4362   0000A8                     	endif
  4363   0000A8                     	if	0	;tblptru may be non-zero
  4364   0000A8                     	endif
  4365   0000A8  0008               	tblrd		*
  4366   0000AA  CFF5 F10A          	movff	tablat,??_sprintf
  4367   0000AE  0ED0               	movlw	208
  4368   0000B0  0101               	movlb	1	; () banked
  4369   0000B2  250A               	addwf	??_sprintf& (0+255),w,b
  4370   0000B4  6F0B               	movwf	(??_sprintf+1)& (0+255),b
  4371   0000B6  6B0C               	clrf	(??_sprintf+2)& (0+255),b
  4372   0000B8  0EFF               	movlw	255
  4373   0000BA  230C               	addwfc	(??_sprintf+2)& (0+255),f,b
  4374   0000BC  510B               	movf	(??_sprintf+1)& (0+255),w,b
  4375   0000BE  2728               	addwf	sprintf@width& (0+255),f,b
  4376   0000C0  510C               	movf	(??_sprintf+2)& (0+255),w,b
  4377   0000C2  2329               	addwfc	(sprintf@width+1)& (0+255),f,b
  4378                           
  4379                           ; BSR set to: 1
  4380   0000C4  4B02               	infsnz	sprintf@f& (0+255),f,b
  4381   0000C6  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  4385   0000C8  C102  FFF6         	movff	sprintf@f,tblptrl
  4386   0000CC  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4387   0000D0                     	if	0	;tblptru may be non-zero
  4388   0000D0                     	endif
  4389   0000D0                     	if	0	;tblptru may be non-zero
  4390   0000D0                     	endif
  4391   0000D0  0008               	tblrd		*
  4392   0000D2  50F5               	movf	tablat,w,c
  4393   0000D4  EC7A  F022         	call	_isdigit
  4394   0000D8  B0D8               	btfsc	status,0,c
  4395   0000DA  D7D3               	goto	l8181
  4396   0000DC                     u9990:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  4400   0000DC  C102  FFF6         	movff	sprintf@f,tblptrl
  4401   0000E0  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4402   0000E4                     	if	0	;tblptru may be non-zero
  4403   0000E4                     	endif
  4404   0000E4                     	if	0	;tblptru may be non-zero
  4405   0000E4                     	endif
  4406   0000E4  0008               	tblrd		*
  4407   0000E6  50F5               	movf	tablat,w,c
  4408   0000E8  0A2E               	xorlw	46
  4409   0000EA  A4D8               	btfss	status,2,c
  4410   0000EC  D036               	goto	l8203
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;doprnt.c: 629: flag |= 0x4000;
  4414   0000EE  0101               	movlb	1	; () banked
  4415   0000F0  8D24               	bsf	(sprintf@flag+1)& (0+255),6,b
  4416                           
  4417                           ;doprnt.c: 630: f++;
  4418   0000F2  4B02               	infsnz	sprintf@f& (0+255),f,b
  4419   0000F4  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4420                           
  4421                           ; BSR set to: 1
  4422                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4423   0000F6  0E00               	movlw	0
  4424   0000F8  6F2B               	movwf	(sprintf@prec+1)& (0+255),b
  4425   0000FA  0E00               	movlw	0
  4426   0000FC  6F2A               	movwf	sprintf@prec& (0+255),b
  4427                           
  4428                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4429   0000FE  D022               	goto	l8201
  4430   000100                     l8195:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;doprnt.c: 647: prec *= 10;
  4434   000100  C12A  F0A0         	movff	sprintf@prec,___wmul@multiplier
  4435   000104  C12B  F0A1         	movff	sprintf@prec+1,___wmul@multiplier+1
  4436   000108  0E00               	movlw	0
  4437   00010A  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4438   00010C  0E0A               	movlw	10
  4439   00010E  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  4440   000110  ECE4  F021         	call	___wmul	;wreg free
  4441   000114  C0A0  F12A         	movff	?___wmul,sprintf@prec
  4442   000118  C0A1  F12B         	movff	?___wmul+1,sprintf@prec+1
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;doprnt.c: 648: prec += *f++ - '0';
  4446   00011C  C102  FFF6         	movff	sprintf@f,tblptrl
  4447   000120  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4448   000124                     	if	0	;tblptru may be non-zero
  4449   000124                     	endif
  4450   000124                     	if	0	;tblptru may be non-zero
  4451   000124                     	endif
  4452   000124  0008               	tblrd		*
  4453   000126  CFF5 F10A          	movff	tablat,??_sprintf
  4454   00012A  0ED0               	movlw	208
  4455   00012C  0101               	movlb	1	; () banked
  4456   00012E  250A               	addwf	??_sprintf& (0+255),w,b
  4457   000130  6F0B               	movwf	(??_sprintf+1)& (0+255),b
  4458   000132  6B0C               	clrf	(??_sprintf+2)& (0+255),b
  4459   000134  0EFF               	movlw	255
  4460   000136  230C               	addwfc	(??_sprintf+2)& (0+255),f,b
  4461   000138  510B               	movf	(??_sprintf+1)& (0+255),w,b
  4462   00013A  272A               	addwf	sprintf@prec& (0+255),f,b
  4463   00013C  510C               	movf	(??_sprintf+2)& (0+255),w,b
  4464   00013E  232B               	addwfc	(sprintf@prec+1)& (0+255),f,b
  4465                           
  4466                           ; BSR set to: 1
  4467   000140  4B02               	infsnz	sprintf@f& (0+255),f,b
  4468   000142  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4469   000144                     l8201:
  4470                           
  4471                           ; BSR set to: 1
  4472   000144  C102  FFF6         	movff	sprintf@f,tblptrl
  4473   000148  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4474   00014C                     	if	0	;tblptru may be non-zero
  4475   00014C                     	endif
  4476   00014C                     	if	0	;tblptru may be non-zero
  4477   00014C                     	endif
  4478   00014C  0008               	tblrd		*
  4479   00014E  50F5               	movf	tablat,w,c
  4480   000150  EC7A  F022         	call	_isdigit
  4481   000154  A0D8               	btfss	status,0,c
  4482   000156  D099               	goto	l8251
  4483   000158  D7D3               	goto	l8195
  4484   00015A                     l8203:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;doprnt.c: 652: prec = 0;
  4488   00015A  0E00               	movlw	0
  4489   00015C  0101               	movlb	1	; () banked
  4490   00015E  6F2B               	movwf	(sprintf@prec+1)& (0+255),b
  4491   000160  0E00               	movlw	0
  4492   000162  6F2A               	movwf	sprintf@prec& (0+255),b
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;doprnt.c: 654: flag |= 0x1000;
  4496   000164  8924               	bsf	(sprintf@flag+1)& (0+255),4,b
  4497   000166  D091               	goto	l8251
  4498   000168                     l8207:
  4499                           
  4500                           ; BSR set to: 1
  4501                           ;doprnt.c: 689: flag |= 0x400;
  4502   000168  8524               	bsf	(sprintf@flag+1)& (0+255),2,b
  4503                           
  4504                           ;doprnt.c: 690: break;
  4505   00016A  D0AC               	goto	l8253
  4506   00016C                     l8209:
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4510   00016C  C115  FFD9         	movff	sprintf@ap,fsr2l
  4511   000170  C116  FFDA         	movff	sprintf@ap+1,fsr2h
  4512   000174  CFDE F113          	movff	postinc2,sprintf@cp
  4513   000178  CFDD F114          	movff	postdec2,sprintf@cp+1
  4514                           
  4515                           ; BSR set to: 1
  4516   00017C  0E02               	movlw	2
  4517   00017E  2715               	addwf	sprintf@ap& (0+255),f,b
  4518   000180  0E00               	movlw	0
  4519   000182  2316               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;doprnt.c: 766: if(!cp)
  4523   000184  5113               	movf	sprintf@cp& (0+255),w,b
  4524   000186  1114               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4525   000188  A4D8               	btfss	status,2,c
  4526   00018A  D004               	goto	l8217
  4527                           
  4528                           ; BSR set to: 1
  4529                           ;doprnt.c: 767: cp = "(null)";
  4530   00018C  0EEB               	movlw	low STR_23
  4531   00018E  6F13               	movwf	sprintf@cp& (0+255),b
  4532   000190  0EFF               	movlw	high STR_23
  4533   000192  6F14               	movwf	(sprintf@cp+1)& (0+255),b
  4534   000194                     l8217:
  4535                           
  4536                           ; BSR set to: 1
  4537                           ;doprnt.c: 771: len = 0;
  4538   000194  0E00               	movlw	0
  4539   000196  6F18               	movwf	(sprintf@len+1)& (0+255),b
  4540   000198  0E00               	movlw	0
  4541   00019A  6F17               	movwf	sprintf@len& (0+255),b
  4542                           
  4543                           ;doprnt.c: 772: while(cp[len])
  4544   00019C  D003               	goto	l8221
  4545   00019E                     l8219:
  4546                           
  4547                           ;doprnt.c: 773: len++;
  4548   00019E  0101               	movlb	1	; () banked
  4549   0001A0  4B17               	infsnz	sprintf@len& (0+255),f,b
  4550   0001A2  2B18               	incf	(sprintf@len+1)& (0+255),f,b
  4551   0001A4                     l8221:
  4552                           
  4553                           ; BSR set to: 1
  4554   0001A4  5117               	movf	sprintf@len& (0+255),w,b
  4555   0001A6  2513               	addwf	sprintf@cp& (0+255),w,b
  4556   0001A8  6F0A               	movwf	??_sprintf& (0+255),b
  4557   0001AA  5118               	movf	(sprintf@len+1)& (0+255),w,b
  4558   0001AC  2114               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4559   0001AE  6F0B               	movwf	(??_sprintf+1)& (0+255),b
  4560   0001B0  C10A  FFF6         	movff	??_sprintf,tblptrl
  4561   0001B4  C10B  FFF7         	movff	??_sprintf+1,tblptrh
  4562   0001B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4563   0001BA  6EF8               	movwf	tblptru,c
  4564   0001BC  0E0F               	movlw	(high __ramtop+-1)
  4565   0001BE  64F7               	cpfsgt	tblptrh,c
  4566   0001C0  D003               	bra	u10037
  4567   0001C2  0008               	tblrd		*
  4568   0001C4  50F5               	movf	tablat,w,c
  4569   0001C6  D005               	bra	u10030
  4570   0001C8                     u10037:
  4571   0001C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4572   0001CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4573   0001D0  50EF               	movf	indf0,w,c
  4574   0001D2                     u10030:
  4575   0001D2  0900               	iorlw	0
  4576   0001D4  A4D8               	btfss	status,2,c
  4577   0001D6  D7E3               	goto	l8219
  4578                           
  4579                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  4580   0001D8  0101               	movlb	1	; () banked
  4581   0001DA  512A               	movf	sprintf@prec& (0+255),w,b
  4582   0001DC  112B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4583   0001DE  B4D8               	btfsc	status,2,c
  4584   0001E0  D00E               	goto	l8229
  4585                           
  4586                           ; BSR set to: 1
  4587   0001E2  5117               	movf	sprintf@len& (0+255),w,b
  4588   0001E4  5D2A               	subwf	sprintf@prec& (0+255),w,b
  4589   0001E6  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  4590   0001E8  0A80               	xorlw	128
  4591   0001EA  6F0A               	movwf	??_sprintf& (0+255),b
  4592   0001EC  5118               	movf	(sprintf@len+1)& (0+255),w,b
  4593   0001EE  0A80               	xorlw	128
  4594   0001F0  590A               	subwfb	??_sprintf& (0+255),w,b
  4595   0001F2  B0D8               	btfsc	status,0,c
  4596   0001F4  D004               	goto	l8229
  4597                           
  4598                           ; BSR set to: 1
  4599                           ;doprnt.c: 780: len = (unsigned int)prec;
  4600   0001F6  C12A  F117         	movff	sprintf@prec,sprintf@len
  4601   0001FA  C12B  F118         	movff	sprintf@prec+1,sprintf@len+1
  4602   0001FE                     l8229:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;doprnt.c: 783: if(((unsigned)width) > len)
  4606   0001FE  5128               	movf	sprintf@width& (0+255),w,b
  4607   000200  5D17               	subwf	sprintf@len& (0+255),w,b
  4608   000202  5129               	movf	(sprintf@width+1)& (0+255),w,b
  4609   000204  5918               	subwfb	(sprintf@len+1)& (0+255),w,b
  4610   000206  B0D8               	btfsc	status,0,c
  4611   000208  D005               	goto	l8233
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;doprnt.c: 784: width -= len;
  4615   00020A  5117               	movf	sprintf@len& (0+255),w,b
  4616   00020C  5F28               	subwf	sprintf@width& (0+255),f,b
  4617   00020E  5118               	movf	(sprintf@len+1)& (0+255),w,b
  4618   000210  5B29               	subwfb	(sprintf@width+1)& (0+255),f,b
  4619   000212  D00D               	goto	l8239
  4620   000214                     l8233:
  4621                           
  4622                           ; BSR set to: 1
  4623                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  4624   000214  0E00               	movlw	0
  4625   000216  6F29               	movwf	(sprintf@width+1)& (0+255),b
  4626   000218  0E00               	movlw	0
  4627   00021A  6F28               	movwf	sprintf@width& (0+255),b
  4628   00021C  D008               	goto	l8239
  4629   00021E                     l8235:
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;doprnt.c: 791: ((*sp++ = (' ')));
  4633   00021E  C100  FFD9         	movff	sprintf@sp,fsr2l
  4634   000222  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4635   000226  0E20               	movlw	32
  4636   000228  6EDF               	movwf	indf2,c
  4637                           
  4638                           ; BSR set to: 1
  4639   00022A  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4640   00022C  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4641   00022E                     l8239:
  4642                           
  4643                           ; BSR set to: 1
  4644   00022E  0728               	decf	sprintf@width& (0+255),f,b
  4645   000230  A0D8               	btfss	status,0,c
  4646   000232  0729               	decf	(sprintf@width+1)& (0+255),f,b
  4647   000234  2928               	incf	sprintf@width& (0+255),w,b
  4648   000236  E1F3               	bnz	l8235
  4649   000238  2929               	incf	(sprintf@width+1)& (0+255),w,b
  4650   00023A  B4D8               	btfsc	status,2,c
  4651   00023C  D01C               	goto	l8247
  4652   00023E  D7EF               	goto	l8235
  4653   000240                     l8241:
  4654                           
  4655                           ; BSR set to: 1
  4656                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  4657   000240  C113  FFF6         	movff	sprintf@cp,tblptrl
  4658   000244  C114  FFF7         	movff	sprintf@cp+1,tblptrh
  4659   000248  0E00               	movlw	low (__mediumconst shr (0+16))
  4660   00024A  6EF8               	movwf	tblptru,c
  4661   00024C  C100  FFD9         	movff	sprintf@sp,fsr2l
  4662   000250  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4663   000254  0E0F               	movlw	(high __ramtop+-1)
  4664   000256  64F7               	cpfsgt	tblptrh,c
  4665   000258  D003               	bra	u10097
  4666   00025A  0008               	tblrd		*
  4667   00025C  50F5               	movf	tablat,w,c
  4668   00025E  D005               	bra	u10090
  4669   000260                     u10097:
  4670   000260  CFF6 FFE9          	movff	tblptrl,fsr0l
  4671   000264  CFF7 FFEA          	movff	tblptrh,fsr0h
  4672   000268  50EF               	movf	indf0,w,c
  4673   00026A                     u10090:
  4674   00026A  6EDF               	movwf	indf2,c
  4675   00026C  0101               	movlb	1	; () banked
  4676   00026E  4B13               	infsnz	sprintf@cp& (0+255),f,b
  4677   000270  2B14               	incf	(sprintf@cp+1)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 1
  4680   000272  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4681   000274  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4682   000276                     l8247:
  4683                           
  4684                           ; BSR set to: 1
  4685   000276  0717               	decf	sprintf@len& (0+255),f,b
  4686   000278  A0D8               	btfss	status,0,c
  4687   00027A  0718               	decf	(sprintf@len+1)& (0+255),f,b
  4688   00027C  2917               	incf	sprintf@len& (0+255),w,b
  4689   00027E  E1E0               	bnz	l8241
  4690   000280  2918               	incf	(sprintf@len+1)& (0+255),w,b
  4691   000282  B4D8               	btfsc	status,2,c
  4692   000284  EFA9  F005         	goto	u10590
  4693   000288  D7DB               	goto	l8241
  4694   00028A                     l8251:
  4695   00028A  C102  FFF6         	movff	sprintf@f,tblptrl
  4696   00028E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4697   000292  0101               	movlb	1	; () banked
  4698   000294  4B02               	infsnz	sprintf@f& (0+255),f,b
  4699   000296  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4700   000298                     	if	0	;tblptru may be non-zero
  4701   000298                     	endif
  4702   000298                     	if	0	;tblptru may be non-zero
  4703   000298                     	endif
  4704   000298  0008               	tblrd		*
  4705   00029A  CFF5 F12C          	movff	tablat,sprintf@c
  4706   00029E  512C               	movf	sprintf@c& (0+255),w,b
  4707                           
  4708                           ; Switch size 1, requested type "simple"
  4709                           ; Number of cases is 5, Range of values is 0 to 115
  4710                           ; switch strategies available:
  4711                           ; Name         Instructions Cycles
  4712                           ; simple_byte           16     9 (average)
  4713                           ;	Chosen strategy is simple_byte
  4714   0002A0  0A00               	xorlw	0	; case 0
  4715   0002A2  B4D8               	btfsc	status,2,c
  4716   0002A4  EFB6  F005         	goto	u10600
  4717   0002A8  0A64               	xorlw	100	; case 100
  4718   0002AA  B4D8               	btfsc	status,2,c
  4719   0002AC  D00B               	goto	l8253
  4720   0002AE  0A02               	xorlw	2	; case 102
  4721   0002B0  B4D8               	btfsc	status,2,c
  4722   0002B2  D75A               	goto	l8207
  4723   0002B4  0A0F               	xorlw	15	; case 105
  4724   0002B6  B4D8               	btfsc	status,2,c
  4725   0002B8  D005               	goto	l8253
  4726   0002BA  0A1A               	xorlw	26	; case 115
  4727   0002BC  B4D8               	btfsc	status,2,c
  4728   0002BE  D756               	goto	l8209
  4729   0002C0  EFA9  F005         	goto	u10590
  4730   0002C4                     l8253:
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;doprnt.c: 851: if(flag & (0x700)) {
  4734   0002C4  0E07               	movlw	7
  4735   0002C6  1524               	andwf	(sprintf@flag+1)& (0+255),w,b
  4736   0002C8  B4D8               	btfsc	status,2,c
  4737   0002CA  D318               	goto	l8433
  4738                           
  4739                           ; BSR set to: 1
  4740                           ;doprnt.c: 853: if(flag & 0x1000)
  4741   0002CC  A924               	btfss	(sprintf@flag+1)& (0+255),4,b
  4742   0002CE  D004               	goto	l8259
  4743                           
  4744                           ; BSR set to: 1
  4745                           ;doprnt.c: 855: prec = 6;
  4746   0002D0  0E00               	movlw	0
  4747   0002D2  6F2B               	movwf	(sprintf@prec+1)& (0+255),b
  4748   0002D4  0E06               	movlw	6
  4749   0002D6  6F2A               	movwf	sprintf@prec& (0+255),b
  4750   0002D8                     l8259:
  4751                           
  4752                           ; BSR set to: 1
  4753                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4754   0002D8  C115  FFD9         	movff	sprintf@ap,fsr2l
  4755   0002DC  C116  FFDA         	movff	sprintf@ap+1,fsr2h
  4756   0002E0  CFDE F125          	movff	postinc2,sprintf@fval
  4757   0002E4  CFDE F126          	movff	postinc2,sprintf@fval+1
  4758   0002E8  CFDD F127          	movff	postdec2,sprintf@fval+2
  4759                           
  4760                           ; BSR set to: 1
  4761   0002EC  0E03               	movlw	3
  4762   0002EE  2715               	addwf	sprintf@ap& (0+255),f,b
  4763   0002F0  0E00               	movlw	0
  4764   0002F2  2316               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;doprnt.c: 857: if(fval < 0.0) {
  4768   0002F4  AF27               	btfss	(sprintf@fval+2)& (0+255),7,b
  4769   0002F6  D011               	goto	l8269
  4770                           
  4771                           ; BSR set to: 1
  4772                           ;doprnt.c: 858: fval = -fval;
  4773   0002F8  C125  F0A0         	movff	sprintf@fval,___ftneg@f1
  4774   0002FC  C126  F0A1         	movff	sprintf@fval+1,___ftneg@f1+1
  4775   000300  C127  F0A2         	movff	sprintf@fval+2,___ftneg@f1+2
  4776   000304  ECF7  F021         	call	___ftneg	;wreg free
  4777   000308  C0A0  F125         	movff	?___ftneg,sprintf@fval
  4778   00030C  C0A1  F126         	movff	?___ftneg+1,sprintf@fval+1
  4779   000310  C0A2  F127         	movff	?___ftneg+2,sprintf@fval+2
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 859: flag |= 0x03;
  4783   000314  0E03               	movlw	3
  4784   000316  0101               	movlb	1	; () banked
  4785   000318  1323               	iorwf	sprintf@flag& (0+255),f,b
  4786   00031A                     l8269:
  4787                           
  4788                           ; BSR set to: 1
  4789                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4790   00031A  0E00               	movlw	0
  4791   00031C  6F22               	movwf	(sprintf@eexp+1)& (0+255),b
  4792   00031E  0E00               	movlw	0
  4793   000320  6F21               	movwf	sprintf@eexp& (0+255),b
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;doprnt.c: 862: if( fval!=0) {
  4797   000322  5125               	movf	sprintf@fval& (0+255),w,b
  4798   000324  1126               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4799   000326  1127               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4800   000328  B4D8               	btfsc	status,2,c
  4801   00032A  D087               	goto	l8297
  4802                           
  4803                           ; BSR set to: 1
  4804                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4805   00032C  0E82               	movlw	130
  4806   00032E  6F0A               	movwf	??_sprintf& (0+255),b
  4807   000330  0EFF               	movlw	255
  4808   000332  6F0B               	movwf	(??_sprintf+1)& (0+255),b
  4809   000334  C125  F10C         	movff	sprintf@fval,??_sprintf+2
  4810   000338  C126  F10D         	movff	sprintf@fval+1,??_sprintf+3
  4811   00033C  C127  F10E         	movff	sprintf@fval+2,??_sprintf+4
  4812   000340  C128  F10F         	movff	sprintf@fval+3,??_sprintf+5
  4813   000344  0E10               	movlw	16
  4814   000346  D005               	goto	u10150
  4815   000348                     u10155:
  4816   000348  90D8               	bcf	status,0,c
  4817   00034A  330F               	rrcf	(??_sprintf+5)& (0+255),f,b
  4818   00034C  330E               	rrcf	(??_sprintf+4)& (0+255),f,b
  4819   00034E  330D               	rrcf	(??_sprintf+3)& (0+255),f,b
  4820   000350  330C               	rrcf	(??_sprintf+2)& (0+255),f,b
  4821   000352                     u10150:
  4822   000352  2EE8               	decfsz	wreg,f,c
  4823   000354  D7F9               	goto	u10155
  4824   000356  510C               	movf	(??_sprintf+2)& (0+255),w,b
  4825   000358  250A               	addwf	??_sprintf& (0+255),w,b
  4826   00035A  6F21               	movwf	sprintf@eexp& (0+255),b
  4827   00035C  0E00               	movlw	0
  4828   00035E  210B               	addwfc	(??_sprintf+1)& (0+255),w,b
  4829   000360  6F22               	movwf	(sprintf@eexp+1)& (0+255),b
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;doprnt.c: 864: eexp--;
  4833   000362  0721               	decf	sprintf@eexp& (0+255),f,b
  4834   000364  A0D8               	btfss	status,0,c
  4835   000366  0722               	decf	(sprintf@eexp+1)& (0+255),f,b
  4836                           
  4837                           ; BSR set to: 1
  4838                           ;doprnt.c: 865: eexp *= 3;
  4839   000368  C121  F0A0         	movff	sprintf@eexp,___wmul@multiplier
  4840   00036C  C122  F0A1         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4841   000370  0E00               	movlw	0
  4842   000372  0100               	movlb	0	; () banked
  4843   000374  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4844   000376  0E03               	movlw	3
  4845   000378  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  4846   00037A  ECE4  F021         	call	___wmul	;wreg free
  4847   00037E  C0A0  F121         	movff	?___wmul,sprintf@eexp
  4848   000382  C0A1  F122         	movff	?___wmul+1,sprintf@eexp+1
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;doprnt.c: 866: eexp /= 10;
  4852   000386  C121  F0A6         	movff	sprintf@eexp,___awdiv@dividend
  4853   00038A  C122  F0A7         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4854   00038E  0E00               	movlw	0
  4855   000390  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  4856   000392  0E0A               	movlw	10
  4857   000394  6FA8               	movwf	___awdiv@divisor& (0+255),b
  4858   000396  ECDE  F01A         	call	___awdiv	;wreg free
  4859   00039A  C0A6  F121         	movff	?___awdiv,sprintf@eexp
  4860   00039E  C0A7  F122         	movff	?___awdiv+1,sprintf@eexp+1
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;doprnt.c: 867: if(eexp < 0)
  4864   0003A2  0101               	movlb	1	; () banked
  4865   0003A4  AF22               	btfss	(sprintf@eexp+1)& (0+255),7,b
  4866   0003A6  D003               	goto	l8285
  4867                           
  4868                           ; BSR set to: 1
  4869                           ;doprnt.c: 868: eexp--;
  4870   0003A8  0721               	decf	sprintf@eexp& (0+255),f,b
  4871   0003AA  A0D8               	btfss	status,0,c
  4872   0003AC  0722               	decf	(sprintf@eexp+1)& (0+255),f,b
  4873   0003AE                     l8285:
  4874                           
  4875                           ; BSR set to: 1
  4876                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4877   0003AE  5121               	movf	sprintf@eexp& (0+255),w,b
  4878   0003B0  0800               	sublw	0
  4879   0003B2  EC52  F00B         	call	_scale
  4880   0003B6  C0BD  F119         	movff	?_scale,sprintf@tmpval
  4881   0003BA  C0BE  F11A         	movff	?_scale+1,sprintf@tmpval+1
  4882   0003BE  C0BF  F11B         	movff	?_scale+2,sprintf@tmpval+2
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;doprnt.c: 873: tmpval.integ *= fval;
  4886   0003C2  C119  F0AE         	movff	sprintf@tmpval,___ftmul@f1
  4887   0003C6  C11A  F0AF         	movff	sprintf@tmpval+1,___ftmul@f1+1
  4888   0003CA  C11B  F0B0         	movff	sprintf@tmpval+2,___ftmul@f1+2
  4889   0003CE  C125  F0B1         	movff	sprintf@fval,___ftmul@f2
  4890   0003D2  C126  F0B2         	movff	sprintf@fval+1,___ftmul@f2+1
  4891   0003D6  C127  F0B3         	movff	sprintf@fval+2,___ftmul@f2+2
  4892   0003DA  ECFE  F015         	call	___ftmul	;wreg free
  4893   0003DE  C0AE  F119         	movff	?___ftmul,sprintf@tmpval
  4894   0003E2  C0AF  F11A         	movff	?___ftmul+1,sprintf@tmpval+1
  4895   0003E6  C0B0  F11B         	movff	?___ftmul+2,sprintf@tmpval+2
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4899   0003EA  C119  F0A0         	movff	sprintf@tmpval,___ftge@ff1
  4900   0003EE  C11A  F0A1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4901   0003F2  C11B  F0A2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4902   0003F6  0E00               	movlw	0
  4903   0003F8  6FA3               	movwf	___ftge@ff2& (0+255),b
  4904   0003FA  0E80               	movlw	128
  4905   0003FC  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  4906   0003FE  0E3F               	movlw	63
  4907   000400  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  4908   000402  EC62  F01C         	call	___ftge	;wreg free
  4909   000406  B0D8               	btfsc	status,0,c
  4910   000408  D005               	goto	l8293
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;doprnt.c: 875: eexp--;
  4914   00040A  0101               	movlb	1	; () banked
  4915   00040C  0721               	decf	sprintf@eexp& (0+255),f,b
  4916   00040E  A0D8               	btfss	status,0,c
  4917   000410  0722               	decf	(sprintf@eexp+1)& (0+255),f,b
  4918   000412  D013               	goto	l8297
  4919   000414                     l8293:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4923   000414  C119  F0A0         	movff	sprintf@tmpval,___ftge@ff1
  4924   000418  C11A  F0A1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4925   00041C  C11B  F0A2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4926   000420  0E00               	movlw	0
  4927   000422  6FA3               	movwf	___ftge@ff2& (0+255),b
  4928   000424  0E20               	movlw	32
  4929   000426  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  4930   000428  0E41               	movlw	65
  4931   00042A  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  4932   00042C  EC62  F01C         	call	___ftge	;wreg free
  4933   000430  A0D8               	btfss	status,0,c
  4934   000432  D003               	goto	l8297
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;doprnt.c: 877: eexp++;
  4938   000434  0101               	movlb	1	; () banked
  4939   000436  4B21               	infsnz	sprintf@eexp& (0+255),f,b
  4940   000438  2B22               	incf	(sprintf@eexp+1)& (0+255),f,b
  4941   00043A                     l8297:
  4942                           
  4943                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4944   00043A  0101               	movlb	1	; () banked
  4945   00043C  BF2B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4946   00043E  D006               	goto	u10190
  4947   000440  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  4948   000442  E11B               	bnz	l8301
  4949   000444  0E0D               	movlw	13
  4950   000446  5D2A               	subwf	sprintf@prec& (0+255),w,b
  4951   000448  B0D8               	btfsc	status,0,c
  4952   00044A  D017               	goto	l8301
  4953   00044C                     u10190:
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4957   00044C  C125  F0C9         	movff	sprintf@fval,___ftadd@f1
  4958   000450  C126  F0CA         	movff	sprintf@fval+1,___ftadd@f1+1
  4959   000454  C127  F0CB         	movff	sprintf@fval+2,___ftadd@f1+2
  4960   000458  512A               	movf	sprintf@prec& (0+255),w,b
  4961   00045A  ECF7  F010         	call	_fround
  4962   00045E  C0BD  F0CC         	movff	?_fround,___ftadd@f2
  4963   000462  C0BE  F0CD         	movff	?_fround+1,___ftadd@f2+1
  4964   000466  C0BF  F0CE         	movff	?_fround+2,___ftadd@f2+2
  4965   00046A  ECDD  F012         	call	___ftadd	;wreg free
  4966   00046E  C0C9  F125         	movff	?___ftadd,sprintf@fval
  4967   000472  C0CA  F126         	movff	?___ftadd+1,sprintf@fval+1
  4968   000476  C0CB  F127         	movff	?___ftadd+2,sprintf@fval+2
  4969   00047A                     l8301:
  4970                           
  4971                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4972   00047A  0101               	movlb	1	; () banked
  4973   00047C  BF22               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4974   00047E  D006               	goto	u10200
  4975   000480  5122               	movf	(sprintf@eexp+1)& (0+255),w,b
  4976   000482  E120               	bnz	l8309
  4977   000484  0E0A               	movlw	10
  4978   000486  5D21               	subwf	sprintf@eexp& (0+255),w,b
  4979   000488  B0D8               	btfsc	status,0,c
  4980   00048A  D01C               	goto	u10230
  4981   00048C                     u10200:
  4982                           
  4983                           ; BSR set to: 1
  4984   00048C  5125               	movf	sprintf@fval& (0+255),w,b
  4985   00048E  1126               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4986   000490  1127               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4987   000492  B4D8               	btfsc	status,2,c
  4988   000494  D057               	goto	l8323
  4989                           
  4990                           ; BSR set to: 1
  4991   000496  C125  F0C4         	movff	sprintf@fval,___fttol@f1
  4992   00049A  C126  F0C5         	movff	sprintf@fval+1,___fttol@f1+1
  4993   00049E  C127  F0C6         	movff	sprintf@fval+2,___fttol@f1+2
  4994   0004A2  ECDF  F017         	call	___fttol	;wreg free
  4995   0004A6  51C4               	movf	?___fttol& (0+255),w,b
  4996   0004A8  11C5               	iorwf	(?___fttol+1)& (0+255),w,b
  4997   0004AA  11C6               	iorwf	(?___fttol+2)& (0+255),w,b
  4998   0004AC  11C7               	iorwf	(?___fttol+3)& (0+255),w,b
  4999   0004AE  A4D8               	btfss	status,2,c
  5000   0004B0  D049               	goto	l8323
  5001                           
  5002                           ; BSR set to: 0
  5003   0004B2  0101               	movlb	1	; () banked
  5004   0004B4  BF22               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5005   0004B6  D046               	goto	l8323
  5006   0004B8  5122               	movf	(sprintf@eexp+1)& (0+255),w,b
  5007   0004BA  E104               	bnz	u10230
  5008   0004BC  0E02               	movlw	2
  5009   0004BE  5D21               	subwf	sprintf@eexp& (0+255),w,b
  5010   0004C0  A0D8               	btfss	status,0,c
  5011   0004C2  D040               	goto	l8323
  5012   0004C4                     u10230:
  5013   0004C4                     l8309:
  5014                           
  5015                           ; BSR set to: 1
  5016                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  5017   0004C4  C119  F0A0         	movff	sprintf@tmpval,___ftge@ff1
  5018   0004C8  C11A  F0A1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5019   0004CC  C11B  F0A2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5020   0004D0  0E70               	movlw	112
  5021   0004D2  0100               	movlb	0	; () banked
  5022   0004D4  6FA3               	movwf	___ftge@ff2& (0+255),b
  5023   0004D6  0E89               	movlw	137
  5024   0004D8  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  5025   0004DA  0E40               	movlw	64
  5026   0004DC  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  5027   0004DE  EC62  F01C         	call	___ftge	;wreg free
  5028   0004E2  B0D8               	btfsc	status,0,c
  5029   0004E4  D003               	goto	l8313
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5033   0004E6  0101               	movlb	1	; () banked
  5034   0004E8  0EF7               	movlw	247
  5035   0004EA  D002               	goto	L3
  5036   0004EC                     l8313:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5040   0004EC  0101               	movlb	1	; () banked
  5041   0004EE  0EF8               	movlw	248
  5042   0004F0                     L3:
  5043   0004F0  2721               	addwf	sprintf@eexp& (0+255),f,b
  5044   0004F2  0EFF               	movlw	255
  5045   0004F4  2322               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  5049   0004F6  5121               	movf	sprintf@eexp& (0+255),w,b
  5050   0004F8  EC52  F00B         	call	_scale
  5051   0004FC  C0BD  F119         	movff	?_scale,sprintf@tmpval
  5052   000500  C0BE  F11A         	movff	?_scale+1,sprintf@tmpval+1
  5053   000504  C0BF  F11B         	movff	?_scale+2,sprintf@tmpval+2
  5054                           
  5055                           ; BSR set to: 0
  5056                           
  5057                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5058   000508  C125  F0A0         	movff	sprintf@fval,__tdiv_to_l_@f1
  5059   00050C  C126  F0A1         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  5060   000510  C127  F0A2         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  5061   000514  C119  F0A3         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  5062   000518  C11A  F0A4         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  5063   00051C  C11B  F0A5         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  5064   000520  EC85  F014         	call	__tdiv_to_l_	;wreg free
  5065   000524  C0A0  F11D         	movff	?__tdiv_to_l_,sprintf@val
  5066   000528  C0A1  F11E         	movff	?__tdiv_to_l_+1,sprintf@val+1
  5067   00052C  C0A2  F11F         	movff	?__tdiv_to_l_+2,sprintf@val+2
  5068   000530  C0A3  F120         	movff	?__tdiv_to_l_+3,sprintf@val+3
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;doprnt.c: 1155: fval = 0.0;
  5072   000534  0E00               	movlw	0
  5073   000536  0101               	movlb	1	; () banked
  5074   000538  6F25               	movwf	sprintf@fval& (0+255),b
  5075   00053A  0E00               	movlw	0
  5076   00053C  6F26               	movwf	(sprintf@fval+1)& (0+255),b
  5077   00053E  0E00               	movlw	0
  5078   000540  6F27               	movwf	(sprintf@fval+2)& (0+255),b
  5079                           
  5080                           ;doprnt.c: 1156: } else {
  5081   000542  D033               	goto	l8327
  5082   000544                     l8323:
  5083                           
  5084                           ;doprnt.c: 1157: val = (unsigned long)fval;
  5085   000544  C125  F0C4         	movff	sprintf@fval,___fttol@f1
  5086   000548  C126  F0C5         	movff	sprintf@fval+1,___fttol@f1+1
  5087   00054C  C127  F0C6         	movff	sprintf@fval+2,___fttol@f1+2
  5088   000550  ECDF  F017         	call	___fttol	;wreg free
  5089   000554  C0C4  F11D         	movff	?___fttol,sprintf@val
  5090   000558  C0C5  F11E         	movff	?___fttol+1,sprintf@val+1
  5091   00055C  C0C6  F11F         	movff	?___fttol+2,sprintf@val+2
  5092   000560  C0C7  F120         	movff	?___fttol+3,sprintf@val+3
  5093                           
  5094                           ;doprnt.c: 1158: fval -= (double)val;
  5095   000564  C125  F0D5         	movff	sprintf@fval,___ftsub@f1
  5096   000568  C126  F0D6         	movff	sprintf@fval+1,___ftsub@f1+1
  5097   00056C  C127  F0D7         	movff	sprintf@fval+2,___ftsub@f1+2
  5098   000570  C11D  F0A8         	movff	sprintf@val,___lltoft@c
  5099   000574  C11E  F0A9         	movff	sprintf@val+1,___lltoft@c+1
  5100   000578  C11F  F0AA         	movff	sprintf@val+2,___lltoft@c+2
  5101   00057C  C120  F0AB         	movff	sprintf@val+3,___lltoft@c+3
  5102   000580  EC15  F01E         	call	___lltoft	;wreg free
  5103   000584  C0A8  F0D8         	movff	?___lltoft,___ftsub@f2
  5104   000588  C0A9  F0D9         	movff	?___lltoft+1,___ftsub@f2+1
  5105   00058C  C0AA  F0DA         	movff	?___lltoft+2,___ftsub@f2+2
  5106   000590  EC22  F020         	call	___ftsub	;wreg free
  5107   000594  C0D5  F125         	movff	?___ftsub,sprintf@fval
  5108   000598  C0D6  F126         	movff	?___ftsub+1,sprintf@fval+1
  5109   00059C  C0D7  F127         	movff	?___ftsub+2,sprintf@fval+2
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;doprnt.c: 1159: eexp = 0;
  5113   0005A0  0E00               	movlw	0
  5114   0005A2  0101               	movlb	1	; () banked
  5115   0005A4  6F22               	movwf	(sprintf@eexp+1)& (0+255),b
  5116   0005A6  0E00               	movlw	0
  5117   0005A8  6F21               	movwf	sprintf@eexp& (0+255),b
  5118   0005AA                     l8327:
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5122   0005AA  0E01               	movlw	1
  5123   0005AC  6F2C               	movwf	sprintf@c& (0+255),b
  5124   0005AE                     l8333:
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;doprnt.c: 1163: if(val < dpowers[c])
  5128   0005AE  512C               	movf	sprintf@c& (0+255),w,b
  5129   0005B0  0D04               	mullw	4
  5130   0005B2  0EE9               	movlw	low _dpowers
  5131   0005B4  24F3               	addwf	243,w,c
  5132   0005B6  6EF6               	movwf	tblptrl,c
  5133   0005B8  0EFE               	movlw	high _dpowers
  5134   0005BA  20F4               	addwfc	244,w,c
  5135   0005BC  6EF7               	movwf	tblptrh,c
  5136   0005BE                     	if	0	;There are less than 3 active tblptr bytes
  5137   0005BE                     	endif
  5138   0005BE  0009               	tblrd		*+
  5139   0005C0  50F5               	movf	tablat,w,c
  5140   0005C2  5D1D               	subwf	sprintf@val& (0+255),w,b
  5141   0005C4  0009               	tblrd		*+
  5142   0005C6  50F5               	movf	tablat,w,c
  5143   0005C8  591E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5144   0005CA  0009               	tblrd		*+
  5145   0005CC  50F5               	movf	tablat,w,c
  5146   0005CE  591F               	subwfb	(sprintf@val+2)& (0+255),w,b
  5147   0005D0  0009               	tblrd		*+
  5148   0005D2  50F5               	movf	tablat,w,c
  5149   0005D4  5920               	subwfb	(sprintf@val+3)& (0+255),w,b
  5150   0005D6  A0D8               	btfss	status,0,c
  5151   0005D8  D005               	goto	u10260
  5152                           
  5153                           ; BSR set to: 1
  5154   0005DA  2B2C               	incf	sprintf@c& (0+255),f,b
  5155                           
  5156                           ; BSR set to: 1
  5157   0005DC  0E0A               	movlw	10
  5158   0005DE  192C               	xorwf	sprintf@c& (0+255),w,b
  5159   0005E0  A4D8               	btfss	status,2,c
  5160   0005E2  D7E5               	goto	l8333
  5161   0005E4                     u10260:
  5162                           
  5163                           ; BSR set to: 1
  5164                           ;doprnt.c: 1168: width -= prec + c + eexp;
  5165   0005E4  512C               	movf	sprintf@c& (0+255),w,b
  5166   0005E6  252A               	addwf	sprintf@prec& (0+255),w,b
  5167   0005E8  6F0A               	movwf	??_sprintf& (0+255),b
  5168   0005EA  0E00               	movlw	0
  5169   0005EC  212B               	addwfc	(sprintf@prec+1)& (0+255),w,b
  5170   0005EE  6F0B               	movwf	(??_sprintf+1)& (0+255),b
  5171   0005F0  5121               	movf	sprintf@eexp& (0+255),w,b
  5172   0005F2  270A               	addwf	??_sprintf& (0+255),f,b
  5173   0005F4  5122               	movf	(sprintf@eexp+1)& (0+255),w,b
  5174   0005F6  230B               	addwfc	(??_sprintf+1)& (0+255),f,b
  5175   0005F8  510A               	movf	??_sprintf& (0+255),w,b
  5176   0005FA  5F28               	subwf	sprintf@width& (0+255),f,b
  5177   0005FC  510B               	movf	(??_sprintf+1)& (0+255),w,b
  5178   0005FE  5B29               	subwfb	(sprintf@width+1)& (0+255),f,b
  5179                           
  5180                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  5181   000600  512A               	movf	sprintf@prec& (0+255),w,b
  5182   000602  112B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5183   000604  B4D8               	btfsc	status,2,c
  5184   000606  D003               	goto	l8345
  5185                           
  5186                           ; BSR set to: 1
  5187                           ;doprnt.c: 1174: width--;
  5188   000608  0728               	decf	sprintf@width& (0+255),f,b
  5189   00060A  A0D8               	btfss	status,0,c
  5190   00060C  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5191   00060E                     l8345:
  5192                           
  5193                           ; BSR set to: 1
  5194                           ;doprnt.c: 1175: if(flag & 0x03)
  5195   00060E  C123  F10A         	movff	sprintf@flag,??_sprintf
  5196   000612  0E03               	movlw	3
  5197   000614  170A               	andwf	??_sprintf& (0+255),f,b
  5198   000616  B4D8               	btfsc	status,2,c
  5199   000618  D003               	goto	l8349
  5200                           
  5201                           ; BSR set to: 1
  5202                           ;doprnt.c: 1176: width--;
  5203   00061A  0728               	decf	sprintf@width& (0+255),f,b
  5204   00061C  A0D8               	btfss	status,0,c
  5205   00061E  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5206   000620                     l8349:
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;doprnt.c: 1179: if(flag & 0x04) {
  5210   000620  A523               	btfss	sprintf@flag& (0+255),2,b
  5211   000622  D02D               	goto	l8371
  5212                           
  5213                           ; BSR set to: 1
  5214                           ;doprnt.c: 1183: if(flag & 0x03)
  5215   000624  C123  F10A         	movff	sprintf@flag,??_sprintf
  5216   000628  0E03               	movlw	3
  5217   00062A  170A               	andwf	??_sprintf& (0+255),f,b
  5218   00062C  B4D8               	btfsc	status,2,c
  5219   00062E  D014               	goto	l8363
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  5223   000630  C100  FFD9         	movff	sprintf@sp,fsr2l
  5224   000634  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5225   000638  0E2D               	movlw	45
  5226   00063A  6EDF               	movwf	indf2,c
  5227                           
  5228                           ; BSR set to: 1
  5229   00063C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5230   00063E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5231   000640  D00B               	goto	l8363
  5232   000642                     l8357:
  5233                           
  5234                           ; BSR set to: 1
  5235                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  5236   000642  C100  FFD9         	movff	sprintf@sp,fsr2l
  5237   000646  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5238   00064A  0E30               	movlw	48
  5239   00064C  6EDF               	movwf	indf2,c
  5240                           
  5241                           ; BSR set to: 1
  5242   00064E  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5243   000650  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5244                           
  5245                           ; BSR set to: 1
  5246                           ;doprnt.c: 1196: width--;
  5247   000652  0728               	decf	sprintf@width& (0+255),f,b
  5248   000654  A0D8               	btfss	status,0,c
  5249   000656  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5250   000658                     l8363:
  5251                           
  5252                           ; BSR set to: 1
  5253   000658  BF29               	btfsc	(sprintf@width+1)& (0+255),7,b
  5254   00065A  D06F               	goto	l8387
  5255   00065C  5129               	movf	(sprintf@width+1)& (0+255),w,b
  5256   00065E  E1F1               	bnz	l8357
  5257   000660  0528               	decf	sprintf@width& (0+255),w,b
  5258   000662  A0D8               	btfss	status,0,c
  5259   000664  D06A               	goto	l8387
  5260   000666  D7ED               	goto	l8357
  5261   000668                     l8365:
  5262                           
  5263                           ; BSR set to: 1
  5264                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  5265   000668  C100  FFD9         	movff	sprintf@sp,fsr2l
  5266   00066C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5267   000670  0E20               	movlw	32
  5268   000672  6EDF               	movwf	indf2,c
  5269                           
  5270                           ; BSR set to: 1
  5271   000674  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5272   000676  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 1
  5275                           ;doprnt.c: 1208: width--;
  5276   000678  0728               	decf	sprintf@width& (0+255),f,b
  5277   00067A  A0D8               	btfss	status,0,c
  5278   00067C  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5279   00067E                     l8371:
  5280                           
  5281                           ; BSR set to: 1
  5282   00067E  BF29               	btfsc	(sprintf@width+1)& (0+255),7,b
  5283   000680  D005               	goto	u10320
  5284   000682  5129               	movf	(sprintf@width+1)& (0+255),w,b
  5285   000684  E1F1               	bnz	l8365
  5286   000686  0528               	decf	sprintf@width& (0+255),w,b
  5287   000688  B0D8               	btfsc	status,0,c
  5288   00068A  D7EE               	goto	l8365
  5289   00068C                     u10320:
  5290                           
  5291                           ; BSR set to: 1
  5292                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  5293   00068C  C123  F10A         	movff	sprintf@flag,??_sprintf
  5294   000690  0E03               	movlw	3
  5295   000692  170A               	andwf	??_sprintf& (0+255),f,b
  5296   000694  B4D8               	btfsc	status,2,c
  5297   000696  D051               	goto	l8387
  5298                           
  5299                           ; BSR set to: 1
  5300                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  5301   000698  C100  FFD9         	movff	sprintf@sp,fsr2l
  5302   00069C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5303   0006A0  0E2D               	movlw	45
  5304   0006A2  6EDF               	movwf	indf2,c
  5305                           
  5306                           ; BSR set to: 1
  5307   0006A4  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5308   0006A6  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5309   0006A8  D048               	goto	l8387
  5310   0006AA                     l8379:
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5314   0006AA  C11D  F0A0         	movff	sprintf@val,___lldiv@dividend
  5315   0006AE  C11E  F0A1         	movff	sprintf@val+1,___lldiv@dividend+1
  5316   0006B2  C11F  F0A2         	movff	sprintf@val+2,___lldiv@dividend+2
  5317   0006B6  C120  F0A3         	movff	sprintf@val+3,___lldiv@dividend+3
  5318   0006BA  512C               	movf	sprintf@c& (0+255),w,b
  5319   0006BC  0D04               	mullw	4
  5320   0006BE  0EE9               	movlw	low _dpowers
  5321   0006C0  24F3               	addwf	243,w,c
  5322   0006C2  6EF6               	movwf	tblptrl,c
  5323   0006C4  0EFE               	movlw	high _dpowers
  5324   0006C6  20F4               	addwfc	244,w,c
  5325   0006C8  6EF7               	movwf	tblptrh,c
  5326   0006CA                     	if	0	;There are less than 3 active tblptr bytes
  5327   0006CA                     	endif
  5328   0006CA  0009               	tblrd		*+
  5329   0006CC  CFF5 F0A4          	movff	tablat,___lldiv@divisor
  5330   0006D0  0009               	tblrd		*+
  5331   0006D2  CFF5 F0A5          	movff	tablat,___lldiv@divisor+1
  5332   0006D6  0009               	tblrd		*+
  5333   0006D8  CFF5 F0A6          	movff	tablat,___lldiv@divisor+2
  5334   0006DC  000A               	tblrd		*-
  5335   0006DE  CFF5 F0A7          	movff	tablat,___lldiv@divisor+3
  5336   0006E2  EC20  F01B         	call	___lldiv	;wreg free
  5337   0006E6  C0A0  F119         	movff	?___lldiv,sprintf@tmpval
  5338   0006EA  C0A1  F11A         	movff	?___lldiv+1,sprintf@tmpval+1
  5339   0006EE  C0A2  F11B         	movff	?___lldiv+2,sprintf@tmpval+2
  5340   0006F2  C0A3  F11C         	movff	?___lldiv+3,sprintf@tmpval+3
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5344   0006F6  C119  F0AD         	movff	sprintf@tmpval,___llmod@dividend
  5345   0006FA  C11A  F0AE         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5346   0006FE  C11B  F0AF         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5347   000702  C11C  F0B0         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5348   000706  0E0A               	movlw	10
  5349   000708  6FB1               	movwf	___llmod@divisor& (0+255),b
  5350   00070A  0E00               	movlw	0
  5351   00070C  6FB2               	movwf	(___llmod@divisor+1)& (0+255),b
  5352   00070E  0E00               	movlw	0
  5353   000710  6FB3               	movwf	(___llmod@divisor+2)& (0+255),b
  5354   000712  0E00               	movlw	0
  5355   000714  6FB4               	movwf	(___llmod@divisor+3)& (0+255),b
  5356   000716  EC7B  F01D         	call	___llmod	;wreg free
  5357   00071A  C0AD  F119         	movff	?___llmod,sprintf@tmpval
  5358   00071E  C0AE  F11A         	movff	?___llmod+1,sprintf@tmpval+1
  5359   000722  C0AF  F11B         	movff	?___llmod+2,sprintf@tmpval+2
  5360   000726  C0B0  F11C         	movff	?___llmod+3,sprintf@tmpval+3
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  5364   00072A  0101               	movlb	1	; () banked
  5365   00072C  5119               	movf	sprintf@tmpval& (0+255),w,b
  5366   00072E  0F30               	addlw	48
  5367   000730  C100  FFD9         	movff	sprintf@sp,fsr2l
  5368   000734  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5369   000738  D7B4               	goto	L4
  5370   00073A                     l8387:
  5371                           
  5372                           ; BSR set to: 1
  5373   00073A  072C               	decf	sprintf@c& (0+255),f,b
  5374   00073C  292C               	incf	sprintf@c& (0+255),w,b
  5375   00073E  B4D8               	btfsc	status,2,c
  5376   000740  D00C               	goto	l8395
  5377   000742  D7B3               	goto	l8379
  5378   000744                     l8389:
  5379                           
  5380                           ; BSR set to: 1
  5381                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  5382   000744  C100  FFD9         	movff	sprintf@sp,fsr2l
  5383   000748  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5384   00074C  0E30               	movlw	48
  5385   00074E  6EDF               	movwf	indf2,c
  5386                           
  5387                           ; BSR set to: 1
  5388   000750  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5389   000752  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5390                           
  5391                           ; BSR set to: 1
  5392                           ;doprnt.c: 1235: eexp--;
  5393   000754  0721               	decf	sprintf@eexp& (0+255),f,b
  5394   000756  A0D8               	btfss	status,0,c
  5395   000758  0722               	decf	(sprintf@eexp+1)& (0+255),f,b
  5396   00075A                     l8395:
  5397                           
  5398                           ; BSR set to: 1
  5399   00075A  BF22               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5400   00075C  D005               	goto	u10350
  5401   00075E  5122               	movf	(sprintf@eexp+1)& (0+255),w,b
  5402   000760  E1F1               	bnz	l8389
  5403   000762  0521               	decf	sprintf@eexp& (0+255),w,b
  5404   000764  B0D8               	btfsc	status,0,c
  5405   000766  D7EE               	goto	l8389
  5406   000768                     u10350:
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5410   000768  BF2B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5411   00076A  D009               	goto	l441
  5412   00076C  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  5413   00076E  E104               	bnz	u10360
  5414   000770  0E09               	movlw	9
  5415   000772  5D2A               	subwf	sprintf@prec& (0+255),w,b
  5416   000774  A0D8               	btfss	status,0,c
  5417   000776  D003               	goto	l441
  5418   000778                     u10360:
  5419                           
  5420                           ; BSR set to: 1
  5421                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5422   000778  0E08               	movlw	8
  5423   00077A  6F2C               	movwf	sprintf@c& (0+255),b
  5424   00077C  D002               	goto	l8401
  5425   00077E                     l441:
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5429   00077E  C12A  F12C         	movff	sprintf@prec,sprintf@c
  5430   000782                     l8401:
  5431                           
  5432                           ; BSR set to: 1
  5433                           ;doprnt.c: 1241: prec -= (int)c;
  5434   000782  512C               	movf	sprintf@c& (0+255),w,b
  5435   000784  5F2A               	subwf	sprintf@prec& (0+255),f,b
  5436   000786  0E00               	movlw	0
  5437   000788  5B2B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;doprnt.c: 1245: if(c)
  5441   00078A  512C               	movf	sprintf@c& (0+255),w,b
  5442   00078C  B4D8               	btfsc	status,2,c
  5443   00078E  D008               	goto	l8409
  5444                           
  5445                           ; BSR set to: 1
  5446                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  5447   000790  C100  FFD9         	movff	sprintf@sp,fsr2l
  5448   000794  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5449   000798  0E2E               	movlw	46
  5450   00079A  6EDF               	movwf	indf2,c
  5451                           
  5452                           ; BSR set to: 1
  5453   00079C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5454   00079E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5455   0007A0                     l8409:
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5459   0007A0  512C               	movf	sprintf@c& (0+255),w,b
  5460   0007A2  EC52  F00B         	call	_scale
  5461   0007A6  C0BD  F110         	movff	?_scale,_sprintf$1749
  5462   0007AA  C0BE  F111         	movff	?_scale+1,_sprintf$1749+1
  5463   0007AE  C0BF  F112         	movff	?_scale+2,_sprintf$1749+2
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5467   0007B2  C125  F0B1         	movff	sprintf@fval,___ftmul@f2
  5468   0007B6  C126  F0B2         	movff	sprintf@fval+1,___ftmul@f2+1
  5469   0007BA  C127  F0B3         	movff	sprintf@fval+2,___ftmul@f2+2
  5470   0007BE  C110  F0AE         	movff	_sprintf$1749,___ftmul@f1
  5471   0007C2  C111  F0AF         	movff	_sprintf$1749+1,___ftmul@f1+1
  5472   0007C6  C112  F0B0         	movff	_sprintf$1749+2,___ftmul@f1+2
  5473   0007CA  ECFE  F015         	call	___ftmul	;wreg free
  5474   0007CE  C0AE  F0C4         	movff	?___ftmul,___fttol@f1
  5475   0007D2  C0AF  F0C5         	movff	?___ftmul+1,___fttol@f1+1
  5476   0007D6  C0B0  F0C6         	movff	?___ftmul+2,___fttol@f1+2
  5477   0007DA  ECDF  F017         	call	___fttol	;wreg free
  5478   0007DE  C0C4  F11D         	movff	?___fttol,sprintf@val
  5479   0007E2  C0C5  F11E         	movff	?___fttol+1,sprintf@val+1
  5480   0007E6  C0C6  F11F         	movff	?___fttol+2,sprintf@val+2
  5481   0007EA  C0C7  F120         	movff	?___fttol+3,sprintf@val+3
  5482                           
  5483                           ;doprnt.c: 1254: while(c--) {
  5484   0007EE  D070               	goto	l8423
  5485   0007F0                     l8413:
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5489   0007F0  C11D  F0A0         	movff	sprintf@val,___lldiv@dividend
  5490   0007F4  C11E  F0A1         	movff	sprintf@val+1,___lldiv@dividend+1
  5491   0007F8  C11F  F0A2         	movff	sprintf@val+2,___lldiv@dividend+2
  5492   0007FC  C120  F0A3         	movff	sprintf@val+3,___lldiv@dividend+3
  5493   000800  512C               	movf	sprintf@c& (0+255),w,b
  5494   000802  0D04               	mullw	4
  5495   000804  0EE9               	movlw	low _dpowers
  5496   000806  24F3               	addwf	243,w,c
  5497   000808  6EF6               	movwf	tblptrl,c
  5498   00080A  0EFE               	movlw	high _dpowers
  5499   00080C  20F4               	addwfc	244,w,c
  5500   00080E  6EF7               	movwf	tblptrh,c
  5501   000810                     	if	0	;There are less than 3 active tblptr bytes
  5502   000810                     	endif
  5503   000810  0009               	tblrd		*+
  5504   000812  CFF5 F0A4          	movff	tablat,___lldiv@divisor
  5505   000816  0009               	tblrd		*+
  5506   000818  CFF5 F0A5          	movff	tablat,___lldiv@divisor+1
  5507   00081C  0009               	tblrd		*+
  5508   00081E  CFF5 F0A6          	movff	tablat,___lldiv@divisor+2
  5509   000822  000A               	tblrd		*-
  5510   000824  CFF5 F0A7          	movff	tablat,___lldiv@divisor+3
  5511   000828  EC20  F01B         	call	___lldiv	;wreg free
  5512   00082C  C0A0  F119         	movff	?___lldiv,sprintf@tmpval
  5513   000830  C0A1  F11A         	movff	?___lldiv+1,sprintf@tmpval+1
  5514   000834  C0A2  F11B         	movff	?___lldiv+2,sprintf@tmpval+2
  5515   000838  C0A3  F11C         	movff	?___lldiv+3,sprintf@tmpval+3
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5519   00083C  C119  F0AD         	movff	sprintf@tmpval,___llmod@dividend
  5520   000840  C11A  F0AE         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5521   000844  C11B  F0AF         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5522   000848  C11C  F0B0         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5523   00084C  0E0A               	movlw	10
  5524   00084E  6FB1               	movwf	___llmod@divisor& (0+255),b
  5525   000850  0E00               	movlw	0
  5526   000852  6FB2               	movwf	(___llmod@divisor+1)& (0+255),b
  5527   000854  0E00               	movlw	0
  5528   000856  6FB3               	movwf	(___llmod@divisor+2)& (0+255),b
  5529   000858  0E00               	movlw	0
  5530   00085A  6FB4               	movwf	(___llmod@divisor+3)& (0+255),b
  5531   00085C  EC7B  F01D         	call	___llmod	;wreg free
  5532   000860  C0AD  F119         	movff	?___llmod,sprintf@tmpval
  5533   000864  C0AE  F11A         	movff	?___llmod+1,sprintf@tmpval+1
  5534   000868  C0AF  F11B         	movff	?___llmod+2,sprintf@tmpval+2
  5535   00086C  C0B0  F11C         	movff	?___llmod+3,sprintf@tmpval+3
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  5539   000870  0101               	movlb	1	; () banked
  5540   000872  5119               	movf	sprintf@tmpval& (0+255),w,b
  5541   000874  0F30               	addlw	48
  5542   000876  C100  FFD9         	movff	sprintf@sp,fsr2l
  5543   00087A  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5544   00087E  6EDF               	movwf	indf2,c
  5545                           
  5546                           ; BSR set to: 1
  5547   000880  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5548   000882  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;doprnt.c: 1258: val %= dpowers[c];
  5552   000884  C11D  F0AD         	movff	sprintf@val,___llmod@dividend
  5553   000888  C11E  F0AE         	movff	sprintf@val+1,___llmod@dividend+1
  5554   00088C  C11F  F0AF         	movff	sprintf@val+2,___llmod@dividend+2
  5555   000890  C120  F0B0         	movff	sprintf@val+3,___llmod@dividend+3
  5556   000894  512C               	movf	sprintf@c& (0+255),w,b
  5557   000896  0D04               	mullw	4
  5558   000898  0EE9               	movlw	low _dpowers
  5559   00089A  24F3               	addwf	243,w,c
  5560   00089C  6EF6               	movwf	tblptrl,c
  5561   00089E  0EFE               	movlw	high _dpowers
  5562   0008A0  20F4               	addwfc	244,w,c
  5563   0008A2  6EF7               	movwf	tblptrh,c
  5564   0008A4                     	if	0	;There are less than 3 active tblptr bytes
  5565   0008A4                     	endif
  5566   0008A4  0009               	tblrd		*+
  5567   0008A6  CFF5 F0B1          	movff	tablat,___llmod@divisor
  5568   0008AA  0009               	tblrd		*+
  5569   0008AC  CFF5 F0B2          	movff	tablat,___llmod@divisor+1
  5570   0008B0  0009               	tblrd		*+
  5571   0008B2  CFF5 F0B3          	movff	tablat,___llmod@divisor+2
  5572   0008B6  000A               	tblrd		*-
  5573   0008B8  CFF5 F0B4          	movff	tablat,___llmod@divisor+3
  5574   0008BC  EC7B  F01D         	call	___llmod	;wreg free
  5575   0008C0  C0AD  F11D         	movff	?___llmod,sprintf@val
  5576   0008C4  C0AE  F11E         	movff	?___llmod+1,sprintf@val+1
  5577   0008C8  C0AF  F11F         	movff	?___llmod+2,sprintf@val+2
  5578   0008CC  C0B0  F120         	movff	?___llmod+3,sprintf@val+3
  5579   0008D0                     l8423:
  5580                           
  5581                           ; BSR set to: 0
  5582   0008D0  0101               	movlb	1	; () banked
  5583   0008D2  072C               	decf	sprintf@c& (0+255),f,b
  5584   0008D4  292C               	incf	sprintf@c& (0+255),w,b
  5585   0008D6  B4D8               	btfsc	status,2,c
  5586   0008D8  D00C               	goto	l8431
  5587   0008DA  D78A               	goto	l8413
  5588   0008DC                     l8425:
  5589                           
  5590                           ; BSR set to: 1
  5591                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  5592   0008DC  C100  FFD9         	movff	sprintf@sp,fsr2l
  5593   0008E0  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5594   0008E4  0E30               	movlw	48
  5595   0008E6  6EDF               	movwf	indf2,c
  5596                           
  5597                           ; BSR set to: 1
  5598   0008E8  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5599   0008EA  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5600                           
  5601                           ; BSR set to: 1
  5602                           ;doprnt.c: 1263: prec--;
  5603   0008EC  072A               	decf	sprintf@prec& (0+255),f,b
  5604   0008EE  A0D8               	btfss	status,0,c
  5605   0008F0  072B               	decf	(sprintf@prec+1)& (0+255),f,b
  5606   0008F2                     l8431:
  5607                           
  5608                           ; BSR set to: 1
  5609   0008F2  512A               	movf	sprintf@prec& (0+255),w,b
  5610   0008F4  112B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5611   0008F6  B4D8               	btfsc	status,2,c
  5612   0008F8  D12C               	goto	u10590
  5613   0008FA  D7F0               	goto	l8425
  5614   0008FC                     l8433:
  5615                           
  5616                           ; BSR set to: 1
  5617                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  5618   0008FC  C115  FFD9         	movff	sprintf@ap,fsr2l
  5619   000900  C116  FFDA         	movff	sprintf@ap+1,fsr2h
  5620   000904  CFDE F11D          	movff	postinc2,sprintf@val
  5621   000908  CFDD F11E          	movff	postdec2,sprintf@val+1
  5622   00090C  0E00               	movlw	0
  5623   00090E  BF1E               	btfsc	(sprintf@val+1)& (0+255),7,b
  5624   000910  0EFF               	movlw	-1
  5625   000912  6F1F               	movwf	(sprintf@val+2)& (0+255),b
  5626   000914  6F20               	movwf	(sprintf@val+3)& (0+255),b
  5627                           
  5628                           ; BSR set to: 1
  5629   000916  0E02               	movlw	2
  5630   000918  2715               	addwf	sprintf@ap& (0+255),f,b
  5631   00091A  0E00               	movlw	0
  5632   00091C  2316               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5633                           
  5634                           ; BSR set to: 1
  5635                           ;doprnt.c: 1287: if((long)val < 0) {
  5636   00091E  AF20               	btfss	(sprintf@val+3)& (0+255),7,b
  5637   000920  D00A               	goto	l8443
  5638                           
  5639                           ; BSR set to: 1
  5640                           ;doprnt.c: 1288: flag |= 0x03;
  5641   000922  0E03               	movlw	3
  5642   000924  1323               	iorwf	sprintf@flag& (0+255),f,b
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;doprnt.c: 1289: val = -val;
  5646   000926  1F20               	comf	(sprintf@val+3)& (0+255),f,b
  5647   000928  1F1F               	comf	(sprintf@val+2)& (0+255),f,b
  5648   00092A  1F1E               	comf	(sprintf@val+1)& (0+255),f,b
  5649   00092C  6D1D               	negf	sprintf@val& (0+255),b
  5650   00092E  0E00               	movlw	0
  5651   000930  231E               	addwfc	(sprintf@val+1)& (0+255),f,b
  5652   000932  231F               	addwfc	(sprintf@val+2)& (0+255),f,b
  5653   000934  2320               	addwfc	(sprintf@val+3)& (0+255),f,b
  5654   000936                     l8443:
  5655                           
  5656                           ; BSR set to: 1
  5657                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5658   000936  512A               	movf	sprintf@prec& (0+255),w,b
  5659   000938  112B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5660   00093A  A4D8               	btfss	status,2,c
  5661   00093C  D008               	goto	l8449
  5662                           
  5663                           ; BSR set to: 1
  5664   00093E  511D               	movf	sprintf@val& (0+255),w,b
  5665   000940  111E               	iorwf	(sprintf@val+1)& (0+255),w,b
  5666   000942  111F               	iorwf	(sprintf@val+2)& (0+255),w,b
  5667   000944  1120               	iorwf	(sprintf@val+3)& (0+255),w,b
  5668   000946  A4D8               	btfss	status,2,c
  5669   000948  D002               	goto	l8449
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;doprnt.c: 1317: prec++;
  5673   00094A  4B2A               	infsnz	sprintf@prec& (0+255),f,b
  5674   00094C  2B2B               	incf	(sprintf@prec+1)& (0+255),f,b
  5675   00094E                     l8449:
  5676                           
  5677                           ; BSR set to: 1
  5678                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5679   00094E  0E01               	movlw	1
  5680   000950  6F2C               	movwf	sprintf@c& (0+255),b
  5681   000952                     l8455:
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;doprnt.c: 1332: if(val < dpowers[c])
  5685   000952  512C               	movf	sprintf@c& (0+255),w,b
  5686   000954  0D04               	mullw	4
  5687   000956  0EE9               	movlw	low _dpowers
  5688   000958  24F3               	addwf	243,w,c
  5689   00095A  6EF6               	movwf	tblptrl,c
  5690   00095C  0EFE               	movlw	high _dpowers
  5691   00095E  20F4               	addwfc	244,w,c
  5692   000960  6EF7               	movwf	tblptrh,c
  5693   000962                     	if	0	;There are less than 3 active tblptr bytes
  5694   000962                     	endif
  5695   000962  0009               	tblrd		*+
  5696   000964  50F5               	movf	tablat,w,c
  5697   000966  5D1D               	subwf	sprintf@val& (0+255),w,b
  5698   000968  0009               	tblrd		*+
  5699   00096A  50F5               	movf	tablat,w,c
  5700   00096C  591E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5701   00096E  0009               	tblrd		*+
  5702   000970  50F5               	movf	tablat,w,c
  5703   000972  591F               	subwfb	(sprintf@val+2)& (0+255),w,b
  5704   000974  0009               	tblrd		*+
  5705   000976  50F5               	movf	tablat,w,c
  5706   000978  5920               	subwfb	(sprintf@val+3)& (0+255),w,b
  5707   00097A  A0D8               	btfss	status,0,c
  5708   00097C  D005               	goto	u10440
  5709                           
  5710                           ; BSR set to: 1
  5711   00097E  2B2C               	incf	sprintf@c& (0+255),f,b
  5712                           
  5713                           ; BSR set to: 1
  5714   000980  0E0A               	movlw	10
  5715   000982  192C               	xorwf	sprintf@c& (0+255),w,b
  5716   000984  A4D8               	btfss	status,2,c
  5717   000986  D7E5               	goto	l8455
  5718   000988                     u10440:
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;doprnt.c: 1365: if(c < prec)
  5722   000988  512C               	movf	sprintf@c& (0+255),w,b
  5723   00098A  6F0A               	movwf	??_sprintf& (0+255),b
  5724   00098C  6B0B               	clrf	(??_sprintf+1)& (0+255),b
  5725   00098E  512A               	movf	sprintf@prec& (0+255),w,b
  5726   000990  5D0A               	subwf	??_sprintf& (0+255),w,b
  5727   000992  510B               	movf	(??_sprintf+1)& (0+255),w,b
  5728   000994  0A80               	xorlw	128
  5729   000996  6F0C               	movwf	(??_sprintf+2)& (0+255),b
  5730   000998  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  5731   00099A  0A80               	xorlw	128
  5732   00099C  590C               	subwfb	(??_sprintf+2)& (0+255),w,b
  5733   00099E  B0D8               	btfsc	status,0,c
  5734   0009A0  D003               	goto	l8467
  5735                           
  5736                           ; BSR set to: 1
  5737                           ;doprnt.c: 1366: c = (char)prec;
  5738   0009A2  C12A  F12C         	movff	sprintf@prec,sprintf@c
  5739   0009A6  D010               	goto	l8471
  5740   0009A8                     l8467:
  5741                           
  5742                           ; BSR set to: 1
  5743                           ;doprnt.c: 1367: else if(prec < c)
  5744   0009A8  512C               	movf	sprintf@c& (0+255),w,b
  5745   0009AA  6F0A               	movwf	??_sprintf& (0+255),b
  5746   0009AC  6B0B               	clrf	(??_sprintf+1)& (0+255),b
  5747   0009AE  510A               	movf	??_sprintf& (0+255),w,b
  5748   0009B0  5D2A               	subwf	sprintf@prec& (0+255),w,b
  5749   0009B2  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  5750   0009B4  0A80               	xorlw	128
  5751   0009B6  6F0C               	movwf	(??_sprintf+2)& (0+255),b
  5752   0009B8  510B               	movf	(??_sprintf+1)& (0+255),w,b
  5753   0009BA  0A80               	xorlw	128
  5754   0009BC  590C               	subwfb	(??_sprintf+2)& (0+255),w,b
  5755   0009BE  B0D8               	btfsc	status,0,c
  5756   0009C0  D003               	goto	l8471
  5757                           
  5758                           ; BSR set to: 1
  5759                           ;doprnt.c: 1368: prec = c;
  5760   0009C2  C12C  F12A         	movff	sprintf@c,sprintf@prec
  5761   0009C6  6B2B               	clrf	(sprintf@prec+1)& (0+255),b
  5762   0009C8                     l8471:
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5766   0009C8  5128               	movf	sprintf@width& (0+255),w,b
  5767   0009CA  1129               	iorwf	(sprintf@width+1)& (0+255),w,b
  5768   0009CC  B4D8               	btfsc	status,2,c
  5769   0009CE  D009               	goto	l8477
  5770                           
  5771                           ; BSR set to: 1
  5772   0009D0  C123  F10A         	movff	sprintf@flag,??_sprintf
  5773   0009D4  0E03               	movlw	3
  5774   0009D6  170A               	andwf	??_sprintf& (0+255),f,b
  5775   0009D8  B4D8               	btfsc	status,2,c
  5776   0009DA  D003               	goto	l8477
  5777                           
  5778                           ; BSR set to: 1
  5779                           ;doprnt.c: 1372: width--;
  5780   0009DC  0728               	decf	sprintf@width& (0+255),f,b
  5781   0009DE  A0D8               	btfss	status,0,c
  5782   0009E0  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5783   0009E2                     l8477:
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;doprnt.c: 1374: if(flag & 0x4000) {
  5787   0009E2  AD24               	btfss	(sprintf@flag+1)& (0+255),6,b
  5788   0009E4  D013               	goto	l8485
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;doprnt.c: 1375: if(width > prec)
  5792   0009E6  5128               	movf	sprintf@width& (0+255),w,b
  5793   0009E8  5D2A               	subwf	sprintf@prec& (0+255),w,b
  5794   0009EA  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  5795   0009EC  0A80               	xorlw	128
  5796   0009EE  6F0A               	movwf	??_sprintf& (0+255),b
  5797   0009F0  5129               	movf	(sprintf@width+1)& (0+255),w,b
  5798   0009F2  0A80               	xorlw	128
  5799   0009F4  590A               	subwfb	??_sprintf& (0+255),w,b
  5800   0009F6  B0D8               	btfsc	status,0,c
  5801   0009F8  D005               	goto	l8483
  5802                           
  5803                           ; BSR set to: 1
  5804                           ;doprnt.c: 1376: width -= prec;
  5805   0009FA  512A               	movf	sprintf@prec& (0+255),w,b
  5806   0009FC  5F28               	subwf	sprintf@width& (0+255),f,b
  5807   0009FE  512B               	movf	(sprintf@prec+1)& (0+255),w,b
  5808   000A00  5B29               	subwfb	(sprintf@width+1)& (0+255),f,b
  5809   000A02  D004               	goto	l8485
  5810   000A04                     l8483:
  5811                           
  5812                           ; BSR set to: 1
  5813                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  5814   000A04  0E00               	movlw	0
  5815   000A06  6F29               	movwf	(sprintf@width+1)& (0+255),b
  5816   000A08  0E00               	movlw	0
  5817   000A0A  6F28               	movwf	sprintf@width& (0+255),b
  5818   000A0C                     l8485:
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  5822   000A0C  512C               	movf	sprintf@c& (0+255),w,b
  5823   000A0E  6F0A               	movwf	??_sprintf& (0+255),b
  5824   000A10  6B0B               	clrf	(??_sprintf+1)& (0+255),b
  5825   000A12  5128               	movf	sprintf@width& (0+255),w,b
  5826   000A14  5D0A               	subwf	??_sprintf& (0+255),w,b
  5827   000A16  510B               	movf	(??_sprintf+1)& (0+255),w,b
  5828   000A18  0A80               	xorlw	128
  5829   000A1A  6F0C               	movwf	(??_sprintf+2)& (0+255),b
  5830   000A1C  5129               	movf	(sprintf@width+1)& (0+255),w,b
  5831   000A1E  0A80               	xorlw	128
  5832   000A20  590C               	subwfb	(??_sprintf+2)& (0+255),w,b
  5833   000A22  B0D8               	btfsc	status,0,c
  5834   000A24  D005               	goto	l8489
  5835                           
  5836                           ; BSR set to: 1
  5837                           ;doprnt.c: 1408: width -= c;
  5838   000A26  512C               	movf	sprintf@c& (0+255),w,b
  5839   000A28  5F28               	subwf	sprintf@width& (0+255),f,b
  5840   000A2A  0E00               	movlw	0
  5841   000A2C  5B29               	subwfb	(sprintf@width+1)& (0+255),f,b
  5842   000A2E  D004               	goto	l8491
  5843   000A30                     l8489:
  5844                           
  5845                           ; BSR set to: 1
  5846                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5847   000A30  0E00               	movlw	0
  5848   000A32  6F29               	movwf	(sprintf@width+1)& (0+255),b
  5849   000A34  0E00               	movlw	0
  5850   000A36  6F28               	movwf	sprintf@width& (0+255),b
  5851   000A38                     l8491:
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;doprnt.c: 1413: if(flag & 0x04) {
  5855   000A38  A523               	btfss	sprintf@flag& (0+255),2,b
  5856   000A3A  D01E               	goto	l8507
  5857                           
  5858                           ; BSR set to: 1
  5859                           ;doprnt.c: 1418: if(flag & 0x03)
  5860   000A3C  C123  F10A         	movff	sprintf@flag,??_sprintf
  5861   000A40  0E03               	movlw	3
  5862   000A42  170A               	andwf	??_sprintf& (0+255),f,b
  5863   000A44  B4D8               	btfsc	status,2,c
  5864   000A46  D008               	goto	l8499
  5865                           
  5866                           ; BSR set to: 1
  5867                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5868   000A48  C100  FFD9         	movff	sprintf@sp,fsr2l
  5869   000A4C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5870   000A50  0E2D               	movlw	45
  5871   000A52  6EDF               	movwf	indf2,c
  5872                           
  5873                           ; BSR set to: 1
  5874   000A54  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5875   000A56  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5876   000A58                     l8499:
  5877                           
  5878                           ; BSR set to: 1
  5879                           ;doprnt.c: 1441: if(width)
  5880   000A58  5128               	movf	sprintf@width& (0+255),w,b
  5881   000A5A  1129               	iorwf	(sprintf@width+1)& (0+255),w,b
  5882   000A5C  B4D8               	btfsc	status,2,c
  5883   000A5E  D071               	goto	l8527
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5887   000A60  C100  FFD9         	movff	sprintf@sp,fsr2l
  5888   000A64  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5889   000A68  0E30               	movlw	48
  5890   000A6A  6EDF               	movwf	indf2,c
  5891                           
  5892                           ; BSR set to: 1
  5893   000A6C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5894   000A6E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;doprnt.c: 1444: while(--width);
  5898   000A70  0728               	decf	sprintf@width& (0+255),f,b
  5899   000A72  A0D8               	btfss	status,0,c
  5900   000A74  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5901   000A76  D7F0               	goto	l8499
  5902   000A78                     l8507:
  5903                           
  5904                           ; BSR set to: 1
  5905                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5906   000A78  5128               	movf	sprintf@width& (0+255),w,b
  5907   000A7A  1129               	iorwf	(sprintf@width+1)& (0+255),w,b
  5908   000A7C  B4D8               	btfsc	status,2,c
  5909   000A7E  D00F               	goto	u10570
  5910   000A80                     u10560:
  5911                           
  5912                           ; BSR set to: 1
  5913                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5914   000A80  C100  FFD9         	movff	sprintf@sp,fsr2l
  5915   000A84  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5916   000A88  0E20               	movlw	32
  5917   000A8A  6EDF               	movwf	indf2,c
  5918                           
  5919                           ; BSR set to: 1
  5920   000A8C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5921   000A8E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5922                           
  5923                           ; BSR set to: 1
  5924                           ;doprnt.c: 1457: while(--width);
  5925   000A90  0728               	decf	sprintf@width& (0+255),f,b
  5926   000A92  A0D8               	btfss	status,0,c
  5927   000A94  0729               	decf	(sprintf@width+1)& (0+255),f,b
  5928   000A96  5128               	movf	sprintf@width& (0+255),w,b
  5929   000A98  1129               	iorwf	(sprintf@width+1)& (0+255),w,b
  5930   000A9A  A4D8               	btfss	status,2,c
  5931   000A9C  D7F1               	goto	u10560
  5932   000A9E                     u10570:
  5933                           
  5934                           ; BSR set to: 1
  5935                           ;doprnt.c: 1464: if(flag & 0x03)
  5936   000A9E  C123  F10A         	movff	sprintf@flag,??_sprintf
  5937   000AA2  0E03               	movlw	3
  5938   000AA4  170A               	andwf	??_sprintf& (0+255),f,b
  5939   000AA6  B4D8               	btfsc	status,2,c
  5940   000AA8  D04C               	goto	l8527
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5944   000AAA  C100  FFD9         	movff	sprintf@sp,fsr2l
  5945   000AAE  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5946   000AB2  0E2D               	movlw	45
  5947   000AB4  6EDF               	movwf	indf2,c
  5948   000AB6                     l8519:
  5949                           
  5950                           ; BSR set to: 1
  5951   000AB6  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5952   000AB8  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5953   000ABA  D043               	goto	l8527
  5954   000ABC                     l8521:
  5955                           
  5956                           ; BSR set to: 1
  5957                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5958   000ABC  C12A  F10A         	movff	sprintf@prec,??_sprintf
  5959   000AC0  C12B  F10B         	movff	sprintf@prec+1,??_sprintf+1
  5960   000AC4  90D8               	bcf	status,0,c
  5961   000AC6  370A               	rlcf	??_sprintf& (0+255),f,b
  5962   000AC8  370B               	rlcf	(??_sprintf+1)& (0+255),f,b
  5963   000ACA  90D8               	bcf	status,0,c
  5964   000ACC  370A               	rlcf	??_sprintf& (0+255),f,b
  5965   000ACE  370B               	rlcf	(??_sprintf+1)& (0+255),f,b
  5966   000AD0  0EE9               	movlw	low _dpowers
  5967   000AD2  250A               	addwf	??_sprintf& (0+255),w,b
  5968   000AD4  6EF6               	movwf	tblptrl,c
  5969   000AD6  0EFE               	movlw	high _dpowers
  5970   000AD8  210B               	addwfc	(??_sprintf+1)& (0+255),w,b
  5971   000ADA  6EF7               	movwf	tblptrh,c
  5972   000ADC                     	if	0	;There are less than 3 active tblptr bytes
  5973   000ADC                     	endif
  5974   000ADC  0009               	tblrd		*+
  5975   000ADE  CFF5 F0A4          	movff	tablat,___lldiv@divisor
  5976   000AE2  0009               	tblrd		*+
  5977   000AE4  CFF5 F0A5          	movff	tablat,___lldiv@divisor+1
  5978   000AE8  0009               	tblrd		*+
  5979   000AEA  CFF5 F0A6          	movff	tablat,___lldiv@divisor+2
  5980   000AEE  000A               	tblrd		*-
  5981   000AF0  CFF5 F0A7          	movff	tablat,___lldiv@divisor+3
  5982   000AF4  C11D  F0A0         	movff	sprintf@val,___lldiv@dividend
  5983   000AF8  C11E  F0A1         	movff	sprintf@val+1,___lldiv@dividend+1
  5984   000AFC  C11F  F0A2         	movff	sprintf@val+2,___lldiv@dividend+2
  5985   000B00  C120  F0A3         	movff	sprintf@val+3,___lldiv@dividend+3
  5986   000B04  EC20  F01B         	call	___lldiv	;wreg free
  5987   000B08  C0A0  F0AD         	movff	?___lldiv,___llmod@dividend
  5988   000B0C  C0A1  F0AE         	movff	?___lldiv+1,___llmod@dividend+1
  5989   000B10  C0A2  F0AF         	movff	?___lldiv+2,___llmod@dividend+2
  5990   000B14  C0A3  F0B0         	movff	?___lldiv+3,___llmod@dividend+3
  5991   000B18  0E0A               	movlw	10
  5992   000B1A  6FB1               	movwf	___llmod@divisor& (0+255),b
  5993   000B1C  0E00               	movlw	0
  5994   000B1E  6FB2               	movwf	(___llmod@divisor+1)& (0+255),b
  5995   000B20  0E00               	movlw	0
  5996   000B22  6FB3               	movwf	(___llmod@divisor+2)& (0+255),b
  5997   000B24  0E00               	movlw	0
  5998   000B26  6FB4               	movwf	(___llmod@divisor+3)& (0+255),b
  5999   000B28  EC7B  F01D         	call	___llmod	;wreg free
  6000   000B2C  51AD               	movf	?___llmod& (0+255),w,b
  6001   000B2E  0F30               	addlw	48
  6002   000B30  0101               	movlb	1	; () banked
  6003   000B32  6F2C               	movwf	sprintf@c& (0+255),b
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6007   000B34  C100  FFD9         	movff	sprintf@sp,fsr2l
  6008   000B38  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  6009   000B3C  C12C  FFDF         	movff	sprintf@c,indf2
  6010   000B40  D7BA               	goto	l8519
  6011   000B42                     l8527:
  6012                           
  6013                           ; BSR set to: 1
  6014   000B42  072A               	decf	sprintf@prec& (0+255),f,b
  6015   000B44  A0D8               	btfss	status,0,c
  6016   000B46  072B               	decf	(sprintf@prec+1)& (0+255),f,b
  6017   000B48  292A               	incf	sprintf@prec& (0+255),w,b
  6018   000B4A  E1B8               	bnz	l8521
  6019   000B4C  292B               	incf	(sprintf@prec+1)& (0+255),w,b
  6020   000B4E  A4D8               	btfss	status,2,c
  6021   000B50  D7B5               	goto	l8521
  6022   000B52                     u10590:
  6023                           
  6024                           ; BSR set to: 1
  6025   000B52  C102  FFF6         	movff	sprintf@f,tblptrl
  6026   000B56  C103  FFF7         	movff	sprintf@f+1,tblptrh
  6027   000B5A  4B02               	infsnz	sprintf@f& (0+255),f,b
  6028   000B5C  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  6029   000B5E                     	if	0	;tblptru may be non-zero
  6030   000B5E                     	endif
  6031   000B5E                     	if	0	;tblptru may be non-zero
  6032   000B5E                     	endif
  6033   000B5E  0008               	tblrd		*
  6034   000B60  CFF5 F12C          	movff	tablat,sprintf@c
  6035   000B64  512C               	movf	sprintf@c& (0+255),w,b
  6036   000B66  A4D8               	btfss	status,2,c
  6037   000B68  EF0F  F000         	goto	l8163
  6038   000B6C                     u10600:
  6039                           
  6040                           ; BSR set to: 1
  6041                           ;doprnt.c: 1564: *sp = 0;
  6042   000B6C  C100  FFD9         	movff	sprintf@sp,fsr2l
  6043   000B70  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  6044   000B74  6ADF               	clrf	indf2,c
  6045                           
  6046                           ; BSR set to: 1
  6047   000B76  0012               	return		;funcret
  6048   000B78                     __end_of_sprintf:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function _scale *****************
  6052 ;; Defined at:
  6053 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  scl             1    wreg     char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  scl             1   67[BANK0 ] char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  3   61[BANK0 ] char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 3F/1
  6064 ;;		On exit  : 3F/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6067 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;Total ram usage:        7 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 11
  6074 ;; This function calls:
  6075 ;;		___awdiv
  6076 ;;		___awmod
  6077 ;;		___ftmul
  6078 ;; This function is called by:
  6079 ;;		_sprintf
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text19
  6084   0016A4                     __ptext19:
  6085                           	callstack 0
  6086   0016A4                     _scale:
  6087                           	callstack 16
  6088                           
  6089                           ; BSR set to: 1
  6090                           ;incstack = 0
  6091                           ;scale@scl stored from wreg
  6092   0016A4  0100               	movlb	0	; () banked
  6093   0016A6  6FC3               	movwf	scale@scl& (0+255),b
  6094                           
  6095                           ;doprnt.c: 436: if(scl < 0) {
  6096   0016A8  0100               	movlb	0	; () banked
  6097   0016AA  AFC3               	btfss	scale@scl& (0+255),7,b
  6098   0016AC  D0D9               	goto	l7553
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;doprnt.c: 437: scl = -scl;
  6102   0016AE  6DC3               	negf	scale@scl& (0+255),b
  6103                           
  6104                           ;doprnt.c: 438: if(scl>=110)
  6105   0016B0  51C3               	movf	scale@scl& (0+255),w,b
  6106   0016B2  0A80               	xorlw	128
  6107   0016B4  0F12               	addlw	-238
  6108   0016B6  A0D8               	btfss	status,0,c
  6109   0016B8  D079               	goto	l7543
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6113   0016BA  0E00               	movlw	0
  6114   0016BC  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6115   0016BE  0E0A               	movlw	10
  6116   0016C0  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6117   0016C2  0E00               	movlw	0
  6118   0016C4  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6119   0016C6  0E64               	movlw	100
  6120   0016C8  6FA2               	movwf	___awmod@divisor& (0+255),b
  6121   0016CA  51C3               	movf	scale@scl& (0+255),w,b
  6122   0016CC  6FA0               	movwf	___awmod@dividend& (0+255),b
  6123   0016CE  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6124   0016D0  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6125   0016D2  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6126   0016D4  ECD6  F01C         	call	___awmod	;wreg free
  6127   0016D8  C0A0  F0A6         	movff	?___awmod,___awdiv@dividend
  6128   0016DC  C0A1  F0A7         	movff	?___awmod+1,___awdiv@dividend+1
  6129   0016E0  ECDE  F01A         	call	___awdiv	;wreg free
  6130   0016E4  0E09               	movlw	9
  6131   0016E6  27A6               	addwf	?___awdiv& (0+255),f,b
  6132   0016E8  51A6               	movf	?___awdiv& (0+255),w,b
  6133   0016EA  0D03               	mullw	3
  6134   0016EC  0EC2               	movlw	low __npowers_
  6135   0016EE  24F3               	addwf	243,w,c
  6136   0016F0  6EF6               	movwf	tblptrl,c
  6137   0016F2  0EFE               	movlw	high __npowers_
  6138   0016F4  20F4               	addwfc	244,w,c
  6139   0016F6  6EF7               	movwf	tblptrh,c
  6140   0016F8                     	if	0	;There are less than 3 active tblptr bytes
  6141   0016F8                     	endif
  6142   0016F8  0009               	tblrd		*+
  6143   0016FA  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6144   0016FE  0009               	tblrd		*+
  6145   001700  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6146   001704  000A               	tblrd		*-
  6147   001706  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6148   00170A  0E00               	movlw	0
  6149   00170C  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6150   00170E  0E64               	movlw	100
  6151   001710  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6152   001712  51C3               	movf	scale@scl& (0+255),w,b
  6153   001714  6FA6               	movwf	___awdiv@dividend& (0+255),b
  6154   001716  6BA7               	clrf	(___awdiv@dividend+1)& (0+255),b
  6155   001718  BFA6               	btfsc	___awdiv@dividend& (0+255),7,b
  6156   00171A  07A7               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6157   00171C  ECDE  F01A         	call	___awdiv	;wreg free
  6158   001720  0E12               	movlw	18
  6159   001722  27A6               	addwf	?___awdiv& (0+255),f,b
  6160   001724  51A6               	movf	?___awdiv& (0+255),w,b
  6161   001726  0D03               	mullw	3
  6162   001728  0EC2               	movlw	low __npowers_
  6163   00172A  24F3               	addwf	243,w,c
  6164   00172C  6EF6               	movwf	tblptrl,c
  6165   00172E  0EFE               	movlw	high __npowers_
  6166   001730  20F4               	addwfc	244,w,c
  6167   001732  6EF7               	movwf	tblptrh,c
  6168   001734                     	if	0	;There are less than 3 active tblptr bytes
  6169   001734                     	endif
  6170   001734  0009               	tblrd		*+
  6171   001736  CFF5 F0AE          	movff	tablat,___ftmul@f1
  6172   00173A  0009               	tblrd		*+
  6173   00173C  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  6174   001740  000A               	tblrd		*-
  6175   001742  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  6176   001746  ECFE  F015         	call	___ftmul	;wreg free
  6177   00174A  C0AE  F0C0         	movff	?___ftmul,_scale$1748
  6178   00174E  C0AF  F0C1         	movff	?___ftmul+1,_scale$1748+1
  6179   001752  C0B0  F0C2         	movff	?___ftmul+2,_scale$1748+2
  6180                           
  6181                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6182   001756  C0C0  F0AE         	movff	_scale$1748,___ftmul@f1
  6183   00175A  C0C1  F0AF         	movff	_scale$1748+1,___ftmul@f1+1
  6184   00175E  C0C2  F0B0         	movff	_scale$1748+2,___ftmul@f1+2
  6185   001762  0E00               	movlw	0
  6186   001764  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6187   001766  0E0A               	movlw	10
  6188   001768  6FA2               	movwf	___awmod@divisor& (0+255),b
  6189   00176A  51C3               	movf	scale@scl& (0+255),w,b
  6190   00176C  6FA0               	movwf	___awmod@dividend& (0+255),b
  6191   00176E  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6192   001770  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6193   001772  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6194   001774  ECD6  F01C         	call	___awmod	;wreg free
  6195   001778  51A0               	movf	?___awmod& (0+255),w,b
  6196   00177A  0D03               	mullw	3
  6197   00177C  0EC2               	movlw	low __npowers_
  6198   00177E  24F3               	addwf	243,w,c
  6199   001780  6EF6               	movwf	tblptrl,c
  6200   001782  0EFE               	movlw	high __npowers_
  6201   001784  20F4               	addwfc	244,w,c
  6202   001786  6EF7               	movwf	tblptrh,c
  6203   001788                     	if	0	;There are less than 3 active tblptr bytes
  6204   001788                     	endif
  6205   001788  0009               	tblrd		*+
  6206   00178A  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6207   00178E  0009               	tblrd		*+
  6208   001790  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6209   001794  000A               	tblrd		*-
  6210   001796  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6211   00179A  ECFE  F015         	call	___ftmul	;wreg free
  6212   00179E  C0AE  F0BD         	movff	?___ftmul,?_scale
  6213   0017A2  C0AF  F0BE         	movff	?___ftmul+1,?_scale+1
  6214   0017A6  C0B0  F0BF         	movff	?___ftmul+2,?_scale+2
  6215   0017AA  0012               	return	
  6216   0017AC                     l7543:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;doprnt.c: 440: else if(scl > 10)
  6220   0017AC  51C3               	movf	scale@scl& (0+255),w,b
  6221   0017AE  0A80               	xorlw	128
  6222   0017B0  0F75               	addlw	-139
  6223   0017B2  A0D8               	btfss	status,0,c
  6224   0017B4  D043               	goto	l7549
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6228   0017B6  0E00               	movlw	0
  6229   0017B8  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6230   0017BA  0E0A               	movlw	10
  6231   0017BC  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6232   0017BE  51C3               	movf	scale@scl& (0+255),w,b
  6233   0017C0  6FA6               	movwf	___awdiv@dividend& (0+255),b
  6234   0017C2  6BA7               	clrf	(___awdiv@dividend+1)& (0+255),b
  6235   0017C4  BFA6               	btfsc	___awdiv@dividend& (0+255),7,b
  6236   0017C6  07A7               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6237   0017C8  ECDE  F01A         	call	___awdiv	;wreg free
  6238   0017CC  0E09               	movlw	9
  6239   0017CE  27A6               	addwf	?___awdiv& (0+255),f,b
  6240   0017D0  51A6               	movf	?___awdiv& (0+255),w,b
  6241   0017D2  0D03               	mullw	3
  6242   0017D4  0EC2               	movlw	low __npowers_
  6243   0017D6  24F3               	addwf	243,w,c
  6244   0017D8  6EF6               	movwf	tblptrl,c
  6245   0017DA  0EFE               	movlw	high __npowers_
  6246   0017DC  20F4               	addwfc	244,w,c
  6247   0017DE  6EF7               	movwf	tblptrh,c
  6248   0017E0                     	if	0	;There are less than 3 active tblptr bytes
  6249   0017E0                     	endif
  6250   0017E0  0009               	tblrd		*+
  6251   0017E2  CFF5 F0AE          	movff	tablat,___ftmul@f1
  6252   0017E6  0009               	tblrd		*+
  6253   0017E8  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  6254   0017EC  000A               	tblrd		*-
  6255   0017EE  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  6256   0017F2  0E00               	movlw	0
  6257   0017F4  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6258   0017F6  0E0A               	movlw	10
  6259   0017F8  6FA2               	movwf	___awmod@divisor& (0+255),b
  6260   0017FA  51C3               	movf	scale@scl& (0+255),w,b
  6261   0017FC  6FA0               	movwf	___awmod@dividend& (0+255),b
  6262   0017FE  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6263   001800  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6264   001802  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6265   001804  ECD6  F01C         	call	___awmod	;wreg free
  6266   001808  51A0               	movf	?___awmod& (0+255),w,b
  6267   00180A  0D03               	mullw	3
  6268   00180C  0EC2               	movlw	low __npowers_
  6269   00180E  24F3               	addwf	243,w,c
  6270   001810  6EF6               	movwf	tblptrl,c
  6271   001812  0EFE               	movlw	high __npowers_
  6272   001814  20F4               	addwfc	244,w,c
  6273   001816  6EF7               	movwf	tblptrh,c
  6274   001818                     	if	0	;There are less than 3 active tblptr bytes
  6275   001818                     	endif
  6276   001818  0009               	tblrd		*+
  6277   00181A  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6278   00181E  0009               	tblrd		*+
  6279   001820  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6280   001824  000A               	tblrd		*-
  6281   001826  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6282   00182A  ECFE  F015         	call	___ftmul	;wreg free
  6283   00182E  C0AE  F0BD         	movff	?___ftmul,?_scale
  6284   001832  C0AF  F0BE         	movff	?___ftmul+1,?_scale+1
  6285   001836  C0B0  F0BF         	movff	?___ftmul+2,?_scale+2
  6286   00183A  0012               	return	
  6287   00183C                     l7549:
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6291   00183C  51C3               	movf	scale@scl& (0+255),w,b
  6292   00183E  0D03               	mullw	3
  6293   001840  0EC2               	movlw	low __npowers_
  6294   001842  24F3               	addwf	243,w,c
  6295   001844  6EF6               	movwf	tblptrl,c
  6296   001846  0EFE               	movlw	high __npowers_
  6297   001848  20F4               	addwfc	244,w,c
  6298   00184A  6EF7               	movwf	tblptrh,c
  6299   00184C                     	if	0	;There are less than 3 active tblptr bytes
  6300   00184C                     	endif
  6301   00184C  0009               	tblrd		*+
  6302   00184E  CFF5 F0BD          	movff	tablat,?_scale
  6303   001852  0009               	tblrd		*+
  6304   001854  CFF5 F0BE          	movff	tablat,?_scale+1
  6305   001858  000A               	tblrd		*-
  6306   00185A  CFF5 F0BF          	movff	tablat,?_scale+2
  6307   00185E  0012               	return	
  6308   001860                     l7553:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6312   001860  51C3               	movf	scale@scl& (0+255),w,b
  6313   001862  0A80               	xorlw	128
  6314   001864  0F12               	addlw	-238
  6315   001866  A0D8               	btfss	status,0,c
  6316   001868  D079               	goto	l7561
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6320   00186A  0E00               	movlw	0
  6321   00186C  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6322   00186E  0E0A               	movlw	10
  6323   001870  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6324   001872  0E00               	movlw	0
  6325   001874  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6326   001876  0E64               	movlw	100
  6327   001878  6FA2               	movwf	___awmod@divisor& (0+255),b
  6328   00187A  51C3               	movf	scale@scl& (0+255),w,b
  6329   00187C  6FA0               	movwf	___awmod@dividend& (0+255),b
  6330   00187E  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6331   001880  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6332   001882  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6333   001884  ECD6  F01C         	call	___awmod	;wreg free
  6334   001888  C0A0  F0A6         	movff	?___awmod,___awdiv@dividend
  6335   00188C  C0A1  F0A7         	movff	?___awmod+1,___awdiv@dividend+1
  6336   001890  ECDE  F01A         	call	___awdiv	;wreg free
  6337   001894  0E09               	movlw	9
  6338   001896  27A6               	addwf	?___awdiv& (0+255),f,b
  6339   001898  51A6               	movf	?___awdiv& (0+255),w,b
  6340   00189A  0D03               	mullw	3
  6341   00189C  0E9B               	movlw	low __powers_
  6342   00189E  24F3               	addwf	243,w,c
  6343   0018A0  6EF6               	movwf	tblptrl,c
  6344   0018A2  0EFE               	movlw	high __powers_
  6345   0018A4  20F4               	addwfc	244,w,c
  6346   0018A6  6EF7               	movwf	tblptrh,c
  6347   0018A8                     	if	0	;There are less than 3 active tblptr bytes
  6348   0018A8                     	endif
  6349   0018A8  0009               	tblrd		*+
  6350   0018AA  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6351   0018AE  0009               	tblrd		*+
  6352   0018B0  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6353   0018B4  000A               	tblrd		*-
  6354   0018B6  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6355   0018BA  0E00               	movlw	0
  6356   0018BC  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6357   0018BE  0E64               	movlw	100
  6358   0018C0  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6359   0018C2  51C3               	movf	scale@scl& (0+255),w,b
  6360   0018C4  6FA6               	movwf	___awdiv@dividend& (0+255),b
  6361   0018C6  6BA7               	clrf	(___awdiv@dividend+1)& (0+255),b
  6362   0018C8  BFA6               	btfsc	___awdiv@dividend& (0+255),7,b
  6363   0018CA  07A7               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6364   0018CC  ECDE  F01A         	call	___awdiv	;wreg free
  6365   0018D0  0E12               	movlw	18
  6366   0018D2  27A6               	addwf	?___awdiv& (0+255),f,b
  6367   0018D4  51A6               	movf	?___awdiv& (0+255),w,b
  6368   0018D6  0D03               	mullw	3
  6369   0018D8  0E9B               	movlw	low __powers_
  6370   0018DA  24F3               	addwf	243,w,c
  6371   0018DC  6EF6               	movwf	tblptrl,c
  6372   0018DE  0EFE               	movlw	high __powers_
  6373   0018E0  20F4               	addwfc	244,w,c
  6374   0018E2  6EF7               	movwf	tblptrh,c
  6375   0018E4                     	if	0	;There are less than 3 active tblptr bytes
  6376   0018E4                     	endif
  6377   0018E4  0009               	tblrd		*+
  6378   0018E6  CFF5 F0AE          	movff	tablat,___ftmul@f1
  6379   0018EA  0009               	tblrd		*+
  6380   0018EC  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  6381   0018F0  000A               	tblrd		*-
  6382   0018F2  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  6383   0018F6  ECFE  F015         	call	___ftmul	;wreg free
  6384   0018FA  C0AE  F0C0         	movff	?___ftmul,_scale$1748
  6385   0018FE  C0AF  F0C1         	movff	?___ftmul+1,_scale$1748+1
  6386   001902  C0B0  F0C2         	movff	?___ftmul+2,_scale$1748+2
  6387                           
  6388                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6389   001906  C0C0  F0AE         	movff	_scale$1748,___ftmul@f1
  6390   00190A  C0C1  F0AF         	movff	_scale$1748+1,___ftmul@f1+1
  6391   00190E  C0C2  F0B0         	movff	_scale$1748+2,___ftmul@f1+2
  6392   001912  0E00               	movlw	0
  6393   001914  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6394   001916  0E0A               	movlw	10
  6395   001918  6FA2               	movwf	___awmod@divisor& (0+255),b
  6396   00191A  51C3               	movf	scale@scl& (0+255),w,b
  6397   00191C  6FA0               	movwf	___awmod@dividend& (0+255),b
  6398   00191E  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6399   001920  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6400   001922  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6401   001924  ECD6  F01C         	call	___awmod	;wreg free
  6402   001928  51A0               	movf	?___awmod& (0+255),w,b
  6403   00192A  0D03               	mullw	3
  6404   00192C  0E9B               	movlw	low __powers_
  6405   00192E  24F3               	addwf	243,w,c
  6406   001930  6EF6               	movwf	tblptrl,c
  6407   001932  0EFE               	movlw	high __powers_
  6408   001934  20F4               	addwfc	244,w,c
  6409   001936  6EF7               	movwf	tblptrh,c
  6410   001938                     	if	0	;There are less than 3 active tblptr bytes
  6411   001938                     	endif
  6412   001938  0009               	tblrd		*+
  6413   00193A  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6414   00193E  0009               	tblrd		*+
  6415   001940  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6416   001944  000A               	tblrd		*-
  6417   001946  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6418   00194A  ECFE  F015         	call	___ftmul	;wreg free
  6419   00194E  C0AE  F0BD         	movff	?___ftmul,?_scale
  6420   001952  C0AF  F0BE         	movff	?___ftmul+1,?_scale+1
  6421   001956  C0B0  F0BF         	movff	?___ftmul+2,?_scale+2
  6422   00195A  0012               	return	
  6423   00195C                     l7561:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;doprnt.c: 446: else if(scl > 10)
  6427   00195C  51C3               	movf	scale@scl& (0+255),w,b
  6428   00195E  0A80               	xorlw	128
  6429   001960  0F75               	addlw	-139
  6430   001962  A0D8               	btfss	status,0,c
  6431   001964  D043               	goto	l7567
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6435   001966  0E00               	movlw	0
  6436   001968  6FA9               	movwf	(___awdiv@divisor+1)& (0+255),b
  6437   00196A  0E0A               	movlw	10
  6438   00196C  6FA8               	movwf	___awdiv@divisor& (0+255),b
  6439   00196E  51C3               	movf	scale@scl& (0+255),w,b
  6440   001970  6FA6               	movwf	___awdiv@dividend& (0+255),b
  6441   001972  6BA7               	clrf	(___awdiv@dividend+1)& (0+255),b
  6442   001974  BFA6               	btfsc	___awdiv@dividend& (0+255),7,b
  6443   001976  07A7               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6444   001978  ECDE  F01A         	call	___awdiv	;wreg free
  6445   00197C  0E09               	movlw	9
  6446   00197E  27A6               	addwf	?___awdiv& (0+255),f,b
  6447   001980  51A6               	movf	?___awdiv& (0+255),w,b
  6448   001982  0D03               	mullw	3
  6449   001984  0E9B               	movlw	low __powers_
  6450   001986  24F3               	addwf	243,w,c
  6451   001988  6EF6               	movwf	tblptrl,c
  6452   00198A  0EFE               	movlw	high __powers_
  6453   00198C  20F4               	addwfc	244,w,c
  6454   00198E  6EF7               	movwf	tblptrh,c
  6455   001990                     	if	0	;There are less than 3 active tblptr bytes
  6456   001990                     	endif
  6457   001990  0009               	tblrd		*+
  6458   001992  CFF5 F0AE          	movff	tablat,___ftmul@f1
  6459   001996  0009               	tblrd		*+
  6460   001998  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  6461   00199C  000A               	tblrd		*-
  6462   00199E  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  6463   0019A2  0E00               	movlw	0
  6464   0019A4  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6465   0019A6  0E0A               	movlw	10
  6466   0019A8  6FA2               	movwf	___awmod@divisor& (0+255),b
  6467   0019AA  51C3               	movf	scale@scl& (0+255),w,b
  6468   0019AC  6FA0               	movwf	___awmod@dividend& (0+255),b
  6469   0019AE  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6470   0019B0  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6471   0019B2  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6472   0019B4  ECD6  F01C         	call	___awmod	;wreg free
  6473   0019B8  51A0               	movf	?___awmod& (0+255),w,b
  6474   0019BA  0D03               	mullw	3
  6475   0019BC  0E9B               	movlw	low __powers_
  6476   0019BE  24F3               	addwf	243,w,c
  6477   0019C0  6EF6               	movwf	tblptrl,c
  6478   0019C2  0EFE               	movlw	high __powers_
  6479   0019C4  20F4               	addwfc	244,w,c
  6480   0019C6  6EF7               	movwf	tblptrh,c
  6481   0019C8                     	if	0	;There are less than 3 active tblptr bytes
  6482   0019C8                     	endif
  6483   0019C8  0009               	tblrd		*+
  6484   0019CA  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6485   0019CE  0009               	tblrd		*+
  6486   0019D0  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6487   0019D4  000A               	tblrd		*-
  6488   0019D6  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6489   0019DA  ECFE  F015         	call	___ftmul	;wreg free
  6490   0019DE  C0AE  F0BD         	movff	?___ftmul,?_scale
  6491   0019E2  C0AF  F0BE         	movff	?___ftmul+1,?_scale+1
  6492   0019E6  C0B0  F0BF         	movff	?___ftmul+2,?_scale+2
  6493   0019EA  0012               	return	
  6494   0019EC                     l7567:
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6498   0019EC  51C3               	movf	scale@scl& (0+255),w,b
  6499   0019EE  0D03               	mullw	3
  6500   0019F0  0E9B               	movlw	low __powers_
  6501   0019F2  24F3               	addwf	243,w,c
  6502   0019F4  6EF6               	movwf	tblptrl,c
  6503   0019F6  0EFE               	movlw	high __powers_
  6504   0019F8  20F4               	addwfc	244,w,c
  6505   0019FA  6EF7               	movwf	tblptrh,c
  6506   0019FC                     	if	0	;There are less than 3 active tblptr bytes
  6507   0019FC                     	endif
  6508   0019FC  0009               	tblrd		*+
  6509   0019FE  CFF5 F0BD          	movff	tablat,?_scale
  6510   001A02  0009               	tblrd		*+
  6511   001A04  CFF5 F0BE          	movff	tablat,?_scale+1
  6512   001A08  000A               	tblrd		*-
  6513   001A0A  CFF5 F0BF          	movff	tablat,?_scale+2
  6514                           
  6515                           ; BSR set to: 0
  6516   001A0E  0012               	return		;funcret
  6517   001A10                     __end_of_scale:
  6518                           	callstack 0
  6519                           
  6520 ;; *************** function ___awmod *****************
  6521 ;; Defined at:
  6522 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  dividend        2   32[BANK0 ] int 
  6525 ;;  divisor         2   34[BANK0 ] int 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  sign            1   37[BANK0 ] unsigned char 
  6528 ;;  counter         1   36[BANK0 ] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2   32[BANK0 ] int 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 3F/0
  6535 ;;		On exit  : 3F/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;Total ram usage:        6 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 9
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_scale
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text20
  6553   0039AC                     __ptext20:
  6554                           	callstack 0
  6555   0039AC                     ___awmod:
  6556                           	callstack 17
  6557                           
  6558                           ; BSR set to: 0
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;incstack = 0
  6562   0039AC  0E00               	movlw	0
  6563   0039AE  6FA5               	movwf	___awmod@sign& (0+255),b
  6564                           
  6565                           ; BSR set to: 0
  6566   0039B0  AFA1               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6567   0039B2  D006               	goto	l7183
  6568                           
  6569                           ; BSR set to: 0
  6570   0039B4  6DA0               	negf	___awmod@dividend& (0+255),b
  6571   0039B6  1FA1               	comf	(___awmod@dividend+1)& (0+255),f,b
  6572   0039B8  B0D8               	btfsc	status,0,c
  6573   0039BA  2BA1               	incf	(___awmod@dividend+1)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576   0039BC  0E01               	movlw	1
  6577   0039BE  6FA5               	movwf	___awmod@sign& (0+255),b
  6578   0039C0                     l7183:
  6579                           
  6580                           ; BSR set to: 0
  6581   0039C0  AFA3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6582   0039C2  D004               	goto	l7187
  6583                           
  6584                           ; BSR set to: 0
  6585   0039C4  6DA2               	negf	___awmod@divisor& (0+255),b
  6586   0039C6  1FA3               	comf	(___awmod@divisor+1)& (0+255),f,b
  6587   0039C8  B0D8               	btfsc	status,0,c
  6588   0039CA  2BA3               	incf	(___awmod@divisor+1)& (0+255),f,b
  6589   0039CC                     l7187:
  6590                           
  6591                           ; BSR set to: 0
  6592   0039CC  51A2               	movf	___awmod@divisor& (0+255),w,b
  6593   0039CE  11A3               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6594   0039D0  B4D8               	btfsc	status,2,c
  6595   0039D2  D018               	goto	l7203
  6596                           
  6597                           ; BSR set to: 0
  6598   0039D4  0E01               	movlw	1
  6599   0039D6  6FA4               	movwf	___awmod@counter& (0+255),b
  6600   0039D8  D004               	goto	l7193
  6601   0039DA                     l7191:
  6602                           
  6603                           ; BSR set to: 0
  6604   0039DA  90D8               	bcf	status,0,c
  6605   0039DC  37A2               	rlcf	___awmod@divisor& (0+255),f,b
  6606   0039DE  37A3               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6607   0039E0  2BA4               	incf	___awmod@counter& (0+255),f,b
  6608   0039E2                     l7193:
  6609                           
  6610                           ; BSR set to: 0
  6611   0039E2  AFA3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6612   0039E4  D7FA               	goto	l7191
  6613   0039E6                     u8570:
  6614                           
  6615                           ; BSR set to: 0
  6616   0039E6  51A2               	movf	___awmod@divisor& (0+255),w,b
  6617   0039E8  5DA0               	subwf	___awmod@dividend& (0+255),w,b
  6618   0039EA  51A3               	movf	(___awmod@divisor+1)& (0+255),w,b
  6619   0039EC  59A1               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6620   0039EE  A0D8               	btfss	status,0,c
  6621   0039F0  D004               	goto	l7199
  6622                           
  6623                           ; BSR set to: 0
  6624   0039F2  51A2               	movf	___awmod@divisor& (0+255),w,b
  6625   0039F4  5FA0               	subwf	___awmod@dividend& (0+255),f,b
  6626   0039F6  51A3               	movf	(___awmod@divisor+1)& (0+255),w,b
  6627   0039F8  5BA1               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6628   0039FA                     l7199:
  6629                           
  6630                           ; BSR set to: 0
  6631   0039FA  90D8               	bcf	status,0,c
  6632   0039FC  33A3               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6633   0039FE  33A2               	rrcf	___awmod@divisor& (0+255),f,b
  6634                           
  6635                           ; BSR set to: 0
  6636   003A00  2FA4               	decfsz	___awmod@counter& (0+255),f,b
  6637   003A02  D7F1               	goto	u8570
  6638   003A04                     l7203:
  6639                           
  6640                           ; BSR set to: 0
  6641   003A04  51A5               	movf	___awmod@sign& (0+255),w,b
  6642   003A06  B4D8               	btfsc	status,2,c
  6643   003A08  D004               	goto	l7207
  6644                           
  6645                           ; BSR set to: 0
  6646   003A0A  6DA0               	negf	___awmod@dividend& (0+255),b
  6647   003A0C  1FA1               	comf	(___awmod@dividend+1)& (0+255),f,b
  6648   003A0E  B0D8               	btfsc	status,0,c
  6649   003A10  2BA1               	incf	(___awmod@dividend+1)& (0+255),f,b
  6650   003A12                     l7207:
  6651                           
  6652                           ; BSR set to: 0
  6653   003A12  C0A0  F0A0         	movff	___awmod@dividend,?___awmod
  6654   003A16  C0A1  F0A1         	movff	___awmod@dividend+1,?___awmod+1
  6655                           
  6656                           ; BSR set to: 0
  6657   003A1A  0012               	return		;funcret
  6658   003A1C                     __end_of___awmod:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function ___awdiv *****************
  6662 ;; Defined at:
  6663 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  dividend        2   38[BANK0 ] int 
  6666 ;;  divisor         2   40[BANK0 ] int 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  quotient        2   44[BANK0 ] int 
  6669 ;;  sign            1   43[BANK0 ] unsigned char 
  6670 ;;  counter         1   42[BANK0 ] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2   38[BANK0 ] int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 3F/0
  6677 ;;		On exit  : 3F/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;Total ram usage:        8 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 9
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_scale
  6691 ;;		_sprintf
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text21
  6696   0035BC                     __ptext21:
  6697                           	callstack 0
  6698   0035BC                     ___awdiv:
  6699                           	callstack 17
  6700                           
  6701                           ; BSR set to: 0
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;incstack = 0
  6705   0035BC  0E00               	movlw	0
  6706   0035BE  6FAB               	movwf	___awdiv@sign& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709   0035C0  AFA9               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6710   0035C2  D006               	goto	l7139
  6711                           
  6712                           ; BSR set to: 0
  6713   0035C4  6DA8               	negf	___awdiv@divisor& (0+255),b
  6714   0035C6  1FA9               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6715   0035C8  B0D8               	btfsc	status,0,c
  6716   0035CA  2BA9               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6717                           
  6718                           ; BSR set to: 0
  6719   0035CC  0E01               	movlw	1
  6720   0035CE  6FAB               	movwf	___awdiv@sign& (0+255),b
  6721   0035D0                     l7139:
  6722                           
  6723                           ; BSR set to: 0
  6724   0035D0  AFA7               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6725   0035D2  D006               	goto	l7145
  6726                           
  6727                           ; BSR set to: 0
  6728   0035D4  6DA6               	negf	___awdiv@dividend& (0+255),b
  6729   0035D6  1FA7               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6730   0035D8  B0D8               	btfsc	status,0,c
  6731   0035DA  2BA7               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6732                           
  6733                           ; BSR set to: 0
  6734   0035DC  0E01               	movlw	1
  6735   0035DE  1BAB               	xorwf	___awdiv@sign& (0+255),f,b
  6736   0035E0                     l7145:
  6737                           
  6738                           ; BSR set to: 0
  6739   0035E0  0E00               	movlw	0
  6740   0035E2  6FAD               	movwf	(___awdiv@quotient+1)& (0+255),b
  6741   0035E4  0E00               	movlw	0
  6742   0035E6  6FAC               	movwf	___awdiv@quotient& (0+255),b
  6743                           
  6744                           ; BSR set to: 0
  6745   0035E8  51A8               	movf	___awdiv@divisor& (0+255),w,b
  6746   0035EA  11A9               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6747   0035EC  B4D8               	btfsc	status,2,c
  6748   0035EE  D01C               	goto	l7167
  6749                           
  6750                           ; BSR set to: 0
  6751   0035F0  0E01               	movlw	1
  6752   0035F2  6FAA               	movwf	___awdiv@counter& (0+255),b
  6753   0035F4  D004               	goto	l7153
  6754   0035F6                     l7151:
  6755                           
  6756                           ; BSR set to: 0
  6757   0035F6  90D8               	bcf	status,0,c
  6758   0035F8  37A8               	rlcf	___awdiv@divisor& (0+255),f,b
  6759   0035FA  37A9               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6760   0035FC  2BAA               	incf	___awdiv@counter& (0+255),f,b
  6761   0035FE                     l7153:
  6762                           
  6763                           ; BSR set to: 0
  6764   0035FE  AFA9               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6765   003600  D7FA               	goto	l7151
  6766   003602                     u8510:
  6767                           
  6768                           ; BSR set to: 0
  6769   003602  90D8               	bcf	status,0,c
  6770   003604  37AC               	rlcf	___awdiv@quotient& (0+255),f,b
  6771   003606  37AD               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6772                           
  6773                           ; BSR set to: 0
  6774   003608  51A8               	movf	___awdiv@divisor& (0+255),w,b
  6775   00360A  5DA6               	subwf	___awdiv@dividend& (0+255),w,b
  6776   00360C  51A9               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6777   00360E  59A7               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6778   003610  A0D8               	btfss	status,0,c
  6779   003612  D005               	goto	l7163
  6780                           
  6781                           ; BSR set to: 0
  6782   003614  51A8               	movf	___awdiv@divisor& (0+255),w,b
  6783   003616  5FA6               	subwf	___awdiv@dividend& (0+255),f,b
  6784   003618  51A9               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6785   00361A  5BA7               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6786                           
  6787                           ; BSR set to: 0
  6788   00361C  81AC               	bsf	___awdiv@quotient& (0+255),0,b
  6789   00361E                     l7163:
  6790                           
  6791                           ; BSR set to: 0
  6792   00361E  90D8               	bcf	status,0,c
  6793   003620  33A9               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6794   003622  33A8               	rrcf	___awdiv@divisor& (0+255),f,b
  6795                           
  6796                           ; BSR set to: 0
  6797   003624  2FAA               	decfsz	___awdiv@counter& (0+255),f,b
  6798   003626  D7ED               	goto	u8510
  6799   003628                     l7167:
  6800                           
  6801                           ; BSR set to: 0
  6802   003628  51AB               	movf	___awdiv@sign& (0+255),w,b
  6803   00362A  B4D8               	btfsc	status,2,c
  6804   00362C  D004               	goto	l7171
  6805                           
  6806                           ; BSR set to: 0
  6807   00362E  6DAC               	negf	___awdiv@quotient& (0+255),b
  6808   003630  1FAD               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6809   003632  B0D8               	btfsc	status,0,c
  6810   003634  2BAD               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6811   003636                     l7171:
  6812                           
  6813                           ; BSR set to: 0
  6814   003636  C0AC  F0A6         	movff	___awdiv@quotient,?___awdiv
  6815   00363A  C0AD  F0A7         	movff	___awdiv@quotient+1,?___awdiv+1
  6816                           
  6817                           ; BSR set to: 0
  6818   00363E  0012               	return		;funcret
  6819   003640                     __end_of___awdiv:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function _isdigit *****************
  6823 ;; Defined at:
  6824 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  c               1    wreg     unsigned char 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  c               1   34[BANK0 ] unsigned char 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;		None               void
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 3F/1
  6835 ;;		On exit  : 3F/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;Total ram usage:        3 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 9
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_sprintf
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text22
  6853   0044F4                     __ptext22:
  6854                           	callstack 0
  6855   0044F4                     _isdigit:
  6856                           	callstack 18
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;incstack = 0
  6860                           ;isdigit@c stored from wreg
  6861   0044F4  0100               	movlb	0	; () banked
  6862   0044F6  6FA2               	movwf	isdigit@c& (0+255),b
  6863   0044F8  0E00               	movlw	0
  6864   0044FA  0100               	movlb	0	; () banked
  6865   0044FC  6FA1               	movwf	_isdigit$1506& (0+255),b
  6866                           
  6867                           ; BSR set to: 0
  6868   0044FE  0E3A               	movlw	58
  6869   004500  61A2               	cpfslt	isdigit@c& (0+255),b
  6870   004502  D005               	goto	l7579
  6871                           
  6872                           ; BSR set to: 0
  6873   004504  0E2F               	movlw	47
  6874   004506  65A2               	cpfsgt	isdigit@c& (0+255),b
  6875   004508  D002               	goto	l7579
  6876                           
  6877                           ; BSR set to: 0
  6878   00450A  0E01               	movlw	1
  6879   00450C  6FA1               	movwf	_isdigit$1506& (0+255),b
  6880   00450E                     l7579:
  6881                           
  6882                           ; BSR set to: 0
  6883   00450E  C0A1  F0A0         	movff	_isdigit$1506,??_isdigit
  6884   004512  31A0               	rrcf	??_isdigit& (0+255),w,b
  6885                           
  6886                           ; BSR set to: 0
  6887   004514  0012               	return		;funcret
  6888   004516                     __end_of_isdigit:
  6889                           	callstack 0
  6890                           
  6891 ;; *************** function _fround *****************
  6892 ;; Defined at:
  6893 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  prec            1    wreg     unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  prec            1   72[BANK0 ] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  3   61[BANK0 ] unsigned char 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 3F/1
  6904 ;;		On exit  : 3F/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6907 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;Total ram usage:       12 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 11
  6914 ;; This function calls:
  6915 ;;		___ftmul
  6916 ;;		___lbdiv
  6917 ;;		___lbmod
  6918 ;; This function is called by:
  6919 ;;		_sprintf
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text23
  6924   0021EE                     __ptext23:
  6925                           	callstack 0
  6926   0021EE                     _fround:
  6927                           	callstack 16
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;incstack = 0
  6931                           ;fround@prec stored from wreg
  6932   0021EE  0100               	movlb	0	; () banked
  6933   0021F0  6FC8               	movwf	fround@prec& (0+255),b
  6934                           
  6935                           ;doprnt.c: 421: if(prec>=110)
  6936   0021F2  0E6D               	movlw	109
  6937   0021F4  0100               	movlb	0	; () banked
  6938   0021F6  65C8               	cpfsgt	fround@prec& (0+255),b
  6939   0021F8  D07C               	goto	l7521
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6943   0021FA  0E0A               	movlw	10
  6944   0021FC  6FA4               	movwf	___lbdiv@divisor& (0+255),b
  6945   0021FE  0E64               	movlw	100
  6946   002200  6FA0               	movwf	___lbmod@divisor& (0+255),b
  6947   002202  51C8               	movf	fround@prec& (0+255),w,b
  6948   002204  EC8F  F021         	call	___lbmod
  6949   002208  ECBF  F020         	call	___lbdiv
  6950   00220C  6FC0               	movwf	??_fround& (0+255),b
  6951   00220E  51C0               	movf	??_fround& (0+255),w,b
  6952   002210  0D03               	mullw	3
  6953   002212  0E1B               	movlw	27
  6954   002214  26F3               	addwf	243,f,c
  6955   002216  0E00               	movlw	0
  6956   002218  22F4               	addwfc	244,f,c
  6957   00221A  0EC2               	movlw	low __npowers_
  6958   00221C  24F3               	addwf	243,w,c
  6959   00221E  6EF6               	movwf	tblptrl,c
  6960   002220  0EFE               	movlw	high __npowers_
  6961   002222  20F4               	addwfc	244,w,c
  6962   002224  6EF7               	movwf	tblptrh,c
  6963   002226                     	if	0	;There are less than 3 active tblptr bytes
  6964   002226                     	endif
  6965   002226  0009               	tblrd		*+
  6966   002228  CFF5 F0B1          	movff	tablat,___ftmul@f2
  6967   00222C  0009               	tblrd		*+
  6968   00222E  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  6969   002232  000A               	tblrd		*-
  6970   002234  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  6971   002238  0E64               	movlw	100
  6972   00223A  6FA4               	movwf	___lbdiv@divisor& (0+255),b
  6973   00223C  51C8               	movf	fround@prec& (0+255),w,b
  6974   00223E  ECBF  F020         	call	___lbdiv
  6975   002242  6FC1               	movwf	(??_fround+1)& (0+255),b
  6976   002244  51C1               	movf	(??_fround+1)& (0+255),w,b
  6977   002246  0D03               	mullw	3
  6978   002248  0E36               	movlw	54
  6979   00224A  26F3               	addwf	243,f,c
  6980   00224C  0E00               	movlw	0
  6981   00224E  22F4               	addwfc	244,f,c
  6982   002250  0EC2               	movlw	low __npowers_
  6983   002252  24F3               	addwf	243,w,c
  6984   002254  6EF6               	movwf	tblptrl,c
  6985   002256  0EFE               	movlw	high __npowers_
  6986   002258  20F4               	addwfc	244,w,c
  6987   00225A  6EF7               	movwf	tblptrh,c
  6988   00225C                     	if	0	;There are less than 3 active tblptr bytes
  6989   00225C                     	endif
  6990   00225C  0009               	tblrd		*+
  6991   00225E  CFF5 F0AE          	movff	tablat,___ftmul@f1
  6992   002262  0009               	tblrd		*+
  6993   002264  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  6994   002268  000A               	tblrd		*-
  6995   00226A  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  6996   00226E  ECFE  F015         	call	___ftmul	;wreg free
  6997   002272  C0AE  F0C5         	movff	?___ftmul,_fround$1746
  6998   002276  C0AF  F0C6         	movff	?___ftmul+1,_fround$1746+1
  6999   00227A  C0B0  F0C7         	movff	?___ftmul+2,_fround$1746+2
  7000                           
  7001                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7002   00227E  0E0A               	movlw	10
  7003   002280  6FA0               	movwf	___lbmod@divisor& (0+255),b
  7004   002282  51C8               	movf	fround@prec& (0+255),w,b
  7005   002284  EC8F  F021         	call	___lbmod
  7006   002288  6FC0               	movwf	??_fround& (0+255),b
  7007   00228A  51C0               	movf	??_fround& (0+255),w,b
  7008   00228C  0D03               	mullw	3
  7009   00228E  0EC2               	movlw	low __npowers_
  7010   002290  24F3               	addwf	243,w,c
  7011   002292  6EF6               	movwf	tblptrl,c
  7012   002294  0EFE               	movlw	high __npowers_
  7013   002296  20F4               	addwfc	244,w,c
  7014   002298  6EF7               	movwf	tblptrh,c
  7015   00229A                     	if	0	;There are less than 3 active tblptr bytes
  7016   00229A                     	endif
  7017   00229A  0009               	tblrd		*+
  7018   00229C  CFF5 F0B1          	movff	tablat,___ftmul@f2
  7019   0022A0  0009               	tblrd		*+
  7020   0022A2  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  7021   0022A6  000A               	tblrd		*-
  7022   0022A8  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  7023   0022AC  C0C5  F0AE         	movff	_fround$1746,___ftmul@f1
  7024   0022B0  C0C6  F0AF         	movff	_fround$1746+1,___ftmul@f1+1
  7025   0022B4  C0C7  F0B0         	movff	_fround$1746+2,___ftmul@f1+2
  7026   0022B8  ECFE  F015         	call	___ftmul	;wreg free
  7027   0022BC  C0AE  F0C2         	movff	?___ftmul,_fround$1747
  7028   0022C0  C0AF  F0C3         	movff	?___ftmul+1,_fround$1747+1
  7029   0022C4  C0B0  F0C4         	movff	?___ftmul+2,_fround$1747+2
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7033   0022C8  C0C2  F0AE         	movff	_fround$1747,___ftmul@f1
  7034   0022CC  C0C3  F0AF         	movff	_fround$1747+1,___ftmul@f1+1
  7035   0022D0  C0C4  F0B0         	movff	_fround$1747+2,___ftmul@f1+2
  7036   0022D4  0E00               	movlw	0
  7037   0022D6  6FB1               	movwf	___ftmul@f2& (0+255),b
  7038   0022D8  0E00               	movlw	0
  7039   0022DA  6FB2               	movwf	(___ftmul@f2+1)& (0+255),b
  7040   0022DC  0E3F               	movlw	63
  7041   0022DE  6FB3               	movwf	(___ftmul@f2+2)& (0+255),b
  7042   0022E0  ECFE  F015         	call	___ftmul	;wreg free
  7043   0022E4  C0AE  F0BD         	movff	?___ftmul,?_fround
  7044   0022E8  C0AF  F0BE         	movff	?___ftmul+1,?_fround+1
  7045   0022EC  C0B0  F0BF         	movff	?___ftmul+2,?_fround+2
  7046   0022F0  0012               	return	
  7047   0022F2                     l7521:
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;doprnt.c: 423: else if(prec > 10)
  7051   0022F2  0E0A               	movlw	10
  7052   0022F4  65C8               	cpfsgt	fround@prec& (0+255),b
  7053   0022F6  D04F               	goto	l7529
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7057   0022F8  0E0A               	movlw	10
  7058   0022FA  6FA0               	movwf	___lbmod@divisor& (0+255),b
  7059   0022FC  51C8               	movf	fround@prec& (0+255),w,b
  7060   0022FE  EC8F  F021         	call	___lbmod
  7061   002302  6FC0               	movwf	??_fround& (0+255),b
  7062   002304  51C0               	movf	??_fround& (0+255),w,b
  7063   002306  0D03               	mullw	3
  7064   002308  0EC2               	movlw	low __npowers_
  7065   00230A  24F3               	addwf	243,w,c
  7066   00230C  6EF6               	movwf	tblptrl,c
  7067   00230E  0EFE               	movlw	high __npowers_
  7068   002310  20F4               	addwfc	244,w,c
  7069   002312  6EF7               	movwf	tblptrh,c
  7070   002314                     	if	0	;There are less than 3 active tblptr bytes
  7071   002314                     	endif
  7072   002314  0009               	tblrd		*+
  7073   002316  CFF5 F0B1          	movff	tablat,___ftmul@f2
  7074   00231A  0009               	tblrd		*+
  7075   00231C  CFF5 F0B2          	movff	tablat,___ftmul@f2+1
  7076   002320  000A               	tblrd		*-
  7077   002322  CFF5 F0B3          	movff	tablat,___ftmul@f2+2
  7078   002326  0E0A               	movlw	10
  7079   002328  6FA4               	movwf	___lbdiv@divisor& (0+255),b
  7080   00232A  51C8               	movf	fround@prec& (0+255),w,b
  7081   00232C  ECBF  F020         	call	___lbdiv
  7082   002330  6FC1               	movwf	(??_fround+1)& (0+255),b
  7083   002332  51C1               	movf	(??_fround+1)& (0+255),w,b
  7084   002334  0D03               	mullw	3
  7085   002336  0E1B               	movlw	27
  7086   002338  26F3               	addwf	243,f,c
  7087   00233A  0E00               	movlw	0
  7088   00233C  22F4               	addwfc	244,f,c
  7089   00233E  0EC2               	movlw	low __npowers_
  7090   002340  24F3               	addwf	243,w,c
  7091   002342  6EF6               	movwf	tblptrl,c
  7092   002344  0EFE               	movlw	high __npowers_
  7093   002346  20F4               	addwfc	244,w,c
  7094   002348  6EF7               	movwf	tblptrh,c
  7095   00234A                     	if	0	;There are less than 3 active tblptr bytes
  7096   00234A                     	endif
  7097   00234A  0009               	tblrd		*+
  7098   00234C  CFF5 F0AE          	movff	tablat,___ftmul@f1
  7099   002350  0009               	tblrd		*+
  7100   002352  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  7101   002356  000A               	tblrd		*-
  7102   002358  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  7103   00235C  ECFE  F015         	call	___ftmul	;wreg free
  7104   002360  C0AE  F0C5         	movff	?___ftmul,_fround$1746
  7105   002364  C0AF  F0C6         	movff	?___ftmul+1,_fround$1746+1
  7106   002368  C0B0  F0C7         	movff	?___ftmul+2,_fround$1746+2
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7110   00236C  C0C5  F0AE         	movff	_fround$1746,___ftmul@f1
  7111   002370  C0C6  F0AF         	movff	_fround$1746+1,___ftmul@f1+1
  7112   002374  C0C7  F0B0         	movff	_fround$1746+2,___ftmul@f1+2
  7113   002378  0E00               	movlw	0
  7114   00237A  6FB1               	movwf	___ftmul@f2& (0+255),b
  7115   00237C  0E00               	movlw	0
  7116   00237E  6FB2               	movwf	(___ftmul@f2+1)& (0+255),b
  7117   002380  0E3F               	movlw	63
  7118   002382  6FB3               	movwf	(___ftmul@f2+2)& (0+255),b
  7119   002384  ECFE  F015         	call	___ftmul	;wreg free
  7120   002388  C0AE  F0BD         	movff	?___ftmul,?_fround
  7121   00238C  C0AF  F0BE         	movff	?___ftmul+1,?_fround+1
  7122   002390  C0B0  F0BF         	movff	?___ftmul+2,?_fround+2
  7123   002394  0012               	return	
  7124   002396                     l7529:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7128   002396  51C8               	movf	fround@prec& (0+255),w,b
  7129   002398  0D03               	mullw	3
  7130   00239A  0EC2               	movlw	low __npowers_
  7131   00239C  24F3               	addwf	243,w,c
  7132   00239E  6EF6               	movwf	tblptrl,c
  7133   0023A0  0EFE               	movlw	high __npowers_
  7134   0023A2  20F4               	addwfc	244,w,c
  7135   0023A4  6EF7               	movwf	tblptrh,c
  7136   0023A6                     	if	0	;There are less than 3 active tblptr bytes
  7137   0023A6                     	endif
  7138   0023A6  0009               	tblrd		*+
  7139   0023A8  CFF5 F0AE          	movff	tablat,___ftmul@f1
  7140   0023AC  0009               	tblrd		*+
  7141   0023AE  CFF5 F0AF          	movff	tablat,___ftmul@f1+1
  7142   0023B2  000A               	tblrd		*-
  7143   0023B4  CFF5 F0B0          	movff	tablat,___ftmul@f1+2
  7144   0023B8  0E00               	movlw	0
  7145   0023BA  6FB1               	movwf	___ftmul@f2& (0+255),b
  7146   0023BC  0E00               	movlw	0
  7147   0023BE  6FB2               	movwf	(___ftmul@f2+1)& (0+255),b
  7148   0023C0  0E3F               	movlw	63
  7149   0023C2  6FB3               	movwf	(___ftmul@f2+2)& (0+255),b
  7150   0023C4  ECFE  F015         	call	___ftmul	;wreg free
  7151   0023C8  C0AE  F0BD         	movff	?___ftmul,?_fround
  7152   0023CC  C0AF  F0BE         	movff	?___ftmul+1,?_fround+1
  7153   0023D0  C0B0  F0BF         	movff	?___ftmul+2,?_fround+2
  7154                           
  7155                           ; BSR set to: 0
  7156   0023D4  0012               	return		;funcret
  7157   0023D6                     __end_of_fround:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function ___lbmod *****************
  7161 ;; Defined at:
  7162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  dividend        1    wreg     unsigned char 
  7165 ;;  divisor         1   32[BANK0 ] unsigned char 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  dividend        1   33[BANK0 ] unsigned char 
  7168 ;;  rem             1   35[BANK0 ] unsigned char 
  7169 ;;  counter         1   34[BANK0 ] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      unsigned char 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 3F/0
  7176 ;;		On exit  : 3F/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7179 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;Total ram usage:        4 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 9
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_fround
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text24
  7194   00431E                     __ptext24:
  7195                           	callstack 0
  7196   00431E                     ___lbmod:
  7197                           	callstack 17
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;incstack = 0
  7201                           ;___lbmod@dividend stored from wreg
  7202   00431E  6FA1               	movwf	___lbmod@dividend& (0+255),b
  7203   004320  0E08               	movlw	8
  7204   004322  0100               	movlb	0	; () banked
  7205   004324  6FA2               	movwf	___lbmod@counter& (0+255),b
  7206   004326  0E00               	movlw	0
  7207   004328  6FA3               	movwf	___lbmod@rem& (0+255),b
  7208   00432A                     l7239:
  7209                           
  7210                           ; BSR set to: 0
  7211   00432A  90D8               	bcf	status,0,c
  7212   00432C  35A1               	rlcf	___lbmod@dividend& (0+255),w,b
  7213   00432E  35A3               	rlcf	___lbmod@rem& (0+255),w,b
  7214   004330  6FA3               	movwf	___lbmod@rem& (0+255),b
  7215                           
  7216                           ; BSR set to: 0
  7217   004332  90D8               	bcf	status,0,c
  7218   004334  37A1               	rlcf	___lbmod@dividend& (0+255),f,b
  7219                           
  7220                           ; BSR set to: 0
  7221   004336  51A0               	movf	___lbmod@divisor& (0+255),w,b
  7222   004338  5DA3               	subwf	___lbmod@rem& (0+255),w,b
  7223   00433A  A0D8               	btfss	status,0,c
  7224   00433C  D002               	goto	l7247
  7225                           
  7226                           ; BSR set to: 0
  7227   00433E  51A0               	movf	___lbmod@divisor& (0+255),w,b
  7228   004340  5FA3               	subwf	___lbmod@rem& (0+255),f,b
  7229   004342                     l7247:
  7230                           
  7231                           ; BSR set to: 0
  7232   004342  2FA2               	decfsz	___lbmod@counter& (0+255),f,b
  7233   004344  D7F2               	goto	l7239
  7234                           
  7235                           ; BSR set to: 0
  7236   004346  51A3               	movf	___lbmod@rem& (0+255),w,b
  7237                           
  7238                           ; BSR set to: 0
  7239   004348  0012               	return		;funcret
  7240   00434A                     __end_of___lbmod:
  7241                           	callstack 0
  7242                           
  7243 ;; *************** function ___lbdiv *****************
  7244 ;; Defined at:
  7245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  dividend        1    wreg     unsigned char 
  7248 ;;  divisor         1   36[BANK0 ] unsigned char 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  dividend        1   37[BANK0 ] unsigned char 
  7251 ;;  quotient        1   39[BANK0 ] unsigned char 
  7252 ;;  counter         1   38[BANK0 ] unsigned char 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      unsigned char 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 3F/0
  7259 ;;		On exit  : 3F/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7262 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;Total ram usage:        4 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 9
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_fround
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text25
  7277   00417E                     __ptext25:
  7278                           	callstack 0
  7279   00417E                     ___lbdiv:
  7280                           	callstack 17
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;incstack = 0
  7284                           ;___lbdiv@dividend stored from wreg
  7285   00417E  6FA5               	movwf	___lbdiv@dividend& (0+255),b
  7286   004180  0E00               	movlw	0
  7287   004182  0100               	movlb	0	; () banked
  7288   004184  6FA7               	movwf	___lbdiv@quotient& (0+255),b
  7289                           
  7290                           ; BSR set to: 0
  7291   004186  51A4               	movf	___lbdiv@divisor& (0+255),w,b
  7292   004188  B4D8               	btfsc	status,2,c
  7293   00418A  D015               	goto	l7233
  7294                           
  7295                           ; BSR set to: 0
  7296   00418C  0E01               	movlw	1
  7297   00418E  6FA6               	movwf	___lbdiv@counter& (0+255),b
  7298   004190  D003               	goto	l7221
  7299   004192                     l7217:
  7300                           
  7301                           ; BSR set to: 0
  7302   004192  90D8               	bcf	status,0,c
  7303   004194  37A4               	rlcf	___lbdiv@divisor& (0+255),f,b
  7304                           
  7305                           ; BSR set to: 0
  7306   004196  2BA6               	incf	___lbdiv@counter& (0+255),f,b
  7307   004198                     l7221:
  7308                           
  7309                           ; BSR set to: 0
  7310   004198  AFA4               	btfss	___lbdiv@divisor& (0+255),7,b
  7311   00419A  D7FB               	goto	l7217
  7312   00419C                     u8610:
  7313                           
  7314                           ; BSR set to: 0
  7315   00419C  90D8               	bcf	status,0,c
  7316   00419E  37A7               	rlcf	___lbdiv@quotient& (0+255),f,b
  7317   0041A0  51A4               	movf	___lbdiv@divisor& (0+255),w,b
  7318   0041A2  5DA5               	subwf	___lbdiv@dividend& (0+255),w,b
  7319   0041A4  A0D8               	btfss	status,0,c
  7320   0041A6  D003               	goto	l7229
  7321                           
  7322                           ; BSR set to: 0
  7323   0041A8  51A4               	movf	___lbdiv@divisor& (0+255),w,b
  7324   0041AA  5FA5               	subwf	___lbdiv@dividend& (0+255),f,b
  7325                           
  7326                           ; BSR set to: 0
  7327   0041AC  81A7               	bsf	___lbdiv@quotient& (0+255),0,b
  7328   0041AE                     l7229:
  7329                           
  7330                           ; BSR set to: 0
  7331   0041AE  90D8               	bcf	status,0,c
  7332   0041B0  33A4               	rrcf	___lbdiv@divisor& (0+255),f,b
  7333                           
  7334                           ; BSR set to: 0
  7335   0041B2  2FA6               	decfsz	___lbdiv@counter& (0+255),f,b
  7336   0041B4  D7F3               	goto	u8610
  7337   0041B6                     l7233:
  7338                           
  7339                           ; BSR set to: 0
  7340   0041B6  51A7               	movf	___lbdiv@quotient& (0+255),w,b
  7341                           
  7342                           ; BSR set to: 0
  7343   0041B8  0012               	return		;funcret
  7344   0041BA                     __end_of___lbdiv:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function ___ftmul *****************
  7348 ;; Defined at:
  7349 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  f1              3   46[BANK0 ] float 
  7352 ;;  f2              3   49[BANK0 ] float 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  f3_as_produc    3   56[BANK0 ] unsigned um
  7355 ;;  sign            1   60[BANK0 ] unsigned char 
  7356 ;;  cntr            1   59[BANK0 ] unsigned char 
  7357 ;;  exp             1   55[BANK0 ] unsigned char 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  3   46[BANK0 ] float 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 3F/0
  7364 ;;		On exit  : 3F/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;Total ram usage:       15 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 10
  7374 ;; This function calls:
  7375 ;;		___ftpack
  7376 ;; This function is called by:
  7377 ;;		_main
  7378 ;;		_fround
  7379 ;;		_scale
  7380 ;;		_sprintf
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text26
  7385   002BFC                     __ptext26:
  7386                           	callstack 0
  7387   002BFC                     ___ftmul:
  7388                           	callstack 16
  7389                           
  7390                           ; BSR set to: 0
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;incstack = 0
  7394   002BFC  C0B0  F0B4         	movff	___ftmul@f1+2,??___ftmul
  7395   002C00  6BB5               	clrf	(??___ftmul+1)& (0+255),b
  7396   002C02  6BB6               	clrf	(??___ftmul+2)& (0+255),b
  7397   002C04  35AF               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7398   002C06  37B4               	rlcf	??___ftmul& (0+255),f,b
  7399   002C08  E301               	bnc	u8421
  7400   002C0A  81B5               	bsf	(??___ftmul+1)& (0+255),0,b
  7401   002C0C                     u8421:
  7402   002C0C  51B4               	movf	??___ftmul& (0+255),w,b
  7403   002C0E  6FB7               	movwf	___ftmul@exp& (0+255),b
  7404   002C10  51B7               	movf	___ftmul@exp& (0+255),w,b
  7405   002C12  A4D8               	btfss	status,2,c
  7406   002C14  D007               	goto	l7089
  7407                           
  7408                           ; BSR set to: 0
  7409   002C16  0E00               	movlw	0
  7410   002C18  6FAE               	movwf	?___ftmul& (0+255),b
  7411   002C1A  0E00               	movlw	0
  7412   002C1C  6FAF               	movwf	(?___ftmul+1)& (0+255),b
  7413   002C1E  0E00               	movlw	0
  7414   002C20  6FB0               	movwf	(?___ftmul+2)& (0+255),b
  7415   002C22  0012               	return	
  7416   002C24                     l7089:
  7417                           
  7418                           ; BSR set to: 0
  7419   002C24  C0B3  F0B4         	movff	___ftmul@f2+2,??___ftmul
  7420   002C28  6BB5               	clrf	(??___ftmul+1)& (0+255),b
  7421   002C2A  6BB6               	clrf	(??___ftmul+2)& (0+255),b
  7422   002C2C  35B2               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7423   002C2E  37B4               	rlcf	??___ftmul& (0+255),f,b
  7424   002C30  E301               	bnc	u8441
  7425   002C32  81B5               	bsf	(??___ftmul+1)& (0+255),0,b
  7426   002C34                     u8441:
  7427   002C34  51B4               	movf	??___ftmul& (0+255),w,b
  7428   002C36  6FBC               	movwf	___ftmul@sign& (0+255),b
  7429   002C38  51BC               	movf	___ftmul@sign& (0+255),w,b
  7430   002C3A  A4D8               	btfss	status,2,c
  7431   002C3C  D007               	goto	l7095
  7432                           
  7433                           ; BSR set to: 0
  7434   002C3E  0E00               	movlw	0
  7435   002C40  6FAE               	movwf	?___ftmul& (0+255),b
  7436   002C42  0E00               	movlw	0
  7437   002C44  6FAF               	movwf	(?___ftmul+1)& (0+255),b
  7438   002C46  0E00               	movlw	0
  7439   002C48  6FB0               	movwf	(?___ftmul+2)& (0+255),b
  7440   002C4A  0012               	return	
  7441   002C4C                     l7095:
  7442                           
  7443                           ; BSR set to: 0
  7444   002C4C  51BC               	movf	___ftmul@sign& (0+255),w,b
  7445   002C4E  0F7B               	addlw	123
  7446   002C50  27B7               	addwf	___ftmul@exp& (0+255),f,b
  7447                           
  7448                           ; BSR set to: 0
  7449   002C52  C0B0  F0BC         	movff	___ftmul@f1+2,___ftmul@sign
  7450   002C56  51B3               	movf	(___ftmul@f2+2)& (0+255),w,b
  7451   002C58  1BBC               	xorwf	___ftmul@sign& (0+255),f,b
  7452   002C5A  0E80               	movlw	128
  7453   002C5C  17BC               	andwf	___ftmul@sign& (0+255),f,b
  7454                           
  7455                           ; BSR set to: 0
  7456   002C5E  8FAF               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7457                           
  7458                           ; BSR set to: 0
  7459   002C60  8FB2               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7460                           
  7461                           ; BSR set to: 0
  7462   002C62  0EFF               	movlw	255
  7463   002C64  17B1               	andwf	___ftmul@f2& (0+255),f,b
  7464   002C66  0EFF               	movlw	255
  7465   002C68  17B2               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7466   002C6A  0E00               	movlw	0
  7467   002C6C  17B3               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7468                           
  7469                           ; BSR set to: 0
  7470   002C6E  0E00               	movlw	0
  7471   002C70  6FB8               	movwf	___ftmul@f3_as_product& (0+255),b
  7472   002C72  0E00               	movlw	0
  7473   002C74  6FB9               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7474   002C76  0E00               	movlw	0
  7475   002C78  6FBA               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7476                           
  7477                           ; BSR set to: 0
  7478   002C7A  0E07               	movlw	7
  7479   002C7C  6FBB               	movwf	___ftmul@cntr& (0+255),b
  7480   002C7E                     l7109:
  7481                           
  7482                           ; BSR set to: 0
  7483   002C7E  A1AE               	btfss	___ftmul@f1& (0+255),0,b
  7484   002C80  D006               	goto	l7113
  7485                           
  7486                           ; BSR set to: 0
  7487   002C82  51B1               	movf	___ftmul@f2& (0+255),w,b
  7488   002C84  27B8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7489   002C86  51B2               	movf	(___ftmul@f2+1)& (0+255),w,b
  7490   002C88  23B9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7491   002C8A  51B3               	movf	(___ftmul@f2+2)& (0+255),w,b
  7492   002C8C  23BA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7493   002C8E                     l7113:
  7494                           
  7495                           ; BSR set to: 0
  7496   002C8E  90D8               	bcf	status,0,c
  7497   002C90  33B0               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7498   002C92  33AF               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7499   002C94  33AE               	rrcf	___ftmul@f1& (0+255),f,b
  7500   002C96  90D8               	bcf	status,0,c
  7501   002C98  37B1               	rlcf	___ftmul@f2& (0+255),f,b
  7502   002C9A  37B2               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7503   002C9C  37B3               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7504                           
  7505                           ; BSR set to: 0
  7506   002C9E  2FBB               	decfsz	___ftmul@cntr& (0+255),f,b
  7507   002CA0  D7EE               	goto	l7109
  7508                           
  7509                           ; BSR set to: 0
  7510   002CA2  0E09               	movlw	9
  7511   002CA4  6FBB               	movwf	___ftmul@cntr& (0+255),b
  7512   002CA6                     l7119:
  7513                           
  7514                           ; BSR set to: 0
  7515   002CA6  A1AE               	btfss	___ftmul@f1& (0+255),0,b
  7516   002CA8  D006               	goto	l7123
  7517                           
  7518                           ; BSR set to: 0
  7519   002CAA  51B1               	movf	___ftmul@f2& (0+255),w,b
  7520   002CAC  27B8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7521   002CAE  51B2               	movf	(___ftmul@f2+1)& (0+255),w,b
  7522   002CB0  23B9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7523   002CB2  51B3               	movf	(___ftmul@f2+2)& (0+255),w,b
  7524   002CB4  23BA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7525   002CB6                     l7123:
  7526                           
  7527                           ; BSR set to: 0
  7528   002CB6  90D8               	bcf	status,0,c
  7529   002CB8  33B0               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7530   002CBA  33AF               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7531   002CBC  33AE               	rrcf	___ftmul@f1& (0+255),f,b
  7532   002CBE  90D8               	bcf	status,0,c
  7533   002CC0  33BA               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7534   002CC2  33B9               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7535   002CC4  33B8               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7536                           
  7537                           ; BSR set to: 0
  7538   002CC6  2FBB               	decfsz	___ftmul@cntr& (0+255),f,b
  7539   002CC8  D7EE               	goto	l7119
  7540                           
  7541                           ; BSR set to: 0
  7542   002CCA  C0B8  F0A0         	movff	___ftmul@f3_as_product,___ftpack@arg
  7543   002CCE  C0B9  F0A1         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7544   002CD2  C0BA  F0A2         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7545   002CD6  C0B7  F0A3         	movff	___ftmul@exp,___ftpack@exp
  7546   002CDA  C0BC  F0A4         	movff	___ftmul@sign,___ftpack@sign
  7547   002CDE  ECB3  F018         	call	___ftpack	;wreg free
  7548   002CE2  C0A0  F0AE         	movff	?___ftpack,?___ftmul
  7549   002CE6  C0A1  F0AF         	movff	?___ftpack+1,?___ftmul+1
  7550   002CEA  C0A2  F0B0         	movff	?___ftpack+2,?___ftmul+2
  7551                           
  7552                           ; BSR set to: 0
  7553   002CEE  0012               	return		;funcret
  7554   002CF0                     __end_of___ftmul:
  7555                           	callstack 0
  7556                           
  7557 ;; *************** function __tdiv_to_l_ *****************
  7558 ;; Defined at:
  7559 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  f1              3   32[BANK0 ] float 
  7562 ;;  f2              3   35[BANK0 ] float 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  quot            4   41[BANK0 ] unsigned long 
  7565 ;;  exp1            1   46[BANK0 ] unsigned char 
  7566 ;;  cntr            1   45[BANK0 ] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  4   32[BANK0 ] unsigned long 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0
  7571 ;; Tracked objects:
  7572 ;;		On entry : 3F/0
  7573 ;;		On exit  : 3F/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7576 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;Total ram usage:       15 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 9
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_sprintf
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text27
  7591   00290A                     __ptext27:
  7592                           	callstack 0
  7593   00290A                     __tdiv_to_l_:
  7594                           	callstack 18
  7595                           
  7596                           ; BSR set to: 0
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;incstack = 0
  7600   00290A  C0A2  F0A6         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7601   00290E  6BA7               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7602   002910  6BA8               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7603   002912  35A1               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7604   002914  37A6               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7605   002916  E301               	bnc	u9161
  7606   002918  81A7               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7607   00291A                     u9161:
  7608   00291A  51A6               	movf	??__tdiv_to_l_& (0+255),w,b
  7609   00291C  6FAE               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7610   00291E  51AE               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7611   002920  A4D8               	btfss	status,2,c
  7612   002922  D009               	goto	l7589
  7613   002924                     u9170:
  7614                           
  7615                           ; BSR set to: 0
  7616   002924  0E00               	movlw	0
  7617   002926  6FA0               	movwf	?__tdiv_to_l_& (0+255),b
  7618   002928  0E00               	movlw	0
  7619   00292A  6FA1               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7620   00292C  0E00               	movlw	0
  7621   00292E  6FA2               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7622   002930  0E00               	movlw	0
  7623   002932  6FA3               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7624   002934  0012               	return	
  7625   002936                     l7589:
  7626                           
  7627                           ; BSR set to: 0
  7628   002936  C0A5  F0A6         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7629   00293A  6BA7               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7630   00293C  6BA8               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7631   00293E  35A4               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7632   002940  37A6               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7633   002942  E301               	bnc	u9181
  7634   002944  81A7               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7635   002946                     u9181:
  7636   002946  51A6               	movf	??__tdiv_to_l_& (0+255),w,b
  7637   002948  6FAD               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7638   00294A  51AD               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7639   00294C  B4D8               	btfsc	status,2,c
  7640   00294E  D7EA               	goto	u9170
  7641                           
  7642                           ; BSR set to: 0
  7643   002950  8FA1               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7644                           
  7645                           ; BSR set to: 0
  7646   002952  0EFF               	movlw	255
  7647   002954  17A0               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7648   002956  0EFF               	movlw	255
  7649   002958  17A1               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7650   00295A  0E00               	movlw	0
  7651   00295C  17A2               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7652   00295E  8FA4               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7653                           
  7654                           ; BSR set to: 0
  7655   002960  0EFF               	movlw	255
  7656   002962  17A3               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7657   002964  0EFF               	movlw	255
  7658   002966  17A4               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7659   002968  0E00               	movlw	0
  7660   00296A  17A5               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7661                           
  7662                           ; BSR set to: 0
  7663   00296C  0E00               	movlw	0
  7664   00296E  6FA9               	movwf	__tdiv_to_l_@quot& (0+255),b
  7665   002970  0E00               	movlw	0
  7666   002972  6FAA               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7667   002974  0E00               	movlw	0
  7668   002976  6FAB               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7669   002978  0E00               	movlw	0
  7670   00297A  6FAC               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7671                           
  7672                           ; BSR set to: 0
  7673   00297C  0E7F               	movlw	127
  7674   00297E  5FAE               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7675                           
  7676                           ; BSR set to: 0
  7677   002980  51AD               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7678   002982  0F98               	addlw	152
  7679   002984  5FAE               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7680                           
  7681                           ; BSR set to: 0
  7682   002986  0E18               	movlw	24
  7683   002988  6FAD               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7684   00298A                     l846:
  7685                           
  7686                           ; BSR set to: 0
  7687   00298A  90D8               	bcf	status,0,c
  7688   00298C  37A9               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7689   00298E  37AA               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7690   002990  37AB               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7691   002992  37AC               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694   002994  51A3               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7695   002996  5DA0               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7696   002998  51A4               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7697   00299A  59A1               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7698   00299C  51A5               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7699   00299E  59A2               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7700   0029A0  A0D8               	btfss	status,0,c
  7701   0029A2  D007               	goto	l847
  7702                           
  7703                           ; BSR set to: 0
  7704   0029A4  51A3               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7705   0029A6  5FA0               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7706   0029A8  51A4               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7707   0029AA  5BA1               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7708   0029AC  51A5               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7709   0029AE  5BA2               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7710                           
  7711                           ; BSR set to: 0
  7712   0029B0  81A9               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7713   0029B2                     l847:
  7714                           
  7715                           ; BSR set to: 0
  7716   0029B2  90D8               	bcf	status,0,c
  7717   0029B4  37A0               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7718   0029B6  37A1               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7719   0029B8  37A2               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7720                           
  7721                           ; BSR set to: 0
  7722   0029BA  2FAD               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7723   0029BC  D7E6               	goto	l846
  7724                           
  7725                           ; BSR set to: 0
  7726   0029BE  AFAE               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7727   0029C0  D00D               	goto	l7629
  7728                           
  7729                           ; BSR set to: 0
  7730   0029C2  51AE               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7731   0029C4  0A80               	xorlw	128
  7732   0029C6  0F97               	addlw	151
  7733   0029C8  A0D8               	btfss	status,0,c
  7734   0029CA  D7AC               	goto	u9170
  7735   0029CC                     l7625:
  7736                           
  7737                           ; BSR set to: 0
  7738   0029CC  90D8               	bcf	status,0,c
  7739   0029CE  33AC               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7740   0029D0  33AB               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7741   0029D2  33AA               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7742   0029D4  33A9               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7743                           
  7744                           ; BSR set to: 0
  7745   0029D6  3FAE               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7746   0029D8  D7F9               	goto	l7625
  7747   0029DA  D00D               	goto	u9240
  7748   0029DC                     l7629:
  7749                           
  7750                           ; BSR set to: 0
  7751   0029DC  0E17               	movlw	23
  7752   0029DE  65AE               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7753   0029E0  D007               	goto	l7637
  7754   0029E2  D7A0               	goto	u9170
  7755   0029E4                     l7635:
  7756                           
  7757                           ; BSR set to: 0
  7758   0029E4  90D8               	bcf	status,0,c
  7759   0029E6  37A9               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7760   0029E8  37AA               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7761   0029EA  37AB               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7762   0029EC  37AC               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7763   0029EE  07AE               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7764   0029F0                     l7637:
  7765                           
  7766                           ; BSR set to: 0
  7767   0029F0  51AE               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7768   0029F2  A4D8               	btfss	status,2,c
  7769   0029F4  D7F7               	goto	l7635
  7770   0029F6                     u9240:
  7771                           
  7772                           ; BSR set to: 0
  7773   0029F6  C0A9  F0A0         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7774   0029FA  C0AA  F0A1         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7775   0029FE  C0AB  F0A2         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7776   002A02  C0AC  F0A3         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7777                           
  7778                           ; BSR set to: 0
  7779   002A06  0012               	return		;funcret
  7780   002A08                     __end_of__tdiv_to_l_:
  7781                           	callstack 0
  7782                           
  7783 ;; *************** function __div_to_l_ *****************
  7784 ;; Defined at:
  7785 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  f1              3   32[BANK0 ] unsigned long 
  7788 ;;  f2              3   35[BANK0 ] unsigned long 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  quot            4   38[BANK0 ] unsigned long 
  7791 ;;  exp1            1   43[BANK0 ] unsigned char 
  7792 ;;  cntr            1   42[BANK0 ] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  4   32[BANK0 ] unsigned long 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 3F/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7802 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;Total ram usage:       12 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 9
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_sprintf
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text28
  7817   002B06                     __ptext28:
  7818                           	callstack 0
  7819   002B06                     __div_to_l_:
  7820                           	callstack 18
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;incstack = 0
  7824   002B06  0100               	movlb	0	; () banked
  7825   002B08  35A2               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7826   002B0A  35A3               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7827   002B0C  6FAB               	movwf	__div_to_l_@exp1& (0+255),b
  7828   002B0E  51AB               	movf	__div_to_l_@exp1& (0+255),w,b
  7829   002B10  A4D8               	btfss	status,2,c
  7830   002B12  D009               	goto	l7645
  7831   002B14                     u9250:
  7832                           
  7833                           ; BSR set to: 0
  7834   002B14  0E00               	movlw	0
  7835   002B16  6FA0               	movwf	?__div_to_l_& (0+255),b
  7836   002B18  0E00               	movlw	0
  7837   002B1A  6FA1               	movwf	(?__div_to_l_+1)& (0+255),b
  7838   002B1C  0E00               	movlw	0
  7839   002B1E  6FA2               	movwf	(?__div_to_l_+2)& (0+255),b
  7840   002B20  0E00               	movlw	0
  7841   002B22  6FA3               	movwf	(?__div_to_l_+3)& (0+255),b
  7842   002B24  0012               	return	
  7843   002B26                     l7645:
  7844                           
  7845                           ; BSR set to: 0
  7846   002B26  35A5               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7847   002B28  35A6               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7848   002B2A  6FAA               	movwf	__div_to_l_@cntr& (0+255),b
  7849   002B2C  51AA               	movf	__div_to_l_@cntr& (0+255),w,b
  7850   002B2E  B4D8               	btfsc	status,2,c
  7851   002B30  D7F1               	goto	u9250
  7852                           
  7853                           ; BSR set to: 0
  7854   002B32  8FA2               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7855                           
  7856                           ; BSR set to: 0
  7857   002B34  0EFF               	movlw	255
  7858   002B36  17A0               	andwf	__div_to_l_@f1& (0+255),f,b
  7859   002B38  0EFF               	movlw	255
  7860   002B3A  17A1               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7861   002B3C  0EFF               	movlw	255
  7862   002B3E  17A2               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7863   002B40  0E00               	movlw	0
  7864   002B42  17A3               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7865                           
  7866                           ; BSR set to: 0
  7867   002B44  8FA5               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7868   002B46  0EFF               	movlw	255
  7869   002B48  17A3               	andwf	__div_to_l_@f2& (0+255),f,b
  7870   002B4A  0EFF               	movlw	255
  7871   002B4C  17A4               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7872   002B4E  0EFF               	movlw	255
  7873   002B50  17A5               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7874   002B52  0E00               	movlw	0
  7875   002B54  17A6               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7876                           
  7877                           ; BSR set to: 0
  7878   002B56  0E00               	movlw	0
  7879   002B58  6FA6               	movwf	__div_to_l_@quot& (0+255),b
  7880   002B5A  0E00               	movlw	0
  7881   002B5C  6FA7               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7882   002B5E  0E00               	movlw	0
  7883   002B60  6FA8               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7884   002B62  0E00               	movlw	0
  7885   002B64  6FA9               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7886                           
  7887                           ; BSR set to: 0
  7888   002B66  0E7F               	movlw	127
  7889   002B68  5FAB               	subwf	__div_to_l_@exp1& (0+255),f,b
  7890                           
  7891                           ; BSR set to: 0
  7892   002B6A  51AA               	movf	__div_to_l_@cntr& (0+255),w,b
  7893   002B6C  0FA0               	addlw	160
  7894   002B6E  5FAB               	subwf	__div_to_l_@exp1& (0+255),f,b
  7895                           
  7896                           ; BSR set to: 0
  7897   002B70  0E20               	movlw	32
  7898   002B72  6FAA               	movwf	__div_to_l_@cntr& (0+255),b
  7899   002B74                     l7665:
  7900                           
  7901                           ; BSR set to: 0
  7902   002B74  90D8               	bcf	status,0,c
  7903   002B76  37A6               	rlcf	__div_to_l_@quot& (0+255),f,b
  7904   002B78  37A7               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7905   002B7A  37A8               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7906   002B7C  37A9               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7907                           
  7908                           ; BSR set to: 0
  7909   002B7E  51A3               	movf	__div_to_l_@f2& (0+255),w,b
  7910   002B80  5DA0               	subwf	__div_to_l_@f1& (0+255),w,b
  7911   002B82  51A4               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7912   002B84  59A1               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7913   002B86  51A5               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7914   002B88  59A2               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7915   002B8A  51A6               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7916   002B8C  59A3               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7917   002B8E  A0D8               	btfss	status,0,c
  7918   002B90  D009               	goto	l7673
  7919                           
  7920                           ; BSR set to: 0
  7921   002B92  51A3               	movf	__div_to_l_@f2& (0+255),w,b
  7922   002B94  5FA0               	subwf	__div_to_l_@f1& (0+255),f,b
  7923   002B96  51A4               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7924   002B98  5BA1               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7925   002B9A  51A5               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7926   002B9C  5BA2               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7927   002B9E  51A6               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7928   002BA0  5BA3               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7929                           
  7930                           ; BSR set to: 0
  7931   002BA2  81A6               	bsf	__div_to_l_@quot& (0+255),0,b
  7932   002BA4                     l7673:
  7933                           
  7934                           ; BSR set to: 0
  7935   002BA4  90D8               	bcf	status,0,c
  7936   002BA6  37A0               	rlcf	__div_to_l_@f1& (0+255),f,b
  7937   002BA8  37A1               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7938   002BAA  37A2               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7939   002BAC  37A3               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7940                           
  7941                           ; BSR set to: 0
  7942   002BAE  2FAA               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7943   002BB0  D7E1               	goto	l7665
  7944                           
  7945                           ; BSR set to: 0
  7946   002BB2  AFAB               	btfss	__div_to_l_@exp1& (0+255),7,b
  7947   002BB4  D00D               	goto	l7689
  7948                           
  7949                           ; BSR set to: 0
  7950   002BB6  51AB               	movf	__div_to_l_@exp1& (0+255),w,b
  7951   002BB8  0A80               	xorlw	128
  7952   002BBA  0F9F               	addlw	159
  7953   002BBC  A0D8               	btfss	status,0,c
  7954   002BBE  D7AA               	goto	u9250
  7955   002BC0                     l7685:
  7956                           
  7957                           ; BSR set to: 0
  7958   002BC0  90D8               	bcf	status,0,c
  7959   002BC2  33A9               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7960   002BC4  33A8               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7961   002BC6  33A7               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7962   002BC8  33A6               	rrcf	__div_to_l_@quot& (0+255),f,b
  7963                           
  7964                           ; BSR set to: 0
  7965   002BCA  3FAB               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7966   002BCC  D7F9               	goto	l7685
  7967   002BCE  D00D               	goto	u9310
  7968   002BD0                     l7689:
  7969                           
  7970                           ; BSR set to: 0
  7971   002BD0  0E1F               	movlw	31
  7972   002BD2  65AB               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7973   002BD4  D007               	goto	l7697
  7974   002BD6  D79E               	goto	u9250
  7975   002BD8                     l7695:
  7976                           
  7977                           ; BSR set to: 0
  7978   002BD8  90D8               	bcf	status,0,c
  7979   002BDA  37A6               	rlcf	__div_to_l_@quot& (0+255),f,b
  7980   002BDC  37A7               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7981   002BDE  37A8               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7982   002BE0  37A9               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7983   002BE2  07AB               	decf	__div_to_l_@exp1& (0+255),f,b
  7984   002BE4                     l7697:
  7985                           
  7986                           ; BSR set to: 0
  7987   002BE4  51AB               	movf	__div_to_l_@exp1& (0+255),w,b
  7988   002BE6  A4D8               	btfss	status,2,c
  7989   002BE8  D7F7               	goto	l7695
  7990   002BEA                     u9310:
  7991                           
  7992                           ; BSR set to: 0
  7993   002BEA  C0A6  F0A0         	movff	__div_to_l_@quot,?__div_to_l_
  7994   002BEE  C0A7  F0A1         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7995   002BF2  C0A8  F0A2         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7996   002BF6  C0A9  F0A3         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7997                           
  7998                           ; BSR set to: 0
  7999   002BFA  0012               	return		;funcret
  8000   002BFC                     __end_of__div_to_l_:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function ___wmul *****************
  8004 ;; Defined at:
  8005 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  multiplier      2   32[BANK0 ] unsigned int 
  8008 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  product         2   36[BANK0 ] unsigned int 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  2   32[BANK0 ] unsigned int 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0, prodl, prodh
  8015 ;; Tracked objects:
  8016 ;;		On entry : 3F/0
  8017 ;;		On exit  : 3F/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;Total ram usage:        6 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; Hardware stack levels required when called: 9
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_read_adc_voltage
  8031 ;;		_sprintf
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text29
  8036   0043C8                     __ptext29:
  8037                           	callstack 0
  8038   0043C8                     ___wmul:
  8039                           	callstack 18
  8040                           
  8041                           ; BSR set to: 0
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;incstack = 0
  8045   0043C8  51A0               	movf	___wmul@multiplier& (0+255),w,b
  8046   0043CA  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  8047   0043CC  CFF3 F0A4          	movff	prodl,___wmul@product
  8048   0043D0  CFF4 F0A5          	movff	prodh,___wmul@product+1
  8049   0043D4  51A0               	movf	___wmul@multiplier& (0+255),w,b
  8050   0043D6  03A3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8051   0043D8  50F3               	movf	243,w,c
  8052   0043DA  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  8053   0043DC  51A1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8054   0043DE  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  8055   0043E0  50F3               	movf	243,w,c
  8056   0043E2  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  8057                           
  8058                           ; BSR set to: 0
  8059   0043E4  C0A4  F0A0         	movff	___wmul@product,?___wmul
  8060   0043E8  C0A5  F0A1         	movff	___wmul@product+1,?___wmul+1
  8061                           
  8062                           ; BSR set to: 0
  8063   0043EC  0012               	return		;funcret
  8064   0043EE                     __end_of___wmul:
  8065                           	callstack 0
  8066                           
  8067 ;; *************** function ___lltoft *****************
  8068 ;; Defined at:
  8069 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  c               4   40[BANK0 ] unsigned long 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  exp             1   48[BANK0 ] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  3   40[BANK0 ] float 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2, status,0, cstack
  8078 ;; Tracked objects:
  8079 ;;		On entry : 3F/0
  8080 ;;		On exit  : 3F/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;Total ram usage:        9 bytes
  8088 ;; Hardware stack levels used: 1
  8089 ;; Hardware stack levels required when called: 10
  8090 ;; This function calls:
  8091 ;;		___ftpack
  8092 ;; This function is called by:
  8093 ;;		_sprintf
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text30
  8098   003C2A                     __ptext30:
  8099                           	callstack 0
  8100   003C2A                     ___lltoft:
  8101                           	callstack 17
  8102                           
  8103                           ; BSR set to: 0
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;incstack = 0
  8107   003C2A  0E8E               	movlw	142
  8108   003C2C  6FB0               	movwf	___lltoft@exp& (0+255),b
  8109   003C2E  D006               	goto	l7823
  8110   003C30                     l7821:
  8111                           
  8112                           ; BSR set to: 0
  8113   003C30  90D8               	bcf	status,0,c
  8114   003C32  33AB               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8115   003C34  33AA               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8116   003C36  33A9               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8117   003C38  33A8               	rrcf	___lltoft@c& (0+255),f,b
  8118   003C3A  2BB0               	incf	___lltoft@exp& (0+255),f,b
  8119   003C3C                     l7823:
  8120                           
  8121                           ; BSR set to: 0
  8122   003C3C  0E00               	movlw	0
  8123   003C3E  15A8               	andwf	___lltoft@c& (0+255),w,b
  8124   003C40  6FAC               	movwf	??___lltoft& (0+255),b
  8125   003C42  0E00               	movlw	0
  8126   003C44  15A9               	andwf	(___lltoft@c+1)& (0+255),w,b
  8127   003C46  6FAD               	movwf	(??___lltoft+1)& (0+255),b
  8128   003C48  0E00               	movlw	0
  8129   003C4A  15AA               	andwf	(___lltoft@c+2)& (0+255),w,b
  8130   003C4C  6FAE               	movwf	(??___lltoft+2)& (0+255),b
  8131   003C4E  0EFF               	movlw	255
  8132   003C50  15AB               	andwf	(___lltoft@c+3)& (0+255),w,b
  8133   003C52  6FAF               	movwf	(??___lltoft+3)& (0+255),b
  8134   003C54  51AC               	movf	??___lltoft& (0+255),w,b
  8135   003C56  11AD               	iorwf	(??___lltoft+1)& (0+255),w,b
  8136   003C58  11AE               	iorwf	(??___lltoft+2)& (0+255),w,b
  8137   003C5A  11AF               	iorwf	(??___lltoft+3)& (0+255),w,b
  8138   003C5C  A4D8               	btfss	status,2,c
  8139   003C5E  D7E8               	goto	l7821
  8140                           
  8141                           ; BSR set to: 0
  8142   003C60  C0A8  F0A0         	movff	___lltoft@c,___ftpack@arg
  8143   003C64  C0A9  F0A1         	movff	___lltoft@c+1,___ftpack@arg+1
  8144   003C68  C0AA  F0A2         	movff	___lltoft@c+2,___ftpack@arg+2
  8145   003C6C  C0B0  F0A3         	movff	___lltoft@exp,___ftpack@exp
  8146   003C70  0E00               	movlw	0
  8147   003C72  6FA4               	movwf	___ftpack@sign& (0+255),b
  8148   003C74  ECB3  F018         	call	___ftpack	;wreg free
  8149   003C78  C0A0  F0A8         	movff	?___ftpack,?___lltoft
  8150   003C7C  C0A1  F0A9         	movff	?___ftpack+1,?___lltoft+1
  8151   003C80  C0A2  F0AA         	movff	?___ftpack+2,?___lltoft+2
  8152                           
  8153                           ; BSR set to: 0
  8154   003C84  0012               	return		;funcret
  8155   003C86                     __end_of___lltoft:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function ___llmod *****************
  8159 ;; Defined at:
  8160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  dividend        4   45[BANK0 ] unsigned long 
  8163 ;;  divisor         4   49[BANK0 ] unsigned long 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  counter         1   53[BANK0 ] unsigned char 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  4   45[BANK0 ] unsigned long 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0
  8170 ;; Tracked objects:
  8171 ;;		On entry : 3E/0
  8172 ;;		On exit  : 3F/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;Total ram usage:        9 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; Hardware stack levels required when called: 9
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_sprintf
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text31
  8190   003AF6                     __ptext31:
  8191                           	callstack 0
  8192   003AF6                     ___llmod:
  8193                           	callstack 18
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;incstack = 0
  8197   003AF6  0100               	movlb	0	; () banked
  8198   003AF8  51B1               	movf	___llmod@divisor& (0+255),w,b
  8199   003AFA  11B2               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8200   003AFC  11B3               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8201   003AFE  11B4               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8202   003B00  B4D8               	btfsc	status,2,c
  8203   003B02  D024               	goto	l923
  8204                           
  8205                           ; BSR set to: 0
  8206   003B04  0E01               	movlw	1
  8207   003B06  6FB5               	movwf	___llmod@counter& (0+255),b
  8208   003B08  D006               	goto	l7809
  8209   003B0A                     l7807:
  8210                           
  8211                           ; BSR set to: 0
  8212   003B0A  90D8               	bcf	status,0,c
  8213   003B0C  37B1               	rlcf	___llmod@divisor& (0+255),f,b
  8214   003B0E  37B2               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8215   003B10  37B3               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8216   003B12  37B4               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8217   003B14  2BB5               	incf	___llmod@counter& (0+255),f,b
  8218   003B16                     l7809:
  8219                           
  8220                           ; BSR set to: 0
  8221   003B16  AFB4               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8222   003B18  D7F8               	goto	l7807
  8223   003B1A                     u9490:
  8224                           
  8225                           ; BSR set to: 0
  8226   003B1A  51B1               	movf	___llmod@divisor& (0+255),w,b
  8227   003B1C  5DAD               	subwf	___llmod@dividend& (0+255),w,b
  8228   003B1E  51B2               	movf	(___llmod@divisor+1)& (0+255),w,b
  8229   003B20  59AE               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8230   003B22  51B3               	movf	(___llmod@divisor+2)& (0+255),w,b
  8231   003B24  59AF               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8232   003B26  51B4               	movf	(___llmod@divisor+3)& (0+255),w,b
  8233   003B28  59B0               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8234   003B2A  A0D8               	btfss	status,0,c
  8235   003B2C  D008               	goto	l7815
  8236                           
  8237                           ; BSR set to: 0
  8238   003B2E  51B1               	movf	___llmod@divisor& (0+255),w,b
  8239   003B30  5FAD               	subwf	___llmod@dividend& (0+255),f,b
  8240   003B32  51B2               	movf	(___llmod@divisor+1)& (0+255),w,b
  8241   003B34  5BAE               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8242   003B36  51B3               	movf	(___llmod@divisor+2)& (0+255),w,b
  8243   003B38  5BAF               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8244   003B3A  51B4               	movf	(___llmod@divisor+3)& (0+255),w,b
  8245   003B3C  5BB0               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8246   003B3E                     l7815:
  8247                           
  8248                           ; BSR set to: 0
  8249   003B3E  90D8               	bcf	status,0,c
  8250   003B40  33B4               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8251   003B42  33B3               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8252   003B44  33B2               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8253   003B46  33B1               	rrcf	___llmod@divisor& (0+255),f,b
  8254                           
  8255                           ; BSR set to: 0
  8256   003B48  2FB5               	decfsz	___llmod@counter& (0+255),f,b
  8257   003B4A  D7E7               	goto	u9490
  8258   003B4C                     l923:
  8259                           
  8260                           ; BSR set to: 0
  8261   003B4C  C0AD  F0AD         	movff	___llmod@dividend,?___llmod
  8262   003B50  C0AE  F0AE         	movff	___llmod@dividend+1,?___llmod+1
  8263   003B54  C0AF  F0AF         	movff	___llmod@dividend+2,?___llmod+2
  8264   003B58  C0B0  F0B0         	movff	___llmod@dividend+3,?___llmod+3
  8265                           
  8266                           ; BSR set to: 0
  8267   003B5C  0012               	return		;funcret
  8268   003B5E                     __end_of___llmod:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function ___lldiv *****************
  8272 ;; Defined at:
  8273 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  dividend        4   32[BANK0 ] unsigned long 
  8276 ;;  divisor         4   36[BANK0 ] unsigned long 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  quotient        4   40[BANK0 ] unsigned long 
  8279 ;;  counter         1   44[BANK0 ] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  4   32[BANK0 ] unsigned long 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 3F/1
  8286 ;;		On exit  : 3F/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8289 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;Total ram usage:       13 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; Hardware stack levels required when called: 9
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_sprintf
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text32
  8304   003640                     __ptext32:
  8305                           	callstack 0
  8306   003640                     ___lldiv:
  8307                           	callstack 18
  8308                           
  8309                           ; BSR set to: 1
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;incstack = 0
  8313   003640  0E00               	movlw	0
  8314   003642  0100               	movlb	0	; () banked
  8315   003644  6FA8               	movwf	___lldiv@quotient& (0+255),b
  8316   003646  0E00               	movlw	0
  8317   003648  6FA9               	movwf	(___lldiv@quotient+1)& (0+255),b
  8318   00364A  0E00               	movlw	0
  8319   00364C  6FAA               	movwf	(___lldiv@quotient+2)& (0+255),b
  8320   00364E  0E00               	movlw	0
  8321   003650  6FAB               	movwf	(___lldiv@quotient+3)& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324   003652  51A4               	movf	___lldiv@divisor& (0+255),w,b
  8325   003654  11A5               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8326   003656  11A6               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8327   003658  11A7               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8328   00365A  B4D8               	btfsc	status,2,c
  8329   00365C  D02A               	goto	l508
  8330                           
  8331                           ; BSR set to: 0
  8332   00365E  0E01               	movlw	1
  8333   003660  6FAC               	movwf	___lldiv@counter& (0+255),b
  8334   003662  D006               	goto	l7713
  8335   003664                     l7711:
  8336                           
  8337                           ; BSR set to: 0
  8338   003664  90D8               	bcf	status,0,c
  8339   003666  37A4               	rlcf	___lldiv@divisor& (0+255),f,b
  8340   003668  37A5               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8341   00366A  37A6               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8342   00366C  37A7               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8343   00366E  2BAC               	incf	___lldiv@counter& (0+255),f,b
  8344   003670                     l7713:
  8345                           
  8346                           ; BSR set to: 0
  8347   003670  AFA7               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8348   003672  D7F8               	goto	l7711
  8349   003674                     u9330:
  8350                           
  8351                           ; BSR set to: 0
  8352   003674  90D8               	bcf	status,0,c
  8353   003676  37A8               	rlcf	___lldiv@quotient& (0+255),f,b
  8354   003678  37A9               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8355   00367A  37AA               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8356   00367C  37AB               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8357                           
  8358                           ; BSR set to: 0
  8359   00367E  51A4               	movf	___lldiv@divisor& (0+255),w,b
  8360   003680  5DA0               	subwf	___lldiv@dividend& (0+255),w,b
  8361   003682  51A5               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8362   003684  59A1               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8363   003686  51A6               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8364   003688  59A2               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8365   00368A  51A7               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8366   00368C  59A3               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8367   00368E  A0D8               	btfss	status,0,c
  8368   003690  D009               	goto	l7723
  8369                           
  8370                           ; BSR set to: 0
  8371   003692  51A4               	movf	___lldiv@divisor& (0+255),w,b
  8372   003694  5FA0               	subwf	___lldiv@dividend& (0+255),f,b
  8373   003696  51A5               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8374   003698  5BA1               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8375   00369A  51A6               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8376   00369C  5BA2               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8377   00369E  51A7               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8378   0036A0  5BA3               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8379                           
  8380                           ; BSR set to: 0
  8381   0036A2  81A8               	bsf	___lldiv@quotient& (0+255),0,b
  8382   0036A4                     l7723:
  8383                           
  8384                           ; BSR set to: 0
  8385   0036A4  90D8               	bcf	status,0,c
  8386   0036A6  33A7               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8387   0036A8  33A6               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8388   0036AA  33A5               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8389   0036AC  33A4               	rrcf	___lldiv@divisor& (0+255),f,b
  8390                           
  8391                           ; BSR set to: 0
  8392   0036AE  2FAC               	decfsz	___lldiv@counter& (0+255),f,b
  8393   0036B0  D7E1               	goto	u9330
  8394   0036B2                     l508:
  8395                           
  8396                           ; BSR set to: 0
  8397   0036B2  C0A8  F0A0         	movff	___lldiv@quotient,?___lldiv
  8398   0036B6  C0A9  F0A1         	movff	___lldiv@quotient+1,?___lldiv+1
  8399   0036BA  C0AA  F0A2         	movff	___lldiv@quotient+2,?___lldiv+2
  8400   0036BE  C0AB  F0A3         	movff	___lldiv@quotient+3,?___lldiv+3
  8401                           
  8402                           ; BSR set to: 0
  8403   0036C2  0012               	return		;funcret
  8404   0036C4                     __end_of___lldiv:
  8405                           	callstack 0
  8406                           
  8407 ;; *************** function ___fttol *****************
  8408 ;; Defined at:
  8409 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  f1              3   68[BANK0 ] float 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  lval            4   78[BANK0 ] unsigned long 
  8414 ;;  exp1            1   82[BANK0 ] unsigned char 
  8415 ;;  sign1           1   77[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  4   68[BANK0 ] long 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0
  8420 ;; Tracked objects:
  8421 ;;		On entry : 3E/1
  8422 ;;		On exit  : 3F/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;Total ram usage:       15 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; Hardware stack levels required when called: 9
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_sprintf
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text33
  8440   002FBE                     __ptext33:
  8441                           	callstack 0
  8442   002FBE                     ___fttol:
  8443                           	callstack 18
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;incstack = 0
  8447   002FBE  C0C6  F0C8         	movff	___fttol@f1+2,??___fttol
  8448   002FC2  0100               	movlb	0	; () banked
  8449   002FC4  6BC9               	clrf	(??___fttol+1)& (0+255),b
  8450   002FC6  6BCA               	clrf	(??___fttol+2)& (0+255),b
  8451   002FC8  35C5               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8452   002FCA  37C8               	rlcf	??___fttol& (0+255),f,b
  8453   002FCC  E301               	bnc	u9401
  8454   002FCE  81C9               	bsf	(??___fttol+1)& (0+255),0,b
  8455   002FD0                     u9401:
  8456   002FD0  51C8               	movf	??___fttol& (0+255),w,b
  8457   002FD2  6FD2               	movwf	___fttol@exp1& (0+255),b
  8458   002FD4  51D2               	movf	___fttol@exp1& (0+255),w,b
  8459   002FD6  A4D8               	btfss	status,2,c
  8460   002FD8  D009               	goto	l7763
  8461   002FDA                     u9410:
  8462                           
  8463                           ; BSR set to: 0
  8464   002FDA  0E00               	movlw	0
  8465   002FDC  6FC4               	movwf	?___fttol& (0+255),b
  8466   002FDE  0E00               	movlw	0
  8467   002FE0  6FC5               	movwf	(?___fttol+1)& (0+255),b
  8468   002FE2  0E00               	movlw	0
  8469   002FE4  6FC6               	movwf	(?___fttol+2)& (0+255),b
  8470   002FE6  0E00               	movlw	0
  8471   002FE8  6FC7               	movwf	(?___fttol+3)& (0+255),b
  8472   002FEA  0012               	return	
  8473   002FEC                     l7763:
  8474                           
  8475                           ; BSR set to: 0
  8476   002FEC  0E17               	movlw	23
  8477   002FEE  6FC8               	movwf	??___fttol& (0+255),b
  8478   002FF0  C0C4  F0C9         	movff	___fttol@f1,??___fttol+1
  8479   002FF4  C0C5  F0CA         	movff	___fttol@f1+1,??___fttol+2
  8480   002FF8  C0C6  F0CB         	movff	___fttol@f1+2,??___fttol+3
  8481   002FFC  29C8               	incf	??___fttol& (0+255),w,b
  8482   002FFE  6FCC               	movwf	(??___fttol+4)& (0+255),b
  8483   003000  D004               	goto	u9420
  8484   003002                     u9425:
  8485   003002  90D8               	bcf	status,0,c
  8486   003004  33CB               	rrcf	(??___fttol+3)& (0+255),f,b
  8487   003006  33CA               	rrcf	(??___fttol+2)& (0+255),f,b
  8488   003008  33C9               	rrcf	(??___fttol+1)& (0+255),f,b
  8489   00300A                     u9420:
  8490   00300A  2FCC               	decfsz	(??___fttol+4)& (0+255),f,b
  8491   00300C  D7FA               	goto	u9425
  8492   00300E  0100               	movlb	0	; () banked
  8493   003010  51C9               	movf	(??___fttol+1)& (0+255),w,b
  8494   003012  6FCD               	movwf	___fttol@sign1& (0+255),b
  8495                           
  8496                           ; BSR set to: 0
  8497   003014  8FC5               	bsf	(___fttol@f1+1)& (0+255),7,b
  8498                           
  8499                           ; BSR set to: 0
  8500   003016  0EFF               	movlw	255
  8501   003018  17C4               	andwf	___fttol@f1& (0+255),f,b
  8502   00301A  0EFF               	movlw	255
  8503   00301C  17C5               	andwf	(___fttol@f1+1)& (0+255),f,b
  8504   00301E  0E00               	movlw	0
  8505   003020  17C6               	andwf	(___fttol@f1+2)& (0+255),f,b
  8506                           
  8507                           ; BSR set to: 0
  8508   003022  51C4               	movf	___fttol@f1& (0+255),w,b
  8509   003024  6FCE               	movwf	___fttol@lval& (0+255),b
  8510   003026  51C5               	movf	(___fttol@f1+1)& (0+255),w,b
  8511   003028  6FCF               	movwf	(___fttol@lval+1)& (0+255),b
  8512   00302A  51C6               	movf	(___fttol@f1+2)& (0+255),w,b
  8513   00302C  6FD0               	movwf	(___fttol@lval+2)& (0+255),b
  8514   00302E  6BD1               	clrf	(___fttol@lval+3)& (0+255),b
  8515                           
  8516                           ; BSR set to: 0
  8517   003030  0E8E               	movlw	142
  8518   003032  5FD2               	subwf	___fttol@exp1& (0+255),f,b
  8519                           
  8520                           ; BSR set to: 0
  8521   003034  AFD2               	btfss	___fttol@exp1& (0+255),7,b
  8522   003036  D00D               	goto	l7785
  8523                           
  8524                           ; BSR set to: 0
  8525   003038  51D2               	movf	___fttol@exp1& (0+255),w,b
  8526   00303A  0A80               	xorlw	128
  8527   00303C  0F8F               	addlw	143
  8528   00303E  A0D8               	btfss	status,0,c
  8529   003040  D7CC               	goto	u9410
  8530   003042                     l7781:
  8531                           
  8532                           ; BSR set to: 0
  8533   003042  90D8               	bcf	status,0,c
  8534   003044  33D1               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8535   003046  33D0               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8536   003048  33CF               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8537   00304A  33CE               	rrcf	___fttol@lval& (0+255),f,b
  8538                           
  8539                           ; BSR set to: 0
  8540   00304C  3FD2               	incfsz	___fttol@exp1& (0+255),f,b
  8541   00304E  D7F9               	goto	l7781
  8542   003050  D00D               	goto	u9460
  8543   003052                     l7785:
  8544                           
  8545                           ; BSR set to: 0
  8546   003052  0E17               	movlw	23
  8547   003054  65D2               	cpfsgt	___fttol@exp1& (0+255),b
  8548   003056  D007               	goto	l7793
  8549   003058  D7C0               	goto	u9410
  8550   00305A                     l7791:
  8551                           
  8552                           ; BSR set to: 0
  8553   00305A  90D8               	bcf	status,0,c
  8554   00305C  37CE               	rlcf	___fttol@lval& (0+255),f,b
  8555   00305E  37CF               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8556   003060  37D0               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8557   003062  37D1               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8558   003064  07D2               	decf	___fttol@exp1& (0+255),f,b
  8559   003066                     l7793:
  8560                           
  8561                           ; BSR set to: 0
  8562   003066  51D2               	movf	___fttol@exp1& (0+255),w,b
  8563   003068  A4D8               	btfss	status,2,c
  8564   00306A  D7F7               	goto	l7791
  8565   00306C                     u9460:
  8566                           
  8567                           ; BSR set to: 0
  8568   00306C  51CD               	movf	___fttol@sign1& (0+255),w,b
  8569   00306E  B4D8               	btfsc	status,2,c
  8570   003070  D008               	goto	l7799
  8571                           
  8572                           ; BSR set to: 0
  8573   003072  1FD1               	comf	(___fttol@lval+3)& (0+255),f,b
  8574   003074  1FD0               	comf	(___fttol@lval+2)& (0+255),f,b
  8575   003076  1FCF               	comf	(___fttol@lval+1)& (0+255),f,b
  8576   003078  6DCE               	negf	___fttol@lval& (0+255),b
  8577   00307A  0E00               	movlw	0
  8578   00307C  23CF               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8579   00307E  23D0               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8580   003080  23D1               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8581   003082                     l7799:
  8582                           
  8583                           ; BSR set to: 0
  8584   003082  C0CE  F0C4         	movff	___fttol@lval,?___fttol
  8585   003086  C0CF  F0C5         	movff	___fttol@lval+1,?___fttol+1
  8586   00308A  C0D0  F0C6         	movff	___fttol@lval+2,?___fttol+2
  8587   00308E  C0D1  F0C7         	movff	___fttol@lval+3,?___fttol+3
  8588                           
  8589                           ; BSR set to: 0
  8590   003092  0012               	return		;funcret
  8591   003094                     __end_of___fttol:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function ___ftsub *****************
  8595 ;; Defined at:
  8596 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftsub.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  f1              3   85[BANK0 ] float 
  8599 ;;  f2              3   88[BANK0 ] float 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  3   85[BANK0 ] float 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 3F/0
  8608 ;;		On exit  : 3F/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;Total ram usage:        6 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 11
  8618 ;; This function calls:
  8619 ;;		___ftadd
  8620 ;; This function is called by:
  8621 ;;		_sprintf
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text34
  8626   004044                     __ptext34:
  8627                           	callstack 0
  8628   004044                     ___ftsub:
  8629                           	callstack 16
  8630                           
  8631                           ; BSR set to: 0
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;incstack = 0
  8635   004044  51D8               	movf	___ftsub@f2& (0+255),w,b
  8636   004046  11D9               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8637   004048  11DA               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8638   00404A  B4D8               	btfsc	status,2,c
  8639   00404C  D006               	goto	l7731
  8640                           
  8641                           ; BSR set to: 0
  8642   00404E  0E00               	movlw	0
  8643   004050  1BD8               	xorwf	___ftsub@f2& (0+255),f,b
  8644   004052  0E00               	movlw	0
  8645   004054  1BD9               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8646   004056  0E80               	movlw	128
  8647   004058  1BDA               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8648   00405A                     l7731:
  8649                           
  8650                           ; BSR set to: 0
  8651   00405A  C0D5  F0C9         	movff	___ftsub@f1,___ftadd@f1
  8652   00405E  C0D6  F0CA         	movff	___ftsub@f1+1,___ftadd@f1+1
  8653   004062  C0D7  F0CB         	movff	___ftsub@f1+2,___ftadd@f1+2
  8654   004066  C0D8  F0CC         	movff	___ftsub@f2,___ftadd@f2
  8655   00406A  C0D9  F0CD         	movff	___ftsub@f2+1,___ftadd@f2+1
  8656   00406E  C0DA  F0CE         	movff	___ftsub@f2+2,___ftadd@f2+2
  8657   004072  ECDD  F012         	call	___ftadd	;wreg free
  8658   004076  C0C9  F0D5         	movff	?___ftadd,?___ftsub
  8659   00407A  C0CA  F0D6         	movff	?___ftadd+1,?___ftsub+1
  8660   00407E  C0CB  F0D7         	movff	?___ftadd+2,?___ftsub+2
  8661                           
  8662                           ; BSR set to: 0
  8663   004082  0012               	return		;funcret
  8664   004084                     __end_of___ftsub:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function ___ftadd *****************
  8668 ;; Defined at:
  8669 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  f1              3   73[BANK0 ] float 
  8672 ;;  f2              3   76[BANK0 ] float 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  exp1            1   84[BANK0 ] unsigned char 
  8675 ;;  exp2            1   83[BANK0 ] unsigned char 
  8676 ;;  sign            1   82[BANK0 ] unsigned char 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  3   73[BANK0 ] float 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, status,0, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 3F/0
  8683 ;;		On exit  : 3F/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:       12 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; Hardware stack levels required when called: 10
  8693 ;; This function calls:
  8694 ;;		___ftpack
  8695 ;; This function is called by:
  8696 ;;		_sprintf
  8697 ;;		___ftsub
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text35
  8702   0025BA                     __ptext35:
  8703                           	callstack 0
  8704   0025BA                     ___ftadd:
  8705                           	callstack 16
  8706                           
  8707                           ; BSR set to: 0
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;incstack = 0
  8711   0025BA  C0CB  F0CF         	movff	___ftadd@f1+2,??___ftadd
  8712   0025BE  6BD0               	clrf	(??___ftadd+1)& (0+255),b
  8713   0025C0  6BD1               	clrf	(??___ftadd+2)& (0+255),b
  8714   0025C2  35CA               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8715   0025C4  37CF               	rlcf	??___ftadd& (0+255),f,b
  8716   0025C6  E301               	bnc	u8211
  8717   0025C8  81D0               	bsf	(??___ftadd+1)& (0+255),0,b
  8718   0025CA                     u8211:
  8719   0025CA  51CF               	movf	??___ftadd& (0+255),w,b
  8720   0025CC  6FD4               	movwf	___ftadd@exp1& (0+255),b
  8721   0025CE  C0CE  F0CF         	movff	___ftadd@f2+2,??___ftadd
  8722   0025D2  6BD0               	clrf	(??___ftadd+1)& (0+255),b
  8723   0025D4  6BD1               	clrf	(??___ftadd+2)& (0+255),b
  8724   0025D6  35CD               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8725   0025D8  37CF               	rlcf	??___ftadd& (0+255),f,b
  8726   0025DA  E301               	bnc	u8221
  8727   0025DC  81D0               	bsf	(??___ftadd+1)& (0+255),0,b
  8728   0025DE                     u8221:
  8729   0025DE  51CF               	movf	??___ftadd& (0+255),w,b
  8730   0025E0  6FD3               	movwf	___ftadd@exp2& (0+255),b
  8731                           
  8732                           ; BSR set to: 0
  8733   0025E2  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8734   0025E4  B4D8               	btfsc	status,2,c
  8735   0025E6  D00A               	goto	u8250
  8736                           
  8737                           ; BSR set to: 0
  8738   0025E8  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8739   0025EA  5DD4               	subwf	___ftadd@exp1& (0+255),w,b
  8740   0025EC  B0D8               	btfsc	status,0,c
  8741   0025EE  D00D               	goto	l7021
  8742                           
  8743                           ; BSR set to: 0
  8744   0025F0  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8745   0025F2  5DD3               	subwf	___ftadd@exp2& (0+255),w,b
  8746   0025F4  6FCF               	movwf	??___ftadd& (0+255),b
  8747   0025F6  0E18               	movlw	24
  8748   0025F8  65CF               	cpfsgt	??___ftadd& (0+255),b
  8749   0025FA  D007               	goto	l7021
  8750   0025FC                     u8250:
  8751                           
  8752                           ; BSR set to: 0
  8753   0025FC  C0CC  F0C9         	movff	___ftadd@f2,?___ftadd
  8754   002600  C0CD  F0CA         	movff	___ftadd@f2+1,?___ftadd+1
  8755   002604  C0CE  F0CB         	movff	___ftadd@f2+2,?___ftadd+2
  8756   002608  0012               	return	
  8757   00260A                     l7021:
  8758                           
  8759                           ; BSR set to: 0
  8760   00260A  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8761   00260C  B4D8               	btfsc	status,2,c
  8762   00260E  D00A               	goto	u8280
  8763                           
  8764                           ; BSR set to: 0
  8765   002610  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8766   002612  5DD3               	subwf	___ftadd@exp2& (0+255),w,b
  8767   002614  B0D8               	btfsc	status,0,c
  8768   002616  D00D               	goto	l7027
  8769                           
  8770                           ; BSR set to: 0
  8771   002618  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8772   00261A  5DD4               	subwf	___ftadd@exp1& (0+255),w,b
  8773   00261C  6FCF               	movwf	??___ftadd& (0+255),b
  8774   00261E  0E18               	movlw	24
  8775   002620  65CF               	cpfsgt	??___ftadd& (0+255),b
  8776   002622  D007               	goto	l7027
  8777   002624                     u8280:
  8778                           
  8779                           ; BSR set to: 0
  8780   002624  C0C9  F0C9         	movff	___ftadd@f1,?___ftadd
  8781   002628  C0CA  F0CA         	movff	___ftadd@f1+1,?___ftadd+1
  8782   00262C  C0CB  F0CB         	movff	___ftadd@f1+2,?___ftadd+2
  8783   002630  0012               	return	
  8784   002632                     l7027:
  8785                           
  8786                           ; BSR set to: 0
  8787   002632  0E06               	movlw	6
  8788   002634  6FD2               	movwf	___ftadd@sign& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791   002636  BFCB               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8792                           
  8793                           ; BSR set to: 0
  8794   002638  8FD2               	bsf	___ftadd@sign& (0+255),7,b
  8795                           
  8796                           ; BSR set to: 0
  8797   00263A  BFCE               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8798                           
  8799                           ; BSR set to: 0
  8800   00263C  8DD2               	bsf	___ftadd@sign& (0+255),6,b
  8801                           
  8802                           ; BSR set to: 0
  8803   00263E  8FCA               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8804                           
  8805                           ; BSR set to: 0
  8806   002640  0EFF               	movlw	255
  8807   002642  17C9               	andwf	___ftadd@f1& (0+255),f,b
  8808   002644  0EFF               	movlw	255
  8809   002646  17CA               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8810   002648  0E00               	movlw	0
  8811   00264A  17CB               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8812   00264C  8FCD               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8813                           
  8814                           ; BSR set to: 0
  8815   00264E  0EFF               	movlw	255
  8816   002650  17CC               	andwf	___ftadd@f2& (0+255),f,b
  8817   002652  0EFF               	movlw	255
  8818   002654  17CD               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8819   002656  0E00               	movlw	0
  8820   002658  17CE               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8821                           
  8822                           ; BSR set to: 0
  8823   00265A  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8824   00265C  5DD4               	subwf	___ftadd@exp1& (0+255),w,b
  8825   00265E  B0D8               	btfsc	status,0,c
  8826   002660  D01B               	goto	l7053
  8827   002662                     u8310:
  8828                           
  8829                           ; BSR set to: 0
  8830   002662  90D8               	bcf	status,0,c
  8831   002664  37CC               	rlcf	___ftadd@f2& (0+255),f,b
  8832   002666  37CD               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8833   002668  37CE               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8834   00266A  07D3               	decf	___ftadd@exp2& (0+255),f,b
  8835                           
  8836                           ; BSR set to: 0
  8837   00266C  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8838   00266E  19D3               	xorwf	___ftadd@exp2& (0+255),w,b
  8839   002670  B4D8               	btfsc	status,2,c
  8840   002672  D00D               	goto	l7051
  8841                           
  8842                           ; BSR set to: 0
  8843   002674  07D2               	decf	___ftadd@sign& (0+255),f,b
  8844   002676  C0D2  F0CF         	movff	___ftadd@sign,??___ftadd
  8845   00267A  0E07               	movlw	7
  8846   00267C  17CF               	andwf	??___ftadd& (0+255),f,b
  8847   00267E  B4D8               	btfsc	status,2,c
  8848   002680  D006               	goto	l7051
  8849   002682  D7EF               	goto	u8310
  8850   002684                     l7049:
  8851                           
  8852                           ; BSR set to: 0
  8853   002684  90D8               	bcf	status,0,c
  8854   002686  33CB               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8855   002688  33CA               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8856   00268A  33C9               	rrcf	___ftadd@f1& (0+255),f,b
  8857   00268C  2BD4               	incf	___ftadd@exp1& (0+255),f,b
  8858   00268E                     l7051:
  8859                           
  8860                           ; BSR set to: 0
  8861   00268E  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8862   002690  19D4               	xorwf	___ftadd@exp1& (0+255),w,b
  8863   002692  B4D8               	btfsc	status,2,c
  8864   002694  D01F               	goto	u8380
  8865   002696  D7F6               	goto	l7049
  8866   002698                     l7053:
  8867                           
  8868                           ; BSR set to: 0
  8869   002698  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8870   00269A  5DD3               	subwf	___ftadd@exp2& (0+255),w,b
  8871   00269C  B0D8               	btfsc	status,0,c
  8872   00269E  D01A               	goto	u8380
  8873   0026A0                     u8350:
  8874                           
  8875                           ; BSR set to: 0
  8876   0026A0  90D8               	bcf	status,0,c
  8877   0026A2  37C9               	rlcf	___ftadd@f1& (0+255),f,b
  8878   0026A4  37CA               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8879   0026A6  37CB               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8880   0026A8  07D4               	decf	___ftadd@exp1& (0+255),f,b
  8881                           
  8882                           ; BSR set to: 0
  8883   0026AA  51D4               	movf	___ftadd@exp1& (0+255),w,b
  8884   0026AC  19D3               	xorwf	___ftadd@exp2& (0+255),w,b
  8885   0026AE  B4D8               	btfsc	status,2,c
  8886   0026B0  D00D               	goto	l7063
  8887                           
  8888                           ; BSR set to: 0
  8889   0026B2  07D2               	decf	___ftadd@sign& (0+255),f,b
  8890   0026B4  C0D2  F0CF         	movff	___ftadd@sign,??___ftadd
  8891   0026B8  0E07               	movlw	7
  8892   0026BA  17CF               	andwf	??___ftadd& (0+255),f,b
  8893   0026BC  B4D8               	btfsc	status,2,c
  8894   0026BE  D006               	goto	l7063
  8895   0026C0  D7EF               	goto	u8350
  8896   0026C2                     l7061:
  8897                           
  8898                           ; BSR set to: 0
  8899   0026C2  90D8               	bcf	status,0,c
  8900   0026C4  33CE               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8901   0026C6  33CD               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8902   0026C8  33CC               	rrcf	___ftadd@f2& (0+255),f,b
  8903   0026CA  2BD3               	incf	___ftadd@exp2& (0+255),f,b
  8904   0026CC                     l7063:
  8905                           
  8906                           ; BSR set to: 0
  8907   0026CC  51D3               	movf	___ftadd@exp2& (0+255),w,b
  8908   0026CE  19D4               	xorwf	___ftadd@exp1& (0+255),w,b
  8909   0026D0  A4D8               	btfss	status,2,c
  8910   0026D2  D7F7               	goto	l7061
  8911   0026D4                     u8380:
  8912                           
  8913                           ; BSR set to: 0
  8914   0026D4  AFD2               	btfss	___ftadd@sign& (0+255),7,b
  8915   0026D6  D00C               	goto	l828
  8916                           
  8917                           ; BSR set to: 0
  8918   0026D8  0EFF               	movlw	255
  8919   0026DA  1BC9               	xorwf	___ftadd@f1& (0+255),f,b
  8920   0026DC  0EFF               	movlw	255
  8921   0026DE  1BCA               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8922   0026E0  0EFF               	movlw	255
  8923   0026E2  1BCB               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8924   0026E4  0E01               	movlw	1
  8925   0026E6  27C9               	addwf	___ftadd@f1& (0+255),f,b
  8926   0026E8  0E00               	movlw	0
  8927   0026EA  23CA               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8928   0026EC  0E00               	movlw	0
  8929   0026EE  23CB               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8930   0026F0                     l828:
  8931                           
  8932                           ; BSR set to: 0
  8933   0026F0  ADD2               	btfss	___ftadd@sign& (0+255),6,b
  8934   0026F2  D00C               	goto	l7069
  8935                           
  8936                           ; BSR set to: 0
  8937   0026F4  0EFF               	movlw	255
  8938   0026F6  1BCC               	xorwf	___ftadd@f2& (0+255),f,b
  8939   0026F8  0EFF               	movlw	255
  8940   0026FA  1BCD               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8941   0026FC  0EFF               	movlw	255
  8942   0026FE  1BCE               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8943   002700  0E01               	movlw	1
  8944   002702  27CC               	addwf	___ftadd@f2& (0+255),f,b
  8945   002704  0E00               	movlw	0
  8946   002706  23CD               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8947   002708  0E00               	movlw	0
  8948   00270A  23CE               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8949   00270C                     l7069:
  8950                           
  8951                           ; BSR set to: 0
  8952   00270C  0E00               	movlw	0
  8953   00270E  6FD2               	movwf	___ftadd@sign& (0+255),b
  8954                           
  8955                           ; BSR set to: 0
  8956   002710  51C9               	movf	___ftadd@f1& (0+255),w,b
  8957   002712  27CC               	addwf	___ftadd@f2& (0+255),f,b
  8958   002714  51CA               	movf	(___ftadd@f1+1)& (0+255),w,b
  8959   002716  23CD               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8960   002718  51CB               	movf	(___ftadd@f1+2)& (0+255),w,b
  8961   00271A  23CE               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8962                           
  8963                           ; BSR set to: 0
  8964   00271C  AFCE               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8965   00271E  D00E               	goto	l7079
  8966                           
  8967                           ; BSR set to: 0
  8968   002720  0EFF               	movlw	255
  8969   002722  1BCC               	xorwf	___ftadd@f2& (0+255),f,b
  8970   002724  0EFF               	movlw	255
  8971   002726  1BCD               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8972   002728  0EFF               	movlw	255
  8973   00272A  1BCE               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8974   00272C  0E01               	movlw	1
  8975   00272E  27CC               	addwf	___ftadd@f2& (0+255),f,b
  8976   002730  0E00               	movlw	0
  8977   002732  23CD               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8978   002734  0E00               	movlw	0
  8979   002736  23CE               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982   002738  0E01               	movlw	1
  8983   00273A  6FD2               	movwf	___ftadd@sign& (0+255),b
  8984   00273C                     l7079:
  8985                           
  8986                           ; BSR set to: 0
  8987   00273C  C0CC  F0A0         	movff	___ftadd@f2,___ftpack@arg
  8988   002740  C0CD  F0A1         	movff	___ftadd@f2+1,___ftpack@arg+1
  8989   002744  C0CE  F0A2         	movff	___ftadd@f2+2,___ftpack@arg+2
  8990   002748  C0D4  F0A3         	movff	___ftadd@exp1,___ftpack@exp
  8991   00274C  C0D2  F0A4         	movff	___ftadd@sign,___ftpack@sign
  8992   002750  ECB3  F018         	call	___ftpack	;wreg free
  8993   002754  C0A0  F0C9         	movff	?___ftpack,?___ftadd
  8994   002758  C0A1  F0CA         	movff	?___ftpack+1,?___ftadd+1
  8995   00275C  C0A2  F0CB         	movff	?___ftpack+2,?___ftadd+2
  8996                           
  8997                           ; BSR set to: 0
  8998   002760  0012               	return		;funcret
  8999   002762                     __end_of___ftadd:
  9000                           	callstack 0
  9001                           
  9002 ;; *************** function ___ftpack *****************
  9003 ;; Defined at:
  9004 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  arg             3   32[BANK0 ] unsigned um
  9007 ;;  exp             1   35[BANK0 ] unsigned char 
  9008 ;;  sign            1   36[BANK0 ] unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  3   32[BANK0 ] float 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0
  9015 ;; Tracked objects:
  9016 ;;		On entry : 3F/0
  9017 ;;		On exit  : 3F/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9020 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;Total ram usage:        8 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 9
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		___awtoft
  9031 ;;		___ftadd
  9032 ;;		___ftdiv
  9033 ;;		___ftmul
  9034 ;;		___lltoft
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text36
  9039   003166                     __ptext36:
  9040                           	callstack 0
  9041   003166                     ___ftpack:
  9042                           	callstack 16
  9043                           
  9044                           ; BSR set to: 0
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;incstack = 0
  9048   003166  51A3               	movf	___ftpack@exp& (0+255),w,b
  9049   003168  B4D8               	btfsc	status,2,c
  9050   00316A  D005               	goto	u8040
  9051                           
  9052                           ; BSR set to: 0
  9053   00316C  51A0               	movf	___ftpack@arg& (0+255),w,b
  9054   00316E  11A1               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9055   003170  11A2               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9056   003172  A4D8               	btfss	status,2,c
  9057   003174  D00C               	goto	l6933
  9058   003176                     u8040:
  9059                           
  9060                           ; BSR set to: 0
  9061   003176  0E00               	movlw	0
  9062   003178  6FA0               	movwf	?___ftpack& (0+255),b
  9063   00317A  0E00               	movlw	0
  9064   00317C  6FA1               	movwf	(?___ftpack+1)& (0+255),b
  9065   00317E  0E00               	movlw	0
  9066   003180  6FA2               	movwf	(?___ftpack+2)& (0+255),b
  9067   003182  0012               	return	
  9068   003184                     l6931:
  9069                           
  9070                           ; BSR set to: 0
  9071   003184  2BA3               	incf	___ftpack@exp& (0+255),f,b
  9072   003186  90D8               	bcf	status,0,c
  9073   003188  33A2               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9074   00318A  33A1               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9075   00318C  33A0               	rrcf	___ftpack@arg& (0+255),f,b
  9076   00318E                     l6933:
  9077                           
  9078                           ; BSR set to: 0
  9079   00318E  0E00               	movlw	0
  9080   003190  15A0               	andwf	___ftpack@arg& (0+255),w,b
  9081   003192  6FA5               	movwf	??___ftpack& (0+255),b
  9082   003194  0E00               	movlw	0
  9083   003196  15A1               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9084   003198  6FA6               	movwf	(??___ftpack+1)& (0+255),b
  9085   00319A  0EFE               	movlw	254
  9086   00319C  15A2               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9087   00319E  6FA7               	movwf	(??___ftpack+2)& (0+255),b
  9088   0031A0  51A5               	movf	??___ftpack& (0+255),w,b
  9089   0031A2  11A6               	iorwf	(??___ftpack+1)& (0+255),w,b
  9090   0031A4  11A7               	iorwf	(??___ftpack+2)& (0+255),w,b
  9091   0031A6  B4D8               	btfsc	status,2,c
  9092   0031A8  D00C               	goto	l6939
  9093   0031AA  D7EC               	goto	l6931
  9094   0031AC                     l6935:
  9095                           
  9096                           ; BSR set to: 0
  9097   0031AC  2BA3               	incf	___ftpack@exp& (0+255),f,b
  9098                           
  9099                           ; BSR set to: 0
  9100   0031AE  0E01               	movlw	1
  9101   0031B0  27A0               	addwf	___ftpack@arg& (0+255),f,b
  9102   0031B2  0E00               	movlw	0
  9103   0031B4  23A1               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9104   0031B6  0E00               	movlw	0
  9105   0031B8  23A2               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9106   0031BA  90D8               	bcf	status,0,c
  9107   0031BC  33A2               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9108   0031BE  33A1               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9109   0031C0  33A0               	rrcf	___ftpack@arg& (0+255),f,b
  9110   0031C2                     l6939:
  9111                           
  9112                           ; BSR set to: 0
  9113   0031C2  0E00               	movlw	0
  9114   0031C4  15A0               	andwf	___ftpack@arg& (0+255),w,b
  9115   0031C6  6FA5               	movwf	??___ftpack& (0+255),b
  9116   0031C8  0E00               	movlw	0
  9117   0031CA  15A1               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9118   0031CC  6FA6               	movwf	(??___ftpack+1)& (0+255),b
  9119   0031CE  0EFF               	movlw	255
  9120   0031D0  15A2               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9121   0031D2  6FA7               	movwf	(??___ftpack+2)& (0+255),b
  9122   0031D4  51A5               	movf	??___ftpack& (0+255),w,b
  9123   0031D6  11A6               	iorwf	(??___ftpack+1)& (0+255),w,b
  9124   0031D8  11A7               	iorwf	(??___ftpack+2)& (0+255),w,b
  9125   0031DA  B4D8               	btfsc	status,2,c
  9126   0031DC  D006               	goto	l6943
  9127   0031DE  D7E6               	goto	l6935
  9128   0031E0                     l6941:
  9129                           
  9130                           ; BSR set to: 0
  9131   0031E0  07A3               	decf	___ftpack@exp& (0+255),f,b
  9132   0031E2  90D8               	bcf	status,0,c
  9133   0031E4  37A0               	rlcf	___ftpack@arg& (0+255),f,b
  9134   0031E6  37A1               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9135   0031E8  37A2               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9136   0031EA                     l6943:
  9137                           
  9138                           ; BSR set to: 0
  9139   0031EA  BFA1               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9140   0031EC  D003               	goto	u8080
  9141                           
  9142                           ; BSR set to: 0
  9143   0031EE  0E02               	movlw	2
  9144   0031F0  61A3               	cpfslt	___ftpack@exp& (0+255),b
  9145   0031F2  D7F6               	goto	l6941
  9146   0031F4                     u8080:
  9147                           
  9148                           ; BSR set to: 0
  9149   0031F4  A1A3               	btfss	___ftpack@exp& (0+255),0,b
  9150                           
  9151                           ; BSR set to: 0
  9152   0031F6  9FA1               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9153                           
  9154                           ; BSR set to: 0
  9155   0031F8  90D8               	bcf	status,0,c
  9156   0031FA  33A3               	rrcf	___ftpack@exp& (0+255),f,b
  9157   0031FC  51A3               	movf	___ftpack@exp& (0+255),w,b
  9158   0031FE  13A2               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9159                           
  9160                           ; BSR set to: 0
  9161   003200  51A4               	movf	___ftpack@sign& (0+255),w,b
  9162   003202  A4D8               	btfss	status,2,c
  9163                           
  9164                           ; BSR set to: 0
  9165   003204  8FA2               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9166                           
  9167                           ; BSR set to: 0
  9168   003206  C0A0  F0A0         	movff	___ftpack@arg,?___ftpack
  9169   00320A  C0A1  F0A1         	movff	___ftpack@arg+1,?___ftpack+1
  9170   00320E  C0A2  F0A2         	movff	___ftpack@arg+2,?___ftpack+2
  9171                           
  9172                           ; BSR set to: 0
  9173   003212  0012               	return		;funcret
  9174   003214                     __end_of___ftpack:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function ___ftneg *****************
  9178 ;; Defined at:
  9179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftneg.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  f1              3   32[BANK0 ] float 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  3   32[BANK0 ] float 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 3F/1
  9190 ;;		On exit  : 3F/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;Total ram usage:        3 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 9
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_sprintf
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text37
  9208   0043EE                     __ptext37:
  9209                           	callstack 0
  9210   0043EE                     ___ftneg:
  9211                           	callstack 18
  9212                           
  9213                           ; BSR set to: 1
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;incstack = 0
  9217   0043EE  0100               	movlb	0	; () banked
  9218   0043F0  51A0               	movf	___ftneg@f1& (0+255),w,b
  9219   0043F2  11A1               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  9220   0043F4  11A2               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  9221   0043F6  B4D8               	btfsc	status,2,c
  9222   0043F8  D006               	goto	l878
  9223                           
  9224                           ; BSR set to: 0
  9225   0043FA  0E00               	movlw	0
  9226   0043FC  1BA0               	xorwf	___ftneg@f1& (0+255),f,b
  9227   0043FE  0E00               	movlw	0
  9228   004400  1BA1               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  9229   004402  0E80               	movlw	128
  9230   004404  1BA2               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  9231   004406                     l878:
  9232                           
  9233                           ; BSR set to: 0
  9234   004406  C0A0  F0A0         	movff	___ftneg@f1,?___ftneg
  9235   00440A  C0A1  F0A1         	movff	___ftneg@f1+1,?___ftneg+1
  9236   00440E  C0A2  F0A2         	movff	___ftneg@f1+2,?___ftneg+2
  9237                           
  9238                           ; BSR set to: 0
  9239   004412  0012               	return		;funcret
  9240   004414                     __end_of___ftneg:
  9241                           	callstack 0
  9242                           
  9243 ;; *************** function ___ftge *****************
  9244 ;; Defined at:
  9245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  ff1             3   32[BANK0 ] float 
  9248 ;;  ff2             3   35[BANK0 ] float 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;		None               void
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0
  9255 ;; Tracked objects:
  9256 ;;		On entry : 3F/0
  9257 ;;		On exit  : 3F/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;Total ram usage:        9 bytes
  9265 ;; Hardware stack levels used: 1
  9266 ;; Hardware stack levels required when called: 9
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_sprintf
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text38
  9275   0038C4                     __ptext38:
  9276                           	callstack 0
  9277   0038C4                     ___ftge:
  9278                           	callstack 18
  9279                           
  9280                           ; BSR set to: 0
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;incstack = 0
  9284   0038C4  AFA2               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9285   0038C6  D00F               	goto	l7739
  9286                           
  9287                           ; BSR set to: 0
  9288   0038C8  0E00               	movlw	0
  9289   0038CA  6FA6               	movwf	??___ftge& (0+255),b
  9290   0038CC  0E00               	movlw	0
  9291   0038CE  6FA7               	movwf	(??___ftge+1)& (0+255),b
  9292   0038D0  0E80               	movlw	128
  9293   0038D2  6FA8               	movwf	(??___ftge+2)& (0+255),b
  9294   0038D4  51A0               	movf	___ftge@ff1& (0+255),w,b
  9295   0038D6  5DA6               	subwf	??___ftge& (0+255),w,b
  9296   0038D8  6FA0               	movwf	___ftge@ff1& (0+255),b
  9297   0038DA  51A1               	movf	(___ftge@ff1+1)& (0+255),w,b
  9298   0038DC  59A7               	subwfb	(??___ftge+1)& (0+255),w,b
  9299   0038DE  6FA1               	movwf	(___ftge@ff1+1)& (0+255),b
  9300   0038E0  51A2               	movf	(___ftge@ff1+2)& (0+255),w,b
  9301   0038E2  59A8               	subwfb	(??___ftge+2)& (0+255),w,b
  9302   0038E4  6FA2               	movwf	(___ftge@ff1+2)& (0+255),b
  9303   0038E6                     l7739:
  9304                           
  9305                           ; BSR set to: 0
  9306   0038E6  AFA5               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9307   0038E8  D00F               	goto	l7743
  9308                           
  9309                           ; BSR set to: 0
  9310   0038EA  0E00               	movlw	0
  9311   0038EC  6FA6               	movwf	??___ftge& (0+255),b
  9312   0038EE  0E00               	movlw	0
  9313   0038F0  6FA7               	movwf	(??___ftge+1)& (0+255),b
  9314   0038F2  0E80               	movlw	128
  9315   0038F4  6FA8               	movwf	(??___ftge+2)& (0+255),b
  9316   0038F6  51A3               	movf	___ftge@ff2& (0+255),w,b
  9317   0038F8  5DA6               	subwf	??___ftge& (0+255),w,b
  9318   0038FA  6FA3               	movwf	___ftge@ff2& (0+255),b
  9319   0038FC  51A4               	movf	(___ftge@ff2+1)& (0+255),w,b
  9320   0038FE  59A7               	subwfb	(??___ftge+1)& (0+255),w,b
  9321   003900  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  9322   003902  51A5               	movf	(___ftge@ff2+2)& (0+255),w,b
  9323   003904  59A8               	subwfb	(??___ftge+2)& (0+255),w,b
  9324   003906  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  9325   003908                     l7743:
  9326                           
  9327                           ; BSR set to: 0
  9328   003908  0E00               	movlw	0
  9329   00390A  1BA0               	xorwf	___ftge@ff1& (0+255),f,b
  9330   00390C  0E00               	movlw	0
  9331   00390E  1BA1               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9332   003910  0E80               	movlw	128
  9333   003912  1BA2               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9334                           
  9335                           ; BSR set to: 0
  9336   003914  0E00               	movlw	0
  9337   003916  1BA3               	xorwf	___ftge@ff2& (0+255),f,b
  9338   003918  0E00               	movlw	0
  9339   00391A  1BA4               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9340   00391C  0E80               	movlw	128
  9341   00391E  1BA5               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9342   003920  51A3               	movf	___ftge@ff2& (0+255),w,b
  9343   003922  5DA0               	subwf	___ftge@ff1& (0+255),w,b
  9344   003924  51A4               	movf	(___ftge@ff2+1)& (0+255),w,b
  9345   003926  59A1               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9346   003928  51A5               	movf	(___ftge@ff2+2)& (0+255),w,b
  9347   00392A  59A2               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9348   00392C  B0D8               	btfsc	status,0,c
  9349   00392E  D002               	goto	l7749
  9350                           
  9351                           ; BSR set to: 0
  9352   003930  90D8               	bcf	status,0,c
  9353   003932  0012               	return	
  9354   003934                     l7749:
  9355                           
  9356                           ; BSR set to: 0
  9357   003934  80D8               	bsf	status,0,c
  9358                           
  9359                           ; BSR set to: 0
  9360   003936  0012               	return		;funcret
  9361   003938                     __end_of___ftge:
  9362                           	callstack 0
  9363                           
  9364 ;; *************** function _lcd_puts *****************
  9365 ;; Defined at:
  9366 ;;		line 120 in file "lcd_x8.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  s               2   46[BANK0 ] PTR unsigned char 
  9369 ;;		 -> lcd_welcome@Buffer(16), updete_lcd_AN@Buffer(16), update_lcd_setup@Buffer(16), update_lcd_timer@Buffer(16), 
  9370 ;;		 -> update_lcd_COOLER@Buffer(16), update_lcd_temp@Buffer(16), 
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 3F/0
  9379 ;;		On exit  : 3F/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;Total ram usage:        2 bytes
  9387 ;; Hardware stack levels used: 1
  9388 ;; Hardware stack levels required when called: 14
  9389 ;; This function calls:
  9390 ;;		_lcd_putc
  9391 ;; This function is called by:
  9392 ;;		_update_lcd_temp
  9393 ;;		_update_lcd_COOLER
  9394 ;;		_update_lcd_timer
  9395 ;;		_update_lcd_setup
  9396 ;;		_updete_lcd_AN
  9397 ;;		_lcd_welcome
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text39
  9402   004414                     __ptext39:
  9403                           	callstack 0
  9404   004414                     _lcd_puts:
  9405                           	callstack 14
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;lcd_x8.c: 121: while (*s) {
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;incstack = 0
  9412   004414  D00A               	goto	l8541
  9413   004416                     l8537:
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;lcd_x8.c: 122: lcd_putc(*s);
  9417   004416  C0AE  FFD9         	movff	lcd_puts@s,fsr2l
  9418   00441A  C0AF  FFDA         	movff	lcd_puts@s+1,fsr2h
  9419   00441E  50DF               	movf	indf2,w,c
  9420   004420  ECCD  F01E         	call	_lcd_putc
  9421                           
  9422                           ;lcd_x8.c: 123: s++;
  9423   004424  0100               	movlb	0	; () banked
  9424   004426  4BAE               	infsnz	lcd_puts@s& (0+255),f,b
  9425   004428  2BAF               	incf	(lcd_puts@s+1)& (0+255),f,b
  9426   00442A                     l8541:
  9427                           
  9428                           ; BSR set to: 0
  9429   00442A  C0AE  FFD9         	movff	lcd_puts@s,fsr2l
  9430   00442E  C0AF  FFDA         	movff	lcd_puts@s+1,fsr2h
  9431   004432  50DF               	movf	indf2,w,c
  9432   004434  B4D8               	btfsc	status,2,c
  9433   004436  0012               	return	
  9434   004438  D7EE               	goto	l8537
  9435   00443A                     __end_of_lcd_puts:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function _lcd_putc *****************
  9439 ;; Defined at:
  9440 ;;		line 106 in file "lcd_x8.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  c               1    wreg     unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  c               1   45[BANK0 ] unsigned char 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 3F/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9457 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;Total ram usage:        1 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 13
  9461 ;; This function calls:
  9462 ;;		_delay_ms
  9463 ;;		_lcd_gotoxy
  9464 ;;		_lcd_send_byte
  9465 ;; This function is called by:
  9466 ;;		_main
  9467 ;;		_lcd_puts
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text40
  9472   003D9A                     __ptext40:
  9473                           	callstack 0
  9474   003D9A                     _lcd_putc:
  9475                           	callstack 14
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;incstack = 0
  9479                           ;lcd_putc@c stored from wreg
  9480   003D9A  6FAD               	movwf	lcd_putc@c& (0+255),b
  9481                           
  9482                           ;lcd_x8.c: 107: switch (c) {
  9483   003D9C  D01F               	goto	l4781
  9484   003D9E                     l4771:
  9485                           
  9486                           ; BSR set to: 0
  9487   003D9E  0E01               	movlw	1
  9488   003DA0  6FA8               	movwf	lcd_send_byte@n& (0+255),b
  9489   003DA2  0E00               	movlw	0
  9490   003DA4  EC4E  F01F         	call	_lcd_send_byte
  9491                           
  9492                           ;lcd_x8.c: 109: delay_ms(2);
  9493   003DA8  0E00               	movlw	0
  9494   003DAA  0100               	movlb	0	; () banked
  9495   003DAC  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  9496   003DAE  0E02               	movlw	2
  9497   003DB0  6FA0               	movwf	delay_ms@n& (0+255),b
  9498   003DB2  ECD0  F021         	call	_delay_ms	;wreg free
  9499                           
  9500                           ;lcd_x8.c: 110: break;
  9501   003DB6  0012               	return	
  9502   003DB8                     l4773:
  9503                           
  9504                           ; BSR set to: 0
  9505   003DB8  0E02               	movlw	2
  9506   003DBA  6FAA               	movwf	lcd_gotoxy@y& (0+255),b
  9507   003DBC  0E01               	movlw	1
  9508   003DBE  ECBE  F01F         	call	_lcd_gotoxy
  9509                           
  9510                           ;lcd_x8.c: 112: break;
  9511   003DC2  0012               	return	
  9512   003DC4                     l4775:
  9513                           
  9514                           ; BSR set to: 0
  9515   003DC4  0E10               	movlw	16
  9516   003DC6  6FA8               	movwf	lcd_send_byte@n& (0+255),b
  9517   003DC8  0E00               	movlw	0
  9518   003DCA  EC4E  F01F         	call	_lcd_send_byte
  9519                           
  9520                           ;lcd_x8.c: 114: break;
  9521   003DCE  0012               	return	
  9522   003DD0                     l4777:
  9523                           
  9524                           ; BSR set to: 0
  9525   003DD0  C0AD  F0A8         	movff	lcd_putc@c,lcd_send_byte@n
  9526   003DD4  0E01               	movlw	1
  9527   003DD6  EC4E  F01F         	call	_lcd_send_byte
  9528                           
  9529                           ;lcd_x8.c: 116: break;
  9530   003DDA  0012               	return	
  9531   003DDC                     l4781:
  9532   003DDC  0100               	movlb	0	; () banked
  9533   003DDE  51AD               	movf	lcd_putc@c& (0+255),w,b
  9534                           
  9535                           ; Switch size 1, requested type "simple"
  9536                           ; Number of cases is 3, Range of values is 8 to 12
  9537                           ; switch strategies available:
  9538                           ; Name         Instructions Cycles
  9539                           ; simple_byte           10     6 (average)
  9540                           ;	Chosen strategy is simple_byte
  9541   003DE0  0A08               	xorlw	8	; case 8
  9542   003DE2  B4D8               	btfsc	status,2,c
  9543   003DE4  D7EF               	goto	l4775
  9544   003DE6  0A02               	xorlw	2	; case 10
  9545   003DE8  B4D8               	btfsc	status,2,c
  9546   003DEA  D7E6               	goto	l4773
  9547   003DEC  0A06               	xorlw	6	; case 12
  9548   003DEE  B4D8               	btfsc	status,2,c
  9549   003DF0  D7D6               	goto	l4771
  9550   003DF2  D7EE               	goto	l4777
  9551   003DF4                     __end_of_lcd_putc:
  9552                           	callstack 0
  9553                           
  9554 ;; *************** function _lcd_gotoxy *****************
  9555 ;; Defined at:
  9556 ;;		line 89 in file "lcd_x8.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  x               1    wreg     unsigned char 
  9559 ;;  y               1   42[BANK0 ] unsigned char 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  x               1   43[BANK0 ] unsigned char 
  9562 ;;  address         1   44[BANK0 ] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 3F/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9572 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;Total ram usage:        3 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 12
  9579 ;; This function calls:
  9580 ;;		_lcd_send_byte
  9581 ;; This function is called by:
  9582 ;;		_update_lcd_temp
  9583 ;;		_update_lcd_COOLER
  9584 ;;		_update_lcd_timer
  9585 ;;		_update_lcd_setup
  9586 ;;		_updete_lcd_AN
  9587 ;;		_lcd_welcome
  9588 ;;		_lcd_putc
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text41
  9593   003F7C                     __ptext41:
  9594                           	callstack 0
  9595   003F7C                     _lcd_gotoxy:
  9596                           	callstack 14
  9597                           
  9598                           ;incstack = 0
  9599                           ;lcd_gotoxy@x stored from wreg
  9600   003F7C  6FAB               	movwf	lcd_gotoxy@x& (0+255),b
  9601                           
  9602                           ;lcd_x8.c: 90: unsigned char address;;lcd_x8.c: 92: switch (y) {
  9603   003F7E  D009               	goto	l4265
  9604   003F80                     l4255:
  9605                           
  9606                           ; BSR set to: 0
  9607   003F80  0E80               	movlw	128
  9608   003F82  D005               	goto	L7
  9609   003F84                     l4257:
  9610                           
  9611                           ; BSR set to: 0
  9612   003F84  0EC0               	movlw	192
  9613   003F86  D003               	goto	L7
  9614   003F88                     l4259:
  9615                           
  9616                           ; BSR set to: 0
  9617   003F88  0E90               	movlw	144
  9618   003F8A  D001               	goto	L7
  9619   003F8C                     l4261:
  9620                           
  9621                           ; BSR set to: 0
  9622   003F8C  0ED0               	movlw	208
  9623   003F8E                     L7:
  9624   003F8E  6FAC               	movwf	lcd_gotoxy@address& (0+255),b
  9625                           
  9626                           ;lcd_x8.c: 100: break;
  9627   003F90  D00E               	goto	l4267
  9628   003F92                     l4265:
  9629   003F92  0100               	movlb	0	; () banked
  9630   003F94  51AA               	movf	lcd_gotoxy@y& (0+255),w,b
  9631                           
  9632                           ; Switch size 1, requested type "simple"
  9633                           ; Number of cases is 4, Range of values is 1 to 4
  9634                           ; switch strategies available:
  9635                           ; Name         Instructions Cycles
  9636                           ; simple_byte           13     7 (average)
  9637                           ;	Chosen strategy is simple_byte
  9638   003F96  0A01               	xorlw	1	; case 1
  9639   003F98  B4D8               	btfsc	status,2,c
  9640   003F9A  D7F2               	goto	l4255
  9641   003F9C  0A03               	xorlw	3	; case 2
  9642   003F9E  B4D8               	btfsc	status,2,c
  9643   003FA0  D7F1               	goto	l4257
  9644   003FA2  0A01               	xorlw	1	; case 3
  9645   003FA4  B4D8               	btfsc	status,2,c
  9646   003FA6  D7F0               	goto	l4259
  9647   003FA8  0A07               	xorlw	7	; case 4
  9648   003FAA  B4D8               	btfsc	status,2,c
  9649   003FAC  D7EF               	goto	l4261
  9650   003FAE                     l4267:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;lcd_x8.c: 102: address += x - 1;
  9654   003FAE  05AB               	decf	lcd_gotoxy@x& (0+255),w,b
  9655   003FB0  27AC               	addwf	lcd_gotoxy@address& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  9659   003FB2  51AC               	movf	lcd_gotoxy@address& (0+255),w,b
  9660   003FB4  0980               	iorlw	128
  9661   003FB6  6FA8               	movwf	lcd_send_byte@n& (0+255),b
  9662   003FB8  0E00               	movlw	0
  9663   003FBA  EC4E  F01F         	call	_lcd_send_byte
  9664   003FBE  0012               	return		;funcret
  9665   003FC0                     __end_of_lcd_gotoxy:
  9666                           	callstack 0
  9667                           
  9668 ;; *************** function _lcd_init *****************
  9669 ;; Defined at:
  9670 ;;		line 56 in file "lcd_x8.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;		None
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  i               1   42[BANK0 ] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 3F/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;Total ram usage:        1 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; Hardware stack levels required when called: 12
  9691 ;; This function calls:
  9692 ;;		_delay_ms
  9693 ;;		_lcd_send_byte
  9694 ;;		_lcd_send_nibble
  9695 ;; This function is called by:
  9696 ;;		_main
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text42
  9701   003C86                     __ptext42:
  9702                           	callstack 0
  9703   003C86                     _lcd_init:
  9704                           	callstack 18
  9705                           
  9706                           ;lcd_x8.c: 58: unsigned char i;;lcd_x8.c: 61: PORTEbits.RE2 = 0;
  9707                           
  9708                           ;incstack = 0
  9709   003C86  9484               	bcf	132,2,c	;volatile
  9710                           
  9711                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
  9712   003C88  9284               	bcf	132,1,c	;volatile
  9713                           
  9714                           ;lcd_x8.c: 65: delay_ms(25);
  9715   003C8A  0E00               	movlw	0
  9716   003C8C  0100               	movlb	0	; () banked
  9717   003C8E  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  9718   003C90  0E19               	movlw	25
  9719   003C92  6FA0               	movwf	delay_ms@n& (0+255),b
  9720   003C94  ECD0  F021         	call	_delay_ms	;wreg free
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
  9724   003C98  0E01               	movlw	1
  9725   003C9A  6FAA               	movwf	lcd_init@i& (0+255),b
  9726   003C9C                     l6681:
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;lcd_x8.c: 67: lcd_send_nibble(3);
  9730   003C9C  0E03               	movlw	3
  9731   003C9E  EC1D  F022         	call	_lcd_send_nibble
  9732                           
  9733                           ;lcd_x8.c: 69: delay_ms(6);
  9734   003CA2  0E00               	movlw	0
  9735   003CA4  0100               	movlb	0	; () banked
  9736   003CA6  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  9737   003CA8  0E06               	movlw	6
  9738   003CAA  6FA0               	movwf	delay_ms@n& (0+255),b
  9739   003CAC  ECD0  F021         	call	_delay_ms	;wreg free
  9740                           
  9741                           ; BSR set to: 0
  9742   003CB0  2BAA               	incf	lcd_init@i& (0+255),f,b
  9743                           
  9744                           ; BSR set to: 0
  9745   003CB2  0E03               	movlw	3
  9746   003CB4  65AA               	cpfsgt	lcd_init@i& (0+255),b
  9747   003CB6  D7F2               	goto	l6681
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;lcd_x8.c: 70: };lcd_x8.c: 72: lcd_send_nibble(2);
  9751   003CB8  0E02               	movlw	2
  9752   003CBA  EC1D  F022         	call	_lcd_send_nibble
  9753                           
  9754                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
  9755   003CBE  0E00               	movlw	0
  9756   003CC0  0100               	movlb	0	; () banked
  9757   003CC2  6FAA               	movwf	lcd_init@i& (0+255),b
  9758   003CC4                     l6695:
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
  9762   003CC4  51AA               	movf	lcd_init@i& (0+255),w,b
  9763   003CC6  0FDB               	addlw	low _LCD_INIT_STRING
  9764   003CC8  6ED9               	movwf	fsr2l,c
  9765   003CCA  6ADA               	clrf	fsr2h,c
  9766   003CCC  50DF               	movf	indf2,w,c
  9767   003CCE  6FA8               	movwf	lcd_send_byte@n& (0+255),b
  9768   003CD0  0E00               	movlw	0
  9769   003CD2  EC4E  F01F         	call	_lcd_send_byte
  9770   003CD6  0100               	movlb	0	; () banked
  9771   003CD8  2BAA               	incf	lcd_init@i& (0+255),f,b
  9772                           
  9773                           ; BSR set to: 0
  9774   003CDA  0E03               	movlw	3
  9775   003CDC  65AA               	cpfsgt	lcd_init@i& (0+255),b
  9776   003CDE  D7F2               	goto	l6695
  9777   003CE0  0012               	return	
  9778   003CE2                     __end_of_lcd_init:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _lcd_send_byte *****************
  9782 ;; Defined at:
  9783 ;;		line 39 in file "lcd_x8.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  cm_data         1    wreg     unsigned char 
  9786 ;;  n               1   40[BANK0 ] unsigned char 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  cm_data         1   41[BANK0 ] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9798 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;Total ram usage:        2 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 11
  9805 ;; This function calls:
  9806 ;;		_delay_cycles
  9807 ;;		_delay_ms
  9808 ;;		_lcd_send_nibble
  9809 ;; This function is called by:
  9810 ;;		_lcd_init
  9811 ;;		_lcd_gotoxy
  9812 ;;		_lcd_putc
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text43
  9817   003E9C                     __ptext43:
  9818                           	callstack 0
  9819   003E9C                     _lcd_send_byte:
  9820                           	callstack 15
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;incstack = 0
  9824                           ;lcd_send_byte@cm_data stored from wreg
  9825   003E9C  0100               	movlb	0	; () banked
  9826   003E9E  6FA9               	movwf	lcd_send_byte@cm_data& (0+255),b
  9827                           
  9828                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
  9829   003EA0  0100               	movlb	0	; () banked
  9830   003EA2  B1A9               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
  9831   003EA4  D002               	bra	u4055
  9832   003EA6  9484               	bcf	132,2,c	;volatile
  9833   003EA8  D001               	bra	u4056
  9834   003EAA                     u4055:
  9835   003EAA  8484               	bsf	132,2,c	;volatile
  9836   003EAC                     u4056:
  9837                           
  9838                           ;lcd_x8.c: 44: delay_cycles(1);
  9839   003EAC  0E01               	movlw	1
  9840   003EAE  EC16  F021         	call	_delay_cycles
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;lcd_x8.c: 46: delay_cycles(1);
  9844   003EB2  0E01               	movlw	1
  9845   003EB4  EC16  F021         	call	_delay_cycles
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
  9849   003EB8  9284               	bcf	132,1,c	;volatile
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
  9853   003EBA  39A8               	swapf	lcd_send_byte@n& (0+255),w,b
  9854   003EBC  0B0F               	andlw	15
  9855   003EBE  EC1D  F022         	call	_lcd_send_nibble
  9856                           
  9857                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
  9858   003EC2  0100               	movlb	0	; () banked
  9859   003EC4  51A8               	movf	lcd_send_byte@n& (0+255),w,b
  9860   003EC6  0B0F               	andlw	15
  9861   003EC8  EC1D  F022         	call	_lcd_send_nibble
  9862                           
  9863                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  9864   003ECC  0100               	movlb	0	; () banked
  9865   003ECE  51A9               	movf	lcd_send_byte@cm_data& (0+255),w,b
  9866   003ED0  B4D8               	btfsc	status,2,c
  9867   003ED2  D005               	goto	l4161
  9868                           
  9869                           ; BSR set to: 0
  9870   003ED4  0E32               	movlw	50
  9871   003ED6                     u11777:
  9872   003ED6  0004               	clrwdt	
  9873   003ED8  2EE8               	decfsz	wreg,f,c
  9874   003EDA  D7FD               	bra	u11777
  9875   003EDC  0012               	return	
  9876   003EDE                     l4161:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;lcd_x8.c: 51: else;lcd_x8.c: 52: delay_ms(2);
  9880   003EDE  0E00               	movlw	0
  9881   003EE0  6FA1               	movwf	(delay_ms@n+1)& (0+255),b
  9882   003EE2  0E02               	movlw	2
  9883   003EE4  6FA0               	movwf	delay_ms@n& (0+255),b
  9884   003EE6  ECD0  F021         	call	_delay_ms	;wreg free
  9885   003EEA  0012               	return		;funcret
  9886   003EEC                     __end_of_lcd_send_byte:
  9887                           	callstack 0
  9888                           
  9889 ;; *************** function _lcd_send_nibble *****************
  9890 ;; Defined at:
  9891 ;;		line 29 in file "lcd_x8.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  n               1    wreg     unsigned char 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  n               1   39[BANK0 ] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;Total ram usage:        2 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 10
  9912 ;; This function calls:
  9913 ;;		_delay_cycles
  9914 ;; This function is called by:
  9915 ;;		_lcd_send_byte
  9916 ;;		_lcd_init
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text44
  9921   00443A                     __ptext44:
  9922                           	callstack 0
  9923   00443A                     _lcd_send_nibble:
  9924                           	callstack 15
  9925                           
  9926                           ;incstack = 0
  9927                           ;lcd_send_nibble@n stored from wreg
  9928   00443A  0100               	movlb	0	; () banked
  9929   00443C  6FA7               	movwf	lcd_send_nibble@n& (0+255),b
  9930                           
  9931                           ;lcd_x8.c: 31: lcd.data = n;
  9932   00443E  C0A7  F0A6         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  9933   004442  0100               	movlb	0	; () banked
  9934   004444  3BA6               	swapf	??_lcd_send_nibble& (0+255),f,b
  9935   004446  5083               	movf	131,w,c
  9936   004448  19A6               	xorwf	??_lcd_send_nibble& (0+255),w,b
  9937   00444A  0B0F               	andlw	-241
  9938   00444C  19A6               	xorwf	??_lcd_send_nibble& (0+255),w,b
  9939   00444E  6E83               	movwf	131,c
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;lcd_x8.c: 33: delay_cycles(1);
  9943   004450  0E01               	movlw	1
  9944   004452  EC16  F021         	call	_delay_cycles
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
  9948   004456  8284               	bsf	132,1,c	;volatile
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  9952   004458  0004               	clrwdt	
  9953   00445A  F000               	nop		;2 cycle nop
  9954                           
  9955                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
  9956   00445C  9284               	bcf	132,1,c	;volatile
  9957   00445E  0012               	return		;funcret
  9958   004460                     __end_of_lcd_send_nibble:
  9959                           	callstack 0
  9960                           
  9961 ;; *************** function _delay_cycles *****************
  9962 ;; Defined at:
  9963 ;;		line 20 in file "lcd_x8.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;  n               1    wreg     unsigned char 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  n               1   35[BANK0 ] unsigned char 
  9968 ;;  x               2   36[BANK0 ] int 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  1    wreg      void 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 3F/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;Total ram usage:        6 bytes
  9983 ;; Hardware stack levels used: 1
  9984 ;; Hardware stack levels required when called: 9
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_lcd_send_nibble
  9989 ;;		_lcd_send_byte
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text45
  9994   00422C                     __ptext45:
  9995                           	callstack 0
  9996   00422C                     _delay_cycles:
  9997                           	callstack 15
  9998                           
  9999                           ;incstack = 0
 10000                           ;delay_cycles@n stored from wreg
 10001   00422C  0100               	movlb	0	; () banked
 10002   00422E  6FA3               	movwf	delay_cycles@n& (0+255),b
 10003                           
 10004                           ;lcd_x8.c: 21: int x;;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 10005   004230  0E00               	movlw	0
 10006   004232  0100               	movlb	0	; () banked
 10007   004234  6FA5               	movwf	(delay_cycles@x+1)& (0+255),b
 10008   004236  0E00               	movlw	0
 10009   004238  6FA4               	movwf	delay_cycles@x& (0+255),b
 10010   00423A  D004               	goto	l4105
 10011   00423C                     l280:
 10012                           
 10013                           ; BSR set to: 0
 10014   00423C  0004               	clrwdt		;# 
 10015   00423E  0100               	movlb	0	; () banked
 10016   004240  4BA4               	infsnz	delay_cycles@x& (0+255),f,b
 10017   004242  2BA5               	incf	(delay_cycles@x+1)& (0+255),f,b
 10018   004244                     l4105:
 10019                           
 10020                           ; BSR set to: 0
 10021   004244  51A3               	movf	delay_cycles@n& (0+255),w,b
 10022   004246  6FA0               	movwf	??_delay_cycles& (0+255),b
 10023   004248  6BA1               	clrf	(??_delay_cycles+1)& (0+255),b
 10024   00424A  51A4               	movf	delay_cycles@x& (0+255),w,b
 10025   00424C  5DA0               	subwf	??_delay_cycles& (0+255),w,b
 10026   00424E  51A1               	movf	(??_delay_cycles+1)& (0+255),w,b
 10027   004250  0A80               	xorlw	128
 10028   004252  6FA2               	movwf	(??_delay_cycles+2)& (0+255),b
 10029   004254  51A5               	movf	(delay_cycles@x+1)& (0+255),w,b
 10030   004256  0A80               	xorlw	128
 10031   004258  59A2               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 10032   00425A  A0D8               	btfss	status,0,c
 10033   00425C  0012               	return	
 10034   00425E  D7EE               	goto	l280
 10035   004260                     __end_of_delay_cycles:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function _delay_ms *****************
 10039 ;; Defined at:
 10040 ;;		line 12 in file "lcd_x8.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  n               2   32[BANK0 ] unsigned int 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  x               2   34[BANK0 ] int 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 3F/0
 10051 ;;		On exit  : 3F/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;Total ram usage:        4 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 9
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_lcd_welcome
 10065 ;;		_main
 10066 ;;		_lcd_send_byte
 10067 ;;		_lcd_init
 10068 ;;		_lcd_putc
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text46
 10073   0043A0                     __ptext46:
 10074                           	callstack 0
 10075   0043A0                     _delay_ms:
 10076                           	callstack 16
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;lcd_x8.c: 13: int x;;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;incstack = 0
 10083   0043A0  0E00               	movlw	0
 10084   0043A2  6FA3               	movwf	(delay_ms@x+1)& (0+255),b
 10085   0043A4  0E00               	movlw	0
 10086   0043A6  6FA2               	movwf	delay_ms@x& (0+255),b
 10087   0043A8  D008               	goto	l273
 10088   0043AA                     l4115:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 10092   0043AA  0EC8               	movlw	200
 10093   0043AC                     u11787:
 10094   0043AC  0004               	clrwdt	
 10095   0043AE  0004               	clrwdt	
 10096   0043B0  2EE8               	decfsz	wreg,f,c
 10097   0043B2  D7FC               	bra	u11787
 10098   0043B4  0100               	movlb	0	; () banked
 10099   0043B6  4BA2               	infsnz	delay_ms@x& (0+255),f,b
 10100   0043B8  2BA3               	incf	(delay_ms@x+1)& (0+255),f,b
 10101   0043BA                     l273:
 10102                           
 10103                           ; BSR set to: 0
 10104   0043BA  51A2               	movf	delay_ms@x& (0+255),w,b
 10105   0043BC  5DA0               	subwf	delay_ms@n& (0+255),w,b
 10106   0043BE  51A3               	movf	(delay_ms@x+1)& (0+255),w,b
 10107   0043C0  59A1               	subwfb	(delay_ms@n+1)& (0+255),w,b
 10108   0043C2  A0D8               	btfss	status,0,c
 10109   0043C4  0012               	return	
 10110   0043C6  D7F1               	goto	l4115
 10111   0043C8                     __end_of_delay_ms:
 10112                           	callstack 0
 10113                           
 10114 ;; *************** function _init_adc_no_lib *****************
 10115 ;; Defined at:
 10116 ;;		line 11 in file "my_adc.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;		None
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  1    wreg      void 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2
 10125 ;; Tracked objects:
 10126 ;;		On entry : 3F/0
 10127 ;;		On exit  : 3F/0
 10128 ;;		Unchanged: 3F/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used: 1
 10136 ;; Hardware stack levels required when called: 9
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text47
 10145   0045EC                     __ptext47:
 10146                           	callstack 0
 10147   0045EC                     _init_adc_no_lib:
 10148                           	callstack 21
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;my_adc.c: 14: ADCON0 = 0;
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;incstack = 0
 10155   0045EC  0E00               	movlw	0
 10156   0045EE  6EC2               	movwf	194,c	;volatile
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;my_adc.c: 15: ADCON0bits.ADON = 1;
 10160   0045F0  80C2               	bsf	194,0,c	;volatile
 10161                           
 10162                           ;my_adc.c: 18: ADCON2 = 0b10001001;
 10163   0045F2  0E89               	movlw	137
 10164   0045F4  6EC0               	movwf	192,c	;volatile
 10165                           
 10166                           ; BSR set to: 0
 10167   0045F6  0012               	return		;funcret
 10168   0045F8                     __end_of_init_adc_no_lib:
 10169                           	callstack 0
 10170                           
 10171 ;; *************** function _initTimer0 *****************
 10172 ;; Defined at:
 10173 ;;		line 166 in file "Pic_App.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 9
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_main
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text48
 10202   004558                     __ptext48:
 10203                           	callstack 0
 10204   004558                     _initTimer0:
 10205                           	callstack 21
 10206                           
 10207                           ;Pic_App.c: 167: T0CON = 0;
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;incstack = 0
 10211   004558  0E00               	movlw	0
 10212   00455A  6ED5               	movwf	213,c	;volatile
 10213                           
 10214                           ;Pic_App.c: 171: INTCONbits.T0IF = 0;
 10215   00455C  94F2               	bcf	242,2,c	;volatile
 10216                           
 10217                           ;Pic_App.c: 172: T0CONbits.T0PS0 = 1;
 10218   00455E  80D5               	bsf	213,0,c	;volatile
 10219                           
 10220                           ;Pic_App.c: 173: T0CONbits.T0PS1 = 1;
 10221   004560  82D5               	bsf	213,1,c	;volatile
 10222                           
 10223                           ;Pic_App.c: 174: T0CONbits.T0PS2 = 0;
 10224   004562  94D5               	bcf	213,2,c	;volatile
 10225                           
 10226                           ;Pic_App.c: 175: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 10227   004564  0E0B               	movlw	11
 10228   004566  6ED7               	movwf	215,c	;volatile
 10229                           
 10230                           ;Pic_App.c: 176: TMR0L = (unsigned char) (3036 & 0x00FF);
 10231   004568  0EDC               	movlw	220
 10232   00456A  6ED6               	movwf	214,c	;volatile
 10233                           
 10234                           ;Pic_App.c: 177: INTCON2 = 0x00;
 10235   00456C  0E00               	movlw	0
 10236   00456E  6EF1               	movwf	241,c	;volatile
 10237                           
 10238                           ;Pic_App.c: 178: INTCONbits.GIE = 1;
 10239   004570  8EF2               	bsf	242,7,c	;volatile
 10240                           
 10241                           ;Pic_App.c: 179: INTCONbits.GIEH = 1;
 10242   004572  8EF2               	bsf	242,7,c	;volatile
 10243                           
 10244                           ;Pic_App.c: 180: INTCONbits.T0IE = 1;
 10245   004574  8AF2               	bsf	242,5,c	;volatile
 10246   004576  0012               	return		;funcret
 10247   004578                     __end_of_initTimer0:
 10248                           	callstack 0
 10249                           
 10250 ;; *************** function _initMode *****************
 10251 ;; Defined at:
 10252 ;;		line 285 in file "Pic_App.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;		None
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		None
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;Total ram usage:        0 bytes
 10271 ;; Hardware stack levels used: 1
 10272 ;; Hardware stack levels required when called: 9
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_main
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text49
 10281   004610                     __ptext49:
 10282                           	callstack 0
 10283   004610                     _initMode:
 10284                           	callstack 21
 10285                           
 10286                           ;incstack = 0
 10287   004610  0012               	return		;funcret
 10288   004612                     __end_of_initMode:
 10289                           	callstack 0
 10290                           
 10291 ;; *************** function _highIsr *****************
 10292 ;; Defined at:
 10293 ;;		line 138 in file "Pic_App.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;		None
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  1    wreg      void 
 10300 ;; Registers used:
 10301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;Total ram usage:       10 bytes
 10312 ;; Hardware stack levels used: 1
 10313 ;; Hardware stack levels required when called: 8
 10314 ;; This function calls:
 10315 ;;		_Timer0_isr
 10316 ;;		_set_clock_mode
 10317 ;;		_set_setup_mode
 10318 ;;		i2_update_lcd
 10319 ;; This function is called by:
 10320 ;;		Interrupt level 2
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	intcode
 10325   000008                     __pintcode:
 10326                           	callstack 0
 10327   000008                     _highIsr:
 10328                           	callstack 14
 10329                           
 10330                           ;incstack = 0
 10331   000008  827D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10332   00000A  ED26  F01C         	call	int_func,f	;refresh shadow registers
 10333                           
 10334                           	psect	intcode_body
 10335   00384C                     __pintcode_body:
 10336                           	callstack 14
 10337   00384C                     int_func:
 10338                           	callstack 14
 10339   00384C  0006               	pop		; remove dummy address from shadow register refresh
 10340   00384E  CFE9 F096          	movff	fsr0l,??_highIsr
 10341   003852  CFEA F097          	movff	fsr0h,??_highIsr+1
 10342   003856  CFD9 F098          	movff	fsr2l,??_highIsr+2
 10343   00385A  CFDA F099          	movff	fsr2h,??_highIsr+3
 10344   00385E  CFF3 F09A          	movff	prodl,??_highIsr+4
 10345   003862  CFF4 F09B          	movff	prodh,??_highIsr+5
 10346   003866  CFF6 F09C          	movff	tblptrl,??_highIsr+6
 10347   00386A  CFF7 F09D          	movff	tblptrh,??_highIsr+7
 10348   00386E  CFF8 F09E          	movff	tblptru,??_highIsr+8
 10349   003872  CFF5 F09F          	movff	tablat,??_highIsr+9
 10350                           
 10351                           ;Pic_App.c: 141: if(INTCONbits.TMR0IF) Timer0_isr();
 10352   003876  A4F2               	btfss	242,2,c	;volatile
 10353   003878  D003               	goto	i2l177
 10354   00387A  EC25  F01F         	call	_Timer0_isr	;wreg free
 10355   00387E  D00C               	goto	i2l182
 10356   003880                     i2l177:
 10357                           
 10358                           ;Pic_App.c: 142: else if(INTCON3bits.INT1F) {
 10359   003880  A0F0               	btfss	240,0,c	;volatile
 10360   003882  D005               	goto	i2l179
 10361                           
 10362                           ;Pic_App.c: 143: set_clock_mode();
 10363   003884  EC4A  F021         	call	_set_clock_mode	;wreg free
 10364   003888                     i2l9271:
 10365                           
 10366                           ;Pic_App.c: 144: update_lcd();
 10367   003888  ECE3  F022         	call	i2_update_lcd	;wreg free
 10368                           
 10369                           ;Pic_App.c: 145: }
 10370   00388C  D005               	goto	i2l182
 10371   00388E                     i2l179:
 10372                           
 10373                           ;Pic_App.c: 146: else if(INTCON3bits.INT2F) {
 10374   00388E  A2F0               	btfss	240,1,c	;volatile
 10375   003890  D003               	goto	i2l182
 10376                           
 10377                           ;Pic_App.c: 147: set_setup_mode();
 10378   003892  ECA5  F021         	call	_set_setup_mode	;wreg free
 10379   003896  D7F8               	goto	i2l9271
 10380   003898                     i2l182:
 10381   003898  C09F  FFF5         	movff	??_highIsr+9,tablat
 10382   00389C  C09E  FFF8         	movff	??_highIsr+8,tblptru
 10383   0038A0  C09D  FFF7         	movff	??_highIsr+7,tblptrh
 10384   0038A4  C09C  FFF6         	movff	??_highIsr+6,tblptrl
 10385   0038A8  C09B  FFF4         	movff	??_highIsr+5,prodh
 10386   0038AC  C09A  FFF3         	movff	??_highIsr+4,prodl
 10387   0038B0  C099  FFDA         	movff	??_highIsr+3,fsr2h
 10388   0038B4  C098  FFD9         	movff	??_highIsr+2,fsr2l
 10389   0038B8  C097  FFEA         	movff	??_highIsr+1,fsr0h
 10390   0038BC  C096  FFE9         	movff	??_highIsr,fsr0l
 10391   0038C0  927D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10392   0038C2  0011               	retfie		f
 10393   0038C4                     __end_of_highIsr:
 10394                           	callstack 0
 10395                           
 10396 ;; *************** function i2_update_lcd *****************
 10397 ;; Defined at:
 10398 ;;		line 277 in file "Pic_App.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;		None
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;		None
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  1    wreg      void 
 10405 ;; Registers used:
 10406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;Total ram usage:        0 bytes
 10417 ;; Hardware stack levels used: 1
 10418 ;; Hardware stack levels required when called: 7
 10419 ;; This function calls:
 10420 ;;		i2_update_lcd_COOLER
 10421 ;;		i2_update_lcd_setup
 10422 ;;		i2_update_lcd_temp
 10423 ;;		i2_update_lcd_timer
 10424 ;;		i2_updete_lcd_AN
 10425 ;; This function is called by:
 10426 ;;		_highIsr
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text51
 10431   0045C6                     __ptext51:
 10432                           	callstack 0
 10433   0045C6                     i2_update_lcd:
 10434                           	callstack 14
 10435                           
 10436                           ;Pic_App.c: 278: update_lcd_timer();
 10437                           
 10438                           ;incstack = 0
 10439   0045C6  EC71  F01E         	call	i2_update_lcd_timer	;wreg free
 10440                           
 10441                           ;Pic_App.c: 279: update_lcd_temp();
 10442   0045CA  EC30  F021         	call	i2_update_lcd_temp	;wreg free
 10443                           
 10444                           ;Pic_App.c: 280: update_lcd_COOLER();
 10445   0045CE  EC9A  F01A         	call	i2_update_lcd_COOLER	;wreg free
 10446                           
 10447                           ;Pic_App.c: 281: update_lcd_setup();
 10448   0045D2  ECA4  F01B         	call	i2_update_lcd_setup	;wreg free
 10449                           
 10450                           ;Pic_App.c: 282: updete_lcd_AN();
 10451   0045D6  EC42  F020         	call	i2_updete_lcd_AN	;wreg free
 10452   0045DA  0012               	return		;funcret
 10453   0045DC                     __end_ofi2_update_lcd:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function i2_updete_lcd_AN *****************
 10457 ;; Defined at:
 10458 ;;		line 271 in file "Pic_App.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;		None
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  Buffer         16  104[COMRAM] unsigned char [16]
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;Total ram usage:       16 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 6
 10479 ;; This function calls:
 10480 ;;		i2_lcd_gotoxy
 10481 ;;		i2_lcd_puts
 10482 ;;		i2_sprintf
 10483 ;; This function is called by:
 10484 ;;		i2_update_lcd
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text52
 10489   004084                     __ptext52:
 10490                           	callstack 0
 10491   004084                     i2_updete_lcd_AN:
 10492                           	callstack 14
 10493                           
 10494                           ;Pic_App.c: 272: unsigned char Buffer[16];;Pic_App.c: 273: lcd_gotoxy(1, 4);
 10495                           
 10496                           ;incstack = 0
 10497   004084  0E04               	movlw	4
 10498   004086  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 10499   004088  0E01               	movlw	1
 10500   00408A  EC01  F020         	call	i2_lcd_gotoxy
 10501                           
 10502                           ;Pic_App.c: 274: sprintf(Buffer, "%4.2fV | %4.2fV    ", AN[0], AN[1]);
 10503   00408E  0E69               	movlw	low i2updete_lcd_AN@Buffer
 10504   004090  6E3C               	movwf	i2sprintf@sp^0,c
 10505   004092  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 10506   004094  0E40               	movlw	low STR_11
 10507   004096  6E3E               	movwf	i2sprintf@f^0,c
 10508   004098  0EFF               	movlw	high STR_11
 10509   00409A  6E3F               	movwf	(i2sprintf@f+1)^0,c
 10510   00409C  C16D  F040         	movff	_AN,?i2_sprintf+4
 10511   0040A0  C16E  F041         	movff	_AN+1,?i2_sprintf+5
 10512   0040A4  C16F  F042         	movff	_AN+2,?i2_sprintf+6
 10513   0040A8  C170  F043         	movff	_AN+3,?i2_sprintf+7
 10514   0040AC  C171  F044         	movff	_AN+4,?i2_sprintf+8
 10515   0040B0  C172  F045         	movff	_AN+5,?i2_sprintf+9
 10516   0040B4  ECBC  F005         	call	i2_sprintf	;wreg free
 10517                           
 10518                           ;Pic_App.c: 275: lcd_puts(Buffer);
 10519   0040B8  0E69               	movlw	low i2updete_lcd_AN@Buffer
 10520   0040BA  6E0F               	movwf	i2lcd_puts@s^0,c
 10521   0040BC  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 10522   0040BE  EC68  F022         	call	i2_lcd_puts	;wreg free
 10523   0040C2  0012               	return		;funcret
 10524   0040C4                     __end_ofi2_updete_lcd_AN:
 10525                           	callstack 0
 10526                           
 10527 ;; *************** function i2_update_lcd_timer *****************
 10528 ;; Defined at:
 10529 ;;		line 241 in file "Pic_App.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;		None
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;  Buffer         16    0[BANK0 ] unsigned char [16]
 10534 ;;  hh              2   20[BANK0 ] int 
 10535 ;;  mm              2   18[BANK0 ] int 
 10536 ;;  ss              2   16[BANK0 ] int 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;Total ram usage:       22 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 6
 10553 ;; This function calls:
 10554 ;;		i2_lcd_gotoxy
 10555 ;;		i2_lcd_puts
 10556 ;;		i2_set_baoundares
 10557 ;;		i2_sprintf
 10558 ;; This function is called by:
 10559 ;;		i2_update_lcd
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text53
 10564   003CE2                     __ptext53:
 10565                           	callstack 0
 10566   003CE2                     i2_update_lcd_timer:
 10567                           	callstack 14
 10568                           
 10569                           ;Pic_App.c: 242: unsigned char Buffer[16];;Pic_App.c: 243: set_baoundares();
 10570                           
 10571                           ;incstack = 0
 10572   003CE2  ECB4  F019         	call	i2_set_baoundares	;wreg free
 10573                           
 10574                           ; BSR set to: 1
 10575                           ;Pic_App.c: 244: int ss = count_sec;
 10576   003CE6  C180  F090         	movff	_count_sec,i2update_lcd_timer@ss
 10577   003CEA  C181  F091         	movff	_count_sec+1,i2update_lcd_timer@ss+1
 10578                           
 10579                           ; BSR set to: 1
 10580                           ;Pic_App.c: 245: int mm = count_min;
 10581   003CEE  C17E  F092         	movff	_count_min,i2update_lcd_timer@mm
 10582   003CF2  C17F  F093         	movff	_count_min+1,i2update_lcd_timer@mm+1
 10583                           
 10584                           ; BSR set to: 1
 10585                           ;Pic_App.c: 246: int hh = count_hour;
 10586   003CF6  C17C  F094         	movff	_count_hour,i2update_lcd_timer@hh
 10587   003CFA  C17D  F095         	movff	_count_hour+1,i2update_lcd_timer@hh+1
 10588                           
 10589                           ;Pic_App.c: 248: lcd_gotoxy(1, 1);
 10590   003CFE  0E01               	movlw	1
 10591   003D00  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 10592   003D02  0E01               	movlw	1
 10593   003D04  EC01  F020         	call	i2_lcd_gotoxy
 10594                           
 10595                           ;Pic_App.c: 249: sprintf(Buffer, "%02d:%02d:%02d", hh, mm, ss);
 10596   003D08  0E80               	movlw	low i2update_lcd_timer@Buffer
 10597   003D0A  6E3C               	movwf	i2sprintf@sp^0,c
 10598   003D0C  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 10599   003D0E  0E31               	movlw	low (STR_10+6)
 10600   003D10  6E3E               	movwf	i2sprintf@f^0,c
 10601   003D12  0EFF               	movlw	high (STR_10+6)
 10602   003D14  6E3F               	movwf	(i2sprintf@f+1)^0,c
 10603   003D16  C094  F040         	movff	i2update_lcd_timer@hh,?i2_sprintf+4
 10604   003D1A  C095  F041         	movff	i2update_lcd_timer@hh+1,?i2_sprintf+5
 10605   003D1E  C092  F042         	movff	i2update_lcd_timer@mm,?i2_sprintf+6
 10606   003D22  C093  F043         	movff	i2update_lcd_timer@mm+1,?i2_sprintf+7
 10607   003D26  C090  F044         	movff	i2update_lcd_timer@ss,?i2_sprintf+8
 10608   003D2A  C091  F045         	movff	i2update_lcd_timer@ss+1,?i2_sprintf+9
 10609   003D2E  ECBC  F005         	call	i2_sprintf	;wreg free
 10610                           
 10611                           ;Pic_App.c: 250: lcd_puts(Buffer);
 10612   003D32  0E80               	movlw	low i2update_lcd_timer@Buffer
 10613   003D34  6E0F               	movwf	i2lcd_puts@s^0,c
 10614   003D36  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 10615   003D38  EC68  F022         	call	i2_lcd_puts	;wreg free
 10616   003D3C  0012               	return		;funcret
 10617   003D3E                     __end_ofi2_update_lcd_timer:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function i2_update_lcd_temp *****************
 10621 ;; Defined at:
 10622 ;;		line 210 in file "Pic_App.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  Buffer         16  104[COMRAM] unsigned char [16]
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;Total ram usage:       16 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 6
 10643 ;; This function calls:
 10644 ;;		i2_lcd_gotoxy
 10645 ;;		i2_lcd_puts
 10646 ;;		i2_sprintf
 10647 ;; This function is called by:
 10648 ;;		i2_update_lcd
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text54
 10653   004260                     __ptext54:
 10654                           	callstack 0
 10655   004260                     i2_update_lcd_temp:
 10656                           	callstack 14
 10657                           
 10658                           ;Pic_App.c: 211: unsigned char Buffer[16];;Pic_App.c: 212: lcd_gotoxy(9, 1);
 10659                           
 10660                           ;incstack = 0
 10661   004260  0E01               	movlw	1
 10662   004262  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 10663   004264  0E09               	movlw	9
 10664   004266  EC01  F020         	call	i2_lcd_gotoxy
 10665                           
 10666                           ;Pic_App.c: 213: sprintf(Buffer, "/T=%4.2fC", AN[2]);
 10667   00426A  0E69               	movlw	low i2update_lcd_temp@Buffer
 10668   00426C  6E3C               	movwf	i2sprintf@sp^0,c
 10669   00426E  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 10670   004270  0ED8               	movlw	low STR_1
 10671   004272  6E3E               	movwf	i2sprintf@f^0,c
 10672   004274  0EFF               	movlw	high STR_1
 10673   004276  6E3F               	movwf	(i2sprintf@f+1)^0,c
 10674   004278  C173  F040         	movff	_AN+6,?i2_sprintf+4
 10675   00427C  C174  F041         	movff	_AN+7,?i2_sprintf+5
 10676   004280  C175  F042         	movff	_AN+8,?i2_sprintf+6
 10677   004284  ECBC  F005         	call	i2_sprintf	;wreg free
 10678                           
 10679                           ;Pic_App.c: 214: lcd_puts(Buffer);
 10680   004288  0E69               	movlw	low i2update_lcd_temp@Buffer
 10681   00428A  6E0F               	movwf	i2lcd_puts@s^0,c
 10682   00428C  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 10683   00428E  EC68  F022         	call	i2_lcd_puts	;wreg free
 10684   004292  0012               	return		;funcret
 10685   004294                     __end_ofi2_update_lcd_temp:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function i2_update_lcd_setup *****************
 10689 ;; Defined at:
 10690 ;;		line 253 in file "Pic_App.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  Buffer         16    0[BANK0 ] unsigned char [16]
 10695 ;;  hh              2   20[BANK0 ] int 
 10696 ;;  mm              2   18[BANK0 ] int 
 10697 ;;  ss              2   16[BANK0 ] int 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;Total ram usage:       22 bytes
 10712 ;; Hardware stack levels used: 1
 10713 ;; Hardware stack levels required when called: 6
 10714 ;; This function calls:
 10715 ;;		i2_lcd_gotoxy
 10716 ;;		i2_lcd_puts
 10717 ;;		i2_set_baoundares
 10718 ;;		i2_sprintf
 10719 ;; This function is called by:
 10720 ;;		i2_update_lcd
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text55
 10725   003748                     __ptext55:
 10726                           	callstack 0
 10727   003748                     i2_update_lcd_setup:
 10728                           	callstack 14
 10729                           
 10730                           ;Pic_App.c: 254: unsigned char Buffer[16];;Pic_App.c: 255: set_baoundares();
 10731                           
 10732                           ;incstack = 0
 10733   003748  ECB4  F019         	call	i2_set_baoundares	;wreg free
 10734                           
 10735                           ; BSR set to: 1
 10736                           ;Pic_App.c: 256: int ss = count_sec;
 10737   00374C  C180  F090         	movff	_count_sec,i2update_lcd_setup@ss
 10738   003750  C181  F091         	movff	_count_sec+1,i2update_lcd_setup@ss+1
 10739                           
 10740                           ; BSR set to: 1
 10741                           ;Pic_App.c: 257: int mm = count_min;
 10742   003754  C17E  F092         	movff	_count_min,i2update_lcd_setup@mm
 10743   003758  C17F  F093         	movff	_count_min+1,i2update_lcd_setup@mm+1
 10744                           
 10745                           ; BSR set to: 1
 10746                           ;Pic_App.c: 258: int hh = count_hour;
 10747   00375C  C17C  F094         	movff	_count_hour,i2update_lcd_setup@hh
 10748   003760  C17D  F095         	movff	_count_hour+1,i2update_lcd_setup@hh+1
 10749                           
 10750                           ; BSR set to: 1
 10751                           ;Pic_App.c: 259: if(!Clock_Mode){
 10752   003764  517A               	movf	_Clock_Mode& (0+255),w,b
 10753   003766  117B               	iorwf	(_Clock_Mode+1)& (0+255),w,b
 10754   003768  A4D8               	btfss	status,2,c
 10755   00376A  D014               	goto	i2l9151
 10756                           
 10757                           ; BSR set to: 1
 10758                           ;Pic_App.c: 260: lcd_gotoxy(1, 3);
 10759   00376C  0E03               	movlw	3
 10760   00376E  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 10761   003770  0E01               	movlw	1
 10762   003772  EC01  F020         	call	i2_lcd_gotoxy
 10763                           
 10764                           ;Pic_App.c: 261: sprintf(Buffer, "Normal         ");
 10765   003776  0E80               	movlw	low i2update_lcd_setup@Buffer
 10766   003778  6E3C               	movwf	i2sprintf@sp^0,c
 10767   00377A  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 10768   00377C  0EA9               	movlw	low STR_9
 10769   00377E  6E3E               	movwf	i2sprintf@f^0,c
 10770   003780  0EFF               	movlw	high STR_9
 10771   003782  6E3F               	movwf	(i2sprintf@f+1)^0,c
 10772   003784  ECBC  F005         	call	i2_sprintf	;wreg free
 10773   003788                     i2l9149:
 10774                           
 10775                           ;Pic_App.c: 262: lcd_puts(Buffer);
 10776   003788  0E80               	movlw	low i2update_lcd_setup@Buffer
 10777   00378A  6E0F               	movwf	i2lcd_puts@s^0,c
 10778   00378C  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 10779   00378E  EC68  F022         	call	i2_lcd_puts	;wreg free
 10780                           
 10781                           ;Pic_App.c: 263: }
 10782   003792  0012               	return	
 10783   003794                     i2l9151:
 10784                           
 10785                           ; BSR set to: 1
 10786                           ;Pic_App.c: 264: else{;Pic_App.c: 265: lcd_gotoxy(1, 3);
 10787   003794  0E03               	movlw	3
 10788   003796  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 10789   003798  0E01               	movlw	1
 10790   00379A  EC01  F020         	call	i2_lcd_gotoxy
 10791                           
 10792                           ;Pic_App.c: 266: sprintf(Buffer, "setup/%02d:%02d:%02d", hh, mm, ss);
 10793   00379E  0E80               	movlw	low i2update_lcd_setup@Buffer
 10794   0037A0  6E3C               	movwf	i2sprintf@sp^0,c
 10795   0037A2  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 10796   0037A4  0E2B               	movlw	low STR_10
 10797   0037A6  6E3E               	movwf	i2sprintf@f^0,c
 10798   0037A8  0EFF               	movlw	high STR_10
 10799   0037AA  6E3F               	movwf	(i2sprintf@f+1)^0,c
 10800   0037AC  C094  F040         	movff	i2update_lcd_setup@hh,?i2_sprintf+4
 10801   0037B0  C095  F041         	movff	i2update_lcd_setup@hh+1,?i2_sprintf+5
 10802   0037B4  C092  F042         	movff	i2update_lcd_setup@mm,?i2_sprintf+6
 10803   0037B8  C093  F043         	movff	i2update_lcd_setup@mm+1,?i2_sprintf+7
 10804   0037BC  C090  F044         	movff	i2update_lcd_setup@ss,?i2_sprintf+8
 10805   0037C0  C091  F045         	movff	i2update_lcd_setup@ss+1,?i2_sprintf+9
 10806   0037C4  ECBC  F005         	call	i2_sprintf	;wreg free
 10807   0037C8  D7DF               	goto	i2l9149
 10808   0037CA                     __end_ofi2_update_lcd_setup:
 10809                           	callstack 0
 10810                           
 10811 ;; *************** function i2_set_baoundares *****************
 10812 ;; Defined at:
 10813 ;;		line 184 in file "Pic_App.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;		None
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;		None
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  2    0[None  ] int 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 3F/1
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10831 ;;Total ram usage:        0 bytes
 10832 ;; Hardware stack levels used: 1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		i2_update_lcd_timer
 10837 ;;		i2_update_lcd_setup
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text56
 10842   003368                     __ptext56:
 10843                           	callstack 0
 10844   003368                     i2_set_baoundares:
 10845                           	callstack 19
 10846                           
 10847                           ;Pic_App.c: 185: if(count_sec > 59) {
 10848                           
 10849                           ;incstack = 0
 10850   003368  0101               	movlb	1	; () banked
 10851   00336A  5181               	movf	(_count_sec+1)& (0+255),w,b
 10852   00336C  E104               	bnz	i2u1062_40
 10853   00336E  0E3C               	movlw	60
 10854   003370  5D80               	subwf	_count_sec& (0+255),w,b
 10855   003372  A0D8               	btfss	status,0,c
 10856   003374  D006               	goto	i2l8549
 10857   003376                     i2u1062_40:
 10858                           
 10859                           ; BSR set to: 1
 10860                           ;Pic_App.c: 186: count_min++;
 10861   003376  4B7E               	infsnz	_count_min& (0+255),f,b
 10862   003378  2B7F               	incf	(_count_min+1)& (0+255),f,b
 10863                           
 10864                           ; BSR set to: 1
 10865                           ;Pic_App.c: 187: count_sec = 0;
 10866   00337A  0E00               	movlw	0
 10867   00337C  6F81               	movwf	(_count_sec+1)& (0+255),b
 10868   00337E  0E00               	movlw	0
 10869   003380  6F80               	movwf	_count_sec& (0+255),b
 10870   003382                     i2l8549:
 10871                           
 10872                           ; BSR set to: 1
 10873                           ;Pic_App.c: 188: };Pic_App.c: 189: if(count_min > 59) {
 10874   003382  517F               	movf	(_count_min+1)& (0+255),w,b
 10875   003384  E104               	bnz	i2u1063_40
 10876   003386  0E3C               	movlw	60
 10877   003388  5D7E               	subwf	_count_min& (0+255),w,b
 10878   00338A  A0D8               	btfss	status,0,c
 10879   00338C  D006               	goto	i2l8555
 10880   00338E                     i2u1063_40:
 10881                           
 10882                           ; BSR set to: 1
 10883                           ;Pic_App.c: 190: count_hour++;
 10884   00338E  4B7C               	infsnz	_count_hour& (0+255),f,b
 10885   003390  2B7D               	incf	(_count_hour+1)& (0+255),f,b
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;Pic_App.c: 191: count_min = 0;
 10889   003392  0E00               	movlw	0
 10890   003394  6F7F               	movwf	(_count_min+1)& (0+255),b
 10891   003396  0E00               	movlw	0
 10892   003398  6F7E               	movwf	_count_min& (0+255),b
 10893   00339A                     i2l8555:
 10894                           
 10895                           ; BSR set to: 1
 10896                           ;Pic_App.c: 192: };Pic_App.c: 193: if(count_hour > 23){
 10897   00339A  517D               	movf	(_count_hour+1)& (0+255),w,b
 10898   00339C  E104               	bnz	i2u1064_40
 10899   00339E  0E18               	movlw	24
 10900   0033A0  5D7C               	subwf	_count_hour& (0+255),w,b
 10901   0033A2  A0D8               	btfss	status,0,c
 10902   0033A4  D004               	goto	i2l8559
 10903   0033A6                     i2u1064_40:
 10904                           
 10905                           ; BSR set to: 1
 10906                           ;Pic_App.c: 194: count_hour = 0;
 10907   0033A6  0E00               	movlw	0
 10908   0033A8  6F7D               	movwf	(_count_hour+1)& (0+255),b
 10909   0033AA  0E00               	movlw	0
 10910   0033AC  6F7C               	movwf	_count_hour& (0+255),b
 10911   0033AE                     i2l8559:
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;Pic_App.c: 195: };Pic_App.c: 197: if(count_sec <= 0 && !PORTBbits.RB4 && Setup_Mode == 
      +                          0) {
 10915   0033AE  5180               	movf	_count_sec& (0+255),w,b
 10916   0033B0  1181               	iorwf	(_count_sec+1)& (0+255),w,b
 10917   0033B2  B4D8               	btfsc	status,2,c
 10918                           
 10919                           ; BSR set to: 1
 10920   0033B4  B881               	btfsc	129,4,c	;volatile
 10921   0033B6  D00B               	goto	i2l8569
 10922                           
 10923                           ; BSR set to: 1
 10924   0033B8  507B               	movf	_Setup_Mode^0,w,c
 10925   0033BA  107C               	iorwf	(_Setup_Mode+1)^0,w,c
 10926   0033BC  A4D8               	btfss	status,2,c
 10927   0033BE  D007               	goto	i2l8569
 10928                           
 10929                           ; BSR set to: 1
 10930                           ;Pic_App.c: 198: count_min--;
 10931   0033C0  077E               	decf	_count_min& (0+255),f,b
 10932   0033C2  A0D8               	btfss	status,0,c
 10933   0033C4  077F               	decf	(_count_min+1)& (0+255),f,b
 10934                           
 10935                           ; BSR set to: 1
 10936                           ;Pic_App.c: 199: count_sec = 59;
 10937   0033C6  0E00               	movlw	0
 10938   0033C8  6F81               	movwf	(_count_sec+1)& (0+255),b
 10939   0033CA  0E3B               	movlw	59
 10940   0033CC  6F80               	movwf	_count_sec& (0+255),b
 10941   0033CE                     i2l8569:
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;Pic_App.c: 200: };Pic_App.c: 201: if(count_min <= 0 && !PORTBbits.RB4 && Setup_Mode == 
      +                          1) {
 10945   0033CE  517E               	movf	_count_min& (0+255),w,b
 10946   0033D0  117F               	iorwf	(_count_min+1)& (0+255),w,b
 10947   0033D2  B4D8               	btfsc	status,2,c
 10948                           
 10949                           ; BSR set to: 1
 10950   0033D4  B881               	btfsc	129,4,c	;volatile
 10951   0033D6  D00B               	goto	i2l8579
 10952                           
 10953                           ; BSR set to: 1
 10954   0033D8  047B               	decf	_Setup_Mode^0,w,c
 10955   0033DA  107C               	iorwf	(_Setup_Mode+1)^0,w,c
 10956   0033DC  A4D8               	btfss	status,2,c
 10957   0033DE  D007               	goto	i2l8579
 10958                           
 10959                           ; BSR set to: 1
 10960                           ;Pic_App.c: 202: count_hour--;
 10961   0033E0  077C               	decf	_count_hour& (0+255),f,b
 10962   0033E2  A0D8               	btfss	status,0,c
 10963   0033E4  077D               	decf	(_count_hour+1)& (0+255),f,b
 10964                           
 10965                           ; BSR set to: 1
 10966                           ;Pic_App.c: 203: count_min = 59;
 10967   0033E6  0E00               	movlw	0
 10968   0033E8  6F7F               	movwf	(_count_min+1)& (0+255),b
 10969   0033EA  0E3B               	movlw	59
 10970   0033EC  6F7E               	movwf	_count_min& (0+255),b
 10971   0033EE                     i2l8579:
 10972                           
 10973                           ; BSR set to: 1
 10974                           ;Pic_App.c: 204: };Pic_App.c: 205: if(count_hour <= 0 && !PORTBbits.RB4 && Setup_Mode ==
      +                           2){
 10975   0033EE  517C               	movf	_count_hour& (0+255),w,b
 10976   0033F0  117D               	iorwf	(_count_hour+1)& (0+255),w,b
 10977   0033F2  A4D8               	btfss	status,2,c
 10978   0033F4  0012               	return	
 10979                           
 10980                           ; BSR set to: 1
 10981   0033F6  B881               	btfsc	129,4,c	;volatile
 10982   0033F8  0012               	return	
 10983                           
 10984                           ; BSR set to: 1
 10985   0033FA  0E02               	movlw	2
 10986   0033FC  187B               	xorwf	_Setup_Mode^0,w,c
 10987   0033FE  107C               	iorwf	(_Setup_Mode+1)^0,w,c
 10988   003400  A4D8               	btfss	status,2,c
 10989   003402  0012               	return	
 10990                           
 10991                           ; BSR set to: 1
 10992                           ;Pic_App.c: 206: count_hour = 23;
 10993   003404  0E00               	movlw	0
 10994   003406  6F7D               	movwf	(_count_hour+1)& (0+255),b
 10995   003408  0E17               	movlw	23
 10996   00340A  6F7C               	movwf	_count_hour& (0+255),b
 10997                           
 10998                           ; BSR set to: 1
 10999   00340C  0012               	return		;funcret
 11000   00340E                     __end_ofi2_set_baoundares:
 11001                           	callstack 0
 11002                           
 11003 ;; *************** function i2_update_lcd_COOLER *****************
 11004 ;; Defined at:
 11005 ;;		line 218 in file "Pic_App.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  Buffer         16  104[COMRAM] unsigned char [16]
 11010 ;;  mode            2  120[COMRAM] PTR unsigned char 
 11011 ;;		 -> STR_6(4), STR_5(3), STR_3(4), STR_2(3), 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  1    wreg      void 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11025 ;;Total ram usage:       18 bytes
 11026 ;; Hardware stack levels used: 1
 11027 ;; Hardware stack levels required when called: 6
 11028 ;; This function calls:
 11029 ;;		i2_lcd_gotoxy
 11030 ;;		i2_lcd_puts
 11031 ;;		i2_sprintf
 11032 ;; This function is called by:
 11033 ;;		i2_update_lcd
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text57
 11038   003534                     __ptext57:
 11039                           	callstack 0
 11040   003534                     i2_update_lcd_COOLER:
 11041                           	callstack 14
 11042                           
 11043                           ;Pic_App.c: 219: unsigned char Buffer[16];;Pic_App.c: 220: lcd_gotoxy(1, 2);
 11044                           
 11045                           ; BSR set to: 1
 11046                           ;incstack = 0
 11047   003534  0E02               	movlw	2
 11048   003536  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 11049   003538  0E01               	movlw	1
 11050   00353A  EC01  F020         	call	i2_lcd_gotoxy
 11051                           
 11052                           ;Pic_App.c: 221: char *mode;;Pic_App.c: 222: if(coolar){
 11053   00353E  0101               	movlb	1	; () banked
 11054   003540  5178               	movf	_coolar& (0+255),w,b
 11055   003542  1179               	iorwf	(_coolar+1)& (0+255),w,b
 11056   003544  B4D8               	btfsc	status,2,c
 11057   003546  D004               	goto	i2l9107
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;Pic_App.c: 223: mode = "ON";
 11061   003548  0EFB               	movlw	low STR_2
 11062   00354A  6E79               	movwf	i2update_lcd_COOLER@mode^0,c
 11063   00354C  0EFF               	movlw	high STR_2
 11064   00354E  D003               	goto	L8
 11065   003550                     i2l9107:
 11066                           
 11067                           ; BSR set to: 1
 11068                           ;Pic_App.c: 225: else{;Pic_App.c: 226: mode = "OFF";
 11069   003550  0EF7               	movlw	low STR_3
 11070   003552  6E79               	movwf	i2update_lcd_COOLER@mode^0,c
 11071   003554  0EFF               	movlw	high STR_3
 11072   003556                     L8:
 11073   003556  6E7A               	movwf	(i2update_lcd_COOLER@mode+1)^0,c
 11074                           
 11075                           ; BSR set to: 1
 11076                           ;Pic_App.c: 227: };Pic_App.c: 228: sprintf(Buffer, "C:%s", mode);
 11077   003558  0E69               	movlw	low i2update_lcd_COOLER@Buffer
 11078   00355A  6E3C               	movwf	i2sprintf@sp^0,c
 11079   00355C  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 11080   00355E  0EF2               	movlw	low STR_4
 11081   003560  6E3E               	movwf	i2sprintf@f^0,c
 11082   003562  0EFF               	movlw	high STR_4
 11083   003564  6E3F               	movwf	(i2sprintf@f+1)^0,c
 11084   003566  C079  F040         	movff	i2update_lcd_COOLER@mode,?i2_sprintf+4
 11085   00356A  C07A  F041         	movff	i2update_lcd_COOLER@mode+1,?i2_sprintf+5
 11086   00356E  ECBC  F005         	call	i2_sprintf	;wreg free
 11087                           
 11088                           ;Pic_App.c: 229: lcd_puts(Buffer);
 11089   003572  0E69               	movlw	low i2update_lcd_COOLER@Buffer
 11090   003574  6E0F               	movwf	i2lcd_puts@s^0,c
 11091   003576  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 11092   003578  EC68  F022         	call	i2_lcd_puts	;wreg free
 11093                           
 11094                           ;Pic_App.c: 230: if(heater){
 11095   00357C  0101               	movlb	1	; () banked
 11096   00357E  5176               	movf	_heater& (0+255),w,b
 11097   003580  1177               	iorwf	(_heater+1)& (0+255),w,b
 11098   003582  B4D8               	btfsc	status,2,c
 11099   003584  D004               	goto	i2l9117
 11100                           
 11101                           ; BSR set to: 1
 11102                           ;Pic_App.c: 231: mode = "ON";
 11103   003586  0EFB               	movlw	low STR_2
 11104   003588  6E79               	movwf	i2update_lcd_COOLER@mode^0,c
 11105   00358A  0EFF               	movlw	high STR_2
 11106   00358C  D003               	goto	L9
 11107   00358E                     i2l9117:
 11108                           
 11109                           ; BSR set to: 1
 11110                           ;Pic_App.c: 233: else{;Pic_App.c: 234: mode = "OFF";
 11111   00358E  0EF7               	movlw	low STR_3
 11112   003590  6E79               	movwf	i2update_lcd_COOLER@mode^0,c
 11113   003592  0EFF               	movlw	high STR_3
 11114   003594                     L9:
 11115   003594  6E7A               	movwf	(i2update_lcd_COOLER@mode+1)^0,c
 11116                           
 11117                           ; BSR set to: 1
 11118                           ;Pic_App.c: 235: };Pic_App.c: 236: sprintf(Buffer, " | H:%s\t", mode);
 11119   003596  0E69               	movlw	low i2update_lcd_COOLER@Buffer
 11120   003598  6E3C               	movwf	i2sprintf@sp^0,c
 11121   00359A  6A3D               	clrf	(i2sprintf@sp+1)^0,c
 11122   00359C  0EE2               	movlw	low STR_7
 11123   00359E  6E3E               	movwf	i2sprintf@f^0,c
 11124   0035A0  0EFF               	movlw	high STR_7
 11125   0035A2  6E3F               	movwf	(i2sprintf@f+1)^0,c
 11126   0035A4  C079  F040         	movff	i2update_lcd_COOLER@mode,?i2_sprintf+4
 11127   0035A8  C07A  F041         	movff	i2update_lcd_COOLER@mode+1,?i2_sprintf+5
 11128   0035AC  ECBC  F005         	call	i2_sprintf	;wreg free
 11129                           
 11130                           ;Pic_App.c: 237: lcd_puts(Buffer);
 11131   0035B0  0E69               	movlw	low i2update_lcd_COOLER@Buffer
 11132   0035B2  6E0F               	movwf	i2lcd_puts@s^0,c
 11133   0035B4  6A10               	clrf	(i2lcd_puts@s+1)^0,c
 11134   0035B6  EC68  F022         	call	i2_lcd_puts	;wreg free
 11135   0035BA  0012               	return		;funcret
 11136   0035BC                     __end_ofi2_update_lcd_COOLER:
 11137                           	callstack 0
 11138                           
 11139 ;; *************** function i2_sprintf *****************
 11140 ;; Defined at:
 11141 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;  sp              2   59[COMRAM] PTR unsigned char 
 11144 ;;		 -> i2updete_lcd_AN@Buffer(16), i2update_lcd_setup@Buffer(16), i2update_lcd_timer@Buffer(16), i2update_lcd_COOLER@Bu
      +ffer(16), 
 11145 ;;		 -> i2update_lcd_temp@Buffer(16), lcd_welcome@Buffer(16), updete_lcd_AN@Buffer(16), update_lcd_setup@Buffer(16), 
 11146 ;;		 -> update_lcd_timer@Buffer(16), update_lcd_COOLER@Buffer(16), update_lcd_temp@Buffer(16), 
 11147 ;;  f               2   61[COMRAM] PTR const unsigned char 
 11148 ;;		 -> STR_21(16), STR_20(17), STR_19(17), STR_18(17), 
 11149 ;;		 -> STR_17(17), STR_16(17), STR_15(17), STR_14(17), 
 11150 ;;		 -> STR_13(17), STR_12(15), STR_11(20), STR_10(21), 
 11151 ;;		 -> STR_9(16), STR_8(15), STR_7(9), STR_4(5), 
 11152 ;;		 -> STR_1(10), 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  val             4   88[COMRAM] unsigned long 
 11155 ;;  tmpval          4   84[COMRAM] struct .
 11156 ;;  fval            3   96[COMRAM] struct .
 11157 ;;  prec            2  101[COMRAM] int 
 11158 ;;  width           2   99[COMRAM] int 
 11159 ;;  flag            2   94[COMRAM] unsigned short 
 11160 ;;  eexp            2   92[COMRAM] int 
 11161 ;;  len             2   82[COMRAM] unsigned int 
 11162 ;;  ap              2   80[COMRAM] PTR void [1]
 11163 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 11164 ;;  cp              2   78[COMRAM] PTR const unsigned char 
 11165 ;;		 -> STR_23(7), ?_sprintf(2), STR_6(4), STR_5(3), 
 11166 ;;		 -> STR_3(4), STR_2(3), 
 11167 ;;  c               1  103[COMRAM] unsigned char 
 11168 ;;  d               1    0        unsigned char 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  2   59[COMRAM] int 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11178 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11179 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11180 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;      Totals:        45       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;Total ram usage:       45 bytes
 11183 ;; Hardware stack levels used: 1
 11184 ;; Hardware stack levels required when called: 3
 11185 ;; This function calls:
 11186 ;;		i2___awdiv
 11187 ;;		i2___ftadd
 11188 ;;		i2___ftge
 11189 ;;		i2___ftmul
 11190 ;;		i2___ftneg
 11191 ;;		i2___ftsub
 11192 ;;		i2___fttol
 11193 ;;		i2___lldiv
 11194 ;;		i2___llmod
 11195 ;;		i2___lltoft
 11196 ;;		i2___wmul
 11197 ;;		i2__div_to_l_
 11198 ;;		i2__tdiv_to_l_
 11199 ;;		i2_fround
 11200 ;;		i2_isdigit
 11201 ;;		i2_scale
 11202 ;; This function is called by:
 11203 ;;		i2_update_lcd_temp
 11204 ;;		i2_update_lcd_COOLER
 11205 ;;		i2_update_lcd_timer
 11206 ;;		i2_update_lcd_setup
 11207 ;;		i2_updete_lcd_AN
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text58
 11212   000B78                     __ptext58:
 11213                           	callstack 0
 11214   000B78                     i2_sprintf:
 11215                           	callstack 16
 11216                           
 11217                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
 11218                           
 11219                           ;incstack = 0
 11220   000B78  0E40               	movlw	low (?i2_sprintf+4)
 11221   000B7A  6E51               	movwf	i2sprintf@ap^0,c
 11222   000B7C  6A52               	clrf	(i2sprintf@ap+1)^0,c
 11223                           
 11224                           ;doprnt.c: 553: while((c = *f++)) {
 11225   000B7E  EF3F  F00B         	goto	i2u1137_40
 11226   000B82                     i2l8597:
 11227                           
 11228                           ;doprnt.c: 555: if(c != '%')
 11229   000B82  0E25               	movlw	37
 11230   000B84  1868               	xorwf	i2sprintf@c^0,w,c
 11231   000B86  B4D8               	btfsc	status,2,c
 11232   000B88  D00A               	goto	i2l8603
 11233                           
 11234                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 11235   000B8A  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 11236   000B8E  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 11237   000B92  C068  FFDF         	movff	i2sprintf@c,indf2
 11238   000B96  4A3C               	infsnz	i2sprintf@sp^0,f,c
 11239   000B98  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 11240                           
 11241                           ;doprnt.c: 559: continue;
 11242   000B9A  EF3F  F00B         	goto	i2u1137_40
 11243   000B9E                     i2l8603:
 11244                           
 11245                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 11246   000B9E  0E00               	movlw	0
 11247   000BA0  6E65               	movwf	(i2sprintf@width+1)^0,c
 11248   000BA2  0E00               	movlw	0
 11249   000BA4  6E64               	movwf	i2sprintf@width^0,c
 11250                           
 11251                           ;doprnt.c: 565: flag = 0;
 11252   000BA6  0E00               	movlw	0
 11253   000BA8  6E60               	movwf	(i2sprintf@flag+1)^0,c
 11254   000BAA  0E00               	movlw	0
 11255   000BAC  6E5F               	movwf	i2sprintf@flag^0,c
 11256   000BAE  D003               	goto	i2l8609
 11257   000BB0                     i2l8605:
 11258                           
 11259                           ;doprnt.c: 597: flag |= 0x04;
 11260   000BB0  845F               	bsf	i2sprintf@flag^0,2,c
 11261                           
 11262                           ;doprnt.c: 598: f++;
 11263   000BB2  4A3E               	infsnz	i2sprintf@f^0,f,c
 11264   000BB4  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 11265   000BB6                     i2l8609:
 11266   000BB6  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11267   000BBA  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11268   000BBE                     	if	0	;tblptru may be non-zero
 11269   000BBE                     	endif
 11270   000BBE                     	if	0	;tblptru may be non-zero
 11271   000BBE                     	endif
 11272   000BBE  0008               	tblrd		*
 11273   000BC0  50F5               	movf	tablat,w,c
 11274                           
 11275                           ; Switch size 1, requested type "simple"
 11276                           ; Number of cases is 1, Range of values is 48 to 48
 11277                           ; switch strategies available:
 11278                           ; Name         Instructions Cycles
 11279                           ; simple_byte            4     3 (average)
 11280                           ;	Chosen strategy is simple_byte
 11281   000BC2  0A30               	xorlw	48	; case 48
 11282   000BC4  B4D8               	btfsc	status,2,c
 11283   000BC6  D7F4               	goto	i2l8605
 11284                           
 11285                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 11286   000BC8  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11287   000BCC  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11288   000BD0                     	if	0	;tblptru may be non-zero
 11289   000BD0                     	endif
 11290   000BD0                     	if	0	;tblptru may be non-zero
 11291   000BD0                     	endif
 11292   000BD0  0008               	tblrd		*
 11293   000BD2  50F5               	movf	tablat,w,c
 11294   000BD4  ECBC  F022         	call	i2_isdigit
 11295   000BD8  A0D8               	btfss	status,0,c
 11296   000BDA  D02F               	goto	i2u1077_40
 11297                           
 11298                           ;doprnt.c: 615: width = 0;
 11299   000BDC  0E00               	movlw	0
 11300   000BDE  6E65               	movwf	(i2sprintf@width+1)^0,c
 11301   000BE0  0E00               	movlw	0
 11302   000BE2  6E64               	movwf	i2sprintf@width^0,c
 11303   000BE4                     i2l8615:
 11304                           
 11305                           ;doprnt.c: 617: width *= 10;
 11306   000BE4  C064  F001         	movff	i2sprintf@width,i2___wmul@multiplier
 11307   000BE8  C065  F002         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 11308   000BEC  0E00               	movlw	0
 11309   000BEE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 11310   000BF0  0E0A               	movlw	10
 11311   000BF2  6E03               	movwf	i2___wmul@multiplicand^0,c
 11312   000BF4  EC30  F022         	call	i2___wmul	;wreg free
 11313   000BF8  C001  F064         	movff	?i2___wmul,i2sprintf@width
 11314   000BFC  C002  F065         	movff	?i2___wmul+1,i2sprintf@width+1
 11315                           
 11316                           ;doprnt.c: 618: width += *f++ - '0';
 11317   000C00  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11318   000C04  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11319   000C08                     	if	0	;tblptru may be non-zero
 11320   000C08                     	endif
 11321   000C08                     	if	0	;tblptru may be non-zero
 11322   000C08                     	endif
 11323   000C08  0008               	tblrd		*
 11324   000C0A  CFF5 F046          	movff	tablat,??i2_sprintf
 11325   000C0E  0ED0               	movlw	208
 11326   000C10  2446               	addwf	??i2_sprintf^0,w,c
 11327   000C12  6E47               	movwf	(??i2_sprintf+1)^0,c
 11328   000C14  6A48               	clrf	(??i2_sprintf+2)^0,c
 11329   000C16  0EFF               	movlw	255
 11330   000C18  2248               	addwfc	(??i2_sprintf+2)^0,f,c
 11331   000C1A  5047               	movf	(??i2_sprintf+1)^0,w,c
 11332   000C1C  2664               	addwf	i2sprintf@width^0,f,c
 11333   000C1E  5048               	movf	(??i2_sprintf+2)^0,w,c
 11334   000C20  2265               	addwfc	(i2sprintf@width+1)^0,f,c
 11335   000C22  4A3E               	infsnz	i2sprintf@f^0,f,c
 11336   000C24  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 11337                           
 11338                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 11339   000C26  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11340   000C2A  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11341   000C2E                     	if	0	;tblptru may be non-zero
 11342   000C2E                     	endif
 11343   000C2E                     	if	0	;tblptru may be non-zero
 11344   000C2E                     	endif
 11345   000C2E  0008               	tblrd		*
 11346   000C30  50F5               	movf	tablat,w,c
 11347   000C32  ECBC  F022         	call	i2_isdigit
 11348   000C36  B0D8               	btfsc	status,0,c
 11349   000C38  D7D5               	goto	i2l8615
 11350   000C3A                     i2u1077_40:
 11351                           
 11352                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 11353   000C3A  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11354   000C3E  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11355   000C42                     	if	0	;tblptru may be non-zero
 11356   000C42                     	endif
 11357   000C42                     	if	0	;tblptru may be non-zero
 11358   000C42                     	endif
 11359   000C42  0008               	tblrd		*
 11360   000C44  50F5               	movf	tablat,w,c
 11361   000C46  0A2E               	xorlw	46
 11362   000C48  A4D8               	btfss	status,2,c
 11363   000C4A  D034               	goto	i2l8637
 11364                           
 11365                           ;doprnt.c: 629: flag |= 0x4000;
 11366   000C4C  8C60               	bsf	(i2sprintf@flag+1)^0,6,c
 11367                           
 11368                           ;doprnt.c: 630: f++;
 11369   000C4E  4A3E               	infsnz	i2sprintf@f^0,f,c
 11370   000C50  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 11371                           
 11372                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 11373   000C52  0E00               	movlw	0
 11374   000C54  6E67               	movwf	(i2sprintf@prec+1)^0,c
 11375   000C56  0E00               	movlw	0
 11376   000C58  6E66               	movwf	i2sprintf@prec^0,c
 11377                           
 11378                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 11379   000C5A  D021               	goto	i2l8635
 11380   000C5C                     i2l8629:
 11381                           
 11382                           ;doprnt.c: 647: prec *= 10;
 11383   000C5C  C066  F001         	movff	i2sprintf@prec,i2___wmul@multiplier
 11384   000C60  C067  F002         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 11385   000C64  0E00               	movlw	0
 11386   000C66  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 11387   000C68  0E0A               	movlw	10
 11388   000C6A  6E03               	movwf	i2___wmul@multiplicand^0,c
 11389   000C6C  EC30  F022         	call	i2___wmul	;wreg free
 11390   000C70  C001  F066         	movff	?i2___wmul,i2sprintf@prec
 11391   000C74  C002  F067         	movff	?i2___wmul+1,i2sprintf@prec+1
 11392                           
 11393                           ;doprnt.c: 648: prec += *f++ - '0';
 11394   000C78  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11395   000C7C  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11396   000C80                     	if	0	;tblptru may be non-zero
 11397   000C80                     	endif
 11398   000C80                     	if	0	;tblptru may be non-zero
 11399   000C80                     	endif
 11400   000C80  0008               	tblrd		*
 11401   000C82  CFF5 F046          	movff	tablat,??i2_sprintf
 11402   000C86  0ED0               	movlw	208
 11403   000C88  2446               	addwf	??i2_sprintf^0,w,c
 11404   000C8A  6E47               	movwf	(??i2_sprintf+1)^0,c
 11405   000C8C  6A48               	clrf	(??i2_sprintf+2)^0,c
 11406   000C8E  0EFF               	movlw	255
 11407   000C90  2248               	addwfc	(??i2_sprintf+2)^0,f,c
 11408   000C92  5047               	movf	(??i2_sprintf+1)^0,w,c
 11409   000C94  2666               	addwf	i2sprintf@prec^0,f,c
 11410   000C96  5048               	movf	(??i2_sprintf+2)^0,w,c
 11411   000C98  2267               	addwfc	(i2sprintf@prec+1)^0,f,c
 11412   000C9A  4A3E               	infsnz	i2sprintf@f^0,f,c
 11413   000C9C  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 11414   000C9E                     i2l8635:
 11415   000C9E  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11416   000CA2  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11417   000CA6                     	if	0	;tblptru may be non-zero
 11418   000CA6                     	endif
 11419   000CA6                     	if	0	;tblptru may be non-zero
 11420   000CA6                     	endif
 11421   000CA6  0008               	tblrd		*
 11422   000CA8  50F5               	movf	tablat,w,c
 11423   000CAA  ECBC  F022         	call	i2_isdigit
 11424   000CAE  A0D8               	btfss	status,0,c
 11425   000CB0  D095               	goto	i2l8685
 11426   000CB2  D7D4               	goto	i2l8629
 11427   000CB4                     i2l8637:
 11428                           
 11429                           ;doprnt.c: 652: prec = 0;
 11430   000CB4  0E00               	movlw	0
 11431   000CB6  6E67               	movwf	(i2sprintf@prec+1)^0,c
 11432   000CB8  0E00               	movlw	0
 11433   000CBA  6E66               	movwf	i2sprintf@prec^0,c
 11434                           
 11435                           ;doprnt.c: 654: flag |= 0x1000;
 11436   000CBC  8860               	bsf	(i2sprintf@flag+1)^0,4,c
 11437   000CBE  D08E               	goto	i2l8685
 11438   000CC0                     i2l8641:
 11439                           
 11440                           ;doprnt.c: 689: flag |= 0x400;
 11441   000CC0  8460               	bsf	(i2sprintf@flag+1)^0,2,c
 11442                           
 11443                           ;doprnt.c: 690: break;
 11444   000CC2  D0A8               	goto	i2l8687
 11445   000CC4                     i2l8643:
 11446                           
 11447                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11448   000CC4  C051  FFD9         	movff	i2sprintf@ap,fsr2l
 11449   000CC8  C052  FFDA         	movff	i2sprintf@ap+1,fsr2h
 11450   000CCC  CFDE F04F          	movff	postinc2,i2sprintf@cp
 11451   000CD0  CFDD F050          	movff	postdec2,i2sprintf@cp+1
 11452   000CD4  0E02               	movlw	2
 11453   000CD6  2651               	addwf	i2sprintf@ap^0,f,c
 11454   000CD8  0E00               	movlw	0
 11455   000CDA  2252               	addwfc	(i2sprintf@ap+1)^0,f,c
 11456                           
 11457                           ;doprnt.c: 766: if(!cp)
 11458   000CDC  504F               	movf	i2sprintf@cp^0,w,c
 11459   000CDE  1050               	iorwf	(i2sprintf@cp+1)^0,w,c
 11460   000CE0  A4D8               	btfss	status,2,c
 11461   000CE2  D004               	goto	i2l8651
 11462                           
 11463                           ;doprnt.c: 767: cp = "(null)";
 11464   000CE4  0EEB               	movlw	low STR_23
 11465   000CE6  6E4F               	movwf	i2sprintf@cp^0,c
 11466   000CE8  0EFF               	movlw	high STR_23
 11467   000CEA  6E50               	movwf	(i2sprintf@cp+1)^0,c
 11468   000CEC                     i2l8651:
 11469                           
 11470                           ;doprnt.c: 771: len = 0;
 11471   000CEC  0E00               	movlw	0
 11472   000CEE  6E54               	movwf	(i2sprintf@len+1)^0,c
 11473   000CF0  0E00               	movlw	0
 11474   000CF2  6E53               	movwf	i2sprintf@len^0,c
 11475                           
 11476                           ;doprnt.c: 772: while(cp[len])
 11477   000CF4  D002               	goto	i2l8655
 11478   000CF6                     i2l8653:
 11479                           
 11480                           ;doprnt.c: 773: len++;
 11481   000CF6  4A53               	infsnz	i2sprintf@len^0,f,c
 11482   000CF8  2A54               	incf	(i2sprintf@len+1)^0,f,c
 11483   000CFA                     i2l8655:
 11484   000CFA  5053               	movf	i2sprintf@len^0,w,c
 11485   000CFC  244F               	addwf	i2sprintf@cp^0,w,c
 11486   000CFE  6E46               	movwf	??i2_sprintf^0,c
 11487   000D00  5054               	movf	(i2sprintf@len+1)^0,w,c
 11488   000D02  2050               	addwfc	(i2sprintf@cp+1)^0,w,c
 11489   000D04  6E47               	movwf	(??i2_sprintf+1)^0,c
 11490   000D06  C046  FFF6         	movff	??i2_sprintf,tblptrl
 11491   000D0A  C047  FFF7         	movff	??i2_sprintf+1,tblptrh
 11492   000D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11493   000D10  6EF8               	movwf	tblptru,c
 11494   000D12  0E0F               	movlw	(high __ramtop+-1)
 11495   000D14  64F7               	cpfsgt	tblptrh,c
 11496   000D16  D003               	bra	i2u1081_47
 11497   000D18  0008               	tblrd		*
 11498   000D1A  50F5               	movf	tablat,w,c
 11499   000D1C  D005               	bra	i2u1081_40
 11500   000D1E                     i2u1081_47:
 11501   000D1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11502   000D22  CFF7 FFEA          	movff	tblptrh,fsr0h
 11503   000D26  50EF               	movf	indf0,w,c
 11504   000D28                     i2u1081_40:
 11505   000D28  0900               	iorlw	0
 11506   000D2A  A4D8               	btfss	status,2,c
 11507   000D2C  D7E4               	goto	i2l8653
 11508                           
 11509                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
 11510   000D2E  5066               	movf	i2sprintf@prec^0,w,c
 11511   000D30  1067               	iorwf	(i2sprintf@prec+1)^0,w,c
 11512   000D32  B4D8               	btfsc	status,2,c
 11513   000D34  D00E               	goto	i2l8663
 11514   000D36  5053               	movf	i2sprintf@len^0,w,c
 11515   000D38  5C66               	subwf	i2sprintf@prec^0,w,c
 11516   000D3A  5067               	movf	(i2sprintf@prec+1)^0,w,c
 11517   000D3C  0A80               	xorlw	128
 11518   000D3E  6E46               	movwf	??i2_sprintf^0,c
 11519   000D40  5054               	movf	(i2sprintf@len+1)^0,w,c
 11520   000D42  0A80               	xorlw	128
 11521   000D44  5846               	subwfb	??i2_sprintf^0,w,c
 11522   000D46  B0D8               	btfsc	status,0,c
 11523   000D48  D004               	goto	i2l8663
 11524                           
 11525                           ;doprnt.c: 780: len = (unsigned int)prec;
 11526   000D4A  C066  F053         	movff	i2sprintf@prec,i2sprintf@len
 11527   000D4E  C067  F054         	movff	i2sprintf@prec+1,i2sprintf@len+1
 11528   000D52                     i2l8663:
 11529                           
 11530                           ;doprnt.c: 783: if(((unsigned)width) > len)
 11531   000D52  5064               	movf	i2sprintf@width^0,w,c
 11532   000D54  5C53               	subwf	i2sprintf@len^0,w,c
 11533   000D56  5065               	movf	(i2sprintf@width+1)^0,w,c
 11534   000D58  5854               	subwfb	(i2sprintf@len+1)^0,w,c
 11535   000D5A  B0D8               	btfsc	status,0,c
 11536   000D5C  D005               	goto	i2l8667
 11537                           
 11538                           ;doprnt.c: 784: width -= len;
 11539   000D5E  5053               	movf	i2sprintf@len^0,w,c
 11540   000D60  5E64               	subwf	i2sprintf@width^0,f,c
 11541   000D62  5054               	movf	(i2sprintf@len+1)^0,w,c
 11542   000D64  5A65               	subwfb	(i2sprintf@width+1)^0,f,c
 11543   000D66  D00D               	goto	i2l8673
 11544   000D68                     i2l8667:
 11545                           
 11546                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 11547   000D68  0E00               	movlw	0
 11548   000D6A  6E65               	movwf	(i2sprintf@width+1)^0,c
 11549   000D6C  0E00               	movlw	0
 11550   000D6E  6E64               	movwf	i2sprintf@width^0,c
 11551   000D70  D008               	goto	i2l8673
 11552   000D72                     i2l8669:
 11553                           
 11554                           ;doprnt.c: 791: ((*sp++ = (' ')));
 11555   000D72  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 11556   000D76  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 11557   000D7A  0E20               	movlw	32
 11558   000D7C  6EDF               	movwf	indf2,c
 11559   000D7E  4A3C               	infsnz	i2sprintf@sp^0,f,c
 11560   000D80  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 11561   000D82                     i2l8673:
 11562   000D82  0664               	decf	i2sprintf@width^0,f,c
 11563   000D84  A0D8               	btfss	status,0,c
 11564   000D86  0665               	decf	(i2sprintf@width+1)^0,f,c
 11565   000D88  2864               	incf	i2sprintf@width^0,w,c
 11566   000D8A  E1F3               	bnz	i2l8669
 11567   000D8C  2865               	incf	(i2sprintf@width+1)^0,w,c
 11568   000D8E  B4D8               	btfsc	status,2,c
 11569   000D90  D01B               	goto	i2l8681
 11570   000D92  D7EF               	goto	i2l8669
 11571   000D94                     i2l8675:
 11572                           
 11573                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
 11574   000D94  C04F  FFF6         	movff	i2sprintf@cp,tblptrl
 11575   000D98  C050  FFF7         	movff	i2sprintf@cp+1,tblptrh
 11576   000D9C  0E00               	movlw	low (__mediumconst shr (0+16))
 11577   000D9E  6EF8               	movwf	tblptru,c
 11578   000DA0  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 11579   000DA4  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 11580   000DA8  0E0F               	movlw	(high __ramtop+-1)
 11581   000DAA  64F7               	cpfsgt	tblptrh,c
 11582   000DAC  D003               	bra	i2u1087_47
 11583   000DAE  0008               	tblrd		*
 11584   000DB0  50F5               	movf	tablat,w,c
 11585   000DB2  D005               	bra	i2u1087_40
 11586   000DB4                     i2u1087_47:
 11587   000DB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11588   000DB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11589   000DBC  50EF               	movf	indf0,w,c
 11590   000DBE                     i2u1087_40:
 11591   000DBE  6EDF               	movwf	indf2,c
 11592   000DC0  4A4F               	infsnz	i2sprintf@cp^0,f,c
 11593   000DC2  2A50               	incf	(i2sprintf@cp+1)^0,f,c
 11594   000DC4  4A3C               	infsnz	i2sprintf@sp^0,f,c
 11595   000DC6  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 11596   000DC8                     i2l8681:
 11597   000DC8  0653               	decf	i2sprintf@len^0,f,c
 11598   000DCA  A0D8               	btfss	status,0,c
 11599   000DCC  0654               	decf	(i2sprintf@len+1)^0,f,c
 11600   000DCE  2853               	incf	i2sprintf@len^0,w,c
 11601   000DD0  E1E1               	bnz	i2l8675
 11602   000DD2  2854               	incf	(i2sprintf@len+1)^0,w,c
 11603   000DD4  B4D8               	btfsc	status,2,c
 11604   000DD6  EF3F  F00B         	goto	i2u1137_40
 11605   000DDA  D7DC               	goto	i2l8675
 11606   000DDC                     i2l8685:
 11607   000DDC  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 11608   000DE0  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 11609   000DE4  4A3E               	infsnz	i2sprintf@f^0,f,c
 11610   000DE6  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 11611   000DE8                     	if	0	;tblptru may be non-zero
 11612   000DE8                     	endif
 11613   000DE8                     	if	0	;tblptru may be non-zero
 11614   000DE8                     	endif
 11615   000DE8  0008               	tblrd		*
 11616   000DEA  CFF5 F068          	movff	tablat,i2sprintf@c
 11617   000DEE  5068               	movf	i2sprintf@c^0,w,c
 11618                           
 11619                           ; Switch size 1, requested type "simple"
 11620                           ; Number of cases is 5, Range of values is 0 to 115
 11621                           ; switch strategies available:
 11622                           ; Name         Instructions Cycles
 11623                           ; simple_byte           16     9 (average)
 11624                           ;	Chosen strategy is simple_byte
 11625   000DF0  0A00               	xorlw	0	; case 0
 11626   000DF2  B4D8               	btfsc	status,2,c
 11627   000DF4  EF4C  F00B         	goto	i2u1138_40
 11628   000DF8  0A64               	xorlw	100	; case 100
 11629   000DFA  B4D8               	btfsc	status,2,c
 11630   000DFC  D00B               	goto	i2l8687
 11631   000DFE  0A02               	xorlw	2	; case 102
 11632   000E00  B4D8               	btfsc	status,2,c
 11633   000E02  D75E               	goto	i2l8641
 11634   000E04  0A0F               	xorlw	15	; case 105
 11635   000E06  B4D8               	btfsc	status,2,c
 11636   000E08  D005               	goto	i2l8687
 11637   000E0A  0A1A               	xorlw	26	; case 115
 11638   000E0C  B4D8               	btfsc	status,2,c
 11639   000E0E  D75A               	goto	i2l8643
 11640   000E10  EF3F  F00B         	goto	i2u1137_40
 11641   000E14                     i2l8687:
 11642                           
 11643                           ;doprnt.c: 851: if(flag & (0x700)) {
 11644   000E14  0E07               	movlw	7
 11645   000E16  1460               	andwf	(i2sprintf@flag+1)^0,w,c
 11646   000E18  B4D8               	btfsc	status,2,c
 11647   000E1A  D307               	goto	i2l8867
 11648                           
 11649                           ;doprnt.c: 853: if(flag & 0x1000)
 11650   000E1C  A860               	btfss	(i2sprintf@flag+1)^0,4,c
 11651   000E1E  D004               	goto	i2l8693
 11652                           
 11653                           ;doprnt.c: 855: prec = 6;
 11654   000E20  0E00               	movlw	0
 11655   000E22  6E67               	movwf	(i2sprintf@prec+1)^0,c
 11656   000E24  0E06               	movlw	6
 11657   000E26  6E66               	movwf	i2sprintf@prec^0,c
 11658   000E28                     i2l8693:
 11659                           
 11660                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 11661   000E28  C051  FFD9         	movff	i2sprintf@ap,fsr2l
 11662   000E2C  C052  FFDA         	movff	i2sprintf@ap+1,fsr2h
 11663   000E30  CFDE F061          	movff	postinc2,i2sprintf@fval
 11664   000E34  CFDE F062          	movff	postinc2,i2sprintf@fval+1
 11665   000E38  CFDD F063          	movff	postdec2,i2sprintf@fval+2
 11666   000E3C  0E03               	movlw	3
 11667   000E3E  2651               	addwf	i2sprintf@ap^0,f,c
 11668   000E40  0E00               	movlw	0
 11669   000E42  2252               	addwfc	(i2sprintf@ap+1)^0,f,c
 11670                           
 11671                           ;doprnt.c: 857: if(fval < 0.0) {
 11672   000E44  AE63               	btfss	(i2sprintf@fval+2)^0,7,c
 11673   000E46  D010               	goto	i2l8703
 11674                           
 11675                           ;doprnt.c: 858: fval = -fval;
 11676   000E48  C061  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 11677   000E4C  C062  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 11678   000E50  C063  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 11679   000E54  EC56  F022         	call	i2___ftneg	;wreg free
 11680   000E58  C001  F061         	movff	?i2___ftneg,i2sprintf@fval
 11681   000E5C  C002  F062         	movff	?i2___ftneg+1,i2sprintf@fval+1
 11682   000E60  C003  F063         	movff	?i2___ftneg+2,i2sprintf@fval+2
 11683                           
 11684                           ;doprnt.c: 859: flag |= 0x03;
 11685   000E64  0E03               	movlw	3
 11686   000E66  125F               	iorwf	i2sprintf@flag^0,f,c
 11687   000E68                     i2l8703:
 11688                           
 11689                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 11690   000E68  0E00               	movlw	0
 11691   000E6A  6E5E               	movwf	(i2sprintf@eexp+1)^0,c
 11692   000E6C  0E00               	movlw	0
 11693   000E6E  6E5D               	movwf	i2sprintf@eexp^0,c
 11694                           
 11695                           ;doprnt.c: 862: if( fval!=0) {
 11696   000E70  5061               	movf	i2sprintf@fval^0,w,c
 11697   000E72  1062               	iorwf	(i2sprintf@fval+1)^0,w,c
 11698   000E74  1063               	iorwf	(i2sprintf@fval+2)^0,w,c
 11699   000E76  B4D8               	btfsc	status,2,c
 11700   000E78  D083               	goto	i2l8731
 11701                           
 11702                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 11703   000E7A  0E82               	movlw	130
 11704   000E7C  6E46               	movwf	??i2_sprintf^0,c
 11705   000E7E  0EFF               	movlw	255
 11706   000E80  6E47               	movwf	(??i2_sprintf+1)^0,c
 11707   000E82  C061  F048         	movff	i2sprintf@fval,??i2_sprintf+2
 11708   000E86  C062  F049         	movff	i2sprintf@fval+1,??i2_sprintf+3
 11709   000E8A  C063  F04A         	movff	i2sprintf@fval+2,??i2_sprintf+4
 11710   000E8E  C064  F04B         	movff	i2sprintf@fval+3,??i2_sprintf+5
 11711   000E92  0E10               	movlw	16
 11712   000E94  D005               	goto	i2u1093_40
 11713   000E96                     i2u1093_45:
 11714   000E96  90D8               	bcf	status,0,c
 11715   000E98  324B               	rrcf	(??i2_sprintf+5)^0,f,c
 11716   000E9A  324A               	rrcf	(??i2_sprintf+4)^0,f,c
 11717   000E9C  3249               	rrcf	(??i2_sprintf+3)^0,f,c
 11718   000E9E  3248               	rrcf	(??i2_sprintf+2)^0,f,c
 11719   000EA0                     i2u1093_40:
 11720   000EA0  2EE8               	decfsz	wreg,f,c
 11721   000EA2  D7F9               	goto	i2u1093_45
 11722   000EA4  5048               	movf	(??i2_sprintf+2)^0,w,c
 11723   000EA6  2446               	addwf	??i2_sprintf^0,w,c
 11724   000EA8  6E5D               	movwf	i2sprintf@eexp^0,c
 11725   000EAA  0E00               	movlw	0
 11726   000EAC  2047               	addwfc	(??i2_sprintf+1)^0,w,c
 11727   000EAE  6E5E               	movwf	(i2sprintf@eexp+1)^0,c
 11728                           
 11729                           ;doprnt.c: 864: eexp--;
 11730   000EB0  065D               	decf	i2sprintf@eexp^0,f,c
 11731   000EB2  A0D8               	btfss	status,0,c
 11732   000EB4  065E               	decf	(i2sprintf@eexp+1)^0,f,c
 11733                           
 11734                           ;doprnt.c: 865: eexp *= 3;
 11735   000EB6  C05D  F001         	movff	i2sprintf@eexp,i2___wmul@multiplier
 11736   000EBA  C05E  F002         	movff	i2sprintf@eexp+1,i2___wmul@multiplier+1
 11737   000EBE  0E00               	movlw	0
 11738   000EC0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 11739   000EC2  0E03               	movlw	3
 11740   000EC4  6E03               	movwf	i2___wmul@multiplicand^0,c
 11741   000EC6  EC30  F022         	call	i2___wmul	;wreg free
 11742   000ECA  C001  F05D         	movff	?i2___wmul,i2sprintf@eexp
 11743   000ECE  C002  F05E         	movff	?i2___wmul+1,i2sprintf@eexp+1
 11744                           
 11745                           ;doprnt.c: 866: eexp /= 10;
 11746   000ED2  C05D  F007         	movff	i2sprintf@eexp,i2___awdiv@dividend
 11747   000ED6  C05E  F008         	movff	i2sprintf@eexp+1,i2___awdiv@dividend+1
 11748   000EDA  0E00               	movlw	0
 11749   000EDC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 11750   000EDE  0E0A               	movlw	10
 11751   000EE0  6E09               	movwf	i2___awdiv@divisor^0,c
 11752   000EE2  EC62  F01B         	call	i2___awdiv	;wreg free
 11753   000EE6  C007  F05D         	movff	?i2___awdiv,i2sprintf@eexp
 11754   000EEA  C008  F05E         	movff	?i2___awdiv+1,i2sprintf@eexp+1
 11755                           
 11756                           ;doprnt.c: 867: if(eexp < 0)
 11757   000EEE  AE5E               	btfss	(i2sprintf@eexp+1)^0,7,c
 11758   000EF0  D003               	goto	i2l8719
 11759                           
 11760                           ;doprnt.c: 868: eexp--;
 11761   000EF2  065D               	decf	i2sprintf@eexp^0,f,c
 11762   000EF4  A0D8               	btfss	status,0,c
 11763   000EF6  065E               	decf	(i2sprintf@eexp+1)^0,f,c
 11764   000EF8                     i2l8719:
 11765                           
 11766                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 11767   000EF8  505D               	movf	i2sprintf@eexp^0,w,c
 11768   000EFA  0800               	sublw	0
 11769   000EFC  EC08  F00D         	call	i2_scale
 11770   000F00  C01E  F055         	movff	?i2_scale,i2sprintf@tmpval
 11771   000F04  C01F  F056         	movff	?i2_scale+1,i2sprintf@tmpval+1
 11772   000F08  C020  F057         	movff	?i2_scale+2,i2sprintf@tmpval+2
 11773                           
 11774                           ;doprnt.c: 873: tmpval.integ *= fval;
 11775   000F0C  C055  F00F         	movff	i2sprintf@tmpval,i2___ftmul@f1
 11776   000F10  C056  F010         	movff	i2sprintf@tmpval+1,i2___ftmul@f1+1
 11777   000F14  C057  F011         	movff	i2sprintf@tmpval+2,i2___ftmul@f1+2
 11778   000F18  C061  F012         	movff	i2sprintf@fval,i2___ftmul@f2
 11779   000F1C  C062  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 11780   000F20  C063  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 11781   000F24  EC78  F016         	call	i2___ftmul	;wreg free
 11782   000F28  C00F  F055         	movff	?i2___ftmul,i2sprintf@tmpval
 11783   000F2C  C010  F056         	movff	?i2___ftmul+1,i2sprintf@tmpval+1
 11784   000F30  C011  F057         	movff	?i2___ftmul+2,i2sprintf@tmpval+2
 11785                           
 11786                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 11787   000F34  C055  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
 11788   000F38  C056  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 11789   000F3C  C057  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 11790   000F40  0E00               	movlw	0
 11791   000F42  6E04               	movwf	i2___ftge@ff2^0,c
 11792   000F44  0E80               	movlw	128
 11793   000F46  6E05               	movwf	(i2___ftge@ff2+1)^0,c
 11794   000F48  0E3F               	movlw	63
 11795   000F4A  6E06               	movwf	(i2___ftge@ff2+2)^0,c
 11796   000F4C  EC9C  F01C         	call	i2___ftge	;wreg free
 11797   000F50  B0D8               	btfsc	status,0,c
 11798   000F52  D004               	goto	i2l8727
 11799                           
 11800                           ;doprnt.c: 875: eexp--;
 11801   000F54  065D               	decf	i2sprintf@eexp^0,f,c
 11802   000F56  A0D8               	btfss	status,0,c
 11803   000F58  065E               	decf	(i2sprintf@eexp+1)^0,f,c
 11804   000F5A  D012               	goto	i2l8731
 11805   000F5C                     i2l8727:
 11806                           
 11807                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 11808   000F5C  C055  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
 11809   000F60  C056  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 11810   000F64  C057  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 11811   000F68  0E00               	movlw	0
 11812   000F6A  6E04               	movwf	i2___ftge@ff2^0,c
 11813   000F6C  0E20               	movlw	32
 11814   000F6E  6E05               	movwf	(i2___ftge@ff2+1)^0,c
 11815   000F70  0E41               	movlw	65
 11816   000F72  6E06               	movwf	(i2___ftge@ff2+2)^0,c
 11817   000F74  EC9C  F01C         	call	i2___ftge	;wreg free
 11818   000F78  A0D8               	btfss	status,0,c
 11819   000F7A  D002               	goto	i2l8731
 11820                           
 11821                           ;doprnt.c: 877: eexp++;
 11822   000F7C  4A5D               	infsnz	i2sprintf@eexp^0,f,c
 11823   000F7E  2A5E               	incf	(i2sprintf@eexp+1)^0,f,c
 11824   000F80                     i2l8731:
 11825                           
 11826                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 11827   000F80  BE67               	btfsc	(i2sprintf@prec+1)^0,7,c
 11828   000F82  D006               	goto	i2u1097_40
 11829   000F84  5067               	movf	(i2sprintf@prec+1)^0,w,c
 11830   000F86  E11B               	bnz	i2l8735
 11831   000F88  0E0D               	movlw	13
 11832   000F8A  5C66               	subwf	i2sprintf@prec^0,w,c
 11833   000F8C  B0D8               	btfsc	status,0,c
 11834   000F8E  D017               	goto	i2l8735
 11835   000F90                     i2u1097_40:
 11836                           
 11837                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 11838   000F90  C061  F02A         	movff	i2sprintf@fval,i2___ftadd@f1
 11839   000F94  C062  F02B         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
 11840   000F98  C063  F02C         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
 11841   000F9C  5066               	movf	i2sprintf@prec^0,w,c
 11842   000F9E  ECEB  F011         	call	i2_fround
 11843   000FA2  C01E  F02D         	movff	?i2_fround,i2___ftadd@f2
 11844   000FA6  C01F  F02E         	movff	?i2_fround+1,i2___ftadd@f2+1
 11845   000FAA  C020  F02F         	movff	?i2_fround+2,i2___ftadd@f2+2
 11846   000FAE  ECB1  F013         	call	i2___ftadd	;wreg free
 11847   000FB2  C02A  F061         	movff	?i2___ftadd,i2sprintf@fval
 11848   000FB6  C02B  F062         	movff	?i2___ftadd+1,i2sprintf@fval+1
 11849   000FBA  C02C  F063         	movff	?i2___ftadd+2,i2sprintf@fval+2
 11850   000FBE                     i2l8735:
 11851                           
 11852                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 11853   000FBE  BE5E               	btfsc	(i2sprintf@eexp+1)^0,7,c
 11854   000FC0  D006               	goto	i2u1098_40
 11855   000FC2  505E               	movf	(i2sprintf@eexp+1)^0,w,c
 11856   000FC4  E11E               	bnz	i2l8743
 11857   000FC6  0E0A               	movlw	10
 11858   000FC8  5C5D               	subwf	i2sprintf@eexp^0,w,c
 11859   000FCA  B0D8               	btfsc	status,0,c
 11860   000FCC  D01A               	goto	i2u1101_40
 11861   000FCE                     i2u1098_40:
 11862   000FCE  5061               	movf	i2sprintf@fval^0,w,c
 11863   000FD0  1062               	iorwf	(i2sprintf@fval+1)^0,w,c
 11864   000FD2  1063               	iorwf	(i2sprintf@fval+2)^0,w,c
 11865   000FD4  B4D8               	btfsc	status,2,c
 11866   000FD6  D051               	goto	i2l8757
 11867   000FD8  C061  F025         	movff	i2sprintf@fval,i2___fttol@f1
 11868   000FDC  C062  F026         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 11869   000FE0  C063  F027         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 11870   000FE4  EC4A  F018         	call	i2___fttol	;wreg free
 11871   000FE8  5025               	movf	?i2___fttol^0,w,c
 11872   000FEA  1026               	iorwf	(?i2___fttol+1)^0,w,c
 11873   000FEC  1027               	iorwf	(?i2___fttol+2)^0,w,c
 11874   000FEE  1028               	iorwf	(?i2___fttol+3)^0,w,c
 11875   000FF0  B4D8               	btfsc	status,2,c
 11876   000FF2  BE5E               	btfsc	(i2sprintf@eexp+1)^0,7,c
 11877   000FF4  D042               	goto	i2l8757
 11878   000FF6  505E               	movf	(i2sprintf@eexp+1)^0,w,c
 11879   000FF8  E104               	bnz	i2u1101_40
 11880   000FFA  0E02               	movlw	2
 11881   000FFC  5C5D               	subwf	i2sprintf@eexp^0,w,c
 11882   000FFE  A0D8               	btfss	status,0,c
 11883   001000  D03C               	goto	i2l8757
 11884   001002                     i2u1101_40:
 11885   001002                     i2l8743:
 11886                           
 11887                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 11888   001002  C055  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
 11889   001006  C056  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
 11890   00100A  C057  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
 11891   00100E  0E70               	movlw	112
 11892   001010  6E04               	movwf	i2___ftge@ff2^0,c
 11893   001012  0E89               	movlw	137
 11894   001014  6E05               	movwf	(i2___ftge@ff2+1)^0,c
 11895   001016  0E40               	movlw	64
 11896   001018  6E06               	movwf	(i2___ftge@ff2+2)^0,c
 11897   00101A  EC9C  F01C         	call	i2___ftge	;wreg free
 11898   00101E  B0D8               	btfsc	status,0,c
 11899   001020  D002               	goto	i2l8747
 11900                           
 11901                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11902   001022  0EF7               	movlw	247
 11903   001024  D001               	goto	L10
 11904   001026                     i2l8747:
 11905                           
 11906                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11907   001026  0EF8               	movlw	248
 11908   001028                     L10:
 11909   001028  265D               	addwf	i2sprintf@eexp^0,f,c
 11910   00102A  0EFF               	movlw	255
 11911   00102C  225E               	addwfc	(i2sprintf@eexp+1)^0,f,c
 11912                           
 11913                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
 11914   00102E  505D               	movf	i2sprintf@eexp^0,w,c
 11915   001030  EC08  F00D         	call	i2_scale
 11916   001034  C01E  F055         	movff	?i2_scale,i2sprintf@tmpval
 11917   001038  C01F  F056         	movff	?i2_scale+1,i2sprintf@tmpval+1
 11918   00103C  C020  F057         	movff	?i2_scale+2,i2sprintf@tmpval+2
 11919                           
 11920                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11921   001040  C061  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 11922   001044  C062  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 11923   001048  C063  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 11924   00104C  C055  F004         	movff	i2sprintf@tmpval,i2__tdiv_to_l_@f2
 11925   001050  C056  F005         	movff	i2sprintf@tmpval+1,i2__tdiv_to_l_@f2+1
 11926   001054  C057  F006         	movff	i2sprintf@tmpval+2,i2__tdiv_to_l_@f2+2
 11927   001058  EC04  F015         	call	i2__tdiv_to_l_	;wreg free
 11928   00105C  C001  F059         	movff	?i2__tdiv_to_l_,i2sprintf@val
 11929   001060  C002  F05A         	movff	?i2__tdiv_to_l_+1,i2sprintf@val+1
 11930   001064  C003  F05B         	movff	?i2__tdiv_to_l_+2,i2sprintf@val+2
 11931   001068  C004  F05C         	movff	?i2__tdiv_to_l_+3,i2sprintf@val+3
 11932                           
 11933                           ;doprnt.c: 1155: fval = 0.0;
 11934   00106C  0E00               	movlw	0
 11935   00106E  6E61               	movwf	i2sprintf@fval^0,c
 11936   001070  0E00               	movlw	0
 11937   001072  6E62               	movwf	(i2sprintf@fval+1)^0,c
 11938   001074  0E00               	movlw	0
 11939   001076  6E63               	movwf	(i2sprintf@fval+2)^0,c
 11940                           
 11941                           ;doprnt.c: 1156: } else {
 11942   001078  D032               	goto	i2l8761
 11943   00107A                     i2l8757:
 11944                           
 11945                           ;doprnt.c: 1157: val = (unsigned long)fval;
 11946   00107A  C061  F025         	movff	i2sprintf@fval,i2___fttol@f1
 11947   00107E  C062  F026         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 11948   001082  C063  F027         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 11949   001086  EC4A  F018         	call	i2___fttol	;wreg free
 11950   00108A  C025  F059         	movff	?i2___fttol,i2sprintf@val
 11951   00108E  C026  F05A         	movff	?i2___fttol+1,i2sprintf@val+1
 11952   001092  C027  F05B         	movff	?i2___fttol+2,i2sprintf@val+2
 11953   001096  C028  F05C         	movff	?i2___fttol+3,i2sprintf@val+3
 11954                           
 11955                           ;doprnt.c: 1158: fval -= (double)val;
 11956   00109A  C061  F036         	movff	i2sprintf@fval,i2___ftsub@f1
 11957   00109E  C062  F037         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
 11958   0010A2  C063  F038         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
 11959   0010A6  C059  F009         	movff	i2sprintf@val,i2___lltoft@c
 11960   0010AA  C05A  F00A         	movff	i2sprintf@val+1,i2___lltoft@c+1
 11961   0010AE  C05B  F00B         	movff	i2sprintf@val+2,i2___lltoft@c+2
 11962   0010B2  C05C  F00C         	movff	i2sprintf@val+3,i2___lltoft@c+3
 11963   0010B6  EC9F  F01E         	call	i2___lltoft	;wreg free
 11964   0010BA  C009  F039         	movff	?i2___lltoft,i2___ftsub@f2
 11965   0010BE  C00A  F03A         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 11966   0010C2  C00B  F03B         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 11967   0010C6  EC62  F020         	call	i2___ftsub	;wreg free
 11968   0010CA  C036  F061         	movff	?i2___ftsub,i2sprintf@fval
 11969   0010CE  C037  F062         	movff	?i2___ftsub+1,i2sprintf@fval+1
 11970   0010D2  C038  F063         	movff	?i2___ftsub+2,i2sprintf@fval+2
 11971                           
 11972                           ;doprnt.c: 1159: eexp = 0;
 11973   0010D6  0E00               	movlw	0
 11974   0010D8  6E5E               	movwf	(i2sprintf@eexp+1)^0,c
 11975   0010DA  0E00               	movlw	0
 11976   0010DC  6E5D               	movwf	i2sprintf@eexp^0,c
 11977   0010DE                     i2l8761:
 11978                           
 11979                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 11980   0010DE  0E01               	movlw	1
 11981   0010E0  6E68               	movwf	i2sprintf@c^0,c
 11982   0010E2                     i2l8767:
 11983                           
 11984                           ;doprnt.c: 1163: if(val < dpowers[c])
 11985   0010E2  5068               	movf	i2sprintf@c^0,w,c
 11986   0010E4  0D04               	mullw	4
 11987   0010E6  0EE9               	movlw	low _dpowers
 11988   0010E8  24F3               	addwf	243,w,c
 11989   0010EA  6EF6               	movwf	tblptrl,c
 11990   0010EC  0EFE               	movlw	high _dpowers
 11991   0010EE  20F4               	addwfc	244,w,c
 11992   0010F0  6EF7               	movwf	tblptrh,c
 11993   0010F2                     	if	0	;There are less than 3 active tblptr bytes
 11994   0010F2                     	endif
 11995   0010F2  0009               	tblrd		*+
 11996   0010F4  50F5               	movf	tablat,w,c
 11997   0010F6  5C59               	subwf	i2sprintf@val^0,w,c
 11998   0010F8  0009               	tblrd		*+
 11999   0010FA  50F5               	movf	tablat,w,c
 12000   0010FC  585A               	subwfb	(i2sprintf@val+1)^0,w,c
 12001   0010FE  0009               	tblrd		*+
 12002   001100  50F5               	movf	tablat,w,c
 12003   001102  585B               	subwfb	(i2sprintf@val+2)^0,w,c
 12004   001104  0009               	tblrd		*+
 12005   001106  50F5               	movf	tablat,w,c
 12006   001108  585C               	subwfb	(i2sprintf@val+3)^0,w,c
 12007   00110A  A0D8               	btfss	status,0,c
 12008   00110C  D005               	goto	i2u1104_40
 12009   00110E  2A68               	incf	i2sprintf@c^0,f,c
 12010   001110  0E0A               	movlw	10
 12011   001112  1868               	xorwf	i2sprintf@c^0,w,c
 12012   001114  A4D8               	btfss	status,2,c
 12013   001116  D7E5               	goto	i2l8767
 12014   001118                     i2u1104_40:
 12015                           
 12016                           ;doprnt.c: 1168: width -= prec + c + eexp;
 12017   001118  5068               	movf	i2sprintf@c^0,w,c
 12018   00111A  2466               	addwf	i2sprintf@prec^0,w,c
 12019   00111C  6E46               	movwf	??i2_sprintf^0,c
 12020   00111E  0E00               	movlw	0
 12021   001120  2067               	addwfc	(i2sprintf@prec+1)^0,w,c
 12022   001122  6E47               	movwf	(??i2_sprintf+1)^0,c
 12023   001124  505D               	movf	i2sprintf@eexp^0,w,c
 12024   001126  2646               	addwf	??i2_sprintf^0,f,c
 12025   001128  505E               	movf	(i2sprintf@eexp+1)^0,w,c
 12026   00112A  2247               	addwfc	(??i2_sprintf+1)^0,f,c
 12027   00112C  5046               	movf	??i2_sprintf^0,w,c
 12028   00112E  5E64               	subwf	i2sprintf@width^0,f,c
 12029   001130  5047               	movf	(??i2_sprintf+1)^0,w,c
 12030   001132  5A65               	subwfb	(i2sprintf@width+1)^0,f,c
 12031                           
 12032                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
 12033   001134  5066               	movf	i2sprintf@prec^0,w,c
 12034   001136  1067               	iorwf	(i2sprintf@prec+1)^0,w,c
 12035   001138  B4D8               	btfsc	status,2,c
 12036   00113A  D003               	goto	i2l8779
 12037                           
 12038                           ;doprnt.c: 1174: width--;
 12039   00113C  0664               	decf	i2sprintf@width^0,f,c
 12040   00113E  A0D8               	btfss	status,0,c
 12041   001140  0665               	decf	(i2sprintf@width+1)^0,f,c
 12042   001142                     i2l8779:
 12043                           
 12044                           ;doprnt.c: 1175: if(flag & 0x03)
 12045   001142  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12046   001146  0E03               	movlw	3
 12047   001148  1646               	andwf	??i2_sprintf^0,f,c
 12048   00114A  B4D8               	btfsc	status,2,c
 12049   00114C  D003               	goto	i2l8783
 12050                           
 12051                           ;doprnt.c: 1176: width--;
 12052   00114E  0664               	decf	i2sprintf@width^0,f,c
 12053   001150  A0D8               	btfss	status,0,c
 12054   001152  0665               	decf	(i2sprintf@width+1)^0,f,c
 12055   001154                     i2l8783:
 12056                           
 12057                           ;doprnt.c: 1179: if(flag & 0x04) {
 12058   001154  A45F               	btfss	i2sprintf@flag^0,2,c
 12059   001156  D02D               	goto	i2l8805
 12060                           
 12061                           ;doprnt.c: 1183: if(flag & 0x03)
 12062   001158  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12063   00115C  0E03               	movlw	3
 12064   00115E  1646               	andwf	??i2_sprintf^0,f,c
 12065   001160  B4D8               	btfsc	status,2,c
 12066   001162  D014               	goto	i2l8797
 12067                           
 12068                           ;doprnt.c: 1185: ((*sp++ = ('-')));
 12069   001164  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12070   001168  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12071   00116C  0E2D               	movlw	45
 12072   00116E  6EDF               	movwf	indf2,c
 12073   001170  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12074   001172  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12075   001174  D00B               	goto	i2l8797
 12076   001176                     i2l8791:
 12077                           
 12078                           ;doprnt.c: 1195: ((*sp++ = ('0')));
 12079   001176  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12080   00117A  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12081   00117E  0E30               	movlw	48
 12082   001180  6EDF               	movwf	indf2,c
 12083   001182  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12084   001184  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12085                           
 12086                           ;doprnt.c: 1196: width--;
 12087   001186  0664               	decf	i2sprintf@width^0,f,c
 12088   001188  A0D8               	btfss	status,0,c
 12089   00118A  0665               	decf	(i2sprintf@width+1)^0,f,c
 12090   00118C                     i2l8797:
 12091   00118C  BE65               	btfsc	(i2sprintf@width+1)^0,7,c
 12092   00118E  D06E               	goto	i2l8821
 12093   001190  5065               	movf	(i2sprintf@width+1)^0,w,c
 12094   001192  E1F1               	bnz	i2l8791
 12095   001194  0464               	decf	i2sprintf@width^0,w,c
 12096   001196  A0D8               	btfss	status,0,c
 12097   001198  D069               	goto	i2l8821
 12098   00119A  D7ED               	goto	i2l8791
 12099   00119C                     i2l8799:
 12100                           
 12101                           ;doprnt.c: 1207: ((*sp++ = (' ')));
 12102   00119C  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12103   0011A0  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12104   0011A4  0E20               	movlw	32
 12105   0011A6  6EDF               	movwf	indf2,c
 12106   0011A8  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12107   0011AA  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12108                           
 12109                           ;doprnt.c: 1208: width--;
 12110   0011AC  0664               	decf	i2sprintf@width^0,f,c
 12111   0011AE  A0D8               	btfss	status,0,c
 12112   0011B0  0665               	decf	(i2sprintf@width+1)^0,f,c
 12113   0011B2                     i2l8805:
 12114   0011B2  BE65               	btfsc	(i2sprintf@width+1)^0,7,c
 12115   0011B4  D005               	goto	i2u1110_40
 12116   0011B6  5065               	movf	(i2sprintf@width+1)^0,w,c
 12117   0011B8  E1F1               	bnz	i2l8799
 12118   0011BA  0464               	decf	i2sprintf@width^0,w,c
 12119   0011BC  B0D8               	btfsc	status,0,c
 12120   0011BE  D7EE               	goto	i2l8799
 12121   0011C0                     i2u1110_40:
 12122                           
 12123                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
 12124   0011C0  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12125   0011C4  0E03               	movlw	3
 12126   0011C6  1646               	andwf	??i2_sprintf^0,f,c
 12127   0011C8  B4D8               	btfsc	status,2,c
 12128   0011CA  D050               	goto	i2l8821
 12129                           
 12130                           ;doprnt.c: 1216: ((*sp++ = ('-')));
 12131   0011CC  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12132   0011D0  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12133   0011D4  0E2D               	movlw	45
 12134   0011D6  6EDF               	movwf	indf2,c
 12135   0011D8  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12136   0011DA  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12137   0011DC  D047               	goto	i2l8821
 12138   0011DE                     i2l8813:
 12139                           
 12140                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 12141   0011DE  C059  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 12142   0011E2  C05A  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 12143   0011E6  C05B  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 12144   0011EA  C05C  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 12145   0011EE  5068               	movf	i2sprintf@c^0,w,c
 12146   0011F0  0D04               	mullw	4
 12147   0011F2  0EE9               	movlw	low _dpowers
 12148   0011F4  24F3               	addwf	243,w,c
 12149   0011F6  6EF6               	movwf	tblptrl,c
 12150   0011F8  0EFE               	movlw	high _dpowers
 12151   0011FA  20F4               	addwfc	244,w,c
 12152   0011FC  6EF7               	movwf	tblptrh,c
 12153   0011FE                     	if	0	;There are less than 3 active tblptr bytes
 12154   0011FE                     	endif
 12155   0011FE  0009               	tblrd		*+
 12156   001200  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12157   001204  0009               	tblrd		*+
 12158   001206  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12159   00120A  0009               	tblrd		*+
 12160   00120C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12161   001210  000A               	tblrd		*-
 12162   001212  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12163   001216  ECE5  F01B         	call	i2___lldiv	;wreg free
 12164   00121A  C001  F055         	movff	?i2___lldiv,i2sprintf@tmpval
 12165   00121E  C002  F056         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 12166   001222  C003  F057         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 12167   001226  C004  F058         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 12168                           
 12169                           ;doprnt.c: 1228: tmpval.vd %= 10;
 12170   00122A  C055  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 12171   00122E  C056  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 12172   001232  C057  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 12173   001236  C058  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 12174   00123A  0E0A               	movlw	10
 12175   00123C  6E12               	movwf	i2___llmod@divisor^0,c
 12176   00123E  0E00               	movlw	0
 12177   001240  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 12178   001242  0E00               	movlw	0
 12179   001244  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 12180   001246  0E00               	movlw	0
 12181   001248  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 12182   00124A  ECE2  F01D         	call	i2___llmod	;wreg free
 12183   00124E  C00E  F055         	movff	?i2___llmod,i2sprintf@tmpval
 12184   001252  C00F  F056         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 12185   001256  C010  F057         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 12186   00125A  C011  F058         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 12187                           
 12188                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
 12189   00125E  5055               	movf	i2sprintf@tmpval^0,w,c
 12190   001260  0F30               	addlw	48
 12191   001262  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12192   001266  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12193   00126A  D7B5               	goto	L11
 12194   00126C                     i2l8821:
 12195   00126C  0668               	decf	i2sprintf@c^0,f,c
 12196   00126E  2868               	incf	i2sprintf@c^0,w,c
 12197   001270  B4D8               	btfsc	status,2,c
 12198   001272  D00C               	goto	i2l8829
 12199   001274  D7B4               	goto	i2l8813
 12200   001276                     i2l8823:
 12201                           
 12202                           ;doprnt.c: 1234: ((*sp++ = ('0')));
 12203   001276  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12204   00127A  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12205   00127E  0E30               	movlw	48
 12206   001280  6EDF               	movwf	indf2,c
 12207   001282  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12208   001284  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12209                           
 12210                           ;doprnt.c: 1235: eexp--;
 12211   001286  065D               	decf	i2sprintf@eexp^0,f,c
 12212   001288  A0D8               	btfss	status,0,c
 12213   00128A  065E               	decf	(i2sprintf@eexp+1)^0,f,c
 12214   00128C                     i2l8829:
 12215   00128C  BE5E               	btfsc	(i2sprintf@eexp+1)^0,7,c
 12216   00128E  D005               	goto	i2u1113_40
 12217   001290  505E               	movf	(i2sprintf@eexp+1)^0,w,c
 12218   001292  E1F1               	bnz	i2l8823
 12219   001294  045D               	decf	i2sprintf@eexp^0,w,c
 12220   001296  B0D8               	btfsc	status,0,c
 12221   001298  D7EE               	goto	i2l8823
 12222   00129A                     i2u1113_40:
 12223                           
 12224                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 12225   00129A  BE67               	btfsc	(i2sprintf@prec+1)^0,7,c
 12226   00129C  D009               	goto	i2l441
 12227   00129E  5067               	movf	(i2sprintf@prec+1)^0,w,c
 12228   0012A0  E104               	bnz	i2u1114_40
 12229   0012A2  0E09               	movlw	9
 12230   0012A4  5C66               	subwf	i2sprintf@prec^0,w,c
 12231   0012A6  A0D8               	btfss	status,0,c
 12232   0012A8  D003               	goto	i2l441
 12233   0012AA                     i2u1114_40:
 12234                           
 12235                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 12236   0012AA  0E08               	movlw	8
 12237   0012AC  6E68               	movwf	i2sprintf@c^0,c
 12238   0012AE  D002               	goto	i2l8835
 12239   0012B0                     i2l441:
 12240                           
 12241                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 12242   0012B0  C066  F068         	movff	i2sprintf@prec,i2sprintf@c
 12243   0012B4                     i2l8835:
 12244                           
 12245                           ;doprnt.c: 1241: prec -= (int)c;
 12246   0012B4  5068               	movf	i2sprintf@c^0,w,c
 12247   0012B6  5E66               	subwf	i2sprintf@prec^0,f,c
 12248   0012B8  0E00               	movlw	0
 12249   0012BA  5A67               	subwfb	(i2sprintf@prec+1)^0,f,c
 12250                           
 12251                           ;doprnt.c: 1245: if(c)
 12252   0012BC  5068               	movf	i2sprintf@c^0,w,c
 12253   0012BE  B4D8               	btfsc	status,2,c
 12254   0012C0  D008               	goto	i2l8843
 12255                           
 12256                           ;doprnt.c: 1247: ((*sp++ = ('.')));
 12257   0012C2  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12258   0012C6  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12259   0012CA  0E2E               	movlw	46
 12260   0012CC  6EDF               	movwf	indf2,c
 12261   0012CE  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12262   0012D0  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12263   0012D2                     i2l8843:
 12264                           
 12265                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 12266   0012D2  5068               	movf	i2sprintf@c^0,w,c
 12267   0012D4  EC08  F00D         	call	i2_scale
 12268   0012D8  C01E  F04C         	movff	?i2_scale,i2_sprintf$2005
 12269   0012DC  C01F  F04D         	movff	?i2_scale+1,i2_sprintf$2005+1
 12270   0012E0  C020  F04E         	movff	?i2_scale+2,i2_sprintf$2005+2
 12271                           
 12272                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 12273   0012E4  C061  F012         	movff	i2sprintf@fval,i2___ftmul@f2
 12274   0012E8  C062  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 12275   0012EC  C063  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 12276   0012F0  C04C  F00F         	movff	i2_sprintf$2005,i2___ftmul@f1
 12277   0012F4  C04D  F010         	movff	i2_sprintf$2005+1,i2___ftmul@f1+1
 12278   0012F8  C04E  F011         	movff	i2_sprintf$2005+2,i2___ftmul@f1+2
 12279   0012FC  EC78  F016         	call	i2___ftmul	;wreg free
 12280   001300  C00F  F025         	movff	?i2___ftmul,i2___fttol@f1
 12281   001304  C010  F026         	movff	?i2___ftmul+1,i2___fttol@f1+1
 12282   001308  C011  F027         	movff	?i2___ftmul+2,i2___fttol@f1+2
 12283   00130C  EC4A  F018         	call	i2___fttol	;wreg free
 12284   001310  C025  F059         	movff	?i2___fttol,i2sprintf@val
 12285   001314  C026  F05A         	movff	?i2___fttol+1,i2sprintf@val+1
 12286   001318  C027  F05B         	movff	?i2___fttol+2,i2sprintf@val+2
 12287   00131C  C028  F05C         	movff	?i2___fttol+3,i2sprintf@val+3
 12288                           
 12289                           ;doprnt.c: 1254: while(c--) {
 12290   001320  D06F               	goto	i2l8857
 12291   001322                     i2l8847:
 12292                           
 12293                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 12294   001322  C059  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 12295   001326  C05A  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 12296   00132A  C05B  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 12297   00132E  C05C  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 12298   001332  5068               	movf	i2sprintf@c^0,w,c
 12299   001334  0D04               	mullw	4
 12300   001336  0EE9               	movlw	low _dpowers
 12301   001338  24F3               	addwf	243,w,c
 12302   00133A  6EF6               	movwf	tblptrl,c
 12303   00133C  0EFE               	movlw	high _dpowers
 12304   00133E  20F4               	addwfc	244,w,c
 12305   001340  6EF7               	movwf	tblptrh,c
 12306   001342                     	if	0	;There are less than 3 active tblptr bytes
 12307   001342                     	endif
 12308   001342  0009               	tblrd		*+
 12309   001344  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12310   001348  0009               	tblrd		*+
 12311   00134A  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12312   00134E  0009               	tblrd		*+
 12313   001350  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12314   001354  000A               	tblrd		*-
 12315   001356  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12316   00135A  ECE5  F01B         	call	i2___lldiv	;wreg free
 12317   00135E  C001  F055         	movff	?i2___lldiv,i2sprintf@tmpval
 12318   001362  C002  F056         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 12319   001366  C003  F057         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 12320   00136A  C004  F058         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 12321                           
 12322                           ;doprnt.c: 1256: tmpval.vd %= 10;
 12323   00136E  C055  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 12324   001372  C056  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 12325   001376  C057  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 12326   00137A  C058  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 12327   00137E  0E0A               	movlw	10
 12328   001380  6E12               	movwf	i2___llmod@divisor^0,c
 12329   001382  0E00               	movlw	0
 12330   001384  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 12331   001386  0E00               	movlw	0
 12332   001388  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 12333   00138A  0E00               	movlw	0
 12334   00138C  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 12335   00138E  ECE2  F01D         	call	i2___llmod	;wreg free
 12336   001392  C00E  F055         	movff	?i2___llmod,i2sprintf@tmpval
 12337   001396  C00F  F056         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 12338   00139A  C010  F057         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 12339   00139E  C011  F058         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 12340                           
 12341                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
 12342   0013A2  5055               	movf	i2sprintf@tmpval^0,w,c
 12343   0013A4  0F30               	addlw	48
 12344   0013A6  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12345   0013AA  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12346   0013AE  6EDF               	movwf	indf2,c
 12347   0013B0  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12348   0013B2  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12349                           
 12350                           ;doprnt.c: 1258: val %= dpowers[c];
 12351   0013B4  C059  F00E         	movff	i2sprintf@val,i2___llmod@dividend
 12352   0013B8  C05A  F00F         	movff	i2sprintf@val+1,i2___llmod@dividend+1
 12353   0013BC  C05B  F010         	movff	i2sprintf@val+2,i2___llmod@dividend+2
 12354   0013C0  C05C  F011         	movff	i2sprintf@val+3,i2___llmod@dividend+3
 12355   0013C4  5068               	movf	i2sprintf@c^0,w,c
 12356   0013C6  0D04               	mullw	4
 12357   0013C8  0EE9               	movlw	low _dpowers
 12358   0013CA  24F3               	addwf	243,w,c
 12359   0013CC  6EF6               	movwf	tblptrl,c
 12360   0013CE  0EFE               	movlw	high _dpowers
 12361   0013D0  20F4               	addwfc	244,w,c
 12362   0013D2  6EF7               	movwf	tblptrh,c
 12363   0013D4                     	if	0	;There are less than 3 active tblptr bytes
 12364   0013D4                     	endif
 12365   0013D4  0009               	tblrd		*+
 12366   0013D6  CFF5 F012          	movff	tablat,i2___llmod@divisor
 12367   0013DA  0009               	tblrd		*+
 12368   0013DC  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 12369   0013E0  0009               	tblrd		*+
 12370   0013E2  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 12371   0013E6  000A               	tblrd		*-
 12372   0013E8  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 12373   0013EC  ECE2  F01D         	call	i2___llmod	;wreg free
 12374   0013F0  C00E  F059         	movff	?i2___llmod,i2sprintf@val
 12375   0013F4  C00F  F05A         	movff	?i2___llmod+1,i2sprintf@val+1
 12376   0013F8  C010  F05B         	movff	?i2___llmod+2,i2sprintf@val+2
 12377   0013FC  C011  F05C         	movff	?i2___llmod+3,i2sprintf@val+3
 12378   001400                     i2l8857:
 12379   001400  0668               	decf	i2sprintf@c^0,f,c
 12380   001402  2868               	incf	i2sprintf@c^0,w,c
 12381   001404  B4D8               	btfsc	status,2,c
 12382   001406  D00C               	goto	i2l8865
 12383   001408  D78C               	goto	i2l8847
 12384   00140A                     i2l8859:
 12385                           
 12386                           ;doprnt.c: 1262: ((*sp++ = ('0')));
 12387   00140A  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12388   00140E  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12389   001412  0E30               	movlw	48
 12390   001414  6EDF               	movwf	indf2,c
 12391   001416  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12392   001418  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12393                           
 12394                           ;doprnt.c: 1263: prec--;
 12395   00141A  0666               	decf	i2sprintf@prec^0,f,c
 12396   00141C  A0D8               	btfss	status,0,c
 12397   00141E  0667               	decf	(i2sprintf@prec+1)^0,f,c
 12398   001420                     i2l8865:
 12399   001420  5066               	movf	i2sprintf@prec^0,w,c
 12400   001422  1067               	iorwf	(i2sprintf@prec+1)^0,w,c
 12401   001424  B4D8               	btfsc	status,2,c
 12402   001426  D12B               	goto	i2u1137_40
 12403   001428  D7F0               	goto	i2l8859
 12404   00142A                     i2l8867:
 12405                           
 12406                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
 12407   00142A  C051  FFD9         	movff	i2sprintf@ap,fsr2l
 12408   00142E  C052  FFDA         	movff	i2sprintf@ap+1,fsr2h
 12409   001432  CFDE F059          	movff	postinc2,i2sprintf@val
 12410   001436  CFDD F05A          	movff	postdec2,i2sprintf@val+1
 12411   00143A  0E00               	movlw	0
 12412   00143C  BE5A               	btfsc	(i2sprintf@val+1)^0,7,c
 12413   00143E  0EFF               	movlw	-1
 12414   001440  6E5B               	movwf	(i2sprintf@val+2)^0,c
 12415   001442  6E5C               	movwf	(i2sprintf@val+3)^0,c
 12416   001444  0E02               	movlw	2
 12417   001446  2651               	addwf	i2sprintf@ap^0,f,c
 12418   001448  0E00               	movlw	0
 12419   00144A  2252               	addwfc	(i2sprintf@ap+1)^0,f,c
 12420                           
 12421                           ;doprnt.c: 1287: if((long)val < 0) {
 12422   00144C  AE5C               	btfss	(i2sprintf@val+3)^0,7,c
 12423   00144E  D00A               	goto	i2l8877
 12424                           
 12425                           ;doprnt.c: 1288: flag |= 0x03;
 12426   001450  0E03               	movlw	3
 12427   001452  125F               	iorwf	i2sprintf@flag^0,f,c
 12428                           
 12429                           ;doprnt.c: 1289: val = -val;
 12430   001454  1E5C               	comf	(i2sprintf@val+3)^0,f,c
 12431   001456  1E5B               	comf	(i2sprintf@val+2)^0,f,c
 12432   001458  1E5A               	comf	(i2sprintf@val+1)^0,f,c
 12433   00145A  6C59               	negf	i2sprintf@val^0,c
 12434   00145C  0E00               	movlw	0
 12435   00145E  225A               	addwfc	(i2sprintf@val+1)^0,f,c
 12436   001460  225B               	addwfc	(i2sprintf@val+2)^0,f,c
 12437   001462  225C               	addwfc	(i2sprintf@val+3)^0,f,c
 12438   001464                     i2l8877:
 12439                           
 12440                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
 12441   001464  5066               	movf	i2sprintf@prec^0,w,c
 12442   001466  1067               	iorwf	(i2sprintf@prec+1)^0,w,c
 12443   001468  A4D8               	btfss	status,2,c
 12444   00146A  D008               	goto	i2l8883
 12445   00146C  5059               	movf	i2sprintf@val^0,w,c
 12446   00146E  105A               	iorwf	(i2sprintf@val+1)^0,w,c
 12447   001470  105B               	iorwf	(i2sprintf@val+2)^0,w,c
 12448   001472  105C               	iorwf	(i2sprintf@val+3)^0,w,c
 12449   001474  A4D8               	btfss	status,2,c
 12450   001476  D002               	goto	i2l8883
 12451                           
 12452                           ;doprnt.c: 1317: prec++;
 12453   001478  4A66               	infsnz	i2sprintf@prec^0,f,c
 12454   00147A  2A67               	incf	(i2sprintf@prec+1)^0,f,c
 12455   00147C                     i2l8883:
 12456                           
 12457                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12458   00147C  0E01               	movlw	1
 12459   00147E  6E68               	movwf	i2sprintf@c^0,c
 12460   001480                     i2l8889:
 12461                           
 12462                           ;doprnt.c: 1332: if(val < dpowers[c])
 12463   001480  5068               	movf	i2sprintf@c^0,w,c
 12464   001482  0D04               	mullw	4
 12465   001484  0EE9               	movlw	low _dpowers
 12466   001486  24F3               	addwf	243,w,c
 12467   001488  6EF6               	movwf	tblptrl,c
 12468   00148A  0EFE               	movlw	high _dpowers
 12469   00148C  20F4               	addwfc	244,w,c
 12470   00148E  6EF7               	movwf	tblptrh,c
 12471   001490                     	if	0	;There are less than 3 active tblptr bytes
 12472   001490                     	endif
 12473   001490  0009               	tblrd		*+
 12474   001492  50F5               	movf	tablat,w,c
 12475   001494  5C59               	subwf	i2sprintf@val^0,w,c
 12476   001496  0009               	tblrd		*+
 12477   001498  50F5               	movf	tablat,w,c
 12478   00149A  585A               	subwfb	(i2sprintf@val+1)^0,w,c
 12479   00149C  0009               	tblrd		*+
 12480   00149E  50F5               	movf	tablat,w,c
 12481   0014A0  585B               	subwfb	(i2sprintf@val+2)^0,w,c
 12482   0014A2  0009               	tblrd		*+
 12483   0014A4  50F5               	movf	tablat,w,c
 12484   0014A6  585C               	subwfb	(i2sprintf@val+3)^0,w,c
 12485   0014A8  A0D8               	btfss	status,0,c
 12486   0014AA  D005               	goto	i2u1122_40
 12487   0014AC  2A68               	incf	i2sprintf@c^0,f,c
 12488   0014AE  0E0A               	movlw	10
 12489   0014B0  1868               	xorwf	i2sprintf@c^0,w,c
 12490   0014B2  A4D8               	btfss	status,2,c
 12491   0014B4  D7E5               	goto	i2l8889
 12492   0014B6                     i2u1122_40:
 12493                           
 12494                           ;doprnt.c: 1365: if(c < prec)
 12495   0014B6  5068               	movf	i2sprintf@c^0,w,c
 12496   0014B8  6E46               	movwf	??i2_sprintf^0,c
 12497   0014BA  6A47               	clrf	(??i2_sprintf+1)^0,c
 12498   0014BC  5066               	movf	i2sprintf@prec^0,w,c
 12499   0014BE  5C46               	subwf	??i2_sprintf^0,w,c
 12500   0014C0  5047               	movf	(??i2_sprintf+1)^0,w,c
 12501   0014C2  0A80               	xorlw	128
 12502   0014C4  6E48               	movwf	(??i2_sprintf+2)^0,c
 12503   0014C6  5067               	movf	(i2sprintf@prec+1)^0,w,c
 12504   0014C8  0A80               	xorlw	128
 12505   0014CA  5848               	subwfb	(??i2_sprintf+2)^0,w,c
 12506   0014CC  B0D8               	btfsc	status,0,c
 12507   0014CE  D003               	goto	i2l8901
 12508                           
 12509                           ;doprnt.c: 1366: c = (char)prec;
 12510   0014D0  C066  F068         	movff	i2sprintf@prec,i2sprintf@c
 12511   0014D4  D010               	goto	i2l8905
 12512   0014D6                     i2l8901:
 12513                           
 12514                           ;doprnt.c: 1367: else if(prec < c)
 12515   0014D6  5068               	movf	i2sprintf@c^0,w,c
 12516   0014D8  6E46               	movwf	??i2_sprintf^0,c
 12517   0014DA  6A47               	clrf	(??i2_sprintf+1)^0,c
 12518   0014DC  5046               	movf	??i2_sprintf^0,w,c
 12519   0014DE  5C66               	subwf	i2sprintf@prec^0,w,c
 12520   0014E0  5067               	movf	(i2sprintf@prec+1)^0,w,c
 12521   0014E2  0A80               	xorlw	128
 12522   0014E4  6E48               	movwf	(??i2_sprintf+2)^0,c
 12523   0014E6  5047               	movf	(??i2_sprintf+1)^0,w,c
 12524   0014E8  0A80               	xorlw	128
 12525   0014EA  5848               	subwfb	(??i2_sprintf+2)^0,w,c
 12526   0014EC  B0D8               	btfsc	status,0,c
 12527   0014EE  D003               	goto	i2l8905
 12528                           
 12529                           ;doprnt.c: 1368: prec = c;
 12530   0014F0  C068  F066         	movff	i2sprintf@c,i2sprintf@prec
 12531   0014F4  6A67               	clrf	(i2sprintf@prec+1)^0,c
 12532   0014F6                     i2l8905:
 12533                           
 12534                           ;doprnt.c: 1371: if(width && flag & 0x03)
 12535   0014F6  5064               	movf	i2sprintf@width^0,w,c
 12536   0014F8  1065               	iorwf	(i2sprintf@width+1)^0,w,c
 12537   0014FA  B4D8               	btfsc	status,2,c
 12538   0014FC  D009               	goto	i2l8911
 12539   0014FE  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12540   001502  0E03               	movlw	3
 12541   001504  1646               	andwf	??i2_sprintf^0,f,c
 12542   001506  B4D8               	btfsc	status,2,c
 12543   001508  D003               	goto	i2l8911
 12544                           
 12545                           ;doprnt.c: 1372: width--;
 12546   00150A  0664               	decf	i2sprintf@width^0,f,c
 12547   00150C  A0D8               	btfss	status,0,c
 12548   00150E  0665               	decf	(i2sprintf@width+1)^0,f,c
 12549   001510                     i2l8911:
 12550                           
 12551                           ;doprnt.c: 1374: if(flag & 0x4000) {
 12552   001510  AC60               	btfss	(i2sprintf@flag+1)^0,6,c
 12553   001512  D013               	goto	i2l8919
 12554                           
 12555                           ;doprnt.c: 1375: if(width > prec)
 12556   001514  5064               	movf	i2sprintf@width^0,w,c
 12557   001516  5C66               	subwf	i2sprintf@prec^0,w,c
 12558   001518  5067               	movf	(i2sprintf@prec+1)^0,w,c
 12559   00151A  0A80               	xorlw	128
 12560   00151C  6E46               	movwf	??i2_sprintf^0,c
 12561   00151E  5065               	movf	(i2sprintf@width+1)^0,w,c
 12562   001520  0A80               	xorlw	128
 12563   001522  5846               	subwfb	??i2_sprintf^0,w,c
 12564   001524  B0D8               	btfsc	status,0,c
 12565   001526  D005               	goto	i2l8917
 12566                           
 12567                           ;doprnt.c: 1376: width -= prec;
 12568   001528  5066               	movf	i2sprintf@prec^0,w,c
 12569   00152A  5E64               	subwf	i2sprintf@width^0,f,c
 12570   00152C  5067               	movf	(i2sprintf@prec+1)^0,w,c
 12571   00152E  5A65               	subwfb	(i2sprintf@width+1)^0,f,c
 12572   001530  D004               	goto	i2l8919
 12573   001532                     i2l8917:
 12574                           
 12575                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 12576   001532  0E00               	movlw	0
 12577   001534  6E65               	movwf	(i2sprintf@width+1)^0,c
 12578   001536  0E00               	movlw	0
 12579   001538  6E64               	movwf	i2sprintf@width^0,c
 12580   00153A                     i2l8919:
 12581                           
 12582                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
 12583   00153A  5068               	movf	i2sprintf@c^0,w,c
 12584   00153C  6E46               	movwf	??i2_sprintf^0,c
 12585   00153E  6A47               	clrf	(??i2_sprintf+1)^0,c
 12586   001540  5064               	movf	i2sprintf@width^0,w,c
 12587   001542  5C46               	subwf	??i2_sprintf^0,w,c
 12588   001544  5047               	movf	(??i2_sprintf+1)^0,w,c
 12589   001546  0A80               	xorlw	128
 12590   001548  6E48               	movwf	(??i2_sprintf+2)^0,c
 12591   00154A  5065               	movf	(i2sprintf@width+1)^0,w,c
 12592   00154C  0A80               	xorlw	128
 12593   00154E  5848               	subwfb	(??i2_sprintf+2)^0,w,c
 12594   001550  B0D8               	btfsc	status,0,c
 12595   001552  D005               	goto	i2l8923
 12596                           
 12597                           ;doprnt.c: 1408: width -= c;
 12598   001554  5068               	movf	i2sprintf@c^0,w,c
 12599   001556  5E64               	subwf	i2sprintf@width^0,f,c
 12600   001558  0E00               	movlw	0
 12601   00155A  5A65               	subwfb	(i2sprintf@width+1)^0,f,c
 12602   00155C  D004               	goto	i2l8925
 12603   00155E                     i2l8923:
 12604                           
 12605                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 12606   00155E  0E00               	movlw	0
 12607   001560  6E65               	movwf	(i2sprintf@width+1)^0,c
 12608   001562  0E00               	movlw	0
 12609   001564  6E64               	movwf	i2sprintf@width^0,c
 12610   001566                     i2l8925:
 12611                           
 12612                           ;doprnt.c: 1413: if(flag & 0x04) {
 12613   001566  A45F               	btfss	i2sprintf@flag^0,2,c
 12614   001568  D01E               	goto	i2l8941
 12615                           
 12616                           ;doprnt.c: 1418: if(flag & 0x03)
 12617   00156A  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12618   00156E  0E03               	movlw	3
 12619   001570  1646               	andwf	??i2_sprintf^0,f,c
 12620   001572  B4D8               	btfsc	status,2,c
 12621   001574  D008               	goto	i2l8933
 12622                           
 12623                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 12624   001576  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12625   00157A  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12626   00157E  0E2D               	movlw	45
 12627   001580  6EDF               	movwf	indf2,c
 12628   001582  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12629   001584  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12630   001586                     i2l8933:
 12631                           
 12632                           ;doprnt.c: 1441: if(width)
 12633   001586  5064               	movf	i2sprintf@width^0,w,c
 12634   001588  1065               	iorwf	(i2sprintf@width+1)^0,w,c
 12635   00158A  B4D8               	btfsc	status,2,c
 12636   00158C  D070               	goto	i2l8961
 12637                           
 12638                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 12639   00158E  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12640   001592  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12641   001596  0E30               	movlw	48
 12642   001598  6EDF               	movwf	indf2,c
 12643   00159A  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12644   00159C  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12645                           
 12646                           ;doprnt.c: 1444: while(--width);
 12647   00159E  0664               	decf	i2sprintf@width^0,f,c
 12648   0015A0  A0D8               	btfss	status,0,c
 12649   0015A2  0665               	decf	(i2sprintf@width+1)^0,f,c
 12650   0015A4  D7F0               	goto	i2l8933
 12651   0015A6                     i2l8941:
 12652                           
 12653                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 12654   0015A6  5064               	movf	i2sprintf@width^0,w,c
 12655   0015A8  1065               	iorwf	(i2sprintf@width+1)^0,w,c
 12656   0015AA  B4D8               	btfsc	status,2,c
 12657   0015AC  D00F               	goto	i2u1135_40
 12658   0015AE                     i2u1134_40:
 12659                           
 12660                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 12661   0015AE  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12662   0015B2  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12663   0015B6  0E20               	movlw	32
 12664   0015B8  6EDF               	movwf	indf2,c
 12665   0015BA  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12666   0015BC  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12667                           
 12668                           ;doprnt.c: 1457: while(--width);
 12669   0015BE  0664               	decf	i2sprintf@width^0,f,c
 12670   0015C0  A0D8               	btfss	status,0,c
 12671   0015C2  0665               	decf	(i2sprintf@width+1)^0,f,c
 12672   0015C4  5064               	movf	i2sprintf@width^0,w,c
 12673   0015C6  1065               	iorwf	(i2sprintf@width+1)^0,w,c
 12674   0015C8  A4D8               	btfss	status,2,c
 12675   0015CA  D7F1               	goto	i2u1134_40
 12676   0015CC                     i2u1135_40:
 12677                           
 12678                           ;doprnt.c: 1464: if(flag & 0x03)
 12679   0015CC  C05F  F046         	movff	i2sprintf@flag,??i2_sprintf
 12680   0015D0  0E03               	movlw	3
 12681   0015D2  1646               	andwf	??i2_sprintf^0,f,c
 12682   0015D4  B4D8               	btfsc	status,2,c
 12683   0015D6  D04B               	goto	i2l8961
 12684                           
 12685                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 12686   0015D8  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12687   0015DC  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12688   0015E0  0E2D               	movlw	45
 12689   0015E2  6EDF               	movwf	indf2,c
 12690   0015E4                     i2l8953:
 12691   0015E4  4A3C               	infsnz	i2sprintf@sp^0,f,c
 12692   0015E6  2A3D               	incf	(i2sprintf@sp+1)^0,f,c
 12693   0015E8  D042               	goto	i2l8961
 12694   0015EA                     i2l8955:
 12695                           
 12696                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 12697   0015EA  C066  F046         	movff	i2sprintf@prec,??i2_sprintf
 12698   0015EE  C067  F047         	movff	i2sprintf@prec+1,??i2_sprintf+1
 12699   0015F2  90D8               	bcf	status,0,c
 12700   0015F4  3646               	rlcf	??i2_sprintf^0,f,c
 12701   0015F6  3647               	rlcf	(??i2_sprintf+1)^0,f,c
 12702   0015F8  90D8               	bcf	status,0,c
 12703   0015FA  3646               	rlcf	??i2_sprintf^0,f,c
 12704   0015FC  3647               	rlcf	(??i2_sprintf+1)^0,f,c
 12705   0015FE  0EE9               	movlw	low _dpowers
 12706   001600  2446               	addwf	??i2_sprintf^0,w,c
 12707   001602  6EF6               	movwf	tblptrl,c
 12708   001604  0EFE               	movlw	high _dpowers
 12709   001606  2047               	addwfc	(??i2_sprintf+1)^0,w,c
 12710   001608  6EF7               	movwf	tblptrh,c
 12711   00160A                     	if	0	;There are less than 3 active tblptr bytes
 12712   00160A                     	endif
 12713   00160A  0009               	tblrd		*+
 12714   00160C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12715   001610  0009               	tblrd		*+
 12716   001612  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12717   001616  0009               	tblrd		*+
 12718   001618  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12719   00161C  000A               	tblrd		*-
 12720   00161E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12721   001622  C059  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 12722   001626  C05A  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 12723   00162A  C05B  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 12724   00162E  C05C  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 12725   001632  ECE5  F01B         	call	i2___lldiv	;wreg free
 12726   001636  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 12727   00163A  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 12728   00163E  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 12729   001642  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 12730   001646  0E0A               	movlw	10
 12731   001648  6E12               	movwf	i2___llmod@divisor^0,c
 12732   00164A  0E00               	movlw	0
 12733   00164C  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 12734   00164E  0E00               	movlw	0
 12735   001650  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 12736   001652  0E00               	movlw	0
 12737   001654  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 12738   001656  ECE2  F01D         	call	i2___llmod	;wreg free
 12739   00165A  500E               	movf	?i2___llmod^0,w,c
 12740   00165C  0F30               	addlw	48
 12741   00165E  6E68               	movwf	i2sprintf@c^0,c
 12742                           
 12743                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 12744   001660  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12745   001664  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12746   001668  C068  FFDF         	movff	i2sprintf@c,indf2
 12747   00166C  D7BB               	goto	i2l8953
 12748   00166E                     i2l8961:
 12749   00166E  0666               	decf	i2sprintf@prec^0,f,c
 12750   001670  A0D8               	btfss	status,0,c
 12751   001672  0667               	decf	(i2sprintf@prec+1)^0,f,c
 12752   001674  2866               	incf	i2sprintf@prec^0,w,c
 12753   001676  E1B9               	bnz	i2l8955
 12754   001678  2867               	incf	(i2sprintf@prec+1)^0,w,c
 12755   00167A  A4D8               	btfss	status,2,c
 12756   00167C  D7B6               	goto	i2l8955
 12757   00167E                     i2u1137_40:
 12758   00167E  C03E  FFF6         	movff	i2sprintf@f,tblptrl
 12759   001682  C03F  FFF7         	movff	i2sprintf@f+1,tblptrh
 12760   001686  4A3E               	infsnz	i2sprintf@f^0,f,c
 12761   001688  2A3F               	incf	(i2sprintf@f+1)^0,f,c
 12762   00168A                     	if	0	;tblptru may be non-zero
 12763   00168A                     	endif
 12764   00168A                     	if	0	;tblptru may be non-zero
 12765   00168A                     	endif
 12766   00168A  0008               	tblrd		*
 12767   00168C  CFF5 F068          	movff	tablat,i2sprintf@c
 12768   001690  5068               	movf	i2sprintf@c^0,w,c
 12769   001692  A4D8               	btfss	status,2,c
 12770   001694  EFC1  F005         	goto	i2l8597
 12771   001698                     i2u1138_40:
 12772                           
 12773                           ;doprnt.c: 1564: *sp = 0;
 12774   001698  C03C  FFD9         	movff	i2sprintf@sp,fsr2l
 12775   00169C  C03D  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12776   0016A0  6ADF               	clrf	indf2,c
 12777   0016A2  0012               	return		;funcret
 12778   0016A4                     __end_ofi2_sprintf:
 12779                           	callstack 0
 12780                           
 12781 ;; *************** function i2_scale *****************
 12782 ;; Defined at:
 12783 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  scl             1    wreg     char 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;  scl             1   35[COMRAM] char 
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  3   29[COMRAM] char 
 12790 ;; Registers used:
 12791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12797 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12798 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12800 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;Total ram usage:        7 bytes
 12802 ;; Hardware stack levels used: 1
 12803 ;; Hardware stack levels required when called: 2
 12804 ;; This function calls:
 12805 ;;		i2___awdiv
 12806 ;;		i2___awmod
 12807 ;;		i2___ftmul
 12808 ;; This function is called by:
 12809 ;;		i2_sprintf
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text59
 12814   001A10                     __ptext59:
 12815                           	callstack 0
 12816   001A10                     i2_scale:
 12817                           	callstack 16
 12818                           
 12819                           ;incstack = 0
 12820                           ;i2scale@scl stored from wreg
 12821   001A10  6E24               	movwf	i2scale@scl^0,c
 12822                           
 12823                           ;doprnt.c: 436: if(scl < 0) {
 12824   001A12  AE24               	btfss	i2scale@scl^0,7,c
 12825   001A14  D0D9               	goto	i2l7885
 12826                           
 12827                           ;doprnt.c: 437: scl = -scl;
 12828   001A16  6C24               	negf	i2scale@scl^0,c
 12829                           
 12830                           ;doprnt.c: 438: if(scl>=110)
 12831   001A18  5024               	movf	i2scale@scl^0,w,c
 12832   001A1A  0A80               	xorlw	128
 12833   001A1C  0F12               	addlw	-238
 12834   001A1E  A0D8               	btfss	status,0,c
 12835   001A20  D079               	goto	i2l7875
 12836                           
 12837                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 12838   001A22  0E00               	movlw	0
 12839   001A24  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 12840   001A26  0E0A               	movlw	10
 12841   001A28  6E09               	movwf	i2___awdiv@divisor^0,c
 12842   001A2A  0E00               	movlw	0
 12843   001A2C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 12844   001A2E  0E64               	movlw	100
 12845   001A30  6E03               	movwf	i2___awmod@divisor^0,c
 12846   001A32  5024               	movf	i2scale@scl^0,w,c
 12847   001A34  6E01               	movwf	i2___awmod@dividend^0,c
 12848   001A36  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 12849   001A38  BE01               	btfsc	i2___awmod@dividend^0,7,c
 12850   001A3A  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 12851   001A3C  EC0E  F01D         	call	i2___awmod	;wreg free
 12852   001A40  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 12853   001A44  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 12854   001A48  EC62  F01B         	call	i2___awdiv	;wreg free
 12855   001A4C  0E09               	movlw	9
 12856   001A4E  2607               	addwf	?i2___awdiv^0,f,c
 12857   001A50  5007               	movf	?i2___awdiv^0,w,c
 12858   001A52  0D03               	mullw	3
 12859   001A54  0EC2               	movlw	low __npowers_
 12860   001A56  24F3               	addwf	243,w,c
 12861   001A58  6EF6               	movwf	tblptrl,c
 12862   001A5A  0EFE               	movlw	high __npowers_
 12863   001A5C  20F4               	addwfc	244,w,c
 12864   001A5E  6EF7               	movwf	tblptrh,c
 12865   001A60                     	if	0	;There are less than 3 active tblptr bytes
 12866   001A60                     	endif
 12867   001A60  0009               	tblrd		*+
 12868   001A62  CFF5 F012          	movff	tablat,i2___ftmul@f2
 12869   001A66  0009               	tblrd		*+
 12870   001A68  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 12871   001A6C  000A               	tblrd		*-
 12872   001A6E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 12873   001A72  0E00               	movlw	0
 12874   001A74  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 12875   001A76  0E64               	movlw	100
 12876   001A78  6E09               	movwf	i2___awdiv@divisor^0,c
 12877   001A7A  5024               	movf	i2scale@scl^0,w,c
 12878   001A7C  6E07               	movwf	i2___awdiv@dividend^0,c
 12879   001A7E  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 12880   001A80  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 12881   001A82  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 12882   001A84  EC62  F01B         	call	i2___awdiv	;wreg free
 12883   001A88  0E12               	movlw	18
 12884   001A8A  2607               	addwf	?i2___awdiv^0,f,c
 12885   001A8C  5007               	movf	?i2___awdiv^0,w,c
 12886   001A8E  0D03               	mullw	3
 12887   001A90  0EC2               	movlw	low __npowers_
 12888   001A92  24F3               	addwf	243,w,c
 12889   001A94  6EF6               	movwf	tblptrl,c
 12890   001A96  0EFE               	movlw	high __npowers_
 12891   001A98  20F4               	addwfc	244,w,c
 12892   001A9A  6EF7               	movwf	tblptrh,c
 12893   001A9C                     	if	0	;There are less than 3 active tblptr bytes
 12894   001A9C                     	endif
 12895   001A9C  0009               	tblrd		*+
 12896   001A9E  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 12897   001AA2  0009               	tblrd		*+
 12898   001AA4  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 12899   001AA8  000A               	tblrd		*-
 12900   001AAA  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 12901   001AAE  EC78  F016         	call	i2___ftmul	;wreg free
 12902   001AB2  C00F  F021         	movff	?i2___ftmul,i2_scale$2004
 12903   001AB6  C010  F022         	movff	?i2___ftmul+1,i2_scale$2004+1
 12904   001ABA  C011  F023         	movff	?i2___ftmul+2,i2_scale$2004+2
 12905                           
 12906                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 12907   001ABE  C021  F00F         	movff	i2_scale$2004,i2___ftmul@f1
 12908   001AC2  C022  F010         	movff	i2_scale$2004+1,i2___ftmul@f1+1
 12909   001AC6  C023  F011         	movff	i2_scale$2004+2,i2___ftmul@f1+2
 12910   001ACA  0E00               	movlw	0
 12911   001ACC  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 12912   001ACE  0E0A               	movlw	10
 12913   001AD0  6E03               	movwf	i2___awmod@divisor^0,c
 12914   001AD2  5024               	movf	i2scale@scl^0,w,c
 12915   001AD4  6E01               	movwf	i2___awmod@dividend^0,c
 12916   001AD6  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 12917   001AD8  BE01               	btfsc	i2___awmod@dividend^0,7,c
 12918   001ADA  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 12919   001ADC  EC0E  F01D         	call	i2___awmod	;wreg free
 12920   001AE0  5001               	movf	?i2___awmod^0,w,c
 12921   001AE2  0D03               	mullw	3
 12922   001AE4  0EC2               	movlw	low __npowers_
 12923   001AE6  24F3               	addwf	243,w,c
 12924   001AE8  6EF6               	movwf	tblptrl,c
 12925   001AEA  0EFE               	movlw	high __npowers_
 12926   001AEC  20F4               	addwfc	244,w,c
 12927   001AEE  6EF7               	movwf	tblptrh,c
 12928   001AF0                     	if	0	;There are less than 3 active tblptr bytes
 12929   001AF0                     	endif
 12930   001AF0  0009               	tblrd		*+
 12931   001AF2  CFF5 F012          	movff	tablat,i2___ftmul@f2
 12932   001AF6  0009               	tblrd		*+
 12933   001AF8  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 12934   001AFC  000A               	tblrd		*-
 12935   001AFE  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 12936   001B02  EC78  F016         	call	i2___ftmul	;wreg free
 12937   001B06  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 12938   001B0A  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 12939   001B0E  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 12940   001B12  0012               	return	
 12941   001B14                     i2l7875:
 12942                           
 12943                           ;doprnt.c: 440: else if(scl > 10)
 12944   001B14  5024               	movf	i2scale@scl^0,w,c
 12945   001B16  0A80               	xorlw	128
 12946   001B18  0F75               	addlw	-139
 12947   001B1A  A0D8               	btfss	status,0,c
 12948   001B1C  D043               	goto	i2l7881
 12949                           
 12950                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 12951   001B1E  0E00               	movlw	0
 12952   001B20  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 12953   001B22  0E0A               	movlw	10
 12954   001B24  6E09               	movwf	i2___awdiv@divisor^0,c
 12955   001B26  5024               	movf	i2scale@scl^0,w,c
 12956   001B28  6E07               	movwf	i2___awdiv@dividend^0,c
 12957   001B2A  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 12958   001B2C  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 12959   001B2E  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 12960   001B30  EC62  F01B         	call	i2___awdiv	;wreg free
 12961   001B34  0E09               	movlw	9
 12962   001B36  2607               	addwf	?i2___awdiv^0,f,c
 12963   001B38  5007               	movf	?i2___awdiv^0,w,c
 12964   001B3A  0D03               	mullw	3
 12965   001B3C  0EC2               	movlw	low __npowers_
 12966   001B3E  24F3               	addwf	243,w,c
 12967   001B40  6EF6               	movwf	tblptrl,c
 12968   001B42  0EFE               	movlw	high __npowers_
 12969   001B44  20F4               	addwfc	244,w,c
 12970   001B46  6EF7               	movwf	tblptrh,c
 12971   001B48                     	if	0	;There are less than 3 active tblptr bytes
 12972   001B48                     	endif
 12973   001B48  0009               	tblrd		*+
 12974   001B4A  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 12975   001B4E  0009               	tblrd		*+
 12976   001B50  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 12977   001B54  000A               	tblrd		*-
 12978   001B56  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 12979   001B5A  0E00               	movlw	0
 12980   001B5C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 12981   001B5E  0E0A               	movlw	10
 12982   001B60  6E03               	movwf	i2___awmod@divisor^0,c
 12983   001B62  5024               	movf	i2scale@scl^0,w,c
 12984   001B64  6E01               	movwf	i2___awmod@dividend^0,c
 12985   001B66  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 12986   001B68  BE01               	btfsc	i2___awmod@dividend^0,7,c
 12987   001B6A  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 12988   001B6C  EC0E  F01D         	call	i2___awmod	;wreg free
 12989   001B70  5001               	movf	?i2___awmod^0,w,c
 12990   001B72  0D03               	mullw	3
 12991   001B74  0EC2               	movlw	low __npowers_
 12992   001B76  24F3               	addwf	243,w,c
 12993   001B78  6EF6               	movwf	tblptrl,c
 12994   001B7A  0EFE               	movlw	high __npowers_
 12995   001B7C  20F4               	addwfc	244,w,c
 12996   001B7E  6EF7               	movwf	tblptrh,c
 12997   001B80                     	if	0	;There are less than 3 active tblptr bytes
 12998   001B80                     	endif
 12999   001B80  0009               	tblrd		*+
 13000   001B82  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13001   001B86  0009               	tblrd		*+
 13002   001B88  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13003   001B8C  000A               	tblrd		*-
 13004   001B8E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13005   001B92  EC78  F016         	call	i2___ftmul	;wreg free
 13006   001B96  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 13007   001B9A  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 13008   001B9E  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 13009   001BA2  0012               	return	
 13010   001BA4                     i2l7881:
 13011                           
 13012                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 13013   001BA4  5024               	movf	i2scale@scl^0,w,c
 13014   001BA6  0D03               	mullw	3
 13015   001BA8  0EC2               	movlw	low __npowers_
 13016   001BAA  24F3               	addwf	243,w,c
 13017   001BAC  6EF6               	movwf	tblptrl,c
 13018   001BAE  0EFE               	movlw	high __npowers_
 13019   001BB0  20F4               	addwfc	244,w,c
 13020   001BB2  6EF7               	movwf	tblptrh,c
 13021   001BB4                     	if	0	;There are less than 3 active tblptr bytes
 13022   001BB4                     	endif
 13023   001BB4  0009               	tblrd		*+
 13024   001BB6  CFF5 F01E          	movff	tablat,?i2_scale
 13025   001BBA  0009               	tblrd		*+
 13026   001BBC  CFF5 F01F          	movff	tablat,?i2_scale+1
 13027   001BC0  000A               	tblrd		*-
 13028   001BC2  CFF5 F020          	movff	tablat,?i2_scale+2
 13029   001BC6  0012               	return	
 13030   001BC8                     i2l7885:
 13031                           
 13032                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 13033   001BC8  5024               	movf	i2scale@scl^0,w,c
 13034   001BCA  0A80               	xorlw	128
 13035   001BCC  0F12               	addlw	-238
 13036   001BCE  A0D8               	btfss	status,0,c
 13037   001BD0  D079               	goto	i2l7893
 13038                           
 13039                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 13040   001BD2  0E00               	movlw	0
 13041   001BD4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 13042   001BD6  0E0A               	movlw	10
 13043   001BD8  6E09               	movwf	i2___awdiv@divisor^0,c
 13044   001BDA  0E00               	movlw	0
 13045   001BDC  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 13046   001BDE  0E64               	movlw	100
 13047   001BE0  6E03               	movwf	i2___awmod@divisor^0,c
 13048   001BE2  5024               	movf	i2scale@scl^0,w,c
 13049   001BE4  6E01               	movwf	i2___awmod@dividend^0,c
 13050   001BE6  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 13051   001BE8  BE01               	btfsc	i2___awmod@dividend^0,7,c
 13052   001BEA  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 13053   001BEC  EC0E  F01D         	call	i2___awmod	;wreg free
 13054   001BF0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13055   001BF4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13056   001BF8  EC62  F01B         	call	i2___awdiv	;wreg free
 13057   001BFC  0E09               	movlw	9
 13058   001BFE  2607               	addwf	?i2___awdiv^0,f,c
 13059   001C00  5007               	movf	?i2___awdiv^0,w,c
 13060   001C02  0D03               	mullw	3
 13061   001C04  0E9B               	movlw	low __powers_
 13062   001C06  24F3               	addwf	243,w,c
 13063   001C08  6EF6               	movwf	tblptrl,c
 13064   001C0A  0EFE               	movlw	high __powers_
 13065   001C0C  20F4               	addwfc	244,w,c
 13066   001C0E  6EF7               	movwf	tblptrh,c
 13067   001C10                     	if	0	;There are less than 3 active tblptr bytes
 13068   001C10                     	endif
 13069   001C10  0009               	tblrd		*+
 13070   001C12  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13071   001C16  0009               	tblrd		*+
 13072   001C18  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13073   001C1C  000A               	tblrd		*-
 13074   001C1E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13075   001C22  0E00               	movlw	0
 13076   001C24  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 13077   001C26  0E64               	movlw	100
 13078   001C28  6E09               	movwf	i2___awdiv@divisor^0,c
 13079   001C2A  5024               	movf	i2scale@scl^0,w,c
 13080   001C2C  6E07               	movwf	i2___awdiv@dividend^0,c
 13081   001C2E  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 13082   001C30  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 13083   001C32  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 13084   001C34  EC62  F01B         	call	i2___awdiv	;wreg free
 13085   001C38  0E12               	movlw	18
 13086   001C3A  2607               	addwf	?i2___awdiv^0,f,c
 13087   001C3C  5007               	movf	?i2___awdiv^0,w,c
 13088   001C3E  0D03               	mullw	3
 13089   001C40  0E9B               	movlw	low __powers_
 13090   001C42  24F3               	addwf	243,w,c
 13091   001C44  6EF6               	movwf	tblptrl,c
 13092   001C46  0EFE               	movlw	high __powers_
 13093   001C48  20F4               	addwfc	244,w,c
 13094   001C4A  6EF7               	movwf	tblptrh,c
 13095   001C4C                     	if	0	;There are less than 3 active tblptr bytes
 13096   001C4C                     	endif
 13097   001C4C  0009               	tblrd		*+
 13098   001C4E  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 13099   001C52  0009               	tblrd		*+
 13100   001C54  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 13101   001C58  000A               	tblrd		*-
 13102   001C5A  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 13103   001C5E  EC78  F016         	call	i2___ftmul	;wreg free
 13104   001C62  C00F  F021         	movff	?i2___ftmul,i2_scale$2004
 13105   001C66  C010  F022         	movff	?i2___ftmul+1,i2_scale$2004+1
 13106   001C6A  C011  F023         	movff	?i2___ftmul+2,i2_scale$2004+2
 13107                           
 13108                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 13109   001C6E  C021  F00F         	movff	i2_scale$2004,i2___ftmul@f1
 13110   001C72  C022  F010         	movff	i2_scale$2004+1,i2___ftmul@f1+1
 13111   001C76  C023  F011         	movff	i2_scale$2004+2,i2___ftmul@f1+2
 13112   001C7A  0E00               	movlw	0
 13113   001C7C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 13114   001C7E  0E0A               	movlw	10
 13115   001C80  6E03               	movwf	i2___awmod@divisor^0,c
 13116   001C82  5024               	movf	i2scale@scl^0,w,c
 13117   001C84  6E01               	movwf	i2___awmod@dividend^0,c
 13118   001C86  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 13119   001C88  BE01               	btfsc	i2___awmod@dividend^0,7,c
 13120   001C8A  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 13121   001C8C  EC0E  F01D         	call	i2___awmod	;wreg free
 13122   001C90  5001               	movf	?i2___awmod^0,w,c
 13123   001C92  0D03               	mullw	3
 13124   001C94  0E9B               	movlw	low __powers_
 13125   001C96  24F3               	addwf	243,w,c
 13126   001C98  6EF6               	movwf	tblptrl,c
 13127   001C9A  0EFE               	movlw	high __powers_
 13128   001C9C  20F4               	addwfc	244,w,c
 13129   001C9E  6EF7               	movwf	tblptrh,c
 13130   001CA0                     	if	0	;There are less than 3 active tblptr bytes
 13131   001CA0                     	endif
 13132   001CA0  0009               	tblrd		*+
 13133   001CA2  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13134   001CA6  0009               	tblrd		*+
 13135   001CA8  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13136   001CAC  000A               	tblrd		*-
 13137   001CAE  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13138   001CB2  EC78  F016         	call	i2___ftmul	;wreg free
 13139   001CB6  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 13140   001CBA  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 13141   001CBE  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 13142   001CC2  0012               	return	
 13143   001CC4                     i2l7893:
 13144                           
 13145                           ;doprnt.c: 446: else if(scl > 10)
 13146   001CC4  5024               	movf	i2scale@scl^0,w,c
 13147   001CC6  0A80               	xorlw	128
 13148   001CC8  0F75               	addlw	-139
 13149   001CCA  A0D8               	btfss	status,0,c
 13150   001CCC  D043               	goto	i2l7899
 13151                           
 13152                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 13153   001CCE  0E00               	movlw	0
 13154   001CD0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 13155   001CD2  0E0A               	movlw	10
 13156   001CD4  6E09               	movwf	i2___awdiv@divisor^0,c
 13157   001CD6  5024               	movf	i2scale@scl^0,w,c
 13158   001CD8  6E07               	movwf	i2___awdiv@dividend^0,c
 13159   001CDA  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 13160   001CDC  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 13161   001CDE  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 13162   001CE0  EC62  F01B         	call	i2___awdiv	;wreg free
 13163   001CE4  0E09               	movlw	9
 13164   001CE6  2607               	addwf	?i2___awdiv^0,f,c
 13165   001CE8  5007               	movf	?i2___awdiv^0,w,c
 13166   001CEA  0D03               	mullw	3
 13167   001CEC  0E9B               	movlw	low __powers_
 13168   001CEE  24F3               	addwf	243,w,c
 13169   001CF0  6EF6               	movwf	tblptrl,c
 13170   001CF2  0EFE               	movlw	high __powers_
 13171   001CF4  20F4               	addwfc	244,w,c
 13172   001CF6  6EF7               	movwf	tblptrh,c
 13173   001CF8                     	if	0	;There are less than 3 active tblptr bytes
 13174   001CF8                     	endif
 13175   001CF8  0009               	tblrd		*+
 13176   001CFA  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 13177   001CFE  0009               	tblrd		*+
 13178   001D00  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 13179   001D04  000A               	tblrd		*-
 13180   001D06  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 13181   001D0A  0E00               	movlw	0
 13182   001D0C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 13183   001D0E  0E0A               	movlw	10
 13184   001D10  6E03               	movwf	i2___awmod@divisor^0,c
 13185   001D12  5024               	movf	i2scale@scl^0,w,c
 13186   001D14  6E01               	movwf	i2___awmod@dividend^0,c
 13187   001D16  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 13188   001D18  BE01               	btfsc	i2___awmod@dividend^0,7,c
 13189   001D1A  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 13190   001D1C  EC0E  F01D         	call	i2___awmod	;wreg free
 13191   001D20  5001               	movf	?i2___awmod^0,w,c
 13192   001D22  0D03               	mullw	3
 13193   001D24  0E9B               	movlw	low __powers_
 13194   001D26  24F3               	addwf	243,w,c
 13195   001D28  6EF6               	movwf	tblptrl,c
 13196   001D2A  0EFE               	movlw	high __powers_
 13197   001D2C  20F4               	addwfc	244,w,c
 13198   001D2E  6EF7               	movwf	tblptrh,c
 13199   001D30                     	if	0	;There are less than 3 active tblptr bytes
 13200   001D30                     	endif
 13201   001D30  0009               	tblrd		*+
 13202   001D32  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13203   001D36  0009               	tblrd		*+
 13204   001D38  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13205   001D3C  000A               	tblrd		*-
 13206   001D3E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13207   001D42  EC78  F016         	call	i2___ftmul	;wreg free
 13208   001D46  C00F  F01E         	movff	?i2___ftmul,?i2_scale
 13209   001D4A  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
 13210   001D4E  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
 13211   001D52  0012               	return	
 13212   001D54                     i2l7899:
 13213                           
 13214                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 13215   001D54  5024               	movf	i2scale@scl^0,w,c
 13216   001D56  0D03               	mullw	3
 13217   001D58  0E9B               	movlw	low __powers_
 13218   001D5A  24F3               	addwf	243,w,c
 13219   001D5C  6EF6               	movwf	tblptrl,c
 13220   001D5E  0EFE               	movlw	high __powers_
 13221   001D60  20F4               	addwfc	244,w,c
 13222   001D62  6EF7               	movwf	tblptrh,c
 13223   001D64                     	if	0	;There are less than 3 active tblptr bytes
 13224   001D64                     	endif
 13225   001D64  0009               	tblrd		*+
 13226   001D66  CFF5 F01E          	movff	tablat,?i2_scale
 13227   001D6A  0009               	tblrd		*+
 13228   001D6C  CFF5 F01F          	movff	tablat,?i2_scale+1
 13229   001D70  000A               	tblrd		*-
 13230   001D72  CFF5 F020          	movff	tablat,?i2_scale+2
 13231   001D76  0012               	return		;funcret
 13232   001D78                     __end_ofi2_scale:
 13233                           	callstack 0
 13234                           
 13235 ;; *************** function i2___awmod *****************
 13236 ;; Defined at:
 13237 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;  dividend        2    0[COMRAM] int 
 13240 ;;  divisor         2    2[COMRAM] int 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  sign            1    5[COMRAM] unsigned char 
 13243 ;;  counter         1    4[COMRAM] unsigned char 
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  2    0[COMRAM] int 
 13246 ;; Registers used:
 13247 ;;		wreg, status,2, status,0
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13257 ;;Total ram usage:        6 bytes
 13258 ;; Hardware stack levels used: 1
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		i2_scale
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text60
 13267   003A1C                     __ptext60:
 13268                           	callstack 0
 13269   003A1C                     i2___awmod:
 13270                           	callstack 17
 13271                           
 13272                           ;incstack = 0
 13273   003A1C  0E00               	movlw	0
 13274   003A1E  6E06               	movwf	i2___awmod@sign^0,c
 13275   003A20  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 13276   003A22  D006               	goto	i2l7323
 13277   003A24  6C01               	negf	i2___awmod@dividend^0,c
 13278   003A26  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 13279   003A28  B0D8               	btfsc	status,0,c
 13280   003A2A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 13281   003A2C  0E01               	movlw	1
 13282   003A2E  6E06               	movwf	i2___awmod@sign^0,c
 13283   003A30                     i2l7323:
 13284   003A30  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 13285   003A32  D004               	goto	i2l7327
 13286   003A34  6C03               	negf	i2___awmod@divisor^0,c
 13287   003A36  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 13288   003A38  B0D8               	btfsc	status,0,c
 13289   003A3A  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 13290   003A3C                     i2l7327:
 13291   003A3C  5003               	movf	i2___awmod@divisor^0,w,c
 13292   003A3E  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 13293   003A40  B4D8               	btfsc	status,2,c
 13294   003A42  D018               	goto	i2l7343
 13295   003A44  0E01               	movlw	1
 13296   003A46  6E05               	movwf	i2___awmod@counter^0,c
 13297   003A48  D004               	goto	i2l7333
 13298   003A4A                     i2l7331:
 13299   003A4A  90D8               	bcf	status,0,c
 13300   003A4C  3603               	rlcf	i2___awmod@divisor^0,f,c
 13301   003A4E  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 13302   003A50  2A05               	incf	i2___awmod@counter^0,f,c
 13303   003A52                     i2l7333:
 13304   003A52  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 13305   003A54  D7FA               	goto	i2l7331
 13306   003A56                     i2u873_40:
 13307   003A56  5003               	movf	i2___awmod@divisor^0,w,c
 13308   003A58  5C01               	subwf	i2___awmod@dividend^0,w,c
 13309   003A5A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 13310   003A5C  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 13311   003A5E  A0D8               	btfss	status,0,c
 13312   003A60  D004               	goto	i2l7339
 13313   003A62  5003               	movf	i2___awmod@divisor^0,w,c
 13314   003A64  5E01               	subwf	i2___awmod@dividend^0,f,c
 13315   003A66  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 13316   003A68  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 13317   003A6A                     i2l7339:
 13318   003A6A  90D8               	bcf	status,0,c
 13319   003A6C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 13320   003A6E  3203               	rrcf	i2___awmod@divisor^0,f,c
 13321   003A70  2E05               	decfsz	i2___awmod@counter^0,f,c
 13322   003A72  D7F1               	goto	i2u873_40
 13323   003A74                     i2l7343:
 13324   003A74  5006               	movf	i2___awmod@sign^0,w,c
 13325   003A76  B4D8               	btfsc	status,2,c
 13326   003A78  D004               	goto	i2l7347
 13327   003A7A  6C01               	negf	i2___awmod@dividend^0,c
 13328   003A7C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 13329   003A7E  B0D8               	btfsc	status,0,c
 13330   003A80  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 13331   003A82                     i2l7347:
 13332   003A82  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 13333   003A86  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 13334   003A8A  0012               	return		;funcret
 13335   003A8C                     __end_ofi2___awmod:
 13336                           	callstack 0
 13337                           
 13338 ;; *************** function i2___awdiv *****************
 13339 ;; Defined at:
 13340 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  dividend        2    6[COMRAM] int 
 13343 ;;  divisor         2    8[COMRAM] int 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  quotient        2   12[COMRAM] int 
 13346 ;;  sign            1   11[COMRAM] unsigned char 
 13347 ;;  counter         1   10[COMRAM] unsigned char 
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  2    6[COMRAM] int 
 13350 ;; Registers used:
 13351 ;;		wreg, status,2, status,0
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;Total ram usage:        8 bytes
 13362 ;; Hardware stack levels used: 1
 13363 ;; This function calls:
 13364 ;;		Nothing
 13365 ;; This function is called by:
 13366 ;;		i2_scale
 13367 ;;		i2_sprintf
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           	psect	text61
 13372   0036C4                     __ptext61:
 13373                           	callstack 0
 13374   0036C4                     i2___awdiv:
 13375                           	callstack 17
 13376                           
 13377                           ;incstack = 0
 13378   0036C4  0E00               	movlw	0
 13379   0036C6  6E0C               	movwf	i2___awdiv@sign^0,c
 13380   0036C8  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 13381   0036CA  D006               	goto	i2l7279
 13382   0036CC  6C09               	negf	i2___awdiv@divisor^0,c
 13383   0036CE  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 13384   0036D0  B0D8               	btfsc	status,0,c
 13385   0036D2  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 13386   0036D4  0E01               	movlw	1
 13387   0036D6  6E0C               	movwf	i2___awdiv@sign^0,c
 13388   0036D8                     i2l7279:
 13389   0036D8  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
 13390   0036DA  D006               	goto	i2l7285
 13391   0036DC  6C07               	negf	i2___awdiv@dividend^0,c
 13392   0036DE  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 13393   0036E0  B0D8               	btfsc	status,0,c
 13394   0036E2  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 13395   0036E4  0E01               	movlw	1
 13396   0036E6  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 13397   0036E8                     i2l7285:
 13398   0036E8  0E00               	movlw	0
 13399   0036EA  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 13400   0036EC  0E00               	movlw	0
 13401   0036EE  6E0D               	movwf	i2___awdiv@quotient^0,c
 13402   0036F0  5009               	movf	i2___awdiv@divisor^0,w,c
 13403   0036F2  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 13404   0036F4  B4D8               	btfsc	status,2,c
 13405   0036F6  D01C               	goto	i2l7307
 13406   0036F8  0E01               	movlw	1
 13407   0036FA  6E0B               	movwf	i2___awdiv@counter^0,c
 13408   0036FC  D004               	goto	i2l7293
 13409   0036FE                     i2l7291:
 13410   0036FE  90D8               	bcf	status,0,c
 13411   003700  3609               	rlcf	i2___awdiv@divisor^0,f,c
 13412   003702  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 13413   003704  2A0B               	incf	i2___awdiv@counter^0,f,c
 13414   003706                     i2l7293:
 13415   003706  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 13416   003708  D7FA               	goto	i2l7291
 13417   00370A                     i2u867_40:
 13418   00370A  90D8               	bcf	status,0,c
 13419   00370C  360D               	rlcf	i2___awdiv@quotient^0,f,c
 13420   00370E  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 13421   003710  5009               	movf	i2___awdiv@divisor^0,w,c
 13422   003712  5C07               	subwf	i2___awdiv@dividend^0,w,c
 13423   003714  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 13424   003716  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 13425   003718  A0D8               	btfss	status,0,c
 13426   00371A  D005               	goto	i2l7303
 13427   00371C  5009               	movf	i2___awdiv@divisor^0,w,c
 13428   00371E  5E07               	subwf	i2___awdiv@dividend^0,f,c
 13429   003720  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 13430   003722  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 13431   003724  800D               	bsf	i2___awdiv@quotient^0,0,c
 13432   003726                     i2l7303:
 13433   003726  90D8               	bcf	status,0,c
 13434   003728  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 13435   00372A  3209               	rrcf	i2___awdiv@divisor^0,f,c
 13436   00372C  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 13437   00372E  D7ED               	goto	i2u867_40
 13438   003730                     i2l7307:
 13439   003730  500C               	movf	i2___awdiv@sign^0,w,c
 13440   003732  B4D8               	btfsc	status,2,c
 13441   003734  D004               	goto	i2l7311
 13442   003736  6C0D               	negf	i2___awdiv@quotient^0,c
 13443   003738  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 13444   00373A  B0D8               	btfsc	status,0,c
 13445   00373C  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 13446   00373E                     i2l7311:
 13447   00373E  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 13448   003742  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13449   003746  0012               	return		;funcret
 13450   003748                     __end_ofi2___awdiv:
 13451                           	callstack 0
 13452                           
 13453 ;; *************** function i2_isdigit *****************
 13454 ;; Defined at:
 13455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;  c               1    wreg     unsigned char 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  c               1    2[COMRAM] unsigned char 
 13460 ;; Return value:  Size  Location     Type
 13461 ;;		None               void
 13462 ;; Registers used:
 13463 ;;		wreg, status,2, status,0
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;Total ram usage:        3 bytes
 13474 ;; Hardware stack levels used: 1
 13475 ;; This function calls:
 13476 ;;		Nothing
 13477 ;; This function is called by:
 13478 ;;		i2_sprintf
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text62
 13483   004578                     __ptext62:
 13484                           	callstack 0
 13485   004578                     i2_isdigit:
 13486                           	callstack 18
 13487                           
 13488                           ;incstack = 0
 13489                           ;i2isdigit@c stored from wreg
 13490   004578  6E03               	movwf	i2isdigit@c^0,c
 13491   00457A  0E00               	movlw	0
 13492   00457C  6E02               	movwf	i2_isdigit$1506^0,c
 13493   00457E  0E3A               	movlw	58
 13494   004580  6003               	cpfslt	i2isdigit@c^0,c
 13495   004582  D005               	goto	i2l8157
 13496   004584  0E2F               	movlw	47
 13497   004586  6403               	cpfsgt	i2isdigit@c^0,c
 13498   004588  D002               	goto	i2l8157
 13499   00458A  0E01               	movlw	1
 13500   00458C  6E02               	movwf	i2_isdigit$1506^0,c
 13501   00458E                     i2l8157:
 13502   00458E  C002  F001         	movff	i2_isdigit$1506,??i2_isdigit
 13503   004592  3001               	rrcf	??i2_isdigit^0,w,c
 13504   004594  0012               	return		;funcret
 13505   004596                     __end_ofi2_isdigit:
 13506                           	callstack 0
 13507                           
 13508 ;; *************** function i2_fround *****************
 13509 ;; Defined at:
 13510 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  prec            1    wreg     unsigned char 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  prec            1   40[COMRAM] unsigned char 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  3   29[COMRAM] unsigned char 
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13524 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13525 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13527 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13528 ;;Total ram usage:       12 bytes
 13529 ;; Hardware stack levels used: 1
 13530 ;; Hardware stack levels required when called: 2
 13531 ;; This function calls:
 13532 ;;		i2___ftmul
 13533 ;;		i2___lbdiv
 13534 ;;		i2___lbmod
 13535 ;; This function is called by:
 13536 ;;		i2_sprintf
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text63
 13541   0023D6                     __ptext63:
 13542                           	callstack 0
 13543   0023D6                     i2_fround:
 13544                           	callstack 16
 13545                           
 13546                           ;incstack = 0
 13547                           ;i2fround@prec stored from wreg
 13548   0023D6  6E29               	movwf	i2fround@prec^0,c
 13549                           
 13550                           ;doprnt.c: 421: if(prec>=110)
 13551   0023D8  0E6D               	movlw	109
 13552   0023DA  6429               	cpfsgt	i2fround@prec^0,c
 13553   0023DC  D07C               	goto	i2l7853
 13554                           
 13555                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 13556   0023DE  0E0A               	movlw	10
 13557   0023E0  6E05               	movwf	i2___lbdiv@divisor^0,c
 13558   0023E2  0E64               	movlw	100
 13559   0023E4  6E01               	movwf	i2___lbmod@divisor^0,c
 13560   0023E6  5029               	movf	i2fround@prec^0,w,c
 13561   0023E8  ECBB  F021         	call	i2___lbmod
 13562   0023EC  ECDD  F020         	call	i2___lbdiv
 13563   0023F0  6E21               	movwf	??i2_fround^0,c
 13564   0023F2  5021               	movf	??i2_fround^0,w,c
 13565   0023F4  0D03               	mullw	3
 13566   0023F6  0E1B               	movlw	27
 13567   0023F8  26F3               	addwf	243,f,c
 13568   0023FA  0E00               	movlw	0
 13569   0023FC  22F4               	addwfc	244,f,c
 13570   0023FE  0EC2               	movlw	low __npowers_
 13571   002400  24F3               	addwf	243,w,c
 13572   002402  6EF6               	movwf	tblptrl,c
 13573   002404  0EFE               	movlw	high __npowers_
 13574   002406  20F4               	addwfc	244,w,c
 13575   002408  6EF7               	movwf	tblptrh,c
 13576   00240A                     	if	0	;There are less than 3 active tblptr bytes
 13577   00240A                     	endif
 13578   00240A  0009               	tblrd		*+
 13579   00240C  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13580   002410  0009               	tblrd		*+
 13581   002412  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13582   002416  000A               	tblrd		*-
 13583   002418  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13584   00241C  0E64               	movlw	100
 13585   00241E  6E05               	movwf	i2___lbdiv@divisor^0,c
 13586   002420  5029               	movf	i2fround@prec^0,w,c
 13587   002422  ECDD  F020         	call	i2___lbdiv
 13588   002426  6E22               	movwf	(??i2_fround+1)^0,c
 13589   002428  5022               	movf	(??i2_fround+1)^0,w,c
 13590   00242A  0D03               	mullw	3
 13591   00242C  0E36               	movlw	54
 13592   00242E  26F3               	addwf	243,f,c
 13593   002430  0E00               	movlw	0
 13594   002432  22F4               	addwfc	244,f,c
 13595   002434  0EC2               	movlw	low __npowers_
 13596   002436  24F3               	addwf	243,w,c
 13597   002438  6EF6               	movwf	tblptrl,c
 13598   00243A  0EFE               	movlw	high __npowers_
 13599   00243C  20F4               	addwfc	244,w,c
 13600   00243E  6EF7               	movwf	tblptrh,c
 13601   002440                     	if	0	;There are less than 3 active tblptr bytes
 13602   002440                     	endif
 13603   002440  0009               	tblrd		*+
 13604   002442  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 13605   002446  0009               	tblrd		*+
 13606   002448  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 13607   00244C  000A               	tblrd		*-
 13608   00244E  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 13609   002452  EC78  F016         	call	i2___ftmul	;wreg free
 13610   002456  C00F  F026         	movff	?i2___ftmul,i2_fround$2002
 13611   00245A  C010  F027         	movff	?i2___ftmul+1,i2_fround$2002+1
 13612   00245E  C011  F028         	movff	?i2___ftmul+2,i2_fround$2002+2
 13613                           
 13614                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 13615   002462  0E0A               	movlw	10
 13616   002464  6E01               	movwf	i2___lbmod@divisor^0,c
 13617   002466  5029               	movf	i2fround@prec^0,w,c
 13618   002468  ECBB  F021         	call	i2___lbmod
 13619   00246C  6E21               	movwf	??i2_fround^0,c
 13620   00246E  5021               	movf	??i2_fround^0,w,c
 13621   002470  0D03               	mullw	3
 13622   002472  0EC2               	movlw	low __npowers_
 13623   002474  24F3               	addwf	243,w,c
 13624   002476  6EF6               	movwf	tblptrl,c
 13625   002478  0EFE               	movlw	high __npowers_
 13626   00247A  20F4               	addwfc	244,w,c
 13627   00247C  6EF7               	movwf	tblptrh,c
 13628   00247E                     	if	0	;There are less than 3 active tblptr bytes
 13629   00247E                     	endif
 13630   00247E  0009               	tblrd		*+
 13631   002480  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13632   002484  0009               	tblrd		*+
 13633   002486  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13634   00248A  000A               	tblrd		*-
 13635   00248C  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13636   002490  C026  F00F         	movff	i2_fround$2002,i2___ftmul@f1
 13637   002494  C027  F010         	movff	i2_fround$2002+1,i2___ftmul@f1+1
 13638   002498  C028  F011         	movff	i2_fround$2002+2,i2___ftmul@f1+2
 13639   00249C  EC78  F016         	call	i2___ftmul	;wreg free
 13640   0024A0  C00F  F023         	movff	?i2___ftmul,i2_fround$2003
 13641   0024A4  C010  F024         	movff	?i2___ftmul+1,i2_fround$2003+1
 13642   0024A8  C011  F025         	movff	?i2___ftmul+2,i2_fround$2003+2
 13643                           
 13644                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 13645   0024AC  C023  F00F         	movff	i2_fround$2003,i2___ftmul@f1
 13646   0024B0  C024  F010         	movff	i2_fround$2003+1,i2___ftmul@f1+1
 13647   0024B4  C025  F011         	movff	i2_fround$2003+2,i2___ftmul@f1+2
 13648   0024B8  0E00               	movlw	0
 13649   0024BA  6E12               	movwf	i2___ftmul@f2^0,c
 13650   0024BC  0E00               	movlw	0
 13651   0024BE  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 13652   0024C0  0E3F               	movlw	63
 13653   0024C2  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 13654   0024C4  EC78  F016         	call	i2___ftmul	;wreg free
 13655   0024C8  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 13656   0024CC  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 13657   0024D0  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 13658   0024D4  0012               	return	
 13659   0024D6                     i2l7853:
 13660                           
 13661                           ;doprnt.c: 423: else if(prec > 10)
 13662   0024D6  0E0A               	movlw	10
 13663   0024D8  6429               	cpfsgt	i2fround@prec^0,c
 13664   0024DA  D04F               	goto	i2l7861
 13665                           
 13666                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 13667   0024DC  0E0A               	movlw	10
 13668   0024DE  6E01               	movwf	i2___lbmod@divisor^0,c
 13669   0024E0  5029               	movf	i2fround@prec^0,w,c
 13670   0024E2  ECBB  F021         	call	i2___lbmod
 13671   0024E6  6E21               	movwf	??i2_fround^0,c
 13672   0024E8  5021               	movf	??i2_fround^0,w,c
 13673   0024EA  0D03               	mullw	3
 13674   0024EC  0EC2               	movlw	low __npowers_
 13675   0024EE  24F3               	addwf	243,w,c
 13676   0024F0  6EF6               	movwf	tblptrl,c
 13677   0024F2  0EFE               	movlw	high __npowers_
 13678   0024F4  20F4               	addwfc	244,w,c
 13679   0024F6  6EF7               	movwf	tblptrh,c
 13680   0024F8                     	if	0	;There are less than 3 active tblptr bytes
 13681   0024F8                     	endif
 13682   0024F8  0009               	tblrd		*+
 13683   0024FA  CFF5 F012          	movff	tablat,i2___ftmul@f2
 13684   0024FE  0009               	tblrd		*+
 13685   002500  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
 13686   002504  000A               	tblrd		*-
 13687   002506  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
 13688   00250A  0E0A               	movlw	10
 13689   00250C  6E05               	movwf	i2___lbdiv@divisor^0,c
 13690   00250E  5029               	movf	i2fround@prec^0,w,c
 13691   002510  ECDD  F020         	call	i2___lbdiv
 13692   002514  6E22               	movwf	(??i2_fround+1)^0,c
 13693   002516  5022               	movf	(??i2_fround+1)^0,w,c
 13694   002518  0D03               	mullw	3
 13695   00251A  0E1B               	movlw	27
 13696   00251C  26F3               	addwf	243,f,c
 13697   00251E  0E00               	movlw	0
 13698   002520  22F4               	addwfc	244,f,c
 13699   002522  0EC2               	movlw	low __npowers_
 13700   002524  24F3               	addwf	243,w,c
 13701   002526  6EF6               	movwf	tblptrl,c
 13702   002528  0EFE               	movlw	high __npowers_
 13703   00252A  20F4               	addwfc	244,w,c
 13704   00252C  6EF7               	movwf	tblptrh,c
 13705   00252E                     	if	0	;There are less than 3 active tblptr bytes
 13706   00252E                     	endif
 13707   00252E  0009               	tblrd		*+
 13708   002530  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 13709   002534  0009               	tblrd		*+
 13710   002536  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 13711   00253A  000A               	tblrd		*-
 13712   00253C  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 13713   002540  EC78  F016         	call	i2___ftmul	;wreg free
 13714   002544  C00F  F026         	movff	?i2___ftmul,i2_fround$2002
 13715   002548  C010  F027         	movff	?i2___ftmul+1,i2_fround$2002+1
 13716   00254C  C011  F028         	movff	?i2___ftmul+2,i2_fround$2002+2
 13717                           
 13718                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 13719   002550  C026  F00F         	movff	i2_fround$2002,i2___ftmul@f1
 13720   002554  C027  F010         	movff	i2_fround$2002+1,i2___ftmul@f1+1
 13721   002558  C028  F011         	movff	i2_fround$2002+2,i2___ftmul@f1+2
 13722   00255C  0E00               	movlw	0
 13723   00255E  6E12               	movwf	i2___ftmul@f2^0,c
 13724   002560  0E00               	movlw	0
 13725   002562  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 13726   002564  0E3F               	movlw	63
 13727   002566  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 13728   002568  EC78  F016         	call	i2___ftmul	;wreg free
 13729   00256C  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 13730   002570  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 13731   002574  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 13732   002578  0012               	return	
 13733   00257A                     i2l7861:
 13734                           
 13735                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 13736   00257A  5029               	movf	i2fround@prec^0,w,c
 13737   00257C  0D03               	mullw	3
 13738   00257E  0EC2               	movlw	low __npowers_
 13739   002580  24F3               	addwf	243,w,c
 13740   002582  6EF6               	movwf	tblptrl,c
 13741   002584  0EFE               	movlw	high __npowers_
 13742   002586  20F4               	addwfc	244,w,c
 13743   002588  6EF7               	movwf	tblptrh,c
 13744   00258A                     	if	0	;There are less than 3 active tblptr bytes
 13745   00258A                     	endif
 13746   00258A  0009               	tblrd		*+
 13747   00258C  CFF5 F00F          	movff	tablat,i2___ftmul@f1
 13748   002590  0009               	tblrd		*+
 13749   002592  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
 13750   002596  000A               	tblrd		*-
 13751   002598  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
 13752   00259C  0E00               	movlw	0
 13753   00259E  6E12               	movwf	i2___ftmul@f2^0,c
 13754   0025A0  0E00               	movlw	0
 13755   0025A2  6E13               	movwf	(i2___ftmul@f2+1)^0,c
 13756   0025A4  0E3F               	movlw	63
 13757   0025A6  6E14               	movwf	(i2___ftmul@f2+2)^0,c
 13758   0025A8  EC78  F016         	call	i2___ftmul	;wreg free
 13759   0025AC  C00F  F01E         	movff	?i2___ftmul,?i2_fround
 13760   0025B0  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
 13761   0025B4  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
 13762   0025B8  0012               	return		;funcret
 13763   0025BA                     __end_ofi2_fround:
 13764                           	callstack 0
 13765                           
 13766 ;; *************** function i2___lbmod *****************
 13767 ;; Defined at:
 13768 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;  dividend        1    wreg     unsigned char 
 13771 ;;  divisor         1    0[COMRAM] unsigned char 
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;  dividend        1    1[COMRAM] unsigned char 
 13774 ;;  rem             1    3[COMRAM] unsigned char 
 13775 ;;  counter         1    2[COMRAM] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  1    wreg      unsigned char 
 13778 ;; Registers used:
 13779 ;;		wreg, status,2, status,0
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13789 ;;Total ram usage:        4 bytes
 13790 ;; Hardware stack levels used: 1
 13791 ;; This function calls:
 13792 ;;		Nothing
 13793 ;; This function is called by:
 13794 ;;		i2_fround
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text64
 13799   004376                     __ptext64:
 13800                           	callstack 0
 13801   004376                     i2___lbmod:
 13802                           	callstack 17
 13803                           
 13804                           ;incstack = 0
 13805                           ;i2___lbmod@dividend stored from wreg
 13806   004376  6E02               	movwf	i2___lbmod@dividend^0,c
 13807   004378  0E08               	movlw	8
 13808   00437A  6E03               	movwf	i2___lbmod@counter^0,c
 13809   00437C  0E00               	movlw	0
 13810   00437E  6E04               	movwf	i2___lbmod@rem^0,c
 13811   004380                     i2l7497:
 13812   004380  90D8               	bcf	status,0,c
 13813   004382  3402               	rlcf	i2___lbmod@dividend^0,w,c
 13814   004384  3404               	rlcf	i2___lbmod@rem^0,w,c
 13815   004386  6E04               	movwf	i2___lbmod@rem^0,c
 13816   004388  90D8               	bcf	status,0,c
 13817   00438A  3602               	rlcf	i2___lbmod@dividend^0,f,c
 13818   00438C  5001               	movf	i2___lbmod@divisor^0,w,c
 13819   00438E  5C04               	subwf	i2___lbmod@rem^0,w,c
 13820   004390  A0D8               	btfss	status,0,c
 13821   004392  D002               	goto	i2l7505
 13822   004394  5001               	movf	i2___lbmod@divisor^0,w,c
 13823   004396  5E04               	subwf	i2___lbmod@rem^0,f,c
 13824   004398                     i2l7505:
 13825   004398  2E03               	decfsz	i2___lbmod@counter^0,f,c
 13826   00439A  D7F2               	goto	i2l7497
 13827   00439C  5004               	movf	i2___lbmod@rem^0,w,c
 13828   00439E  0012               	return		;funcret
 13829   0043A0                     __end_ofi2___lbmod:
 13830                           	callstack 0
 13831                           
 13832 ;; *************** function i2___lbdiv *****************
 13833 ;; Defined at:
 13834 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;  dividend        1    wreg     unsigned char 
 13837 ;;  divisor         1    4[COMRAM] unsigned char 
 13838 ;; Auto vars:     Size  Location     Type
 13839 ;;  dividend        1    5[COMRAM] unsigned char 
 13840 ;;  quotient        1    7[COMRAM] unsigned char 
 13841 ;;  counter         1    6[COMRAM] unsigned char 
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      unsigned char 
 13844 ;; Registers used:
 13845 ;;		wreg, status,2, status,0
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 0/0
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13851 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13855 ;;Total ram usage:        4 bytes
 13856 ;; Hardware stack levels used: 1
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		i2_fround
 13861 ;; This function uses a non-reentrant model
 13862 ;;
 13863                           
 13864                           	psect	text65
 13865   0041BA                     __ptext65:
 13866                           	callstack 0
 13867   0041BA                     i2___lbdiv:
 13868                           	callstack 17
 13869                           
 13870                           ;incstack = 0
 13871                           ;i2___lbdiv@dividend stored from wreg
 13872   0041BA  6E06               	movwf	i2___lbdiv@dividend^0,c
 13873   0041BC  0E00               	movlw	0
 13874   0041BE  6E08               	movwf	i2___lbdiv@quotient^0,c
 13875   0041C0  5005               	movf	i2___lbdiv@divisor^0,w,c
 13876   0041C2  B4D8               	btfsc	status,2,c
 13877   0041C4  D015               	goto	i2l7491
 13878   0041C6  0E01               	movlw	1
 13879   0041C8  6E07               	movwf	i2___lbdiv@counter^0,c
 13880   0041CA  D003               	goto	i2l7479
 13881   0041CC                     i2l7475:
 13882   0041CC  90D8               	bcf	status,0,c
 13883   0041CE  3605               	rlcf	i2___lbdiv@divisor^0,f,c
 13884   0041D0  2A07               	incf	i2___lbdiv@counter^0,f,c
 13885   0041D2                     i2l7479:
 13886   0041D2  AE05               	btfss	i2___lbdiv@divisor^0,7,c
 13887   0041D4  D7FB               	goto	i2l7475
 13888   0041D6                     i2u904_40:
 13889   0041D6  90D8               	bcf	status,0,c
 13890   0041D8  3608               	rlcf	i2___lbdiv@quotient^0,f,c
 13891   0041DA  5005               	movf	i2___lbdiv@divisor^0,w,c
 13892   0041DC  5C06               	subwf	i2___lbdiv@dividend^0,w,c
 13893   0041DE  A0D8               	btfss	status,0,c
 13894   0041E0  D003               	goto	i2l7487
 13895   0041E2  5005               	movf	i2___lbdiv@divisor^0,w,c
 13896   0041E4  5E06               	subwf	i2___lbdiv@dividend^0,f,c
 13897   0041E6  8008               	bsf	i2___lbdiv@quotient^0,0,c
 13898   0041E8                     i2l7487:
 13899   0041E8  90D8               	bcf	status,0,c
 13900   0041EA  3205               	rrcf	i2___lbdiv@divisor^0,f,c
 13901   0041EC  2E07               	decfsz	i2___lbdiv@counter^0,f,c
 13902   0041EE  D7F3               	goto	i2u904_40
 13903   0041F0                     i2l7491:
 13904   0041F0  5008               	movf	i2___lbdiv@quotient^0,w,c
 13905   0041F2  0012               	return		;funcret
 13906   0041F4                     __end_ofi2___lbdiv:
 13907                           	callstack 0
 13908                           
 13909 ;; *************** function i2___ftmul *****************
 13910 ;; Defined at:
 13911 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  f1              3   14[COMRAM] float 
 13914 ;;  f2              3   17[COMRAM] float 
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;  f3_as_produc    3   24[COMRAM] unsigned um
 13917 ;;  sign            1   28[COMRAM] unsigned char 
 13918 ;;  cntr            1   27[COMRAM] unsigned char 
 13919 ;;  exp             1   23[COMRAM] unsigned char 
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  3   14[COMRAM] float 
 13922 ;; Registers used:
 13923 ;;		wreg, status,2, status,0, cstack
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : 0/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13929 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13930 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13931 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13932 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13933 ;;Total ram usage:       15 bytes
 13934 ;; Hardware stack levels used: 1
 13935 ;; Hardware stack levels required when called: 1
 13936 ;; This function calls:
 13937 ;;		i2___ftpack
 13938 ;; This function is called by:
 13939 ;;		i2_fround
 13940 ;;		i2_scale
 13941 ;;		i2_sprintf
 13942 ;; This function uses a non-reentrant model
 13943 ;;
 13944                           
 13945                           	psect	text66
 13946   002CF0                     __ptext66:
 13947                           	callstack 0
 13948   002CF0                     i2___ftmul:
 13949                           	callstack 16
 13950                           
 13951                           ;incstack = 0
 13952   002CF0  C011  F015         	movff	i2___ftmul@f1+2,??i2___ftmul
 13953   002CF4  6A16               	clrf	(??i2___ftmul+1)^0,c
 13954   002CF6  6A17               	clrf	(??i2___ftmul+2)^0,c
 13955   002CF8  3410               	rlcf	(i2___ftmul@f1+1)^0,w,c
 13956   002CFA  3615               	rlcf	??i2___ftmul^0,f,c
 13957   002CFC  E301               	bnc	u897_41
 13958   002CFE  8016               	bsf	(??i2___ftmul+1)^0,0,c
 13959   002D00                     u897_41:
 13960   002D00  5015               	movf	??i2___ftmul^0,w,c
 13961   002D02  6E18               	movwf	i2___ftmul@exp^0,c
 13962   002D04  5018               	movf	i2___ftmul@exp^0,w,c
 13963   002D06  A4D8               	btfss	status,2,c
 13964   002D08  D007               	goto	i2l7427
 13965   002D0A  0E00               	movlw	0
 13966   002D0C  6E0F               	movwf	?i2___ftmul^0,c
 13967   002D0E  0E00               	movlw	0
 13968   002D10  6E10               	movwf	(?i2___ftmul+1)^0,c
 13969   002D12  0E00               	movlw	0
 13970   002D14  6E11               	movwf	(?i2___ftmul+2)^0,c
 13971   002D16  0012               	return	
 13972   002D18                     i2l7427:
 13973   002D18  C014  F015         	movff	i2___ftmul@f2+2,??i2___ftmul
 13974   002D1C  6A16               	clrf	(??i2___ftmul+1)^0,c
 13975   002D1E  6A17               	clrf	(??i2___ftmul+2)^0,c
 13976   002D20  3413               	rlcf	(i2___ftmul@f2+1)^0,w,c
 13977   002D22  3615               	rlcf	??i2___ftmul^0,f,c
 13978   002D24  E301               	bnc	u899_41
 13979   002D26  8016               	bsf	(??i2___ftmul+1)^0,0,c
 13980   002D28                     u899_41:
 13981   002D28  5015               	movf	??i2___ftmul^0,w,c
 13982   002D2A  6E1D               	movwf	i2___ftmul@sign^0,c
 13983   002D2C  501D               	movf	i2___ftmul@sign^0,w,c
 13984   002D2E  A4D8               	btfss	status,2,c
 13985   002D30  D007               	goto	i2l7433
 13986   002D32  0E00               	movlw	0
 13987   002D34  6E0F               	movwf	?i2___ftmul^0,c
 13988   002D36  0E00               	movlw	0
 13989   002D38  6E10               	movwf	(?i2___ftmul+1)^0,c
 13990   002D3A  0E00               	movlw	0
 13991   002D3C  6E11               	movwf	(?i2___ftmul+2)^0,c
 13992   002D3E  0012               	return	
 13993   002D40                     i2l7433:
 13994   002D40  501D               	movf	i2___ftmul@sign^0,w,c
 13995   002D42  0F7B               	addlw	123
 13996   002D44  2618               	addwf	i2___ftmul@exp^0,f,c
 13997   002D46  C011  F01D         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 13998   002D4A  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 13999   002D4C  1A1D               	xorwf	i2___ftmul@sign^0,f,c
 14000   002D4E  0E80               	movlw	128
 14001   002D50  161D               	andwf	i2___ftmul@sign^0,f,c
 14002   002D52  8E10               	bsf	(i2___ftmul@f1+1)^0,7,c
 14003   002D54  8E13               	bsf	(i2___ftmul@f2+1)^0,7,c
 14004   002D56  0EFF               	movlw	255
 14005   002D58  1612               	andwf	i2___ftmul@f2^0,f,c
 14006   002D5A  0EFF               	movlw	255
 14007   002D5C  1613               	andwf	(i2___ftmul@f2+1)^0,f,c
 14008   002D5E  0E00               	movlw	0
 14009   002D60  1614               	andwf	(i2___ftmul@f2+2)^0,f,c
 14010   002D62  0E00               	movlw	0
 14011   002D64  6E19               	movwf	i2___ftmul@f3_as_product^0,c
 14012   002D66  0E00               	movlw	0
 14013   002D68  6E1A               	movwf	(i2___ftmul@f3_as_product+1)^0,c
 14014   002D6A  0E00               	movlw	0
 14015   002D6C  6E1B               	movwf	(i2___ftmul@f3_as_product+2)^0,c
 14016   002D6E  0E07               	movlw	7
 14017   002D70  6E1C               	movwf	i2___ftmul@cntr^0,c
 14018   002D72                     i2l7447:
 14019   002D72  A00F               	btfss	i2___ftmul@f1^0,0,c
 14020   002D74  D006               	goto	i2l7451
 14021   002D76  5012               	movf	i2___ftmul@f2^0,w,c
 14022   002D78  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 14023   002D7A  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 14024   002D7C  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 14025   002D7E  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 14026   002D80  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 14027   002D82                     i2l7451:
 14028   002D82  90D8               	bcf	status,0,c
 14029   002D84  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 14030   002D86  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 14031   002D88  320F               	rrcf	i2___ftmul@f1^0,f,c
 14032   002D8A  90D8               	bcf	status,0,c
 14033   002D8C  3612               	rlcf	i2___ftmul@f2^0,f,c
 14034   002D8E  3613               	rlcf	(i2___ftmul@f2+1)^0,f,c
 14035   002D90  3614               	rlcf	(i2___ftmul@f2+2)^0,f,c
 14036   002D92  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 14037   002D94  D7EE               	goto	i2l7447
 14038   002D96  0E09               	movlw	9
 14039   002D98  6E1C               	movwf	i2___ftmul@cntr^0,c
 14040   002D9A                     i2l7457:
 14041   002D9A  A00F               	btfss	i2___ftmul@f1^0,0,c
 14042   002D9C  D006               	goto	i2l7461
 14043   002D9E  5012               	movf	i2___ftmul@f2^0,w,c
 14044   002DA0  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 14045   002DA2  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 14046   002DA4  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 14047   002DA6  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 14048   002DA8  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 14049   002DAA                     i2l7461:
 14050   002DAA  90D8               	bcf	status,0,c
 14051   002DAC  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 14052   002DAE  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 14053   002DB0  320F               	rrcf	i2___ftmul@f1^0,f,c
 14054   002DB2  90D8               	bcf	status,0,c
 14055   002DB4  321B               	rrcf	(i2___ftmul@f3_as_product+2)^0,f,c
 14056   002DB6  321A               	rrcf	(i2___ftmul@f3_as_product+1)^0,f,c
 14057   002DB8  3219               	rrcf	i2___ftmul@f3_as_product^0,f,c
 14058   002DBA  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 14059   002DBC  D7EE               	goto	i2l7457
 14060   002DBE  C019  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 14061   002DC2  C01A  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 14062   002DC6  C01B  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 14063   002DCA  C018  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 14064   002DCE  C01D  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 14065   002DD2  EC0A  F019         	call	i2___ftpack	;wreg free
 14066   002DD6  C001  F00F         	movff	?i2___ftpack,?i2___ftmul
 14067   002DDA  C002  F010         	movff	?i2___ftpack+1,?i2___ftmul+1
 14068   002DDE  C003  F011         	movff	?i2___ftpack+2,?i2___ftmul+2
 14069   002DE2  0012               	return		;funcret
 14070   002DE4                     __end_ofi2___ftmul:
 14071                           	callstack 0
 14072                           
 14073 ;; *************** function i2__tdiv_to_l_ *****************
 14074 ;; Defined at:
 14075 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;  f1              3    0[COMRAM] float 
 14078 ;;  f2              3    3[COMRAM] float 
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;  quot            4    9[COMRAM] unsigned long 
 14081 ;;  exp1            1   14[COMRAM] unsigned char 
 14082 ;;  cntr            1   13[COMRAM] unsigned char 
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  4    0[COMRAM] unsigned long 
 14085 ;; Registers used:
 14086 ;;		wreg, status,2, status,0
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14092 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14093 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14095 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14096 ;;Total ram usage:       15 bytes
 14097 ;; Hardware stack levels used: 1
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		i2_sprintf
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text67
 14106   002A08                     __ptext67:
 14107                           	callstack 0
 14108   002A08                     i2__tdiv_to_l_:
 14109                           	callstack 18
 14110                           
 14111                           ;incstack = 0
 14112   002A08  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 14113   002A0C  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 14114   002A0E  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 14115   002A10  3402               	rlcf	(i2__tdiv_to_l_@f1+1)^0,w,c
 14116   002A12  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 14117   002A14  E301               	bnc	u969_41
 14118   002A16  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 14119   002A18                     u969_41:
 14120   002A18  5007               	movf	??i2__tdiv_to_l_^0,w,c
 14121   002A1A  6E0F               	movwf	i2__tdiv_to_l_@exp1^0,c
 14122   002A1C  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 14123   002A1E  A4D8               	btfss	status,2,c
 14124   002A20  D009               	goto	i2l7997
 14125   002A22                     i2u970_40:
 14126   002A22  0E00               	movlw	0
 14127   002A24  6E01               	movwf	?i2__tdiv_to_l_^0,c
 14128   002A26  0E00               	movlw	0
 14129   002A28  6E02               	movwf	(?i2__tdiv_to_l_+1)^0,c
 14130   002A2A  0E00               	movlw	0
 14131   002A2C  6E03               	movwf	(?i2__tdiv_to_l_+2)^0,c
 14132   002A2E  0E00               	movlw	0
 14133   002A30  6E04               	movwf	(?i2__tdiv_to_l_+3)^0,c
 14134   002A32  0012               	return	
 14135   002A34                     i2l7997:
 14136   002A34  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 14137   002A38  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 14138   002A3A  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 14139   002A3C  3405               	rlcf	(i2__tdiv_to_l_@f2+1)^0,w,c
 14140   002A3E  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 14141   002A40  E301               	bnc	u971_41
 14142   002A42  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 14143   002A44                     u971_41:
 14144   002A44  5007               	movf	??i2__tdiv_to_l_^0,w,c
 14145   002A46  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 14146   002A48  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 14147   002A4A  B4D8               	btfsc	status,2,c
 14148   002A4C  D7EA               	goto	i2u970_40
 14149   002A4E  8E02               	bsf	(i2__tdiv_to_l_@f1+1)^0,7,c
 14150   002A50  0EFF               	movlw	255
 14151   002A52  1601               	andwf	i2__tdiv_to_l_@f1^0,f,c
 14152   002A54  0EFF               	movlw	255
 14153   002A56  1602               	andwf	(i2__tdiv_to_l_@f1+1)^0,f,c
 14154   002A58  0E00               	movlw	0
 14155   002A5A  1603               	andwf	(i2__tdiv_to_l_@f1+2)^0,f,c
 14156   002A5C  8E05               	bsf	(i2__tdiv_to_l_@f2+1)^0,7,c
 14157   002A5E  0EFF               	movlw	255
 14158   002A60  1604               	andwf	i2__tdiv_to_l_@f2^0,f,c
 14159   002A62  0EFF               	movlw	255
 14160   002A64  1605               	andwf	(i2__tdiv_to_l_@f2+1)^0,f,c
 14161   002A66  0E00               	movlw	0
 14162   002A68  1606               	andwf	(i2__tdiv_to_l_@f2+2)^0,f,c
 14163   002A6A  0E00               	movlw	0
 14164   002A6C  6E0A               	movwf	i2__tdiv_to_l_@quot^0,c
 14165   002A6E  0E00               	movlw	0
 14166   002A70  6E0B               	movwf	(i2__tdiv_to_l_@quot+1)^0,c
 14167   002A72  0E00               	movlw	0
 14168   002A74  6E0C               	movwf	(i2__tdiv_to_l_@quot+2)^0,c
 14169   002A76  0E00               	movlw	0
 14170   002A78  6E0D               	movwf	(i2__tdiv_to_l_@quot+3)^0,c
 14171   002A7A  0E7F               	movlw	127
 14172   002A7C  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 14173   002A7E  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 14174   002A80  0F98               	addlw	152
 14175   002A82  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 14176   002A84  0E18               	movlw	24
 14177   002A86  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 14178   002A88                     i2l846:
 14179   002A88  90D8               	bcf	status,0,c
 14180   002A8A  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 14181   002A8C  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 14182   002A8E  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 14183   002A90  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 14184   002A92  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 14185   002A94  5C01               	subwf	i2__tdiv_to_l_@f1^0,w,c
 14186   002A96  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 14187   002A98  5802               	subwfb	(i2__tdiv_to_l_@f1+1)^0,w,c
 14188   002A9A  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 14189   002A9C  5803               	subwfb	(i2__tdiv_to_l_@f1+2)^0,w,c
 14190   002A9E  A0D8               	btfss	status,0,c
 14191   002AA0  D007               	goto	i2l847
 14192   002AA2  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 14193   002AA4  5E01               	subwf	i2__tdiv_to_l_@f1^0,f,c
 14194   002AA6  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 14195   002AA8  5A02               	subwfb	(i2__tdiv_to_l_@f1+1)^0,f,c
 14196   002AAA  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 14197   002AAC  5A03               	subwfb	(i2__tdiv_to_l_@f1+2)^0,f,c
 14198   002AAE  800A               	bsf	i2__tdiv_to_l_@quot^0,0,c
 14199   002AB0                     i2l847:
 14200   002AB0  90D8               	bcf	status,0,c
 14201   002AB2  3601               	rlcf	i2__tdiv_to_l_@f1^0,f,c
 14202   002AB4  3602               	rlcf	(i2__tdiv_to_l_@f1+1)^0,f,c
 14203   002AB6  3603               	rlcf	(i2__tdiv_to_l_@f1+2)^0,f,c
 14204   002AB8  2E0E               	decfsz	i2__tdiv_to_l_@cntr^0,f,c
 14205   002ABA  D7E6               	goto	i2l846
 14206   002ABC  AE0F               	btfss	i2__tdiv_to_l_@exp1^0,7,c
 14207   002ABE  D00D               	goto	i2l8037
 14208   002AC0  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 14209   002AC2  0A80               	xorlw	128
 14210   002AC4  0F97               	addlw	151
 14211   002AC6  A0D8               	btfss	status,0,c
 14212   002AC8  D7AC               	goto	i2u970_40
 14213   002ACA                     i2l8033:
 14214   002ACA  90D8               	bcf	status,0,c
 14215   002ACC  320D               	rrcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 14216   002ACE  320C               	rrcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 14217   002AD0  320B               	rrcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 14218   002AD2  320A               	rrcf	i2__tdiv_to_l_@quot^0,f,c
 14219   002AD4  3E0F               	incfsz	i2__tdiv_to_l_@exp1^0,f,c
 14220   002AD6  D7F9               	goto	i2l8033
 14221   002AD8  D00D               	goto	i2u977_40
 14222   002ADA                     i2l8037:
 14223   002ADA  0E17               	movlw	23
 14224   002ADC  640F               	cpfsgt	i2__tdiv_to_l_@exp1^0,c
 14225   002ADE  D007               	goto	i2l8045
 14226   002AE0  D7A0               	goto	i2u970_40
 14227   002AE2                     i2l8043:
 14228   002AE2  90D8               	bcf	status,0,c
 14229   002AE4  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 14230   002AE6  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 14231   002AE8  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 14232   002AEA  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 14233   002AEC  060F               	decf	i2__tdiv_to_l_@exp1^0,f,c
 14234   002AEE                     i2l8045:
 14235   002AEE  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 14236   002AF0  A4D8               	btfss	status,2,c
 14237   002AF2  D7F7               	goto	i2l8043
 14238   002AF4                     i2u977_40:
 14239   002AF4  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 14240   002AF8  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 14241   002AFC  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 14242   002B00  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 14243   002B04  0012               	return		;funcret
 14244   002B06                     __end_ofi2__tdiv_to_l_:
 14245                           	callstack 0
 14246                           
 14247 ;; *************** function i2__div_to_l_ *****************
 14248 ;; Defined at:
 14249 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;  f1              3    0[COMRAM] unsigned long 
 14252 ;;  f2              3    3[COMRAM] unsigned long 
 14253 ;; Auto vars:     Size  Location     Type
 14254 ;;  quot            4    6[COMRAM] unsigned long 
 14255 ;;  exp1            1   11[COMRAM] unsigned char 
 14256 ;;  cntr            1   10[COMRAM] unsigned char 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  4    0[COMRAM] unsigned long 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14269 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14270 ;;Total ram usage:       12 bytes
 14271 ;; Hardware stack levels used: 1
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		i2_sprintf
 14276 ;; This function uses a non-reentrant model
 14277 ;;
 14278                           
 14279                           	psect	text68
 14280   002DE4                     __ptext68:
 14281                           	callstack 0
 14282   002DE4                     i2__div_to_l_:
 14283                           	callstack 18
 14284                           
 14285                           ;incstack = 0
 14286   002DE4  3403               	rlcf	(i2__div_to_l_@f1+2)^0,w,c
 14287   002DE6  3404               	rlcf	(i2__div_to_l_@f1+3)^0,w,c
 14288   002DE8  6E0C               	movwf	i2__div_to_l_@exp1^0,c
 14289   002DEA  500C               	movf	i2__div_to_l_@exp1^0,w,c
 14290   002DEC  A4D8               	btfss	status,2,c
 14291   002DEE  D009               	goto	i2l7937
 14292   002DF0                     i2u962_40:
 14293   002DF0  0E00               	movlw	0
 14294   002DF2  6E01               	movwf	?i2__div_to_l_^0,c
 14295   002DF4  0E00               	movlw	0
 14296   002DF6  6E02               	movwf	(?i2__div_to_l_+1)^0,c
 14297   002DF8  0E00               	movlw	0
 14298   002DFA  6E03               	movwf	(?i2__div_to_l_+2)^0,c
 14299   002DFC  0E00               	movlw	0
 14300   002DFE  6E04               	movwf	(?i2__div_to_l_+3)^0,c
 14301   002E00  0012               	return	
 14302   002E02                     i2l7937:
 14303   002E02  3406               	rlcf	(i2__div_to_l_@f2+2)^0,w,c
 14304   002E04  3407               	rlcf	(i2__div_to_l_@f2+3)^0,w,c
 14305   002E06  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 14306   002E08  500B               	movf	i2__div_to_l_@cntr^0,w,c
 14307   002E0A  B4D8               	btfsc	status,2,c
 14308   002E0C  D7F1               	goto	i2u962_40
 14309   002E0E  8E03               	bsf	(i2__div_to_l_@f1+2)^0,7,c
 14310   002E10  0EFF               	movlw	255
 14311   002E12  1601               	andwf	i2__div_to_l_@f1^0,f,c
 14312   002E14  0EFF               	movlw	255
 14313   002E16  1602               	andwf	(i2__div_to_l_@f1+1)^0,f,c
 14314   002E18  0EFF               	movlw	255
 14315   002E1A  1603               	andwf	(i2__div_to_l_@f1+2)^0,f,c
 14316   002E1C  0E00               	movlw	0
 14317   002E1E  1604               	andwf	(i2__div_to_l_@f1+3)^0,f,c
 14318   002E20  8E06               	bsf	(i2__div_to_l_@f2+2)^0,7,c
 14319   002E22  0EFF               	movlw	255
 14320   002E24  1604               	andwf	i2__div_to_l_@f2^0,f,c
 14321   002E26  0EFF               	movlw	255
 14322   002E28  1605               	andwf	(i2__div_to_l_@f2+1)^0,f,c
 14323   002E2A  0EFF               	movlw	255
 14324   002E2C  1606               	andwf	(i2__div_to_l_@f2+2)^0,f,c
 14325   002E2E  0E00               	movlw	0
 14326   002E30  1607               	andwf	(i2__div_to_l_@f2+3)^0,f,c
 14327   002E32  0E00               	movlw	0
 14328   002E34  6E07               	movwf	i2__div_to_l_@quot^0,c
 14329   002E36  0E00               	movlw	0
 14330   002E38  6E08               	movwf	(i2__div_to_l_@quot+1)^0,c
 14331   002E3A  0E00               	movlw	0
 14332   002E3C  6E09               	movwf	(i2__div_to_l_@quot+2)^0,c
 14333   002E3E  0E00               	movlw	0
 14334   002E40  6E0A               	movwf	(i2__div_to_l_@quot+3)^0,c
 14335   002E42  0E7F               	movlw	127
 14336   002E44  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 14337   002E46  500B               	movf	i2__div_to_l_@cntr^0,w,c
 14338   002E48  0FA0               	addlw	160
 14339   002E4A  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 14340   002E4C  0E20               	movlw	32
 14341   002E4E  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 14342   002E50                     i2l7957:
 14343   002E50  90D8               	bcf	status,0,c
 14344   002E52  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 14345   002E54  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 14346   002E56  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 14347   002E58  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 14348   002E5A  5004               	movf	i2__div_to_l_@f2^0,w,c
 14349   002E5C  5C01               	subwf	i2__div_to_l_@f1^0,w,c
 14350   002E5E  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 14351   002E60  5802               	subwfb	(i2__div_to_l_@f1+1)^0,w,c
 14352   002E62  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 14353   002E64  5803               	subwfb	(i2__div_to_l_@f1+2)^0,w,c
 14354   002E66  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 14355   002E68  5804               	subwfb	(i2__div_to_l_@f1+3)^0,w,c
 14356   002E6A  A0D8               	btfss	status,0,c
 14357   002E6C  D009               	goto	i2l7965
 14358   002E6E  5004               	movf	i2__div_to_l_@f2^0,w,c
 14359   002E70  5E01               	subwf	i2__div_to_l_@f1^0,f,c
 14360   002E72  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 14361   002E74  5A02               	subwfb	(i2__div_to_l_@f1+1)^0,f,c
 14362   002E76  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 14363   002E78  5A03               	subwfb	(i2__div_to_l_@f1+2)^0,f,c
 14364   002E7A  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 14365   002E7C  5A04               	subwfb	(i2__div_to_l_@f1+3)^0,f,c
 14366   002E7E  8007               	bsf	i2__div_to_l_@quot^0,0,c
 14367   002E80                     i2l7965:
 14368   002E80  90D8               	bcf	status,0,c
 14369   002E82  3601               	rlcf	i2__div_to_l_@f1^0,f,c
 14370   002E84  3602               	rlcf	(i2__div_to_l_@f1+1)^0,f,c
 14371   002E86  3603               	rlcf	(i2__div_to_l_@f1+2)^0,f,c
 14372   002E88  3604               	rlcf	(i2__div_to_l_@f1+3)^0,f,c
 14373   002E8A  2E0B               	decfsz	i2__div_to_l_@cntr^0,f,c
 14374   002E8C  D7E1               	goto	i2l7957
 14375   002E8E  AE0C               	btfss	i2__div_to_l_@exp1^0,7,c
 14376   002E90  D00D               	goto	i2l7981
 14377   002E92  500C               	movf	i2__div_to_l_@exp1^0,w,c
 14378   002E94  0A80               	xorlw	128
 14379   002E96  0F9F               	addlw	159
 14380   002E98  A0D8               	btfss	status,0,c
 14381   002E9A  D7AA               	goto	i2u962_40
 14382   002E9C                     i2l7977:
 14383   002E9C  90D8               	bcf	status,0,c
 14384   002E9E  320A               	rrcf	(i2__div_to_l_@quot+3)^0,f,c
 14385   002EA0  3209               	rrcf	(i2__div_to_l_@quot+2)^0,f,c
 14386   002EA2  3208               	rrcf	(i2__div_to_l_@quot+1)^0,f,c
 14387   002EA4  3207               	rrcf	i2__div_to_l_@quot^0,f,c
 14388   002EA6  3E0C               	incfsz	i2__div_to_l_@exp1^0,f,c
 14389   002EA8  D7F9               	goto	i2l7977
 14390   002EAA  D00D               	goto	i2u968_40
 14391   002EAC                     i2l7981:
 14392   002EAC  0E1F               	movlw	31
 14393   002EAE  640C               	cpfsgt	i2__div_to_l_@exp1^0,c
 14394   002EB0  D007               	goto	i2l7989
 14395   002EB2  D79E               	goto	i2u962_40
 14396   002EB4                     i2l7987:
 14397   002EB4  90D8               	bcf	status,0,c
 14398   002EB6  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 14399   002EB8  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 14400   002EBA  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 14401   002EBC  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 14402   002EBE  060C               	decf	i2__div_to_l_@exp1^0,f,c
 14403   002EC0                     i2l7989:
 14404   002EC0  500C               	movf	i2__div_to_l_@exp1^0,w,c
 14405   002EC2  A4D8               	btfss	status,2,c
 14406   002EC4  D7F7               	goto	i2l7987
 14407   002EC6                     i2u968_40:
 14408   002EC6  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 14409   002ECA  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 14410   002ECE  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 14411   002ED2  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 14412   002ED6  0012               	return		;funcret
 14413   002ED8                     __end_ofi2__div_to_l_:
 14414                           	callstack 0
 14415                           
 14416 ;; *************** function i2___wmul *****************
 14417 ;; Defined at:
 14418 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;  multiplier      2    0[COMRAM] unsigned int 
 14421 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;  product         2    4[COMRAM] unsigned int 
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  2    0[COMRAM] unsigned int 
 14426 ;; Registers used:
 14427 ;;		wreg, status,2, status,0, prodl, prodh
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;Total ram usage:        6 bytes
 14438 ;; Hardware stack levels used: 1
 14439 ;; This function calls:
 14440 ;;		Nothing
 14441 ;; This function is called by:
 14442 ;;		i2_sprintf
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text69
 14447   004460                     __ptext69:
 14448                           	callstack 0
 14449   004460                     i2___wmul:
 14450                           	callstack 18
 14451                           
 14452                           ;incstack = 0
 14453   004460  5001               	movf	i2___wmul@multiplier^0,w,c
 14454   004462  0203               	mulwf	i2___wmul@multiplicand^0,c
 14455   004464  CFF3 F005          	movff	prodl,i2___wmul@product
 14456   004468  CFF4 F006          	movff	prodh,i2___wmul@product+1
 14457   00446C  5001               	movf	i2___wmul@multiplier^0,w,c
 14458   00446E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 14459   004470  50F3               	movf	243,w,c
 14460   004472  2606               	addwf	(i2___wmul@product+1)^0,f,c
 14461   004474  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 14462   004476  0203               	mulwf	i2___wmul@multiplicand^0,c
 14463   004478  50F3               	movf	243,w,c
 14464   00447A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 14465   00447C  C005  F001         	movff	i2___wmul@product,?i2___wmul
 14466   004480  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 14467   004484  0012               	return		;funcret
 14468   004486                     __end_ofi2___wmul:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function i2___lltoft *****************
 14472 ;; Defined at:
 14473 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  c               4    8[COMRAM] unsigned long 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  exp             1   16[COMRAM] unsigned char 
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  3    8[COMRAM] float 
 14480 ;; Registers used:
 14481 ;;		wreg, status,2, status,0, cstack
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;Total ram usage:        9 bytes
 14492 ;; Hardware stack levels used: 1
 14493 ;; Hardware stack levels required when called: 1
 14494 ;; This function calls:
 14495 ;;		i2___ftpack
 14496 ;; This function is called by:
 14497 ;;		i2_sprintf
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text70
 14502   003D3E                     __ptext70:
 14503                           	callstack 0
 14504   003D3E                     i2___lltoft:
 14505                           	callstack 17
 14506                           
 14507                           ;incstack = 0
 14508   003D3E  0E8E               	movlw	142
 14509   003D40  6E11               	movwf	i2___lltoft@exp^0,c
 14510   003D42  D006               	goto	i2l8143
 14511   003D44                     i2l8141:
 14512   003D44  90D8               	bcf	status,0,c
 14513   003D46  320C               	rrcf	(i2___lltoft@c+3)^0,f,c
 14514   003D48  320B               	rrcf	(i2___lltoft@c+2)^0,f,c
 14515   003D4A  320A               	rrcf	(i2___lltoft@c+1)^0,f,c
 14516   003D4C  3209               	rrcf	i2___lltoft@c^0,f,c
 14517   003D4E  2A11               	incf	i2___lltoft@exp^0,f,c
 14518   003D50                     i2l8143:
 14519   003D50  0E00               	movlw	0
 14520   003D52  1409               	andwf	i2___lltoft@c^0,w,c
 14521   003D54  6E0D               	movwf	??i2___lltoft^0,c
 14522   003D56  0E00               	movlw	0
 14523   003D58  140A               	andwf	(i2___lltoft@c+1)^0,w,c
 14524   003D5A  6E0E               	movwf	(??i2___lltoft+1)^0,c
 14525   003D5C  0E00               	movlw	0
 14526   003D5E  140B               	andwf	(i2___lltoft@c+2)^0,w,c
 14527   003D60  6E0F               	movwf	(??i2___lltoft+2)^0,c
 14528   003D62  0EFF               	movlw	255
 14529   003D64  140C               	andwf	(i2___lltoft@c+3)^0,w,c
 14530   003D66  6E10               	movwf	(??i2___lltoft+3)^0,c
 14531   003D68  500D               	movf	??i2___lltoft^0,w,c
 14532   003D6A  100E               	iorwf	(??i2___lltoft+1)^0,w,c
 14533   003D6C  100F               	iorwf	(??i2___lltoft+2)^0,w,c
 14534   003D6E  1010               	iorwf	(??i2___lltoft+3)^0,w,c
 14535   003D70  A4D8               	btfss	status,2,c
 14536   003D72  D7E8               	goto	i2l8141
 14537   003D74  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 14538   003D78  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 14539   003D7C  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 14540   003D80  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 14541   003D84  0E00               	movlw	0
 14542   003D86  6E05               	movwf	i2___ftpack@sign^0,c
 14543   003D88  EC0A  F019         	call	i2___ftpack	;wreg free
 14544   003D8C  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 14545   003D90  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 14546   003D94  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 14547   003D98  0012               	return		;funcret
 14548   003D9A                     __end_ofi2___lltoft:
 14549                           	callstack 0
 14550                           
 14551 ;; *************** function i2___llmod *****************
 14552 ;; Defined at:
 14553 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;  dividend        4   13[COMRAM] unsigned long 
 14556 ;;  divisor         4   17[COMRAM] unsigned long 
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;  counter         1   21[COMRAM] unsigned char 
 14559 ;; Return value:  Size  Location     Type
 14560 ;;                  4   13[COMRAM] unsigned long 
 14561 ;; Registers used:
 14562 ;;		wreg, status,2, status,0
 14563 ;; Tracked objects:
 14564 ;;		On entry : 0/0
 14565 ;;		On exit  : 0/0
 14566 ;;		Unchanged: 0/0
 14567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14571 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14572 ;;Total ram usage:        9 bytes
 14573 ;; Hardware stack levels used: 1
 14574 ;; This function calls:
 14575 ;;		Nothing
 14576 ;; This function is called by:
 14577 ;;		i2_sprintf
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text71
 14582   003BC4                     __ptext71:
 14583                           	callstack 0
 14584   003BC4                     i2___llmod:
 14585                           	callstack 18
 14586                           
 14587                           ;incstack = 0
 14588   003BC4  5012               	movf	i2___llmod@divisor^0,w,c
 14589   003BC6  1013               	iorwf	(i2___llmod@divisor+1)^0,w,c
 14590   003BC8  1014               	iorwf	(i2___llmod@divisor+2)^0,w,c
 14591   003BCA  1015               	iorwf	(i2___llmod@divisor+3)^0,w,c
 14592   003BCC  B4D8               	btfsc	status,2,c
 14593   003BCE  D024               	goto	i2l923
 14594   003BD0  0E01               	movlw	1
 14595   003BD2  6E16               	movwf	i2___llmod@counter^0,c
 14596   003BD4  D006               	goto	i2l8129
 14597   003BD6                     i2l8127:
 14598   003BD6  90D8               	bcf	status,0,c
 14599   003BD8  3612               	rlcf	i2___llmod@divisor^0,f,c
 14600   003BDA  3613               	rlcf	(i2___llmod@divisor+1)^0,f,c
 14601   003BDC  3614               	rlcf	(i2___llmod@divisor+2)^0,f,c
 14602   003BDE  3615               	rlcf	(i2___llmod@divisor+3)^0,f,c
 14603   003BE0  2A16               	incf	i2___llmod@counter^0,f,c
 14604   003BE2                     i2l8129:
 14605   003BE2  AE15               	btfss	(i2___llmod@divisor+3)^0,7,c
 14606   003BE4  D7F8               	goto	i2l8127
 14607   003BE6                     i2u992_40:
 14608   003BE6  5012               	movf	i2___llmod@divisor^0,w,c
 14609   003BE8  5C0E               	subwf	i2___llmod@dividend^0,w,c
 14610   003BEA  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 14611   003BEC  580F               	subwfb	(i2___llmod@dividend+1)^0,w,c
 14612   003BEE  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 14613   003BF0  5810               	subwfb	(i2___llmod@dividend+2)^0,w,c
 14614   003BF2  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 14615   003BF4  5811               	subwfb	(i2___llmod@dividend+3)^0,w,c
 14616   003BF6  A0D8               	btfss	status,0,c
 14617   003BF8  D008               	goto	i2l8135
 14618   003BFA  5012               	movf	i2___llmod@divisor^0,w,c
 14619   003BFC  5E0E               	subwf	i2___llmod@dividend^0,f,c
 14620   003BFE  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 14621   003C00  5A0F               	subwfb	(i2___llmod@dividend+1)^0,f,c
 14622   003C02  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 14623   003C04  5A10               	subwfb	(i2___llmod@dividend+2)^0,f,c
 14624   003C06  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 14625   003C08  5A11               	subwfb	(i2___llmod@dividend+3)^0,f,c
 14626   003C0A                     i2l8135:
 14627   003C0A  90D8               	bcf	status,0,c
 14628   003C0C  3215               	rrcf	(i2___llmod@divisor+3)^0,f,c
 14629   003C0E  3214               	rrcf	(i2___llmod@divisor+2)^0,f,c
 14630   003C10  3213               	rrcf	(i2___llmod@divisor+1)^0,f,c
 14631   003C12  3212               	rrcf	i2___llmod@divisor^0,f,c
 14632   003C14  2E16               	decfsz	i2___llmod@counter^0,f,c
 14633   003C16  D7E7               	goto	i2u992_40
 14634   003C18                     i2l923:
 14635   003C18  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 14636   003C1C  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 14637   003C20  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 14638   003C24  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 14639   003C28  0012               	return		;funcret
 14640   003C2A                     __end_ofi2___llmod:
 14641                           	callstack 0
 14642                           
 14643 ;; *************** function i2___lldiv *****************
 14644 ;; Defined at:
 14645 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;  dividend        4    0[COMRAM] unsigned long 
 14648 ;;  divisor         4    4[COMRAM] unsigned long 
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;  quotient        4    8[COMRAM] unsigned long 
 14651 ;;  counter         1   12[COMRAM] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  4    0[COMRAM] unsigned long 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14664 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14665 ;;Total ram usage:       13 bytes
 14666 ;; Hardware stack levels used: 1
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		i2_sprintf
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text72
 14675   0037CA                     __ptext72:
 14676                           	callstack 0
 14677   0037CA                     i2___lldiv:
 14678                           	callstack 18
 14679                           
 14680                           ;incstack = 0
 14681   0037CA  0E00               	movlw	0
 14682   0037CC  6E09               	movwf	i2___lldiv@quotient^0,c
 14683   0037CE  0E00               	movlw	0
 14684   0037D0  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
 14685   0037D2  0E00               	movlw	0
 14686   0037D4  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
 14687   0037D6  0E00               	movlw	0
 14688   0037D8  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
 14689   0037DA  5005               	movf	i2___lldiv@divisor^0,w,c
 14690   0037DC  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
 14691   0037DE  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
 14692   0037E0  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
 14693   0037E2  B4D8               	btfsc	status,2,c
 14694   0037E4  D02A               	goto	i2l508
 14695   0037E6  0E01               	movlw	1
 14696   0037E8  6E0D               	movwf	i2___lldiv@counter^0,c
 14697   0037EA  D006               	goto	i2l7917
 14698   0037EC                     i2l7915:
 14699   0037EC  90D8               	bcf	status,0,c
 14700   0037EE  3605               	rlcf	i2___lldiv@divisor^0,f,c
 14701   0037F0  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
 14702   0037F2  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
 14703   0037F4  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
 14704   0037F6  2A0D               	incf	i2___lldiv@counter^0,f,c
 14705   0037F8                     i2l7917:
 14706   0037F8  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
 14707   0037FA  D7F8               	goto	i2l7915
 14708   0037FC                     i2u960_40:
 14709   0037FC  90D8               	bcf	status,0,c
 14710   0037FE  3609               	rlcf	i2___lldiv@quotient^0,f,c
 14711   003800  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
 14712   003802  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
 14713   003804  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
 14714   003806  5005               	movf	i2___lldiv@divisor^0,w,c
 14715   003808  5C01               	subwf	i2___lldiv@dividend^0,w,c
 14716   00380A  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 14717   00380C  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
 14718   00380E  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 14719   003810  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
 14720   003812  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 14721   003814  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
 14722   003816  A0D8               	btfss	status,0,c
 14723   003818  D009               	goto	i2l7927
 14724   00381A  5005               	movf	i2___lldiv@divisor^0,w,c
 14725   00381C  5E01               	subwf	i2___lldiv@dividend^0,f,c
 14726   00381E  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 14727   003820  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
 14728   003822  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 14729   003824  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
 14730   003826  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 14731   003828  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
 14732   00382A  8009               	bsf	i2___lldiv@quotient^0,0,c
 14733   00382C                     i2l7927:
 14734   00382C  90D8               	bcf	status,0,c
 14735   00382E  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
 14736   003830  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
 14737   003832  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
 14738   003834  3205               	rrcf	i2___lldiv@divisor^0,f,c
 14739   003836  2E0D               	decfsz	i2___lldiv@counter^0,f,c
 14740   003838  D7E1               	goto	i2u960_40
 14741   00383A                     i2l508:
 14742   00383A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 14743   00383E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 14744   003842  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 14745   003846  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 14746   00384A  0012               	return		;funcret
 14747   00384C                     __end_ofi2___lldiv:
 14748                           	callstack 0
 14749                           
 14750 ;; *************** function i2___fttol *****************
 14751 ;; Defined at:
 14752 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;  f1              3   36[COMRAM] float 
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;  lval            4   46[COMRAM] unsigned long 
 14757 ;;  exp1            1   50[COMRAM] unsigned char 
 14758 ;;  sign1           1   45[COMRAM] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  4   36[COMRAM] long 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14770 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14771 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14772 ;;Total ram usage:       15 bytes
 14773 ;; Hardware stack levels used: 1
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		i2_sprintf
 14778 ;; This function uses a non-reentrant model
 14779 ;;
 14780                           
 14781                           	psect	text73
 14782   003094                     __ptext73:
 14783                           	callstack 0
 14784   003094                     i2___fttol:
 14785                           	callstack 18
 14786                           
 14787                           ;incstack = 0
 14788   003094  C027  F029         	movff	i2___fttol@f1+2,??i2___fttol
 14789   003098  6A2A               	clrf	(??i2___fttol+1)^0,c
 14790   00309A  6A2B               	clrf	(??i2___fttol+2)^0,c
 14791   00309C  3426               	rlcf	(i2___fttol@f1+1)^0,w,c
 14792   00309E  3629               	rlcf	??i2___fttol^0,f,c
 14793   0030A0  E301               	bnc	u983_41
 14794   0030A2  802A               	bsf	(??i2___fttol+1)^0,0,c
 14795   0030A4                     u983_41:
 14796   0030A4  5029               	movf	??i2___fttol^0,w,c
 14797   0030A6  6E33               	movwf	i2___fttol@exp1^0,c
 14798   0030A8  5033               	movf	i2___fttol@exp1^0,w,c
 14799   0030AA  A4D8               	btfss	status,2,c
 14800   0030AC  D009               	goto	i2l8083
 14801   0030AE                     i2u984_40:
 14802   0030AE  0E00               	movlw	0
 14803   0030B0  6E25               	movwf	?i2___fttol^0,c
 14804   0030B2  0E00               	movlw	0
 14805   0030B4  6E26               	movwf	(?i2___fttol+1)^0,c
 14806   0030B6  0E00               	movlw	0
 14807   0030B8  6E27               	movwf	(?i2___fttol+2)^0,c
 14808   0030BA  0E00               	movlw	0
 14809   0030BC  6E28               	movwf	(?i2___fttol+3)^0,c
 14810   0030BE  0012               	return	
 14811   0030C0                     i2l8083:
 14812   0030C0  0E17               	movlw	23
 14813   0030C2  6E29               	movwf	??i2___fttol^0,c
 14814   0030C4  C025  F02A         	movff	i2___fttol@f1,??i2___fttol+1
 14815   0030C8  C026  F02B         	movff	i2___fttol@f1+1,??i2___fttol+2
 14816   0030CC  C027  F02C         	movff	i2___fttol@f1+2,??i2___fttol+3
 14817   0030D0  2829               	incf	??i2___fttol^0,w,c
 14818   0030D2  6E2D               	movwf	(??i2___fttol+4)^0,c
 14819   0030D4  D004               	goto	i2u985_40
 14820   0030D6                     i2u985_45:
 14821   0030D6  90D8               	bcf	status,0,c
 14822   0030D8  322C               	rrcf	(??i2___fttol+3)^0,f,c
 14823   0030DA  322B               	rrcf	(??i2___fttol+2)^0,f,c
 14824   0030DC  322A               	rrcf	(??i2___fttol+1)^0,f,c
 14825   0030DE                     i2u985_40:
 14826   0030DE  2E2D               	decfsz	(??i2___fttol+4)^0,f,c
 14827   0030E0  D7FA               	goto	i2u985_45
 14828   0030E2  502A               	movf	(??i2___fttol+1)^0,w,c
 14829   0030E4  6E2E               	movwf	i2___fttol@sign1^0,c
 14830   0030E6  8E26               	bsf	(i2___fttol@f1+1)^0,7,c
 14831   0030E8  0EFF               	movlw	255
 14832   0030EA  1625               	andwf	i2___fttol@f1^0,f,c
 14833   0030EC  0EFF               	movlw	255
 14834   0030EE  1626               	andwf	(i2___fttol@f1+1)^0,f,c
 14835   0030F0  0E00               	movlw	0
 14836   0030F2  1627               	andwf	(i2___fttol@f1+2)^0,f,c
 14837   0030F4  5025               	movf	i2___fttol@f1^0,w,c
 14838   0030F6  6E2F               	movwf	i2___fttol@lval^0,c
 14839   0030F8  5026               	movf	(i2___fttol@f1+1)^0,w,c
 14840   0030FA  6E30               	movwf	(i2___fttol@lval+1)^0,c
 14841   0030FC  5027               	movf	(i2___fttol@f1+2)^0,w,c
 14842   0030FE  6E31               	movwf	(i2___fttol@lval+2)^0,c
 14843   003100  6A32               	clrf	(i2___fttol@lval+3)^0,c
 14844   003102  0E8E               	movlw	142
 14845   003104  5E33               	subwf	i2___fttol@exp1^0,f,c
 14846   003106  AE33               	btfss	i2___fttol@exp1^0,7,c
 14847   003108  D00D               	goto	i2l8105
 14848   00310A  5033               	movf	i2___fttol@exp1^0,w,c
 14849   00310C  0A80               	xorlw	128
 14850   00310E  0F8F               	addlw	143
 14851   003110  A0D8               	btfss	status,0,c
 14852   003112  D7CD               	goto	i2u984_40
 14853   003114                     i2l8101:
 14854   003114  90D8               	bcf	status,0,c
 14855   003116  3232               	rrcf	(i2___fttol@lval+3)^0,f,c
 14856   003118  3231               	rrcf	(i2___fttol@lval+2)^0,f,c
 14857   00311A  3230               	rrcf	(i2___fttol@lval+1)^0,f,c
 14858   00311C  322F               	rrcf	i2___fttol@lval^0,f,c
 14859   00311E  3E33               	incfsz	i2___fttol@exp1^0,f,c
 14860   003120  D7F9               	goto	i2l8101
 14861   003122  D00D               	goto	i2u989_40
 14862   003124                     i2l8105:
 14863   003124  0E17               	movlw	23
 14864   003126  6433               	cpfsgt	i2___fttol@exp1^0,c
 14865   003128  D007               	goto	i2l8113
 14866   00312A  D7C1               	goto	i2u984_40
 14867   00312C                     i2l8111:
 14868   00312C  90D8               	bcf	status,0,c
 14869   00312E  362F               	rlcf	i2___fttol@lval^0,f,c
 14870   003130  3630               	rlcf	(i2___fttol@lval+1)^0,f,c
 14871   003132  3631               	rlcf	(i2___fttol@lval+2)^0,f,c
 14872   003134  3632               	rlcf	(i2___fttol@lval+3)^0,f,c
 14873   003136  0633               	decf	i2___fttol@exp1^0,f,c
 14874   003138                     i2l8113:
 14875   003138  5033               	movf	i2___fttol@exp1^0,w,c
 14876   00313A  A4D8               	btfss	status,2,c
 14877   00313C  D7F7               	goto	i2l8111
 14878   00313E                     i2u989_40:
 14879   00313E  502E               	movf	i2___fttol@sign1^0,w,c
 14880   003140  B4D8               	btfsc	status,2,c
 14881   003142  D008               	goto	i2l8119
 14882   003144  1E32               	comf	(i2___fttol@lval+3)^0,f,c
 14883   003146  1E31               	comf	(i2___fttol@lval+2)^0,f,c
 14884   003148  1E30               	comf	(i2___fttol@lval+1)^0,f,c
 14885   00314A  6C2F               	negf	i2___fttol@lval^0,c
 14886   00314C  0E00               	movlw	0
 14887   00314E  2230               	addwfc	(i2___fttol@lval+1)^0,f,c
 14888   003150  2231               	addwfc	(i2___fttol@lval+2)^0,f,c
 14889   003152  2232               	addwfc	(i2___fttol@lval+3)^0,f,c
 14890   003154                     i2l8119:
 14891   003154  C02F  F025         	movff	i2___fttol@lval,?i2___fttol
 14892   003158  C030  F026         	movff	i2___fttol@lval+1,?i2___fttol+1
 14893   00315C  C031  F027         	movff	i2___fttol@lval+2,?i2___fttol+2
 14894   003160  C032  F028         	movff	i2___fttol@lval+3,?i2___fttol+3
 14895   003164  0012               	return		;funcret
 14896   003166                     __end_ofi2___fttol:
 14897                           	callstack 0
 14898                           
 14899 ;; *************** function i2___ftsub *****************
 14900 ;; Defined at:
 14901 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftsub.c"
 14902 ;; Parameters:    Size  Location     Type
 14903 ;;  f1              3   53[COMRAM] float 
 14904 ;;  f2              3   56[COMRAM] float 
 14905 ;; Auto vars:     Size  Location     Type
 14906 ;;		None
 14907 ;; Return value:  Size  Location     Type
 14908 ;;                  3   53[COMRAM] float 
 14909 ;; Registers used:
 14910 ;;		wreg, status,2, status,0, cstack
 14911 ;; Tracked objects:
 14912 ;;		On entry : 0/0
 14913 ;;		On exit  : 0/0
 14914 ;;		Unchanged: 0/0
 14915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14916 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14919 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14920 ;;Total ram usage:        6 bytes
 14921 ;; Hardware stack levels used: 1
 14922 ;; Hardware stack levels required when called: 2
 14923 ;; This function calls:
 14924 ;;		i2___ftadd
 14925 ;; This function is called by:
 14926 ;;		i2_sprintf
 14927 ;; This function uses a non-reentrant model
 14928 ;;
 14929                           
 14930                           	psect	text74
 14931   0040C4                     __ptext74:
 14932                           	callstack 0
 14933   0040C4                     i2___ftsub:
 14934                           	callstack 16
 14935                           
 14936                           ;incstack = 0
 14937   0040C4  5039               	movf	i2___ftsub@f2^0,w,c
 14938   0040C6  103A               	iorwf	(i2___ftsub@f2+1)^0,w,c
 14939   0040C8  103B               	iorwf	(i2___ftsub@f2+2)^0,w,c
 14940   0040CA  B4D8               	btfsc	status,2,c
 14941   0040CC  D006               	goto	i2l8073
 14942   0040CE  0E00               	movlw	0
 14943   0040D0  1A39               	xorwf	i2___ftsub@f2^0,f,c
 14944   0040D2  0E00               	movlw	0
 14945   0040D4  1A3A               	xorwf	(i2___ftsub@f2+1)^0,f,c
 14946   0040D6  0E80               	movlw	128
 14947   0040D8  1A3B               	xorwf	(i2___ftsub@f2+2)^0,f,c
 14948   0040DA                     i2l8073:
 14949   0040DA  C036  F02A         	movff	i2___ftsub@f1,i2___ftadd@f1
 14950   0040DE  C037  F02B         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 14951   0040E2  C038  F02C         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 14952   0040E6  C039  F02D         	movff	i2___ftsub@f2,i2___ftadd@f2
 14953   0040EA  C03A  F02E         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 14954   0040EE  C03B  F02F         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 14955   0040F2  ECB1  F013         	call	i2___ftadd	;wreg free
 14956   0040F6  C02A  F036         	movff	?i2___ftadd,?i2___ftsub
 14957   0040FA  C02B  F037         	movff	?i2___ftadd+1,?i2___ftsub+1
 14958   0040FE  C02C  F038         	movff	?i2___ftadd+2,?i2___ftsub+2
 14959   004102  0012               	return		;funcret
 14960   004104                     __end_ofi2___ftsub:
 14961                           	callstack 0
 14962                           
 14963 ;; *************** function i2___ftadd *****************
 14964 ;; Defined at:
 14965 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;  f1              3   41[COMRAM] float 
 14968 ;;  f2              3   44[COMRAM] float 
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;  exp1            1   52[COMRAM] unsigned char 
 14971 ;;  exp2            1   51[COMRAM] unsigned char 
 14972 ;;  sign            1   50[COMRAM] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  3   41[COMRAM] float 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14985 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;Total ram usage:       12 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 1
 14989 ;; This function calls:
 14990 ;;		i2___ftpack
 14991 ;; This function is called by:
 14992 ;;		i2_sprintf
 14993 ;;		i2___ftsub
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           	psect	text75
 14998   002762                     __ptext75:
 14999                           	callstack 0
 15000   002762                     i2___ftadd:
 15001                           	callstack 16
 15002                           
 15003                           ;incstack = 0
 15004   002762  C02C  F030         	movff	i2___ftadd@f1+2,??i2___ftadd
 15005   002766  6A31               	clrf	(??i2___ftadd+1)^0,c
 15006   002768  6A32               	clrf	(??i2___ftadd+2)^0,c
 15007   00276A  342B               	rlcf	(i2___ftadd@f1+1)^0,w,c
 15008   00276C  3630               	rlcf	??i2___ftadd^0,f,c
 15009   00276E  E301               	bnc	u876_41
 15010   002770  8031               	bsf	(??i2___ftadd+1)^0,0,c
 15011   002772                     u876_41:
 15012   002772  5030               	movf	??i2___ftadd^0,w,c
 15013   002774  6E35               	movwf	i2___ftadd@exp1^0,c
 15014   002776  C02F  F030         	movff	i2___ftadd@f2+2,??i2___ftadd
 15015   00277A  6A31               	clrf	(??i2___ftadd+1)^0,c
 15016   00277C  6A32               	clrf	(??i2___ftadd+2)^0,c
 15017   00277E  342E               	rlcf	(i2___ftadd@f2+1)^0,w,c
 15018   002780  3630               	rlcf	??i2___ftadd^0,f,c
 15019   002782  E301               	bnc	u877_41
 15020   002784  8031               	bsf	(??i2___ftadd+1)^0,0,c
 15021   002786                     u877_41:
 15022   002786  5030               	movf	??i2___ftadd^0,w,c
 15023   002788  6E34               	movwf	i2___ftadd@exp2^0,c
 15024   00278A  5035               	movf	i2___ftadd@exp1^0,w,c
 15025   00278C  B4D8               	btfsc	status,2,c
 15026   00278E  D00A               	goto	i2u880_40
 15027   002790  5034               	movf	i2___ftadd@exp2^0,w,c
 15028   002792  5C35               	subwf	i2___ftadd@exp1^0,w,c
 15029   002794  B0D8               	btfsc	status,0,c
 15030   002796  D00D               	goto	i2l7359
 15031   002798  5035               	movf	i2___ftadd@exp1^0,w,c
 15032   00279A  5C34               	subwf	i2___ftadd@exp2^0,w,c
 15033   00279C  6E30               	movwf	??i2___ftadd^0,c
 15034   00279E  0E18               	movlw	24
 15035   0027A0  6430               	cpfsgt	??i2___ftadd^0,c
 15036   0027A2  D007               	goto	i2l7359
 15037   0027A4                     i2u880_40:
 15038   0027A4  C02D  F02A         	movff	i2___ftadd@f2,?i2___ftadd
 15039   0027A8  C02E  F02B         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 15040   0027AC  C02F  F02C         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 15041   0027B0  0012               	return	
 15042   0027B2                     i2l7359:
 15043   0027B2  5034               	movf	i2___ftadd@exp2^0,w,c
 15044   0027B4  B4D8               	btfsc	status,2,c
 15045   0027B6  D00A               	goto	i2u883_40
 15046   0027B8  5035               	movf	i2___ftadd@exp1^0,w,c
 15047   0027BA  5C34               	subwf	i2___ftadd@exp2^0,w,c
 15048   0027BC  B0D8               	btfsc	status,0,c
 15049   0027BE  D00D               	goto	i2l7365
 15050   0027C0  5034               	movf	i2___ftadd@exp2^0,w,c
 15051   0027C2  5C35               	subwf	i2___ftadd@exp1^0,w,c
 15052   0027C4  6E30               	movwf	??i2___ftadd^0,c
 15053   0027C6  0E18               	movlw	24
 15054   0027C8  6430               	cpfsgt	??i2___ftadd^0,c
 15055   0027CA  D007               	goto	i2l7365
 15056   0027CC                     i2u883_40:
 15057   0027CC  C02A  F02A         	movff	i2___ftadd@f1,?i2___ftadd
 15058   0027D0  C02B  F02B         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 15059   0027D4  C02C  F02C         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 15060   0027D8  0012               	return	
 15061   0027DA                     i2l7365:
 15062   0027DA  0E06               	movlw	6
 15063   0027DC  6E33               	movwf	i2___ftadd@sign^0,c
 15064   0027DE  BE2C               	btfsc	(i2___ftadd@f1+2)^0,7,c
 15065   0027E0  8E33               	bsf	i2___ftadd@sign^0,7,c
 15066   0027E2  BE2F               	btfsc	(i2___ftadd@f2+2)^0,7,c
 15067   0027E4  8C33               	bsf	i2___ftadd@sign^0,6,c
 15068   0027E6  8E2B               	bsf	(i2___ftadd@f1+1)^0,7,c
 15069   0027E8  0EFF               	movlw	255
 15070   0027EA  162A               	andwf	i2___ftadd@f1^0,f,c
 15071   0027EC  0EFF               	movlw	255
 15072   0027EE  162B               	andwf	(i2___ftadd@f1+1)^0,f,c
 15073   0027F0  0E00               	movlw	0
 15074   0027F2  162C               	andwf	(i2___ftadd@f1+2)^0,f,c
 15075   0027F4  8E2E               	bsf	(i2___ftadd@f2+1)^0,7,c
 15076   0027F6  0EFF               	movlw	255
 15077   0027F8  162D               	andwf	i2___ftadd@f2^0,f,c
 15078   0027FA  0EFF               	movlw	255
 15079   0027FC  162E               	andwf	(i2___ftadd@f2+1)^0,f,c
 15080   0027FE  0E00               	movlw	0
 15081   002800  162F               	andwf	(i2___ftadd@f2+2)^0,f,c
 15082   002802  5034               	movf	i2___ftadd@exp2^0,w,c
 15083   002804  5C35               	subwf	i2___ftadd@exp1^0,w,c
 15084   002806  B0D8               	btfsc	status,0,c
 15085   002808  D01B               	goto	i2l7391
 15086   00280A                     i2u886_40:
 15087   00280A  90D8               	bcf	status,0,c
 15088   00280C  362D               	rlcf	i2___ftadd@f2^0,f,c
 15089   00280E  362E               	rlcf	(i2___ftadd@f2+1)^0,f,c
 15090   002810  362F               	rlcf	(i2___ftadd@f2+2)^0,f,c
 15091   002812  0634               	decf	i2___ftadd@exp2^0,f,c
 15092   002814  5035               	movf	i2___ftadd@exp1^0,w,c
 15093   002816  1834               	xorwf	i2___ftadd@exp2^0,w,c
 15094   002818  B4D8               	btfsc	status,2,c
 15095   00281A  D00D               	goto	i2l7389
 15096   00281C  0633               	decf	i2___ftadd@sign^0,f,c
 15097   00281E  C033  F030         	movff	i2___ftadd@sign,??i2___ftadd
 15098   002822  0E07               	movlw	7
 15099   002824  1630               	andwf	??i2___ftadd^0,f,c
 15100   002826  B4D8               	btfsc	status,2,c
 15101   002828  D006               	goto	i2l7389
 15102   00282A  D7EF               	goto	i2u886_40
 15103   00282C                     i2l7387:
 15104   00282C  90D8               	bcf	status,0,c
 15105   00282E  322C               	rrcf	(i2___ftadd@f1+2)^0,f,c
 15106   002830  322B               	rrcf	(i2___ftadd@f1+1)^0,f,c
 15107   002832  322A               	rrcf	i2___ftadd@f1^0,f,c
 15108   002834  2A35               	incf	i2___ftadd@exp1^0,f,c
 15109   002836                     i2l7389:
 15110   002836  5034               	movf	i2___ftadd@exp2^0,w,c
 15111   002838  1835               	xorwf	i2___ftadd@exp1^0,w,c
 15112   00283A  B4D8               	btfsc	status,2,c
 15113   00283C  D01F               	goto	i2u893_40
 15114   00283E  D7F6               	goto	i2l7387
 15115   002840                     i2l7391:
 15116   002840  5035               	movf	i2___ftadd@exp1^0,w,c
 15117   002842  5C34               	subwf	i2___ftadd@exp2^0,w,c
 15118   002844  B0D8               	btfsc	status,0,c
 15119   002846  D01A               	goto	i2u893_40
 15120   002848                     i2u890_40:
 15121   002848  90D8               	bcf	status,0,c
 15122   00284A  362A               	rlcf	i2___ftadd@f1^0,f,c
 15123   00284C  362B               	rlcf	(i2___ftadd@f1+1)^0,f,c
 15124   00284E  362C               	rlcf	(i2___ftadd@f1+2)^0,f,c
 15125   002850  0635               	decf	i2___ftadd@exp1^0,f,c
 15126   002852  5035               	movf	i2___ftadd@exp1^0,w,c
 15127   002854  1834               	xorwf	i2___ftadd@exp2^0,w,c
 15128   002856  B4D8               	btfsc	status,2,c
 15129   002858  D00D               	goto	i2l7401
 15130   00285A  0633               	decf	i2___ftadd@sign^0,f,c
 15131   00285C  C033  F030         	movff	i2___ftadd@sign,??i2___ftadd
 15132   002860  0E07               	movlw	7
 15133   002862  1630               	andwf	??i2___ftadd^0,f,c
 15134   002864  B4D8               	btfsc	status,2,c
 15135   002866  D006               	goto	i2l7401
 15136   002868  D7EF               	goto	i2u890_40
 15137   00286A                     i2l7399:
 15138   00286A  90D8               	bcf	status,0,c
 15139   00286C  322F               	rrcf	(i2___ftadd@f2+2)^0,f,c
 15140   00286E  322E               	rrcf	(i2___ftadd@f2+1)^0,f,c
 15141   002870  322D               	rrcf	i2___ftadd@f2^0,f,c
 15142   002872  2A34               	incf	i2___ftadd@exp2^0,f,c
 15143   002874                     i2l7401:
 15144   002874  5034               	movf	i2___ftadd@exp2^0,w,c
 15145   002876  1835               	xorwf	i2___ftadd@exp1^0,w,c
 15146   002878  A4D8               	btfss	status,2,c
 15147   00287A  D7F7               	goto	i2l7399
 15148   00287C                     i2u893_40:
 15149   00287C  AE33               	btfss	i2___ftadd@sign^0,7,c
 15150   00287E  D00C               	goto	i2l828
 15151   002880  0EFF               	movlw	255
 15152   002882  1A2A               	xorwf	i2___ftadd@f1^0,f,c
 15153   002884  0EFF               	movlw	255
 15154   002886  1A2B               	xorwf	(i2___ftadd@f1+1)^0,f,c
 15155   002888  0EFF               	movlw	255
 15156   00288A  1A2C               	xorwf	(i2___ftadd@f1+2)^0,f,c
 15157   00288C  0E01               	movlw	1
 15158   00288E  262A               	addwf	i2___ftadd@f1^0,f,c
 15159   002890  0E00               	movlw	0
 15160   002892  222B               	addwfc	(i2___ftadd@f1+1)^0,f,c
 15161   002894  0E00               	movlw	0
 15162   002896  222C               	addwfc	(i2___ftadd@f1+2)^0,f,c
 15163   002898                     i2l828:
 15164   002898  AC33               	btfss	i2___ftadd@sign^0,6,c
 15165   00289A  D00C               	goto	i2l7407
 15166   00289C  0EFF               	movlw	255
 15167   00289E  1A2D               	xorwf	i2___ftadd@f2^0,f,c
 15168   0028A0  0EFF               	movlw	255
 15169   0028A2  1A2E               	xorwf	(i2___ftadd@f2+1)^0,f,c
 15170   0028A4  0EFF               	movlw	255
 15171   0028A6  1A2F               	xorwf	(i2___ftadd@f2+2)^0,f,c
 15172   0028A8  0E01               	movlw	1
 15173   0028AA  262D               	addwf	i2___ftadd@f2^0,f,c
 15174   0028AC  0E00               	movlw	0
 15175   0028AE  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 15176   0028B0  0E00               	movlw	0
 15177   0028B2  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 15178   0028B4                     i2l7407:
 15179   0028B4  0E00               	movlw	0
 15180   0028B6  6E33               	movwf	i2___ftadd@sign^0,c
 15181   0028B8  502A               	movf	i2___ftadd@f1^0,w,c
 15182   0028BA  262D               	addwf	i2___ftadd@f2^0,f,c
 15183   0028BC  502B               	movf	(i2___ftadd@f1+1)^0,w,c
 15184   0028BE  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 15185   0028C0  502C               	movf	(i2___ftadd@f1+2)^0,w,c
 15186   0028C2  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 15187   0028C4  AE2F               	btfss	(i2___ftadd@f2+2)^0,7,c
 15188   0028C6  D00E               	goto	i2l7417
 15189   0028C8  0EFF               	movlw	255
 15190   0028CA  1A2D               	xorwf	i2___ftadd@f2^0,f,c
 15191   0028CC  0EFF               	movlw	255
 15192   0028CE  1A2E               	xorwf	(i2___ftadd@f2+1)^0,f,c
 15193   0028D0  0EFF               	movlw	255
 15194   0028D2  1A2F               	xorwf	(i2___ftadd@f2+2)^0,f,c
 15195   0028D4  0E01               	movlw	1
 15196   0028D6  262D               	addwf	i2___ftadd@f2^0,f,c
 15197   0028D8  0E00               	movlw	0
 15198   0028DA  222E               	addwfc	(i2___ftadd@f2+1)^0,f,c
 15199   0028DC  0E00               	movlw	0
 15200   0028DE  222F               	addwfc	(i2___ftadd@f2+2)^0,f,c
 15201   0028E0  0E01               	movlw	1
 15202   0028E2  6E33               	movwf	i2___ftadd@sign^0,c
 15203   0028E4                     i2l7417:
 15204   0028E4  C02D  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 15205   0028E8  C02E  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 15206   0028EC  C02F  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 15207   0028F0  C035  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 15208   0028F4  C033  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 15209   0028F8  EC0A  F019         	call	i2___ftpack	;wreg free
 15210   0028FC  C001  F02A         	movff	?i2___ftpack,?i2___ftadd
 15211   002900  C002  F02B         	movff	?i2___ftpack+1,?i2___ftadd+1
 15212   002904  C003  F02C         	movff	?i2___ftpack+2,?i2___ftadd+2
 15213   002908  0012               	return		;funcret
 15214   00290A                     __end_ofi2___ftadd:
 15215                           	callstack 0
 15216                           
 15217 ;; *************** function i2___ftpack *****************
 15218 ;; Defined at:
 15219 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
 15220 ;; Parameters:    Size  Location     Type
 15221 ;;  arg             3    0[COMRAM] unsigned um
 15222 ;;  exp             1    3[COMRAM] unsigned char 
 15223 ;;  sign            1    4[COMRAM] unsigned char 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  3    0[COMRAM] float 
 15228 ;; Registers used:
 15229 ;;		wreg, status,2, status,0
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15235 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15237 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15239 ;;Total ram usage:        8 bytes
 15240 ;; Hardware stack levels used: 1
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		i2___ftadd
 15245 ;;		i2___ftmul
 15246 ;;		i2___lltoft
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text76
 15251   003214                     __ptext76:
 15252                           	callstack 0
 15253   003214                     i2___ftpack:
 15254                           	callstack 16
 15255                           
 15256                           ;incstack = 0
 15257   003214  5004               	movf	i2___ftpack@exp^0,w,c
 15258   003216  B4D8               	btfsc	status,2,c
 15259   003218  D005               	goto	i2u814_40
 15260   00321A  5001               	movf	i2___ftpack@arg^0,w,c
 15261   00321C  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
 15262   00321E  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
 15263   003220  A4D8               	btfss	status,2,c
 15264   003222  D00C               	goto	i2l6987
 15265   003224                     i2u814_40:
 15266   003224  0E00               	movlw	0
 15267   003226  6E01               	movwf	?i2___ftpack^0,c
 15268   003228  0E00               	movlw	0
 15269   00322A  6E02               	movwf	(?i2___ftpack+1)^0,c
 15270   00322C  0E00               	movlw	0
 15271   00322E  6E03               	movwf	(?i2___ftpack+2)^0,c
 15272   003230  0012               	return	
 15273   003232                     i2l6985:
 15274   003232  2A04               	incf	i2___ftpack@exp^0,f,c
 15275   003234  90D8               	bcf	status,0,c
 15276   003236  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 15277   003238  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 15278   00323A  3201               	rrcf	i2___ftpack@arg^0,f,c
 15279   00323C                     i2l6987:
 15280   00323C  0E00               	movlw	0
 15281   00323E  1401               	andwf	i2___ftpack@arg^0,w,c
 15282   003240  6E06               	movwf	??i2___ftpack^0,c
 15283   003242  0E00               	movlw	0
 15284   003244  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 15285   003246  6E07               	movwf	(??i2___ftpack+1)^0,c
 15286   003248  0EFE               	movlw	254
 15287   00324A  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 15288   00324C  6E08               	movwf	(??i2___ftpack+2)^0,c
 15289   00324E  5006               	movf	??i2___ftpack^0,w,c
 15290   003250  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 15291   003252  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 15292   003254  B4D8               	btfsc	status,2,c
 15293   003256  D00C               	goto	i2l6993
 15294   003258  D7EC               	goto	i2l6985
 15295   00325A                     i2l6989:
 15296   00325A  2A04               	incf	i2___ftpack@exp^0,f,c
 15297   00325C  0E01               	movlw	1
 15298   00325E  2601               	addwf	i2___ftpack@arg^0,f,c
 15299   003260  0E00               	movlw	0
 15300   003262  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
 15301   003264  0E00               	movlw	0
 15302   003266  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
 15303   003268  90D8               	bcf	status,0,c
 15304   00326A  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 15305   00326C  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 15306   00326E  3201               	rrcf	i2___ftpack@arg^0,f,c
 15307   003270                     i2l6993:
 15308   003270  0E00               	movlw	0
 15309   003272  1401               	andwf	i2___ftpack@arg^0,w,c
 15310   003274  6E06               	movwf	??i2___ftpack^0,c
 15311   003276  0E00               	movlw	0
 15312   003278  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 15313   00327A  6E07               	movwf	(??i2___ftpack+1)^0,c
 15314   00327C  0EFF               	movlw	255
 15315   00327E  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 15316   003280  6E08               	movwf	(??i2___ftpack+2)^0,c
 15317   003282  5006               	movf	??i2___ftpack^0,w,c
 15318   003284  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 15319   003286  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 15320   003288  B4D8               	btfsc	status,2,c
 15321   00328A  D006               	goto	i2l6997
 15322   00328C  D7E6               	goto	i2l6989
 15323   00328E                     i2l6995:
 15324   00328E  0604               	decf	i2___ftpack@exp^0,f,c
 15325   003290  90D8               	bcf	status,0,c
 15326   003292  3601               	rlcf	i2___ftpack@arg^0,f,c
 15327   003294  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
 15328   003296  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
 15329   003298                     i2l6997:
 15330   003298  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
 15331   00329A  D003               	goto	i2u818_40
 15332   00329C  0E02               	movlw	2
 15333   00329E  6004               	cpfslt	i2___ftpack@exp^0,c
 15334   0032A0  D7F6               	goto	i2l6995
 15335   0032A2                     i2u818_40:
 15336   0032A2  A004               	btfss	i2___ftpack@exp^0,0,c
 15337   0032A4  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
 15338   0032A6  90D8               	bcf	status,0,c
 15339   0032A8  3204               	rrcf	i2___ftpack@exp^0,f,c
 15340   0032AA  5004               	movf	i2___ftpack@exp^0,w,c
 15341   0032AC  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
 15342   0032AE  5005               	movf	i2___ftpack@sign^0,w,c
 15343   0032B0  A4D8               	btfss	status,2,c
 15344   0032B2  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
 15345   0032B4  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 15346   0032B8  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 15347   0032BC  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 15348   0032C0  0012               	return		;funcret
 15349   0032C2                     __end_ofi2___ftpack:
 15350                           	callstack 0
 15351                           
 15352 ;; *************** function i2___ftneg *****************
 15353 ;; Defined at:
 15354 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftneg.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;  f1              3    0[COMRAM] float 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  3    0[COMRAM] float 
 15361 ;; Registers used:
 15362 ;;		wreg, status,2, status,0
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15368 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;Total ram usage:        3 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		i2_sprintf
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           	psect	text77
 15382   0044AC                     __ptext77:
 15383                           	callstack 0
 15384   0044AC                     i2___ftneg:
 15385                           	callstack 18
 15386                           
 15387                           ;incstack = 0
 15388   0044AC  5001               	movf	i2___ftneg@f1^0,w,c
 15389   0044AE  1002               	iorwf	(i2___ftneg@f1+1)^0,w,c
 15390   0044B0  1003               	iorwf	(i2___ftneg@f1+2)^0,w,c
 15391   0044B2  B4D8               	btfsc	status,2,c
 15392   0044B4  D006               	goto	i2l878
 15393   0044B6  0E00               	movlw	0
 15394   0044B8  1A01               	xorwf	i2___ftneg@f1^0,f,c
 15395   0044BA  0E00               	movlw	0
 15396   0044BC  1A02               	xorwf	(i2___ftneg@f1+1)^0,f,c
 15397   0044BE  0E80               	movlw	128
 15398   0044C0  1A03               	xorwf	(i2___ftneg@f1+2)^0,f,c
 15399   0044C2                     i2l878:
 15400   0044C2  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 15401   0044C6  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 15402   0044CA  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 15403   0044CE  0012               	return		;funcret
 15404   0044D0                     __end_ofi2___ftneg:
 15405                           	callstack 0
 15406                           
 15407 ;; *************** function i2___ftge *****************
 15408 ;; Defined at:
 15409 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
 15410 ;; Parameters:    Size  Location     Type
 15411 ;;  ff1             3    0[COMRAM] float 
 15412 ;;  ff2             3    3[COMRAM] float 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;		None
 15415 ;; Return value:  Size  Location     Type
 15416 ;;		None               void
 15417 ;; Registers used:
 15418 ;;		wreg, status,2, status,0
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15424 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15427 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15428 ;;Total ram usage:        9 bytes
 15429 ;; Hardware stack levels used: 1
 15430 ;; This function calls:
 15431 ;;		Nothing
 15432 ;; This function is called by:
 15433 ;;		i2_sprintf
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           	psect	text78
 15438   003938                     __ptext78:
 15439                           	callstack 0
 15440   003938                     i2___ftge:
 15441                           	callstack 18
 15442                           
 15443                           ;incstack = 0
 15444   003938  AE03               	btfss	(i2___ftge@ff1+2)^0,7,c
 15445   00393A  D00F               	goto	i2l8051
 15446   00393C  0E00               	movlw	0
 15447   00393E  6E07               	movwf	??i2___ftge^0,c
 15448   003940  0E00               	movlw	0
 15449   003942  6E08               	movwf	(??i2___ftge+1)^0,c
 15450   003944  0E80               	movlw	128
 15451   003946  6E09               	movwf	(??i2___ftge+2)^0,c
 15452   003948  5001               	movf	i2___ftge@ff1^0,w,c
 15453   00394A  5C07               	subwf	??i2___ftge^0,w,c
 15454   00394C  6E01               	movwf	i2___ftge@ff1^0,c
 15455   00394E  5002               	movf	(i2___ftge@ff1+1)^0,w,c
 15456   003950  5808               	subwfb	(??i2___ftge+1)^0,w,c
 15457   003952  6E02               	movwf	(i2___ftge@ff1+1)^0,c
 15458   003954  5003               	movf	(i2___ftge@ff1+2)^0,w,c
 15459   003956  5809               	subwfb	(??i2___ftge+2)^0,w,c
 15460   003958  6E03               	movwf	(i2___ftge@ff1+2)^0,c
 15461   00395A                     i2l8051:
 15462   00395A  AE06               	btfss	(i2___ftge@ff2+2)^0,7,c
 15463   00395C  D00F               	goto	i2l8055
 15464   00395E  0E00               	movlw	0
 15465   003960  6E07               	movwf	??i2___ftge^0,c
 15466   003962  0E00               	movlw	0
 15467   003964  6E08               	movwf	(??i2___ftge+1)^0,c
 15468   003966  0E80               	movlw	128
 15469   003968  6E09               	movwf	(??i2___ftge+2)^0,c
 15470   00396A  5004               	movf	i2___ftge@ff2^0,w,c
 15471   00396C  5C07               	subwf	??i2___ftge^0,w,c
 15472   00396E  6E04               	movwf	i2___ftge@ff2^0,c
 15473   003970  5005               	movf	(i2___ftge@ff2+1)^0,w,c
 15474   003972  5808               	subwfb	(??i2___ftge+1)^0,w,c
 15475   003974  6E05               	movwf	(i2___ftge@ff2+1)^0,c
 15476   003976  5006               	movf	(i2___ftge@ff2+2)^0,w,c
 15477   003978  5809               	subwfb	(??i2___ftge+2)^0,w,c
 15478   00397A  6E06               	movwf	(i2___ftge@ff2+2)^0,c
 15479   00397C                     i2l8055:
 15480   00397C  0E00               	movlw	0
 15481   00397E  1A01               	xorwf	i2___ftge@ff1^0,f,c
 15482   003980  0E00               	movlw	0
 15483   003982  1A02               	xorwf	(i2___ftge@ff1+1)^0,f,c
 15484   003984  0E80               	movlw	128
 15485   003986  1A03               	xorwf	(i2___ftge@ff1+2)^0,f,c
 15486   003988  0E00               	movlw	0
 15487   00398A  1A04               	xorwf	i2___ftge@ff2^0,f,c
 15488   00398C  0E00               	movlw	0
 15489   00398E  1A05               	xorwf	(i2___ftge@ff2+1)^0,f,c
 15490   003990  0E80               	movlw	128
 15491   003992  1A06               	xorwf	(i2___ftge@ff2+2)^0,f,c
 15492   003994  5004               	movf	i2___ftge@ff2^0,w,c
 15493   003996  5C01               	subwf	i2___ftge@ff1^0,w,c
 15494   003998  5005               	movf	(i2___ftge@ff2+1)^0,w,c
 15495   00399A  5802               	subwfb	(i2___ftge@ff1+1)^0,w,c
 15496   00399C  5006               	movf	(i2___ftge@ff2+2)^0,w,c
 15497   00399E  5803               	subwfb	(i2___ftge@ff1+2)^0,w,c
 15498   0039A0  B0D8               	btfsc	status,0,c
 15499   0039A2  D002               	goto	i2l8061
 15500   0039A4  90D8               	bcf	status,0,c
 15501   0039A6  0012               	return	
 15502   0039A8                     i2l8061:
 15503   0039A8  80D8               	bsf	status,0,c
 15504   0039AA  0012               	return		;funcret
 15505   0039AC                     __end_ofi2___ftge:
 15506                           	callstack 0
 15507                           
 15508 ;; *************** function i2_lcd_puts *****************
 15509 ;; Defined at:
 15510 ;;		line 120 in file "lcd_x8.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;  s               2   14[COMRAM] PTR unsigned char 
 15513 ;;		 -> i2updete_lcd_AN@Buffer(16), i2update_lcd_setup@Buffer(16), i2update_lcd_timer@Buffer(16), i2update_lcd_COOLER@Bu
      +ffer(16), 
 15514 ;;		 -> i2update_lcd_temp@Buffer(16), lcd_welcome@Buffer(16), updete_lcd_AN@Buffer(16), update_lcd_setup@Buffer(16), 
 15515 ;;		 -> update_lcd_timer@Buffer(16), update_lcd_COOLER@Buffer(16), update_lcd_temp@Buffer(16), 
 15516 ;; Auto vars:     Size  Location     Type
 15517 ;;		None
 15518 ;; Return value:  Size  Location     Type
 15519 ;;                  1    wreg      void 
 15520 ;; Registers used:
 15521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15522 ;; Tracked objects:
 15523 ;;		On entry : 0/0
 15524 ;;		On exit  : 0/0
 15525 ;;		Unchanged: 0/0
 15526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15531 ;;Total ram usage:        2 bytes
 15532 ;; Hardware stack levels used: 1
 15533 ;; Hardware stack levels required when called: 5
 15534 ;; This function calls:
 15535 ;;		i2_lcd_putc
 15536 ;; This function is called by:
 15537 ;;		i2_update_lcd_temp
 15538 ;;		i2_update_lcd_COOLER
 15539 ;;		i2_update_lcd_timer
 15540 ;;		i2_update_lcd_setup
 15541 ;;		i2_updete_lcd_AN
 15542 ;; This function uses a non-reentrant model
 15543 ;;
 15544                           
 15545                           	psect	text79
 15546   0044D0                     __ptext79:
 15547                           	callstack 0
 15548   0044D0                     i2_lcd_puts:
 15549                           	callstack 14
 15550                           
 15551                           ;lcd_x8.c: 121: while (*s) {
 15552                           
 15553                           ;incstack = 0
 15554   0044D0  D009               	goto	i2l8593
 15555   0044D2                     i2l8589:
 15556                           
 15557                           ;lcd_x8.c: 122: lcd_putc(*s);
 15558   0044D2  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 15559   0044D6  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 15560   0044DA  50DF               	movf	indf2,w,c
 15561   0044DC  ECFA  F01E         	call	i2_lcd_putc
 15562                           
 15563                           ;lcd_x8.c: 123: s++;
 15564   0044E0  4A0F               	infsnz	i2lcd_puts@s^0,f,c
 15565   0044E2  2A10               	incf	(i2lcd_puts@s+1)^0,f,c
 15566   0044E4                     i2l8593:
 15567   0044E4  C00F  FFD9         	movff	i2lcd_puts@s,fsr2l
 15568   0044E8  C010  FFDA         	movff	i2lcd_puts@s+1,fsr2h
 15569   0044EC  50DF               	movf	indf2,w,c
 15570   0044EE  B4D8               	btfsc	status,2,c
 15571   0044F0  0012               	return	
 15572   0044F2  D7EF               	goto	i2l8589
 15573   0044F4                     __end_ofi2_lcd_puts:
 15574                           	callstack 0
 15575                           
 15576 ;; *************** function i2_lcd_putc *****************
 15577 ;; Defined at:
 15578 ;;		line 106 in file "lcd_x8.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  c               1    wreg     unsigned char 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  c               1   13[COMRAM] unsigned char 
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  1    wreg      void 
 15585 ;; Registers used:
 15586 ;;		wreg, status,2, status,0, cstack
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/0
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15596 ;;Total ram usage:        1 bytes
 15597 ;; Hardware stack levels used: 1
 15598 ;; Hardware stack levels required when called: 4
 15599 ;; This function calls:
 15600 ;;		i2_delay_ms
 15601 ;;		i2_lcd_gotoxy
 15602 ;;		i2_lcd_send_byte
 15603 ;; This function is called by:
 15604 ;;		i2_lcd_puts
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           	psect	text80
 15609   003DF4                     __ptext80:
 15610                           	callstack 0
 15611   003DF4                     i2_lcd_putc:
 15612                           	callstack 14
 15613                           
 15614                           ;incstack = 0
 15615                           ;i2lcd_putc@c stored from wreg
 15616   003DF4  6E0E               	movwf	i2lcd_putc@c^0,c
 15617                           
 15618                           ;lcd_x8.c: 107: switch (c) {
 15619   003DF6  D01E               	goto	i2l7841
 15620   003DF8                     i2l7831:
 15621   003DF8  0E01               	movlw	1
 15622   003DFA  6E09               	movwf	i2lcd_send_byte@n^0,c
 15623   003DFC  0E00               	movlw	0
 15624   003DFE  EC9A  F01F         	call	i2_lcd_send_byte
 15625                           
 15626                           ;lcd_x8.c: 109: delay_ms(2);
 15627   003E02  0E00               	movlw	0
 15628   003E04  6E02               	movwf	(i2delay_ms@n+1)^0,c
 15629   003E06  0E02               	movlw	2
 15630   003E08  6E01               	movwf	i2delay_ms@n^0,c
 15631   003E0A  EC43  F022         	call	i2_delay_ms	;wreg free
 15632                           
 15633                           ;lcd_x8.c: 110: break;
 15634   003E0E  0012               	return	
 15635   003E10                     i2l7833:
 15636   003E10  0E02               	movlw	2
 15637   003E12  6E0B               	movwf	i2lcd_gotoxy@y^0,c
 15638   003E14  0E01               	movlw	1
 15639   003E16  EC01  F020         	call	i2_lcd_gotoxy
 15640                           
 15641                           ;lcd_x8.c: 112: break;
 15642   003E1A  0012               	return	
 15643   003E1C                     i2l7835:
 15644   003E1C  0E10               	movlw	16
 15645   003E1E  6E09               	movwf	i2lcd_send_byte@n^0,c
 15646   003E20  0E00               	movlw	0
 15647   003E22  EC9A  F01F         	call	i2_lcd_send_byte
 15648                           
 15649                           ;lcd_x8.c: 114: break;
 15650   003E26  0012               	return	
 15651   003E28                     i2l7837:
 15652   003E28  C00E  F009         	movff	i2lcd_putc@c,i2lcd_send_byte@n
 15653   003E2C  0E01               	movlw	1
 15654   003E2E  EC9A  F01F         	call	i2_lcd_send_byte
 15655                           
 15656                           ;lcd_x8.c: 116: break;
 15657   003E32  0012               	return	
 15658   003E34                     i2l7841:
 15659   003E34  500E               	movf	i2lcd_putc@c^0,w,c
 15660                           
 15661                           ; Switch size 1, requested type "simple"
 15662                           ; Number of cases is 3, Range of values is 8 to 12
 15663                           ; switch strategies available:
 15664                           ; Name         Instructions Cycles
 15665                           ; simple_byte           10     6 (average)
 15666                           ;	Chosen strategy is simple_byte
 15667   003E36  0A08               	xorlw	8	; case 8
 15668   003E38  B4D8               	btfsc	status,2,c
 15669   003E3A  D7F0               	goto	i2l7835
 15670   003E3C  0A02               	xorlw	2	; case 10
 15671   003E3E  B4D8               	btfsc	status,2,c
 15672   003E40  D7E7               	goto	i2l7833
 15673   003E42  0A06               	xorlw	6	; case 12
 15674   003E44  B4D8               	btfsc	status,2,c
 15675   003E46  D7D8               	goto	i2l7831
 15676   003E48  D7EF               	goto	i2l7837
 15677   003E4A                     __end_ofi2_lcd_putc:
 15678                           	callstack 0
 15679                           
 15680 ;; *************** function i2_lcd_gotoxy *****************
 15681 ;; Defined at:
 15682 ;;		line 89 in file "lcd_x8.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;  x               1    wreg     unsigned char 
 15685 ;;  y               1   10[COMRAM] unsigned char 
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;  x               1   11[COMRAM] unsigned char 
 15688 ;;  address         1   12[COMRAM] unsigned char 
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		wreg, status,2, status,0, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15702 ;;Total ram usage:        3 bytes
 15703 ;; Hardware stack levels used: 1
 15704 ;; Hardware stack levels required when called: 3
 15705 ;; This function calls:
 15706 ;;		i2_lcd_send_byte
 15707 ;; This function is called by:
 15708 ;;		i2_update_lcd_temp
 15709 ;;		i2_update_lcd_COOLER
 15710 ;;		i2_update_lcd_timer
 15711 ;;		i2_update_lcd_setup
 15712 ;;		i2_updete_lcd_AN
 15713 ;;		i2_lcd_putc
 15714 ;; This function uses a non-reentrant model
 15715 ;;
 15716                           
 15717                           	psect	text81
 15718   004002                     __ptext81:
 15719                           	callstack 0
 15720   004002                     i2_lcd_gotoxy:
 15721                           	callstack 14
 15722                           
 15723                           ;incstack = 0
 15724                           ;i2lcd_gotoxy@x stored from wreg
 15725   004002  6E0C               	movwf	i2lcd_gotoxy@x^0,c
 15726                           
 15727                           ;lcd_x8.c: 90: unsigned char address;;lcd_x8.c: 92: switch (y) {
 15728   004004  D009               	goto	i2l7265
 15729   004006                     i2l7255:
 15730   004006  0E80               	movlw	128
 15731   004008  D005               	goto	L14
 15732   00400A                     i2l7257:
 15733   00400A  0EC0               	movlw	192
 15734   00400C  D003               	goto	L14
 15735   00400E                     i2l7259:
 15736   00400E  0E90               	movlw	144
 15737   004010  D001               	goto	L14
 15738   004012                     i2l7261:
 15739   004012  0ED0               	movlw	208
 15740   004014                     L14:
 15741   004014  6E0D               	movwf	i2lcd_gotoxy@address^0,c
 15742                           
 15743                           ;lcd_x8.c: 100: break;
 15744   004016  D00D               	goto	i2l7267
 15745   004018                     i2l7265:
 15746   004018  500B               	movf	i2lcd_gotoxy@y^0,w,c
 15747                           
 15748                           ; Switch size 1, requested type "simple"
 15749                           ; Number of cases is 4, Range of values is 1 to 4
 15750                           ; switch strategies available:
 15751                           ; Name         Instructions Cycles
 15752                           ; simple_byte           13     7 (average)
 15753                           ;	Chosen strategy is simple_byte
 15754   00401A  0A01               	xorlw	1	; case 1
 15755   00401C  B4D8               	btfsc	status,2,c
 15756   00401E  D7F3               	goto	i2l7255
 15757   004020  0A03               	xorlw	3	; case 2
 15758   004022  B4D8               	btfsc	status,2,c
 15759   004024  D7F2               	goto	i2l7257
 15760   004026  0A01               	xorlw	1	; case 3
 15761   004028  B4D8               	btfsc	status,2,c
 15762   00402A  D7F1               	goto	i2l7259
 15763   00402C  0A07               	xorlw	7	; case 4
 15764   00402E  B4D8               	btfsc	status,2,c
 15765   004030  D7F0               	goto	i2l7261
 15766   004032                     i2l7267:
 15767                           
 15768                           ;lcd_x8.c: 102: address += x - 1;
 15769   004032  040C               	decf	i2lcd_gotoxy@x^0,w,c
 15770   004034  260D               	addwf	i2lcd_gotoxy@address^0,f,c
 15771                           
 15772                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
 15773   004036  500D               	movf	i2lcd_gotoxy@address^0,w,c
 15774   004038  0980               	iorlw	128
 15775   00403A  6E09               	movwf	i2lcd_send_byte@n^0,c
 15776   00403C  0E00               	movlw	0
 15777   00403E  EC9A  F01F         	call	i2_lcd_send_byte
 15778   004042  0012               	return		;funcret
 15779   004044                     __end_ofi2_lcd_gotoxy:
 15780                           	callstack 0
 15781                           
 15782 ;; *************** function i2_lcd_send_byte *****************
 15783 ;; Defined at:
 15784 ;;		line 39 in file "lcd_x8.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;  cm_data         1    wreg     unsigned char 
 15787 ;;  n               1    8[COMRAM] unsigned char 
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;  cm_data         1    9[COMRAM] unsigned char 
 15790 ;; Return value:  Size  Location     Type
 15791 ;;                  1    wreg      void 
 15792 ;; Registers used:
 15793 ;;		wreg, status,2, status,0, cstack
 15794 ;; Tracked objects:
 15795 ;;		On entry : 0/0
 15796 ;;		On exit  : 0/0
 15797 ;;		Unchanged: 0/0
 15798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15799 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;Total ram usage:        2 bytes
 15804 ;; Hardware stack levels used: 1
 15805 ;; Hardware stack levels required when called: 2
 15806 ;; This function calls:
 15807 ;;		i2_delay_cycles
 15808 ;;		i2_delay_ms
 15809 ;;		i2_lcd_send_nibble
 15810 ;; This function is called by:
 15811 ;;		i2_lcd_gotoxy
 15812 ;;		i2_lcd_putc
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           	psect	text82
 15817   003F34                     __ptext82:
 15818                           	callstack 0
 15819   003F34                     i2_lcd_send_byte:
 15820                           	callstack 15
 15821                           
 15822                           ;incstack = 0
 15823                           ;i2lcd_send_byte@cm_data stored from wreg
 15824   003F34  6E0A               	movwf	i2lcd_send_byte@cm_data^0,c
 15825                           
 15826                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 15827   003F36  B00A               	btfsc	i2lcd_send_byte@cm_data^0,0,c
 15828   003F38  D002               	bra	i2u811_45
 15829   003F3A  9484               	bcf	132,2,c	;volatile
 15830   003F3C  D001               	bra	i2u811_46
 15831   003F3E                     i2u811_45:
 15832   003F3E  8484               	bsf	132,2,c	;volatile
 15833   003F40                     i2u811_46:
 15834                           
 15835                           ;lcd_x8.c: 44: delay_cycles(1);
 15836   003F40  0E01               	movlw	1
 15837   003F42  EC62  F021         	call	i2_delay_cycles
 15838                           
 15839                           ;lcd_x8.c: 46: delay_cycles(1);
 15840   003F46  0E01               	movlw	1
 15841   003F48  EC62  F021         	call	i2_delay_cycles
 15842                           
 15843                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 15844   003F4C  9284               	bcf	132,1,c	;volatile
 15845                           
 15846                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 15847   003F4E  3809               	swapf	i2lcd_send_byte@n^0,w,c
 15848   003F50  0B0F               	andlw	15
 15849   003F52  EC8B  F022         	call	i2_lcd_send_nibble
 15850                           
 15851                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 15852   003F56  5009               	movf	i2lcd_send_byte@n^0,w,c
 15853   003F58  0B0F               	andlw	15
 15854   003F5A  EC8B  F022         	call	i2_lcd_send_nibble
 15855                           
 15856                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 15857   003F5E  500A               	movf	i2lcd_send_byte@cm_data^0,w,c
 15858   003F60  B4D8               	btfsc	status,2,c
 15859   003F62  D005               	goto	i2l6975
 15860   003F64  0E32               	movlw	50
 15861   003F66                     i2u1179_47:
 15862   003F66  0004               	clrwdt	
 15863   003F68  2EE8               	decfsz	wreg,f,c
 15864   003F6A  D7FD               	bra	i2u1179_47
 15865   003F6C  0012               	return	
 15866   003F6E                     i2l6975:
 15867                           
 15868                           ;lcd_x8.c: 51: else;lcd_x8.c: 52: delay_ms(2);
 15869   003F6E  0E00               	movlw	0
 15870   003F70  6E02               	movwf	(i2delay_ms@n+1)^0,c
 15871   003F72  0E02               	movlw	2
 15872   003F74  6E01               	movwf	i2delay_ms@n^0,c
 15873   003F76  EC43  F022         	call	i2_delay_ms	;wreg free
 15874   003F7A  0012               	return		;funcret
 15875   003F7C                     __end_ofi2_lcd_send_byte:
 15876                           	callstack 0
 15877                           
 15878 ;; *************** function i2_lcd_send_nibble *****************
 15879 ;; Defined at:
 15880 ;;		line 29 in file "lcd_x8.c"
 15881 ;; Parameters:    Size  Location     Type
 15882 ;;  n               1    wreg     unsigned char 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;  n               1    7[COMRAM] unsigned char 
 15885 ;; Return value:  Size  Location     Type
 15886 ;;                  1    wreg      void 
 15887 ;; Registers used:
 15888 ;;		wreg, status,2, status,0, cstack
 15889 ;; Tracked objects:
 15890 ;;		On entry : 0/0
 15891 ;;		On exit  : 0/0
 15892 ;;		Unchanged: 0/0
 15893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15898 ;;Total ram usage:        2 bytes
 15899 ;; Hardware stack levels used: 1
 15900 ;; Hardware stack levels required when called: 1
 15901 ;; This function calls:
 15902 ;;		i2_delay_cycles
 15903 ;; This function is called by:
 15904 ;;		i2_lcd_send_byte
 15905 ;; This function uses a non-reentrant model
 15906 ;;
 15907                           
 15908                           	psect	text83
 15909   004516                     __ptext83:
 15910                           	callstack 0
 15911   004516                     i2_lcd_send_nibble:
 15912                           	callstack 15
 15913                           
 15914                           ;incstack = 0
 15915                           ;i2lcd_send_nibble@n stored from wreg
 15916   004516  6E08               	movwf	i2lcd_send_nibble@n^0,c
 15917                           
 15918                           ;lcd_x8.c: 31: lcd.data = n;
 15919   004518  C008  F007         	movff	i2lcd_send_nibble@n,??i2_lcd_send_nibble
 15920   00451C  3A07               	swapf	??i2_lcd_send_nibble^0,f,c
 15921   00451E  5083               	movf	131,w,c
 15922   004520  1807               	xorwf	??i2_lcd_send_nibble^0,w,c
 15923   004522  0B0F               	andlw	-241
 15924   004524  1807               	xorwf	??i2_lcd_send_nibble^0,w,c
 15925   004526  6E83               	movwf	131,c
 15926                           
 15927                           ;lcd_x8.c: 33: delay_cycles(1);
 15928   004528  0E01               	movlw	1
 15929   00452A  EC62  F021         	call	i2_delay_cycles
 15930                           
 15931                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 15932   00452E  8284               	bsf	132,1,c	;volatile
 15933                           
 15934                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 15935   004530  0004               	clrwdt	
 15936   004532  F000               	nop		;2 cycle nop
 15937                           
 15938                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 15939   004534  9284               	bcf	132,1,c	;volatile
 15940   004536  0012               	return		;funcret
 15941   004538                     __end_ofi2_lcd_send_nibble:
 15942                           	callstack 0
 15943                           
 15944 ;; *************** function i2_delay_cycles *****************
 15945 ;; Defined at:
 15946 ;;		line 20 in file "lcd_x8.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;  n               1    wreg     unsigned char 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  n               1    3[COMRAM] unsigned char 
 15951 ;;  x               2    4[COMRAM] int 
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      void 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2, status,0
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;Total ram usage:        6 bytes
 15966 ;; Hardware stack levels used: 1
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		i2_lcd_send_nibble
 15971 ;;		i2_lcd_send_byte
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	text84
 15976   0042C4                     __ptext84:
 15977                           	callstack 0
 15978   0042C4                     i2_delay_cycles:
 15979                           	callstack 15
 15980                           
 15981                           ;incstack = 0
 15982                           ;i2delay_cycles@n stored from wreg
 15983   0042C4  6E04               	movwf	i2delay_cycles@n^0,c
 15984                           
 15985                           ;lcd_x8.c: 21: int x;;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 15986   0042C6  0E00               	movlw	0
 15987   0042C8  6E06               	movwf	(i2delay_cycles@x+1)^0,c
 15988   0042CA  0E00               	movlw	0
 15989   0042CC  6E05               	movwf	i2delay_cycles@x^0,c
 15990   0042CE  D003               	goto	i2l6905
 15991   0042D0                     i2l280:
 15992   0042D0  0004               	clrwdt		;# 
 15993   0042D2  4A05               	infsnz	i2delay_cycles@x^0,f,c
 15994   0042D4  2A06               	incf	(i2delay_cycles@x+1)^0,f,c
 15995   0042D6                     i2l6905:
 15996   0042D6  5004               	movf	i2delay_cycles@n^0,w,c
 15997   0042D8  6E01               	movwf	??i2_delay_cycles^0,c
 15998   0042DA  6A02               	clrf	(??i2_delay_cycles+1)^0,c
 15999   0042DC  5005               	movf	i2delay_cycles@x^0,w,c
 16000   0042DE  5C01               	subwf	??i2_delay_cycles^0,w,c
 16001   0042E0  5002               	movf	(??i2_delay_cycles+1)^0,w,c
 16002   0042E2  0A80               	xorlw	128
 16003   0042E4  6E03               	movwf	(??i2_delay_cycles+2)^0,c
 16004   0042E6  5006               	movf	(i2delay_cycles@x+1)^0,w,c
 16005   0042E8  0A80               	xorlw	128
 16006   0042EA  5803               	subwfb	(??i2_delay_cycles+2)^0,w,c
 16007   0042EC  A0D8               	btfss	status,0,c
 16008   0042EE  0012               	return	
 16009   0042F0  D7EF               	goto	i2l280
 16010   0042F2                     __end_ofi2_delay_cycles:
 16011                           	callstack 0
 16012                           
 16013 ;; *************** function _set_setup_mode *****************
 16014 ;; Defined at:
 16015 ;;		line 128 in file "Pic_App.c"
 16016 ;; Parameters:    Size  Location     Type
 16017 ;;		None
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;		None
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  1    wreg      void 
 16022 ;; Registers used:
 16023 ;;		wreg, status,2, status,0, cstack
 16024 ;; Tracked objects:
 16025 ;;		On entry : 0/0
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16033 ;;Total ram usage:        0 bytes
 16034 ;; Hardware stack levels used: 1
 16035 ;; Hardware stack levels required when called: 1
 16036 ;; This function calls:
 16037 ;;		i2_delay_ms
 16038 ;; This function is called by:
 16039 ;;		_highIsr
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           	psect	text85
 16044   00434A                     __ptext85:
 16045                           	callstack 0
 16046   00434A                     _set_setup_mode:
 16047                           	callstack 20
 16048                           
 16049                           ;Pic_App.c: 129: INTCON3bits.INT2F = 0;
 16050                           
 16051                           ;incstack = 0
 16052   00434A  92F0               	bcf	240,1,c	;volatile
 16053                           
 16054                           ;Pic_App.c: 130: delay_ms(20);
 16055   00434C  0E00               	movlw	0
 16056   00434E  6E02               	movwf	(i2delay_ms@n+1)^0,c
 16057   004350  0E14               	movlw	20
 16058   004352  6E01               	movwf	i2delay_ms@n^0,c
 16059   004354  EC43  F022         	call	i2_delay_ms	;wreg free
 16060                           
 16061                           ;Pic_App.c: 131: if(PORTBbits.RB2)
 16062   004358  B481               	btfsc	129,2,c	;volatile
 16063   00435A  0012               	return	
 16064                           
 16065                           ;Pic_App.c: 133: if(Setup_Mode == 2)
 16066   00435C  0E02               	movlw	2
 16067   00435E  187B               	xorwf	_Setup_Mode^0,w,c
 16068   004360  107C               	iorwf	(_Setup_Mode+1)^0,w,c
 16069   004362  A4D8               	btfss	status,2,c
 16070   004364  D005               	goto	i2l9197
 16071                           
 16072                           ;Pic_App.c: 134: Setup_Mode = 0;
 16073   004366  0E00               	movlw	0
 16074   004368  6E7C               	movwf	(_Setup_Mode+1)^0,c
 16075   00436A  0E00               	movlw	0
 16076   00436C  6E7B               	movwf	_Setup_Mode^0,c
 16077   00436E  0012               	return	
 16078   004370                     i2l9197:
 16079                           
 16080                           ;Pic_App.c: 135: else;Pic_App.c: 136: Setup_Mode ++;
 16081   004370  4A7B               	infsnz	_Setup_Mode^0,f,c
 16082   004372  2A7C               	incf	(_Setup_Mode+1)^0,f,c
 16083   004374  0012               	return		;funcret
 16084   004376                     __end_of_set_setup_mode:
 16085                           	callstack 0
 16086                           
 16087 ;; *************** function _set_clock_mode *****************
 16088 ;; Defined at:
 16089 ;;		line 118 in file "Pic_App.c"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;		None
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;		None
 16094 ;; Return value:  Size  Location     Type
 16095 ;;                  1    wreg      void 
 16096 ;; Registers used:
 16097 ;;		wreg, status,2, status,0, cstack
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16107 ;;Total ram usage:        0 bytes
 16108 ;; Hardware stack levels used: 1
 16109 ;; Hardware stack levels required when called: 1
 16110 ;; This function calls:
 16111 ;;		i2_delay_ms
 16112 ;; This function is called by:
 16113 ;;		_highIsr
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           	psect	text86
 16118   004294                     __ptext86:
 16119                           	callstack 0
 16120   004294                     _set_clock_mode:
 16121                           	callstack 20
 16122                           
 16123                           ;Pic_App.c: 119: INTCON3bits.INT1F = 0;
 16124                           
 16125                           ;incstack = 0
 16126   004294  90F0               	bcf	240,0,c	;volatile
 16127                           
 16128                           ;Pic_App.c: 120: delay_ms(20);
 16129   004296  0E00               	movlw	0
 16130   004298  6E02               	movwf	(i2delay_ms@n+1)^0,c
 16131   00429A  0E14               	movlw	20
 16132   00429C  6E01               	movwf	i2delay_ms@n^0,c
 16133   00429E  EC43  F022         	call	i2_delay_ms	;wreg free
 16134                           
 16135                           ;Pic_App.c: 121: if(PORTBbits.RB1)
 16136   0042A2  B281               	btfsc	129,1,c	;volatile
 16137   0042A4  0012               	return	
 16138                           
 16139                           ;Pic_App.c: 123: if(Clock_Mode)
 16140   0042A6  0101               	movlb	1	; () banked
 16141   0042A8  517A               	movf	_Clock_Mode& (0+255),w,b
 16142   0042AA  117B               	iorwf	(_Clock_Mode+1)& (0+255),w,b
 16143   0042AC  B4D8               	btfsc	status,2,c
 16144   0042AE  D005               	goto	i2l9183
 16145                           
 16146                           ; BSR set to: 1
 16147                           ;Pic_App.c: 124: Clock_Mode = 0;
 16148   0042B0  0E00               	movlw	0
 16149   0042B2  6F7B               	movwf	(_Clock_Mode+1)& (0+255),b
 16150   0042B4  0E00               	movlw	0
 16151   0042B6  6F7A               	movwf	_Clock_Mode& (0+255),b
 16152   0042B8  0012               	return	
 16153   0042BA                     i2l9183:
 16154                           
 16155                           ; BSR set to: 1
 16156                           ;Pic_App.c: 125: else;Pic_App.c: 126: Clock_Mode = 1;
 16157   0042BA  0E00               	movlw	0
 16158   0042BC  6F7B               	movwf	(_Clock_Mode+1)& (0+255),b
 16159   0042BE  0E01               	movlw	1
 16160   0042C0  6F7A               	movwf	_Clock_Mode& (0+255),b
 16161   0042C2  0012               	return		;funcret
 16162   0042C4                     __end_of_set_clock_mode:
 16163                           	callstack 0
 16164                           
 16165 ;; *************** function i2_delay_ms *****************
 16166 ;; Defined at:
 16167 ;;		line 12 in file "lcd_x8.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;  n               2    0[COMRAM] unsigned int 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  x               2    2[COMRAM] int 
 16172 ;; Return value:  Size  Location     Type
 16173 ;;                  1    wreg      void 
 16174 ;; Registers used:
 16175 ;;		wreg, status,2, status,0
 16176 ;; Tracked objects:
 16177 ;;		On entry : 0/0
 16178 ;;		On exit  : 0/0
 16179 ;;		Unchanged: 0/0
 16180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16184 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16185 ;;Total ram usage:        4 bytes
 16186 ;; Hardware stack levels used: 1
 16187 ;; This function calls:
 16188 ;;		Nothing
 16189 ;; This function is called by:
 16190 ;;		_set_clock_mode
 16191 ;;		_set_setup_mode
 16192 ;;		i2_lcd_send_byte
 16193 ;;		i2_lcd_putc
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           	psect	text87
 16198   004486                     __ptext87:
 16199                           	callstack 0
 16200   004486                     i2_delay_ms:
 16201                           	callstack 16
 16202                           
 16203                           ;lcd_x8.c: 13: int x;;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 16204                           
 16205                           ;incstack = 0
 16206   004486  0E00               	movlw	0
 16207   004488  6E04               	movwf	(i2delay_ms@x+1)^0,c
 16208   00448A  0E00               	movlw	0
 16209   00448C  6E03               	movwf	i2delay_ms@x^0,c
 16210   00448E  D007               	goto	i2l273
 16211   004490                     i2l6909:
 16212                           
 16213                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 16214   004490  0EC8               	movlw	200
 16215   004492                     i2u1180_47:
 16216   004492  0004               	clrwdt	
 16217   004494  0004               	clrwdt	
 16218   004496  2EE8               	decfsz	wreg,f,c
 16219   004498  D7FC               	bra	i2u1180_47
 16220   00449A  4A03               	infsnz	i2delay_ms@x^0,f,c
 16221   00449C  2A04               	incf	(i2delay_ms@x+1)^0,f,c
 16222   00449E                     i2l273:
 16223   00449E  5003               	movf	i2delay_ms@x^0,w,c
 16224   0044A0  5C01               	subwf	i2delay_ms@n^0,w,c
 16225   0044A2  5004               	movf	(i2delay_ms@x+1)^0,w,c
 16226   0044A4  5802               	subwfb	(i2delay_ms@n+1)^0,w,c
 16227   0044A6  A0D8               	btfss	status,0,c
 16228   0044A8  0012               	return	
 16229   0044AA  D7F2               	goto	i2l6909
 16230   0044AC                     __end_ofi2_delay_ms:
 16231                           	callstack 0
 16232                           
 16233 ;; *************** function _Timer0_isr *****************
 16234 ;; Defined at:
 16235 ;;		line 100 in file "Pic_App.c"
 16236 ;; Parameters:    Size  Location     Type
 16237 ;;		None
 16238 ;; Auto vars:     Size  Location     Type
 16239 ;;		None
 16240 ;; Return value:  Size  Location     Type
 16241 ;;                  1    wreg      void 
 16242 ;; Registers used:
 16243 ;;		wreg, status,2, status,0, cstack
 16244 ;; Tracked objects:
 16245 ;;		On entry : 0/0
 16246 ;;		On exit  : 3F/1
 16247 ;;		Unchanged: 0/0
 16248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16253 ;;Total ram usage:        0 bytes
 16254 ;; Hardware stack levels used: 1
 16255 ;; Hardware stack levels required when called: 1
 16256 ;; This function calls:
 16257 ;;		i2_reloadTimer0
 16258 ;; This function is called by:
 16259 ;;		_highIsr
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           	psect	text88
 16264   003E4A                     __ptext88:
 16265                           	callstack 0
 16266   003E4A                     _Timer0_isr:
 16267                           	callstack 20
 16268                           
 16269                           ;Pic_App.c: 102: INTCONbits.TMR0IF = 0;
 16270                           
 16271                           ;incstack = 0
 16272   003E4A  94F2               	bcf	242,2,c	;volatile
 16273                           
 16274                           ;Pic_App.c: 103: count_sec++;
 16275   003E4C  0101               	movlb	1	; () banked
 16276   003E4E  4B80               	infsnz	_count_sec& (0+255),f,b
 16277   003E50  2B81               	incf	(_count_sec+1)& (0+255),f,b
 16278                           
 16279                           ; BSR set to: 1
 16280                           ;Pic_App.c: 104: if(count_sec > 59) {
 16281   003E52  5181               	movf	(_count_sec+1)& (0+255),w,b
 16282   003E54  E104               	bnz	i2u770_40
 16283   003E56  0E3C               	movlw	60
 16284   003E58  5D80               	subwf	_count_sec& (0+255),w,b
 16285   003E5A  A0D8               	btfss	status,0,c
 16286   003E5C  D006               	goto	i2l6545
 16287   003E5E                     i2u770_40:
 16288                           
 16289                           ; BSR set to: 1
 16290                           ;Pic_App.c: 105: count_min++;
 16291   003E5E  4B7E               	infsnz	_count_min& (0+255),f,b
 16292   003E60  2B7F               	incf	(_count_min+1)& (0+255),f,b
 16293                           
 16294                           ; BSR set to: 1
 16295                           ;Pic_App.c: 106: count_sec = 0;
 16296   003E62  0E00               	movlw	0
 16297   003E64  6F81               	movwf	(_count_sec+1)& (0+255),b
 16298   003E66  0E00               	movlw	0
 16299   003E68  6F80               	movwf	_count_sec& (0+255),b
 16300   003E6A                     i2l6545:
 16301                           
 16302                           ; BSR set to: 1
 16303                           ;Pic_App.c: 107: };Pic_App.c: 108: if(count_min > 59) {
 16304   003E6A  517F               	movf	(_count_min+1)& (0+255),w,b
 16305   003E6C  E104               	bnz	i2u771_40
 16306   003E6E  0E3C               	movlw	60
 16307   003E70  5D7E               	subwf	_count_min& (0+255),w,b
 16308   003E72  A0D8               	btfss	status,0,c
 16309   003E74  D006               	goto	i2l6551
 16310   003E76                     i2u771_40:
 16311                           
 16312                           ; BSR set to: 1
 16313                           ;Pic_App.c: 109: count_hour++;
 16314   003E76  4B7C               	infsnz	_count_hour& (0+255),f,b
 16315   003E78  2B7D               	incf	(_count_hour+1)& (0+255),f,b
 16316                           
 16317                           ; BSR set to: 1
 16318                           ;Pic_App.c: 110: count_min = 0;
 16319   003E7A  0E00               	movlw	0
 16320   003E7C  6F7F               	movwf	(_count_min+1)& (0+255),b
 16321   003E7E  0E00               	movlw	0
 16322   003E80  6F7E               	movwf	_count_min& (0+255),b
 16323   003E82                     i2l6551:
 16324                           
 16325                           ; BSR set to: 1
 16326                           ;Pic_App.c: 111: };Pic_App.c: 112: if(count_hour > 23){
 16327   003E82  517D               	movf	(_count_hour+1)& (0+255),w,b
 16328   003E84  E104               	bnz	i2u772_40
 16329   003E86  0E18               	movlw	24
 16330   003E88  5D7C               	subwf	_count_hour& (0+255),w,b
 16331   003E8A  A0D8               	btfss	status,0,c
 16332   003E8C  D004               	goto	i2l6555
 16333   003E8E                     i2u772_40:
 16334                           
 16335                           ; BSR set to: 1
 16336                           ;Pic_App.c: 113: count_hour = 0;
 16337   003E8E  0E00               	movlw	0
 16338   003E90  6F7D               	movwf	(_count_hour+1)& (0+255),b
 16339   003E92  0E00               	movlw	0
 16340   003E94  6F7C               	movwf	_count_hour& (0+255),b
 16341   003E96                     i2l6555:
 16342                           
 16343                           ; BSR set to: 1
 16344                           ;Pic_App.c: 114: };Pic_App.c: 115: reloadTimer0();
 16345   003E96  EC01  F023         	call	i2_reloadTimer0	;wreg free
 16346                           
 16347                           ; BSR set to: 1
 16348   003E9A  0012               	return		;funcret
 16349   003E9C                     __end_of_Timer0_isr:
 16350                           	callstack 0
 16351                           
 16352 ;; *************** function i2_reloadTimer0 *****************
 16353 ;; Defined at:
 16354 ;;		line 94 in file "Pic_App.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;		None
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;		None
 16359 ;; Return value:  Size  Location     Type
 16360 ;;                  1    wreg      void 
 16361 ;; Registers used:
 16362 ;;		wreg, status,2
 16363 ;; Tracked objects:
 16364 ;;		On entry : 3F/1
 16365 ;;		On exit  : 3F/1
 16366 ;;		Unchanged: 3F/0
 16367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;Total ram usage:        0 bytes
 16373 ;; Hardware stack levels used: 1
 16374 ;; This function calls:
 16375 ;;		Nothing
 16376 ;; This function is called by:
 16377 ;;		_Timer0_isr
 16378 ;; This function uses a non-reentrant model
 16379 ;;
 16380                           
 16381                           	psect	text89
 16382   004602                     __ptext89:
 16383                           	callstack 0
 16384   004602                     i2_reloadTimer0:
 16385                           	callstack 20
 16386                           
 16387                           ; BSR set to: 1
 16388                           ;Pic_App.c: 96: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;incstack = 0
 16392   004602  0E0B               	movlw	11
 16393   004604  6ED7               	movwf	215,c	;volatile
 16394                           
 16395                           ;Pic_App.c: 97: TMR0L = (unsigned char)(3036 & 0x00FF );
 16396   004606  0EDC               	movlw	220
 16397   004608  6ED6               	movwf	214,c	;volatile
 16398                           
 16399                           ; BSR set to: 1
 16400   00460A  0012               	return		;funcret
 16401   00460C                     __end_ofi2_reloadTimer0:
 16402                           	callstack 0
 16403                           
 16404                           	psect	rparam
 16405   000000                     
 16406                           	psect	temp
 16407   00007D                     btemp:
 16408                           	callstack 0
 16409   00007D                     	ds	1
 16410   000000                     int$flags	set	btemp
 16411   000000                     wtemp8	set	btemp+1
 16412   000000                     ttemp5	set	btemp+1
 16413   000000                     ttemp6	set	btemp+4
 16414   000000                     ttemp7	set	btemp+8
 16415                           
 16416                           	psect	idloc
 16417                           
 16418                           ;Config register IDLOC0 @ 0x200000
 16419                           ;	unspecified, using default values
 16420   200000                     	org	2097152
 16421   200000  FF                 	db	255
 16422                           
 16423                           ;Config register IDLOC1 @ 0x200001
 16424                           ;	unspecified, using default values
 16425   200001                     	org	2097153
 16426   200001  FF                 	db	255
 16427                           
 16428                           ;Config register IDLOC2 @ 0x200002
 16429                           ;	unspecified, using default values
 16430   200002                     	org	2097154
 16431   200002  FF                 	db	255
 16432                           
 16433                           ;Config register IDLOC3 @ 0x200003
 16434                           ;	unspecified, using default values
 16435   200003                     	org	2097155
 16436   200003  FF                 	db	255
 16437                           
 16438                           ;Config register IDLOC4 @ 0x200004
 16439                           ;	unspecified, using default values
 16440   200004                     	org	2097156
 16441   200004  FF                 	db	255
 16442                           
 16443                           ;Config register IDLOC5 @ 0x200005
 16444                           ;	unspecified, using default values
 16445   200005                     	org	2097157
 16446   200005  FF                 	db	255
 16447                           
 16448                           ;Config register IDLOC6 @ 0x200006
 16449                           ;	unspecified, using default values
 16450   200006                     	org	2097158
 16451   200006  FF                 	db	255
 16452                           
 16453                           ;Config register IDLOC7 @ 0x200007
 16454                           ;	unspecified, using default values
 16455   200007                     	org	2097159
 16456   200007  FF                 	db	255
 16457                           
 16458                           	psect	config
 16459                           
 16460                           ; Padding undefined space
 16461   300000                     	org	3145728
 16462   300000  FF                 	db	255
 16463                           
 16464                           ;Config register CONFIG1H @ 0x300001
 16465                           ;	Oscillator Selection bits
 16466                           ;	OSC = XT, XT oscillator
 16467                           ;	Fail-Safe Clock Monitor Enable bit
 16468                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16469                           ;	Internal/External Oscillator Switchover bit
 16470                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16471   300001                     	org	3145729
 16472   300001  01                 	db	1
 16473                           
 16474                           ;Config register CONFIG2L @ 0x300002
 16475                           ;	Power-up Timer Enable bit
 16476                           ;	PWRT = OFF, PWRT disabled
 16477                           ;	Brown-out Reset Enable bits
 16478                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16479                           ;	Brown Out Reset Voltage bits
 16480                           ;	BORV = 3, Minimum setting
 16481   300002                     	org	3145730
 16482   300002  1F                 	db	31
 16483                           
 16484                           ;Config register CONFIG2H @ 0x300003
 16485                           ;	Watchdog Timer Enable bit
 16486                           ;	WDT = ON, WDT enabled
 16487                           ;	Watchdog Timer Postscale Select bits
 16488                           ;	WDTPS = 32768, 1:32768
 16489   300003                     	org	3145731
 16490   300003  1F                 	db	31
 16491                           
 16492                           ; Padding undefined space
 16493   300004                     	org	3145732
 16494   300004  FF                 	db	255
 16495                           
 16496                           ;Config register CONFIG3H @ 0x300005
 16497                           ;	CCP2 MUX bit
 16498                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16499                           ;	PORTB A/D Enable bit
 16500                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 16501                           ;	Low-Power Timer1 Oscillator Enable bit
 16502                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16503                           ;	MCLR Pin Enable bit
 16504                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16505   300005                     	org	3145733
 16506   300005  83                 	db	131
 16507                           
 16508                           ;Config register CONFIG4L @ 0x300006
 16509                           ;	Stack Full/Underflow Reset Enable bit
 16510                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16511                           ;	Single-Supply ICSP Enable bit
 16512                           ;	LVP = ON, Single-Supply ICSP enabled
 16513                           ;	Extended Instruction Set Enable bit
 16514                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16515                           ;	Background Debugger Enable bit
 16516                           ;	DEBUG = 0x1, unprogrammed default
 16517   300006                     	org	3145734
 16518   300006  85                 	db	133
 16519                           
 16520                           ; Padding undefined space
 16521   300007                     	org	3145735
 16522   300007  FF                 	db	255
 16523                           
 16524                           ;Config register CONFIG5L @ 0x300008
 16525                           ;	Code Protection bit
 16526                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 16527                           ;	Code Protection bit
 16528                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 16529                           ;	Code Protection bit
 16530                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 16531                           ;	Code Protection bit
 16532                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 16533   300008                     	org	3145736
 16534   300008  0F                 	db	15
 16535                           
 16536                           ;Config register CONFIG5H @ 0x300009
 16537                           ;	Boot Block Code Protection bit
 16538                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16539                           ;	Data EEPROM Code Protection bit
 16540                           ;	CPD = OFF, Data EEPROM not code-protected
 16541   300009                     	org	3145737
 16542   300009  C0                 	db	192
 16543                           
 16544                           ;Config register CONFIG6L @ 0x30000A
 16545                           ;	Write Protection bit
 16546                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 16547                           ;	Write Protection bit
 16548                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 16549                           ;	Write Protection bit
 16550                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 16551                           ;	Write Protection bit
 16552                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 16553   30000A                     	org	3145738
 16554   30000A  0F                 	db	15
 16555                           
 16556                           ;Config register CONFIG6H @ 0x30000B
 16557                           ;	Configuration Register Write Protection bit
 16558                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16559                           ;	Boot Block Write Protection bit
 16560                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16561                           ;	Data EEPROM Write Protection bit
 16562                           ;	WRTD = OFF, Data EEPROM not write-protected
 16563   30000B                     	org	3145739
 16564   30000B  E0                 	db	224
 16565                           
 16566                           ;Config register CONFIG7L @ 0x30000C
 16567                           ;	Table Read Protection bit
 16568                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 16569                           ;	Table Read Protection bit
 16570                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16571                           ;	Table Read Protection bit
 16572                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 16573                           ;	Table Read Protection bit
 16574                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 16575   30000C                     	org	3145740
 16576   30000C  0F                 	db	15
 16577                           
 16578                           ;Config register CONFIG7H @ 0x30000D
 16579                           ;	Boot Block Table Read Protection bit
 16580                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16581   30000D                     	org	3145741
 16582   30000D  40                 	db	64
 16583                           tosu	equ	0xFFF
 16584                           tosh	equ	0xFFE
 16585                           tosl	equ	0xFFD
 16586                           stkptr	equ	0xFFC
 16587                           pclatu	equ	0xFFB
 16588                           pclath	equ	0xFFA
 16589                           pcl	equ	0xFF9
 16590                           tblptru	equ	0xFF8
 16591                           tblptrh	equ	0xFF7
 16592                           tblptrl	equ	0xFF6
 16593                           tablat	equ	0xFF5
 16594                           prodh	equ	0xFF4
 16595                           prodl	equ	0xFF3
 16596                           indf0	equ	0xFEF
 16597                           postinc0	equ	0xFEE
 16598                           postdec0	equ	0xFED
 16599                           preinc0	equ	0xFEC
 16600                           plusw0	equ	0xFEB
 16601                           fsr0h	equ	0xFEA
 16602                           fsr0l	equ	0xFE9
 16603                           wreg	equ	0xFE8
 16604                           indf1	equ	0xFE7
 16605                           postinc1	equ	0xFE6
 16606                           postdec1	equ	0xFE5
 16607                           preinc1	equ	0xFE4
 16608                           plusw1	equ	0xFE3
 16609                           fsr1h	equ	0xFE2
 16610                           fsr1l	equ	0xFE1
 16611                           bsr	equ	0xFE0
 16612                           indf2	equ	0xFDF
 16613                           postinc2	equ	0xFDE
 16614                           postdec2	equ	0xFDD
 16615                           preinc2	equ	0xFDC
 16616                           plusw2	equ	0xFDB
 16617                           fsr2h	equ	0xFDA
 16618                           fsr2l	equ	0xFD9
 16619                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    118
    Data        4
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    122     124
    BANK0           128     91      96
    BANK1           256     77     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_23(CODE[7]), ?_sprintf(BANK1[2]), STR_6(CODE[4]), STR_5(CODE[3]), 
		 -> STR_3(CODE[4]), STR_2(CODE[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[16]), STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), 
		 -> STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[15]), STR_11(CODE[20]), STR_10(CODE[21]), 
		 -> STR_9(CODE[16]), STR_8(CODE[15]), STR_7(CODE[9]), STR_4(CODE[5]), 
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_welcome@Buffer(BANK1[16]), updete_lcd_AN@Buffer(BANK1[16]), update_lcd_setup@Buffer(BANK1[16]), update_lcd_timer@Buffer(BANK1[16]), 
		 -> update_lcd_COOLER@Buffer(BANK1[16]), update_lcd_temp@Buffer(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_welcome@Buffer(BANK1[16]), updete_lcd_AN@Buffer(BANK1[16]), update_lcd_setup@Buffer(BANK1[16]), update_lcd_timer@Buffer(BANK1[16]), 
		 -> update_lcd_COOLER@Buffer(BANK1[16]), update_lcd_temp@Buffer(BANK1[16]), 

    update_lcd_COOLER@mode	PTR unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_3(CODE[4]), STR_2(CODE[3]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 26
		 -> STR_22(CODE[26]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    i2_update_lcd->i2_update_lcd_COOLER
    i2_updete_lcd_AN->i2_sprintf
    i2_update_lcd_timer->i2_sprintf
    i2_update_lcd_temp->i2_sprintf
    i2_update_lcd_setup->i2_sprintf
    i2_update_lcd_COOLER->i2_sprintf
    i2_sprintf->i2___ftsub
    i2_scale->i2___ftmul
    i2___awdiv->i2___awmod
    i2_fround->i2___ftmul
    i2___lbdiv->i2___lbmod
    i2___ftmul->i2___awdiv
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2_lcd_puts->i2_lcd_putc
    i2_lcd_putc->i2_lcd_gotoxy
    i2_lcd_gotoxy->i2_lcd_send_byte
    i2_lcd_send_byte->i2_lcd_send_nibble
    i2_lcd_send_nibble->i2_delay_cycles
    _set_setup_mode->i2_delay_ms
    _set_clock_mode->i2_delay_ms

Critical Paths under _main in BANK0

    _send_string_no_lib->_send_byte_no_lib
    _read_adc_voltage->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in BANK0

    i2_update_lcd->i2_update_lcd_setup
    i2_update_lcd->i2_update_lcd_timer

Critical Paths under _main in BANK1

    _update_lcd->_update_lcd_setup
    _update_lcd->_update_lcd_timer
    _updete_lcd_AN->_sprintf
    _update_lcd_timer->_sprintf
    _update_lcd_temp->_sprintf
    _update_lcd_setup->_sprintf
    _update_lcd_COOLER->_sprintf
    _lcd_welcome->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  448692
                                             67 BANK1     10    10      0
                            ___ftmul
                           _delay_ms
                           _initMode
                         _initTimer0
                    _init_adc_no_lib
                           _lcd_init
                           _lcd_putc
                        _lcd_welcome
                   _read_adc_voltage
                       _reloadTimer0
                 _send_string_no_lib
                         _setupPorts
                        _setupSerial
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           0     0      0  346447
                  _update_lcd_COOLER
                   _update_lcd_setup
                    _update_lcd_temp
                   _update_lcd_timer
                      _updete_lcd_AN
 ---------------------------------------------------------------------------------
 (2) _updete_lcd_AN                                       16    16      0   69209
                                             45 BANK1     16    16      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_timer                                    22    22      0   69311
                                             45 BANK1     22    22      0
                         _lcd_gotoxy
                           _lcd_puts
                     _set_baoundares
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_temp                                     16    16      0   69209
                                             45 BANK1     16    16      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _update_lcd_setup                                    22    22      0   69373
                                             45 BANK1     22    22      0
                         _lcd_gotoxy
                           _lcd_puts
                     _set_baoundares
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _set_baoundares                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _update_lcd_COOLER                                   18    18      0   69345
                                             45 BANK1     18    18      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     143
                                             33 BANK0      2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _reloadTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                     9     6      3    9351
                                             59 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___wmul
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                             32 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4119
                                             44 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3666
                                             40 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_welcome                                         16    16      0   71509
                                             45 BANK1     16    16      0
                           _delay_ms
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             46    36     10   55462
                                              0 BANK1     45    35     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   10554
                                             61 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1513
                                             32 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1705
                                             38 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             32 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              12     9      3    8070
                                             61 BANK0     12     9      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (5) ___lbmod                                              4     3      1     502
                                             32 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     511
                                             36 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    6707
                                             46 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             32 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     853
                                             32 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1422
                                             32 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3565
                                             40 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             45 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     781
                                             32 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     711
                                             68 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5514
                                             85 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5098
                                             73 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3373
                                             32 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     155
                                             32 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     738
                                             32 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             2     0      2    9644
                                             46 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    8049
                                             45 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    3813
                                             42 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    4374
                                             42 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_byte                                        2     1      1    2450
                                             40 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_send_nibble                                      2     2      0      68
                                             38 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (7) _delay_cycles                                         6     6      0      46
                                             32 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) _delay_ms                                             4     2      2    1742
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMode                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _highIsr                                             10    10      0  142098
                                             22 BANK0     10    10      0
                         _Timer0_isr
                     _set_clock_mode
                     _set_setup_mode
                       i2_update_lcd
 ---------------------------------------------------------------------------------
 (10) i2_update_lcd                                        0     0      0  141682
                i2_update_lcd_COOLER
                 i2_update_lcd_setup
                  i2_update_lcd_temp
                 i2_update_lcd_timer
                    i2_updete_lcd_AN
 ---------------------------------------------------------------------------------
 (11) i2_updete_lcd_AN                                    16    16      0   28256
                                            104 COMRAM    16    16      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (11) i2_update_lcd_timer                                 22    22      0   28358
                                              0 BANK0     22    22      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                   i2_set_baoundares
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (11) i2_update_lcd_temp                                  16    16      0   28256
                                            104 COMRAM    16    16      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (11) i2_update_lcd_setup                                 22    22      0   28420
                                              0 BANK0     22    22      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                   i2_set_baoundares
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_set_baoundares                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_update_lcd_COOLER                                18    18      0   28392
                                            104 COMRAM    18    18      0
                       i2_lcd_gotoxy
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          46    36     10   24877
                                             59 COMRAM    45    35     10
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (13) i2_scale                                             7     4      3    4549
                                             29 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) i2_fround                                           12     9      3    3165
                                             29 COMRAM    12     9      3
                          i2___ftmul
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (14) i2___lbmod                                           4     3      1     337
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (14) i2___lbdiv                                           4     3      1     346
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftmul                                          15     9      6    2132
                                             14 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                          i2___lbdiv (ARG)
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (13) i2__div_to_l_                                       12     6      6     743
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (13) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2___lltoft                                          9     5      4     795
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___lldiv                                          13     5      8     451
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) i2___fttol                                          15    11      4     476
                                             36 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___ftsub                                           6     0      6    2189
                                             53 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftadd                                          12     6      6    2023
                                             41 COMRAM    12     6      6
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftpack                                          8     3      5     658
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (13) i2___ftneg                                           3     0      3     100
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (13) i2___ftge                                            9     3      6     408
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (12) i2_lcd_puts                                          2     0      2    2211
                                             14 COMRAM     2     0      2
                         i2_lcd_putc
 ---------------------------------------------------------------------------------
 (13) i2_lcd_putc                                          1     1      0    1901
                                             13 COMRAM     1     1      0
                         i2_delay_ms
                       i2_lcd_gotoxy
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (14) i2_lcd_gotoxy                                        3     2      1     992
                                             10 COMRAM     3     2      1
                    i2_lcd_send_byte
 ---------------------------------------------------------------------------------
 (14) i2_lcd_send_byte                                     2     1      1     639
                                              8 COMRAM     2     1      1
                     i2_delay_cycles
                         i2_delay_ms
                  i2_lcd_send_nibble
 ---------------------------------------------------------------------------------
 (15) i2_lcd_send_nibble                                   2     2      0      99
                                              6 COMRAM     2     2      0
                     i2_delay_cycles
 ---------------------------------------------------------------------------------
 (16) i2_delay_cycles                                      6     6      0      68
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (10) _set_setup_mode                                      0     0      0     208
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (10) _set_clock_mode                                      0     0      0     208
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (15) i2_delay_ms                                          4     2      2     208
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _Timer0_isr                                          0     0      0       0
                     i2_reloadTimer0
 ---------------------------------------------------------------------------------
 (11) i2_reloadTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lbdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _delay_ms
   _initMode
   _initTimer0
   _init_adc_no_lib
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _lcd_welcome
     _delay_ms
     _lcd_gotoxy
     _lcd_puts
       _lcd_putc
     _sprintf
       ___awdiv
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___ftmul
           ___lbdiv
           ___lbmod
       ___ftge
       ___ftmul
       ___ftneg
       ___ftsub
         ___ftadd
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
         _scale (ARG)
           ___awdiv
           ___awmod
           ___ftmul
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
       _isdigit
       _scale
   _read_adc_voltage
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___wmul
     _read_adc_raw_no_lib
   _reloadTimer0
   _send_string_no_lib
     _send_byte_no_lib
   _setupPorts
   _setupSerial
   _update_lcd
     _update_lcd_COOLER
       _lcd_gotoxy
       _lcd_puts
       _sprintf
     _update_lcd_setup
       _lcd_gotoxy
       _lcd_puts
       _set_baoundares
       _sprintf
     _update_lcd_temp
       _lcd_gotoxy
       _lcd_puts
       _sprintf
     _update_lcd_timer
       _lcd_gotoxy
       _lcd_puts
       _set_baoundares
       _sprintf
     _updete_lcd_AN
       _lcd_gotoxy
       _lcd_puts
       _sprintf

 _highIsr (ROOT)
   _Timer0_isr
     i2_reloadTimer0
   _set_clock_mode
     i2_delay_ms
   _set_setup_mode
     i2_delay_ms
   i2_update_lcd
     i2_update_lcd_COOLER
       i2_lcd_gotoxy
         i2_lcd_send_byte
           i2_delay_cycles
           i2_delay_ms
           i2_lcd_send_nibble
             i2_delay_cycles
       i2_lcd_puts
         i2_lcd_putc
           i2_delay_ms
           i2_lcd_gotoxy
           i2_lcd_send_byte
       i2_sprintf
         i2___awdiv
           i2___awmod (ARG)
         i2___ftadd
           i2___ftpack
           i2_fround (ARG)
             i2___ftmul
               i2___awdiv (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lbdiv (ARG)
                 i2___lbmod (ARG)
               i2___lbmod (ARG)
             i2___lbdiv
             i2___lbmod
         i2___ftge
         i2___ftmul
         i2___ftneg
         i2___ftsub
           i2___ftadd
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol
           i2___ftmul (ARG)
           i2_scale (ARG)
             i2___awdiv
             i2___awmod
             i2___ftmul
         i2___lldiv
         i2___llmod
           i2___lldiv (ARG)
         i2___lltoft
         i2___wmul
         i2__div_to_l_
         i2__tdiv_to_l_
         i2_fround
         i2_isdigit
         i2_scale
     i2_update_lcd_setup
       i2_lcd_gotoxy
       i2_lcd_puts
       i2_set_baoundares
       i2_sprintf
     i2_update_lcd_temp
       i2_lcd_gotoxy
       i2_lcd_puts
       i2_sprintf
     i2_update_lcd_timer
       i2_lcd_gotoxy
       i2_lcd_puts
       i2_set_baoundares
       i2_sprintf
     i2_updete_lcd_AN
       i2_lcd_gotoxy
       i2_lcd_puts
       i2_sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4D      82       7       50.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5B      60       5       75.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7A      7C       1       98.4%
BITBIGSFRhhhll      18      0       0      38        0.0%
BITBIGSFRhhl        10      0       0      39        0.0%
BITBIGSFRlllllh      D      0       0      44        0.0%
BITBIGSFRhhhh        D      0       0      37        0.0%
BITBIGSFRllllh       C      0       0      42        0.0%
BITBIGSFRlllllh      7      0       0      43        0.0%
BITBIGSFRlllhh       7      0       0      41        0.0%
BITBIGSFRllh         7      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15E      20        0.0%
DATA                 0      0     15E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 26 12:01:04 2023

         i2lcd_gotoxy@address 000D             ?_read_adc_voltage 00BB                i2_reloadTimer0 4602  
                ?_lcd_welcome 0001            ??_read_adc_voltage 00BE                            l16 411C  
                          _AN 016D                            l62 45E2                            l63 45E0  
              ?_lcd_send_byte 00A8                  ___awdiv@sign 00AB           ___wmul@multiplicand 00A2  
                  i2___ftpack 3214                  ___ftadd@exp1 00D4                  ___ftadd@exp2 00D3  
                  i2___lltoft 3D3E                  ___ftadd@sign 00D2                           l250 2142  
                         l244 20FE                           l237 20D8                           l255 2182  
                         l239 20E6                           l280 423C                           l273 43BA  
                         l441 077E                           l508 36B2                           l923 3B4C  
                         l828 26F0                           l846 298A                           l847 29B2  
                         l839 2F8C                           l878 4406                           _lcd 0F83  
                ___awmod@sign 00A5                           prod 0FF3     read_adc_voltage@raw_value 00C2  
                         wreg 0FE8               _update_lcd_temp 4142                    i2_delay_ms 4486  
                 main@channel 014C                   lcd_gotoxy@x 00AB                   lcd_gotoxy@y 00AA  
             i2sprintf@tmpval 0055                 _updete_lcd_AN 3EEC                  ___ftdiv@cntr 00B5  
                ___ftdiv@sign 00BA                          l4105 4244                          l4115 43AA  
                        l4161 3EDE                          l4261 3F8C                          l4255 3F80  
                        l4257 3F84                          l4265 3F92                          l4259 3F88  
                        l4267 3FAE                          l7021 260A                          l7113 2C8E  
                        l7051 268E                          l7027 2632                          l7123 2CB6  
                        l7203 3A04                          l7061 26C2                          l7053 2698  
                        l7109 2C7E                          l7221 4198                          l5445 32F4  
                        l7063 26CC                          l7119 2CA6                          l7151 35F6  
                        l7207 3A12                          l5439 32DC                          l7049 2684  
                        l7217 4192                          l7233 41B6                          l7153 35FE  
                        l7145 35E0                          l8201 0144                          l5449 3308  
                        l4771 3D9E                          l7171 3636                          l7163 361E  
                        l7139 35D0                          l8203 015A                          l6531 430A  
                        l5459 3328                          l4773 3DB8                          l4781 3DDC  
                        l7069 270C                          l7229 41AE                          l8301 047A  
                        l8221 01A4                          l5469 3348                          l4775 3DC4  
                        l7079 273C                          l7095 2C4C                          l7247 4342  
                        l7239 432A                          l7167 3628                          l7191 39DA  
                        l7183 39C0                          l8207 0168                          l6527 42F4  
                        l9023 34E8                          l4777 3DD0                          l7089 2C24  
                        l7521 22F2                          l7193 39E2                          l8401 0782  
                        l8313 04EC                          l8241 0240                          l8233 0214  
                        l8217 0194                          l8209 016C                          l9025 34F8  
                        l7187 39CC                          l8323 0544                          l8235 021E  
                        l8219 019E                          l8251 028A                          l8171 004C  
                        l8163 001E                          l9043 2F00                          l8413 07F0  
                        l8333 05AE                          l8309 04C4                          l8229 01FE  
                        l8253 02C4                          l8181 0082                          l7711 3664  
                        l7199 39FA                          l7543 17AC                          l8431 08F2  
                        l8423 08D0                          l8327 05AA                          l8247 0276  
                        l8239 022E                          l8175 0052                    i2_lcd_putc 3DF4  
                        l6681 3C9C                          l7713 3670                          l7625 29CC  
                        l7529 2396                          l7561 195C                          l7553 1860  
                        l8521 0ABC                          l8425 08DC                          l8409 07A0  
                        l8345 060E                          l8433 08FC                          l8169 003A  
                        l9049 2F28                          l9401 21A2                          l9321 202A  
                        l6931 3184                          l7731 405A                          l7723 36A4  
                        l7635 29E4                          l8507 0A78                          l8443 0936  
                        l8363 0658                          l8371 067E                          l8259 02D8  
                        l8195 0100                          l9091 4208                          l9331 20B0  
                        l9307 1FF4                          l8541 442A                          l6941 31E0  
                        l6933 318E                          l7821 3C30                          l7645 2B26  
                        l7637 29F0                          l7629 29DC                          l7549 183C  
                        l8365 0668                          l8357 0642                          l8349 0620  
                        l8293 0414                          l8285 03AE                          l8269 031A  
                        l9069 2F66                          l9413 21C2                          l6695 3CC4  
                        l7743 3908                          l6943 31EA                          l6935 31AC  
                        l7815 3B3E                          l7807 3B0A                          l7823 3C3C  
                        l7567 19EC                          l8519 0AB6                          l8527 0B42  
                        l8471 09C8                          l8455 0952                          l9415 21E8  
                        l9343 20DA                          l9327 2080                          l8537 4416  
                        l7809 3B16                          l7673 2BA4                          l7665 2B74  
                        l8449 094E                          l8297 043A                          l9353 20F6  
                        l7739 38E6                          l6939 31C2                          l7763 2FEC  
                        l7579 450E                          l8491 0A38                          l8483 0A04  
                        l8467 09A8                          l8395 075A                          l8379 06AA  
                        l8387 073A                          l9363 211A                          l9347 20E8  
                        l7749 3934                          l7781 3042                          l7685 2BC0  
                        l7589 2936                          l8485 0A0C                          l8477 09E2  
                        l8389 0744                          l9381 215E                          l9373 213C  
                        l9365 211E                          l7791 305A                          l7695 2BD8  
                        l9383 2162                    i2_lcd_puts 44D0                          l7793 3066  
                        l7785 3052                          l7697 2BE4                          l7689 2BD0  
                        l8489 0A30                          l8499 0A58                          l7799 3082  
                        l9399 219E                          l8981 342A                          l8991 346E  
                        STR_1 FFD8                          STR_2 FFFB                          STR_3 FFF7  
                        STR_4 FFF2                          STR_5 FFFB                          STR_6 FFF7  
                        STR_7 FFE2                          STR_8 FF31                          STR_9 FFA9  
                        u4055 3EAA                          u4056 3EAC                          u6010 32D0  
                        u6020 32E8                          u6030 3300                          u8040 3176  
                        u8211 25CA                          u8221 25DE                          u8310 2662  
                        u8080 31F4                          u8250 25FC                          u8421 2C0C  
                        u8350 26A0                          u9310 2BEA                          u8510 3602  
                        u8280 2624                          u9240 29F6                          u9401 2FD0  
                        u9161 291A                          u8441 2C34                          u9410 2FDA  
                        u9330 3674                          u9250 2B14                          u9170 2924  
                        u8610 419C                          u8380 26D4                          u9420 300A  
                        u9181 2946                          u9425 3002                          u8570 39E6  
                        u9460 306C                          u9490 3B1A                          u9990 00DC  
            ?_lcd_send_nibble 0001        i2lcd_send_byte@cm_data 000A                          _main 1FBE  
                ___ftpack@arg 00A0              _send_byte_no_lib 45DC                  ___ftpack@exp 00A3  
                        fsr0h 0FEA                          indf0 0FEF                          fsr2h 0FDA  
                        fsr0l 0FE9                          indf2 0FDF                          fsr1l 0FE1  
                        fsr2l 0FD9                          btemp 007D                  i2___ftadd@f1 002A  
                i2___ftadd@f2 002D                  i2___ftge@ff1 0001                  i2___ftge@ff2 0004  
                        prodh 0FF4                          prodl 0FF3                          start 000E  
             __end_ofi2_scale 1D78                   main@voltage 0149              _update_lcd_timer 3B5E  
            _update_lcd_setup 34A2                  i2___ftneg@f1 0001        __end_ofi2_reloadTimer0 460C  
                _sprintf$1749 0110       i2update_lcd_COOLER@mode 0079                  ___ftmul@cntr 00BB  
        __end_ofi2_update_lcd 45DC                  i2___ftmul@f1 000F                  i2___ftmul@f2 0012  
                ___param_bank 0000                  ___ftmul@sign 00BC                  i2___ftsub@f1 0036  
                i2___ftsub@f2 0039                  i2___fttol@f1 0025                  ___fttol@exp1 00D2  
                i2___lltoft@c 0009                  ___fttol@lval 00CE                    _Clock_Mode 017A  
        __end_of_delay_cycles 4260             _update_lcd_COOLER 340E         i2updete_lcd_AN@Buffer 0069  
                       ?_main 0001               __end_of___awdiv 3640               __end_of___lbdiv 41BA  
             __end_of___ftadd 2762                         STR_10 FF2B                         STR_11 FF40  
                       STR_12 FFC9                         STR_20 FF98                         STR_21 FFB9  
                       STR_13 FF87                         STR_14 FF54                         STR_22 FF11  
                       STR_15 FF54                         STR_23 FFEB                         STR_16 FF54  
                       STR_17 FF54                         STR_18 FF76                         STR_19 FF65  
             __end_of___awmod 3A1C               __end_of___lbmod 434A               __end_of___ftdiv 2FBE  
             __end_of___ftneg 4414               __end_of___lldiv 36C4                         u10030 01D2  
                       u10200 048C                         u10037 01C8                         u10230 04C4  
                       u10150 0352                         u10320 068C                         u10090 026A  
                       u10155 0348                         u10260 05E4               __end_of___ftmul 2CF0  
                       u10350 0768                         u10190 044C                         u10600 0B6C  
                       u10440 0988                         u10360 0778                         _T0CON 0FD5  
                       u10097 0260               ___awdiv@divisor 00A8                         u11421 2EE8  
       update_lcd_temp@Buffer 012D                         u10560 0A80               __end_of___llmod 3B5E  
                       u11441 2F10                         u10570 0A9E               __end_of___ftsub 4084  
             __end_of___fttol 3094                         u10590 0B52                         u11580 2014  
                       u11598 2018                         u11777 3ED6                         u11787 43AC  
                       i2l182 3898                         i2l280 42D0                         i2l273 449E  
                       i2l441 12B0                         i2l177 3880                         i2l179 388E  
                       i2l508 383A                         i2l923 3C18                         i2l828 2898  
                       i2l846 2A88                         i2l847 2AB0               ___awdiv@counter 00AA  
                       i2l878 44C2                         _RCREG 0FAE                         _RCSTA 0FAB  
                       _TMR0H 0FD7                         _TMR0L 0FD6                         _SPBRG 0FAF  
     read_adc_voltage@channel 00C1                  i2__div_to_l_ 2DE4            ?_update_lcd_COOLER 0001  
                       _TRISA 0F92                         _TRISB 0F93                         _TRISC 0F94  
                       _TRISD 0F95                         _TRISE 0F96                         _TXREG 0FAD  
                       _TXSTA 0FAC                  ___lltoft@exp 00B0               __end_of_highIsr 38C4  
              ?_updete_lcd_AN 0001                    i2isdigit@c 0003                 ___awtoft@sign 00AB  
             __end_of_dpowers FF11                    i2scale@scl 0024                         _scale 16A4  
             __end_of_isdigit 4516               _init_adc_no_lib 45EC                 ___ftpack@sign 00A4  
         ??_update_lcd_COOLER 00DB                         tablat 0FF5              __end_ofi2___ftge 39AC  
            __end_ofi2___wmul 4486                         ttemp5 007E                         ttemp6 0081  
                       ttemp7 0085                         status 0FD8    __end_ofi2_update_lcd_timer 3D3E  
     read_adc_voltage@voltage 00BE    __end_ofi2_update_lcd_setup 37CA                         wtemp8 007E  
             __end_of_sprintf 0B78                 i2___lbmod@rem 0004               ___lbdiv@divisor 00A4  
                 i2delay_ms@n 0001                   i2delay_ms@x 0003             ??i2_lcd_send_byte 000A  
            __end_ofi2_fround 25BA               ___lbdiv@counter 00A6               ?i2_reloadTimer0 0001  
             __initialization 3FC0             i2___lldiv@divisor 0005                  __end_of_main 21EE  
             ??_lcd_send_byte 00A9             i2___lldiv@counter 000D                 i2___ftmul@exp 0018  
          update_lcd_timer@hh 0131            update_lcd_timer@mm 012F            update_lcd_timer@ss 012D  
   __end_of_update_lcd_COOLER 34A2            update_lcd_setup@hh 0131            update_lcd_setup@mm 012F  
          update_lcd_setup@ss 012D       __end_of_update_lcd_temp 417E                   ?i2___ftpack 0001  
                 ?i2___lltoft 0009                        ??_main 0143                 ___fttol@sign1 00CD  
               __activetblptr 0002                    i2sprintf@c 0068                    i2sprintf@f 003E  
                 i2lcd_putc@c 000E                   i2lcd_puts@s 000F                   ?i2_delay_ms 0001  
                i2_lcd_gotoxy 4002                        _ADCON0 0FC2                        _ADCON1 0FC1  
                      _ADCON2 0FC0              i2lcd_send_byte@n 0009              ___llmod@dividend 00AD  
                      ?_scale 00BD                        _ADRESH 0FC4                        _ADRESL 0FC3  
            ___awdiv@dividend 00A6              __end_of___awtoft 422C              __end_of___ftpack 3214  
                 ?i2_lcd_putc 0001                   ?i2_lcd_puts 000F              __end_of___lltoft 3C86  
                      i2l8101 3114                        i2l8111 312C                        i2l7311 373E  
                      i2l7303 3726                        i2l7401 2874                        i2l8113 3138  
                      i2l8105 3124                        i2l8033 2ACA                        i2l8051 395A  
                      i2l8043 2AE2                        i2l7307 3730                        i2l7331 3A4A  
                      i2l7323 3A30                        i2l7261 4012                        i2l8061 39A8  
                      i2l8141 3D44                        i2l8045 2AEE                        i2l8037 2ADA  
                      i2l7333 3A52                        i2l6551 3E82                        i2l7255 4006  
                      i2l8055 397C                        i2l7407 28B4                        i2l8119 3154  
                      i2l8135 3C0A                        i2l8127 3BD6                        i2l8143 3D50  
                      i2l7343 3A74                        i2l7327 3A3C                        i2l6545 3E6A  
                      i2l7257 400A                        i2l7265 4018                        i2l7417 28E4  
                      i2l8073 40DA                        i2l8129 3BE2                        i2l7433 2D40  
                      i2l7505 4398                        i2l6555 3E96                        i2l7259 400E  
                      i2l7267 4032                        i2l8083 30C0                        i2l7451 2D82  
                      i2l7427 2D18                        i2l7291 36FE                        i2l7347 3A82  
                      i2l7339 3A6A                        i2l9107 3550                        i2l7365 27DA  
                      i2l7461 2DAA                        i2l8157 458E                        i2l7293 3706  
                      i2l7285 36E8                        i2l9117 358E                        i2l7391 2840  
                      i2l7359 27B2                        i2l7447 2D72                        i2l7279 36D8  
                      i2l9151 3794                        i2l6905 42D6                        i2l7457 2D9A  
                      i2l7387 282C                        i2l7475 41CC                        i2l7491 41F0  
                      i2l8603 0B9E                        i2l6909 4490                        i2l7389 2836  
                      i2l8605 0BB0                        i2l9149 3788                        i2l9183 42BA  
                      i2l7831 3DF8                        i2l7399 286A                        i2l7487 41E8  
                      i2l7479 41D2                        i2l8703 0E68                        i2l8615 0BE4  
                      i2l9271 3888                        i2l7833 3E10                        i2l7841 3E34  
                      i2l7497 4380                        i2l8641 0CC0                        i2l8609 0BB6  
                      i2l7835 3E1C                        i2l7915 37EC                        i2l8731 0F80  
                      i2l8651 0CEC                        i2l8643 0CC4                        i2l8635 0C9E  
                      i2l8555 339A                        i2l9197 4370                        i2l7837 3E28  
                      i2l7917 37F8                        i2l7861 257A                        i2l7853 24D6  
                      i2l8901 14D6                        i2l8813 11DE                        i2l8821 126C  
                      i2l8805 11B2                        i2l8653 0CF6                        i2l8629 0C5C  
                      i2l8637 0CB4                        i2l8549 3382                        i2l6975 3F6E  
                      i2l7927 382C                        i2l8911 1510                        i2l8823 1276  
                      i2l8743 1002                        i2l8735 0FBE                        i2l8727 0F5C  
                      i2l8719 0EF8                        i2l8663 0D52                        i2l8655 0CFA  
                      i2l8559 33AE                        i2l8593 44E4                        i2l6993 3270  
                      i2l6985 3232                        i2l7937 2E02                        i2l7881 1BA4  
                      i2l8905 14F6                        i2l8761 10DE                        i2l8681 0DC8  
                      i2l8673 0D82                        i2l8569 33CE                        i2l6995 328E  
                      i2l6987 323C                        i2l7875 1B14                        i2l8923 155E  
                      i2l8843 12D2                        i2l8835 12B4                        i2l8747 1026  
                      i2l8675 0D94                        i2l8667 0D68                        i2l8579 33EE  
                      i2l8589 44D2                        i2l6997 3298                        i2l6989 325A  
                      i2l7981 2EAC                        i2l7965 2E80                        i2l7957 2E50  
                      i2l7893 1CC4                        i2l7885 1BC8                        i2l8933 1586  
                      i2l8941 15A6                        i2l8925 1566                        i2l8917 1532  
                      i2l8829 128C                        i2l8757 107A                        i2l8693 0E28  
                      i2l8669 0D72                        i2l8685 0DDC                        i2l8597 0B82  
                      i2l8919 153A                        i2l8847 1322                        i2l8791 1176  
                      i2l8783 1154                        i2l8767 10E2                        i2l8687 0E14  
                      i2l7977 2E9C                        i2l8953 15E4                        i2l8961 166E  
                      i2l8865 1420                        i2l8857 1400                        i2l7987 2EB4  
                      i2l7899 1D54                        i2l8955 15EA                        i2l8883 147C  
                      i2l8859 140A                        i2l8779 1142                        i2l8867 142A  
                      i2l7989 2EC0                        i2l7997 2A34                        i2l8877 1464  
                      i2l8797 118C                        i2l8799 119C                        i2l8889 1480  
                   ??i2_scale 0021                        _SPBRGH 0FB0                        u971_41 2A44  
                      u876_41 2772                        u877_41 2786                        u983_41 30A4  
                      u969_41 2A18                        u897_41 2D00                        u899_41 2D28  
            __end_of_delay_ms 43C8                  i2_scale$2004 0021   __end_ofi2_update_lcd_COOLER 35BC  
            __end_of__powers_ FEC2                    _Timer0_isr 3E4A              __end_of_lcd_init 3CE2  
            __end_of_lcd_putc 3DF4              __end_of_lcd_puts 443A                        ___ftge 38C4  
                      ___wmul 43C8                     ??___awdiv 00AA                     ??___lbdiv 00A5  
                   ??___ftadd 00CF                     ??___awmod 00A4                     ??___lbmod 00A1  
                   ??___ftdiv 00B2                     ??___ftneg 00A3                     ??___lldiv 00A8  
                   ??___ftmul 00B4                     ??___llmod 00B5                     ??___ftsub 00DB  
                   ??___fttol 00C8                        _heater 0176                        _coolar 0178  
            __end_of_initMode 4612                        _fround 21EE             ??i2_updete_lcd_AN 0069  
                      clear_0 3FE6              ___awdiv@quotient 00AC                    _Setup_Mode 007B  
             ___awmod@divisor 00A2                        isa$std 0001               ___awmod@counter 00A4  
           lcd_welcome@Buffer 012D                     ??_highIsr 0096                i2___awdiv@sign 000C  
       ___ftmul@f3_as_product 00B8       __end_of_init_adc_no_lib 45F8              i2_set_baoundares 3368  
                   ??_isdigit 00A0             __end_ofi2___awdiv 3748             __end_ofi2___lbdiv 41F4  
           __end_ofi2___ftadd 290A             __end_ofi2___awmod 3A8C             __end_ofi2___lbmod 43A0  
             ??_updete_lcd_AN 00DB                i2___ftadd@exp1 0035                i2___ftadd@exp2 0034  
           __end_ofi2___ftneg 44D0             __end_ofi2___lldiv 384C             __end_ofi2___ftmul 2DE4  
           __end_ofi2___llmod 3C2A             __end_ofi2___ftsub 4104             __end_ofi2___fttol 3166  
              i2___ftadd@sign 0033                  __mediumconst FE9A           send_string_no_lib@p 00A1  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
          _send_string_no_lib 42F2                i2___awmod@sign 0006                  ?_setupSerial 0001  
                   ??_sprintf 010A              ___lbdiv@dividend 00A5             __end_ofi2_isdigit 4596  
             ___lbmod@divisor 00A0                    __accesstop 0080       __end_of__initialization 3FF4  
             ___lbmod@counter 00A2           ?_send_string_no_lib 00A1                    ___ftadd@f1 00C9  
                  ___ftadd@f2 00CC                    ___ftge@ff1 00A0                    ___ftge@ff2 00A3  
               i2sprintf@flag 005F                 i2sprintf@eexp 005D                 i2sprintf@fval 0061  
               ___rparam_used 0001                 i2sprintf@prec 0066                    ___ftdiv@f1 00AC  
                  ___ftdiv@f2 00AF                    ___ftdiv@f3 00B6             __end_ofi2_sprintf 16A4  
                  ___ftneg@f1 00A0                    ___awtoft@c 00A8                i2___ftpack@arg 0001  
          i2__tdiv_to_l_@exp1 000F             i2___llmod@divisor 0012                i2___ftpack@exp 0004  
          i2__tdiv_to_l_@cntr 000E             i2___llmod@counter 0016            i2__tdiv_to_l_@quot 000A  
                  ___ftmul@f1 00AE                    ___ftmul@f2 00B1                    ___ftsub@f1 00D5  
                  ___ftsub@f2 00D8                    ___fttol@f1 00C4                __pcstackCOMRAM 0001  
          i2___lldiv@dividend 0001                  __pidataBANK0 460C                i2_sprintf$2005 004C  
                  ___lltoft@c 00A8                i2___ftmul@cntr 001C                 __end_of_scale 1A10  
              i2___ftmul@sign 001D        update_lcd_timer@Buffer 0133       i2update_lcd_temp@Buffer 0069  
            ___lbdiv@quotient 00A7              ?_update_lcd_temp 0001                i2___fttol@exp1 0033  
        ??_send_string_no_lib 00A3                i2___fttol@lval 002F                     ?i2___ftge 0001  
         updete_lcd_AN@Buffer 012D      __end_of_send_byte_no_lib 45EC                     ?i2___wmul 0001  
               i2__tdiv_to_l_ 2A08                    __div_to_l_ 2B06      __end_of_update_lcd_timer 3BC4  
    __end_of_update_lcd_setup 3534                     ?i2_fround 001E        update_lcd_setup@Buffer 0133  
           lcd_gotoxy@address 00AC                  i2_update_lcd 45C6               __div_to_l_@exp1 00AB  
             __div_to_l_@cntr 00AA                       ??_scale 00C0                i2___lltoft@exp 0011  
             __div_to_l_@quot 00A6                  sprintf@width 0128            i2___lldiv@quotient 0009  
                  __pbssBANK0 00DF                    __pbssBANK1 014D                   i2sprintf@ap 0051  
                 i2sprintf@cp 004F                   i2sprintf@sp 003C              i2__tdiv_to_l_@f1 0001  
            i2__tdiv_to_l_@f2 0004   __end_of_read_adc_raw_no_lib 4142                main@clock_mode 0145  
                _delay_cycles 422C                 __div_to_l_@f1 00A0                 __div_to_l_@f2 00A3  
               ?_reloadTimer0 0001                   ?_Timer0_isr 0001                lcd_send_byte@n 00A8  
                     ?___ftge 00A0                       ?___wmul 00A0              lcd_send_nibble@n 00A7  
                     ?_fround 00BD                     ?___awtoft 00A8                     ?___ftpack 00A0  
                   ?___lltoft 00A8                ?i2__tdiv_to_l_ 0001                    ??i2___ftge 0007  
                  ??i2___wmul 0005              ?_init_adc_no_lib 0001                       _INTCON2 0FF1  
                     _INTCON3 0FF0                    ??i2_fround 0021                     ?_delay_ms 00A0  
                  _lcd_gotoxy 3F7C               i2_lcd_send_byte 3F34                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 00AE                       i2_scale 1A10  
            ??i2_reloadTimer0 0001                     ?_initMode 0001                _set_baoundares 32C2  
              ??_reloadTimer0 00A0                    _count_hour 017C             __end_of__npowers_ FEE9  
                     __Hparam 0000                    _scale$1748 00C0                       __Lparam 0000  
                  _initTimer0 4558                       ___awdiv 35BC                       ___lbdiv 417E  
                     ___ftadd 25BA                       ___awmod 39AC                       ___lbmod 431E  
                     ___ftdiv 2ED8                       ___ftneg 43EE                       ___lldiv 3640  
                     ___ftmul 2BFC                       ___llmod 3AF6                       ___ftsub 4044  
                     ___fttol 2FBE            i2_update_lcd_timer 3CE2            i2_update_lcd_setup 3748  
                     __pcinit 3FC0                  ??i2___ftpack 0006                    ??___awtoft 00AB  
                  ??___ftpack 00A5       i2___ftmul@f3_as_product 0019                       __ramtop 1000  
                ??i2___lltoft 000D                    ??___lltoft 00AC                       __ptext0 1FBE  
                     __ptext1 45B0                       __ptext2 3EEC                       __ptext3 3B5E  
                     __ptext4 4142                       __ptext5 34A2                       __ptext6 32C2  
                     __ptext7 340E                       __ptext8 4538                       __ptext9 4596  
                     _highIsr 0008                     _T0CONbits 0FD5                _set_clock_mode 4294  
               i2_fround$2002 0026                 i2_fround$2003 0023                   ?__div_to_l_ 00A0  
                     _dpowers FEE9                  i2fround@prec 0029                       _isdigit 44F4  
         ?i2_update_lcd_timer 0001           ?i2_update_lcd_setup 0001              ___awmod@dividend 00A0  
                ??i2_delay_ms 0003                    ??_delay_ms 00A2                       _sprintf 0012  
                  ??_lcd_init 00AA                  ??i2_lcd_putc 000E                  ??i2_lcd_puts 0011  
              __pintcode_body 384C                    ??_lcd_putc 00AD                    ??_lcd_puts 00B0  
        end_of_initialization 3FF4        __end_of_set_baoundares 3368                    ??_initMode 00A0  
               __Lmediumconst FE9A                       int_func 384C           i2___wmul@multiplier 0001  
        lcd_send_byte@cm_data 00A9                     i2u1101_40 1002                     i2u1110_40 11C0  
                   i2u1104_40 1118                     i2u1113_40 129A                     i2u1122_40 14B6  
                   i2u1114_40 12AA                     i2u1134_40 15AE                     i2u1062_40 3376  
                   i2u1135_40 15CC                     i2u1063_40 338E                     i2u1064_40 33A6  
                   i2u1137_40 167E                     i2u1081_40 0D28                     i2u1081_47 0D1E  
                   i2u1138_40 1698                main@setup_mode 0147                     i2u1180_47 4492  
                   i2u1093_40 0EA0                     i2u1077_40 0C3A                     i2u1093_45 0E96  
                   i2u1087_40 0DBE                     i2u1087_47 0DB4            __end_ofi2___ftpack 32C2  
                   i2u1097_40 0F90                     i2u1098_40 0FCE               i2_updete_lcd_AN 4084  
                   i2u1179_47 3F66      __end_ofi2_set_baoundares 340E          ??i2_update_lcd_timer 0069  
          __end_ofi2___lltoft 3D9A          ??i2_update_lcd_setup 0069               ___lldiv@divisor 00A4  
             ___lldiv@counter 00AC       update_lcd_COOLER@Buffer 012D                     _RCSTAbits 0FAB  
           i2_lcd_send_nibble 4516                       postdec1 0FE5                       postdec2 0FDD  
                     postinc0 0FEE                       postinc2 0FDE            __end_ofi2_delay_ms 44AC  
              __tdiv_to_l_@f1 00A0                __tdiv_to_l_@f2 00A3         __end_of_lcd_send_byte 3EEC  
             ??i2__tdiv_to_l_ 0007            ?i2_lcd_send_nibble 0001        __end_of_set_clock_mode 42C4  
               ??__tdiv_to_l_ 00A6            __end_ofi2_lcd_putc 3E4A       __end_ofi2_lcd_send_byte 3F7C  
          __end_ofi2_lcd_puts 44F4                     _PORTBbits 0F81                     _PORTCbits 0F82  
                   _PORTEbits 0F84                    _setupPorts 4596           ??i2_lcd_send_nibble 0007  
            ___lbmod@dividend 00A1              _read_adc_voltage 3A8C                     _TRISCbits 0F94  
                 ?_lcd_gotoxy 00AA                    _update_lcd 45B0                     i2___awdiv 36C4  
                   i2___lbdiv 41BA                     i2___ftadd 2762                     i2___awmod 3A1C  
             _LCD_INIT_STRING 00DB                     i2___lbmod 4376                     i2___ftneg 44AC  
                   i2___lldiv 37CA                     i2___ftmul 2CF0                     i2___llmod 3BC4  
                   i2___ftsub 40C4                     i2___fttol 3094               ?_set_baoundares 0001  
                 ___lbmod@rem 00A3                i2sprintf@width 0064                   ___ftdiv@exp 00B9  
                   _TXSTAbits 0FAC            i2___llmod@dividend 000E            i2___awdiv@dividend 0007  
             i2___ftpack@sign 0005                     i2_isdigit 4578     __end_ofi2_lcd_send_nibble 4538  
              i2_delay_cycles 42C4                   ___ftmul@exp 00B7             send_byte_no_lib@c 00A0  
               ??_lcd_welcome 00DB                   ?_initTimer0 0001                     i2_sprintf 0B78  
        i2update_lcd_timer@hh 0094          i2update_lcd_timer@mm 0092          i2update_lcd_timer@ss 0090  
              __end_of___ftge 3938          i2update_lcd_setup@hh 0094          i2update_lcd_setup@mm 0092  
        i2update_lcd_setup@ss 0090                __end_of___wmul 43EE                     _BufferSer 014D  
                 _BAUDCONbits 0FB8               ?_set_clock_mode 0001                 delay_cycles@n 00A3  
               delay_cycles@x 00A4             ??_lcd_send_nibble 00A6                __end_of_fround 23D6  
            i2___wmul@product 0005             ?_send_byte_no_lib 0001                _set_setup_mode 434A  
        __end_of_reloadTimer0 4602           start_initialization 3FC0            i2___awdiv@quotient 000D  
          ??_send_byte_no_lib 00A0             ?_update_lcd_timer 0001             ?_update_lcd_setup 0001  
         __end_of__tdiv_to_l_ 2A08         __end_of_updete_lcd_AN 3F34               i2___fttol@sign1 002E  
                  ?i2___awdiv 0007                    ?i2___lbdiv 0005                    ?i2___ftadd 002A  
                  ?i2___awmod 0001                    ?i2___lbmod 0001                    ?i2___ftneg 0001  
          ??_update_lcd_timer 00DB            ??_update_lcd_setup 00DB                    ?i2___lldiv 0001  
     __end_ofi2_updete_lcd_AN 40C4                    ?i2___ftmul 000F                    ?i2___llmod 000E  
                  ?i2___ftsub 0036                    ?i2___fttol 0025        __end_ofi2_delay_cycles 42F2  
             ___llmod@divisor 00B1               ___llmod@counter 00B5            i2___lbdiv@dividend 0006  
                  ?i2_isdigit 0001                  ??_Timer0_isr 0001                      ??___ftge 00A6  
                    ??___wmul 00A4                    ?i2_sprintf 003C                   __pdataBANK0 00DB  
read_adc_raw_no_lib@raw_value 00A4                      ??_fround 00C0        __end_of_set_setup_mode 4376  
               sprintf@tmpval 0119              ?i2_lcd_send_byte 0009                   ?_setupPorts 0001  
                  fround@prec 00C8           __end_of_lcd_welcome 1FBE                 ?i2__div_to_l_ 0001  
                i2sprintf@len 0053                   __pbssCOMRAM 007B                  i2sprintf@val 0059  
               __pcstackBANK0 0080                 __pcstackBANK1 0100            i2___lbdiv@quotient 0008  
                _ReceivedChar 00DF                   ?_update_lcd 0001                  _isdigit$1506 00A1  
               i2lcd_gotoxy@x 000C                 i2lcd_gotoxy@y 000B            __end_of_Timer0_isr 3E9C  
                    ?i2_scale 001E                   sprintf@flag 0123                   sprintf@eexp 0121  
                 sprintf@fval 0125                   sprintf@prec 012A               ?i2_delay_cycles 0001  
    i2update_lcd_timer@Buffer 0080                     __pintcode 0008                 __pmediumconst FE9A  
                    ?___awdiv 00A6                      ?___lbdiv 00A4                      ?___ftadd 00C9  
                    ?___awmod 00A0                      ?___lbmod 00A0                      ?___ftdiv 00AC  
                    ?___ftneg 00A0                      ?___lldiv 00A0                      ?___ftmul 00AE  
                    ?___llmod 00AD                      ?___ftsub 00D5                     __npowers_ FEC2  
                    ?___fttol 00C4                   __tdiv_to_l_ 290A               ?_set_setup_mode 0001  
                    ?_highIsr 0001                ??i2__div_to_l_ 0007      i2update_lcd_setup@Buffer 0080  
                ??__div_to_l_ 00A6            i2lcd_send_nibble@n 0008                      ?_isdigit 0001  
                   _count_min 017E                     _count_sec 0180                 ?i2_lcd_gotoxy 000B  
           i2_update_lcd_temp 4260                   ??i2___awdiv 000B                   ??i2___lbdiv 0006  
                 ??i2___ftadd 0030                   ??i2___awmod 0005                      ?_sprintf 0100  
                 ??i2___lbmod 0002                   ??i2___ftneg 0004                   ??i2___lldiv 0009  
                 ??i2___ftmul 0015                   ??i2___llmod 0016                   ??i2___ftsub 003C  
                 ??i2___fttol 0029              ?i2_updete_lcd_AN 0001            ?i2_update_lcd_temp 0001  
              ___wmul@product 00A4                     delay_ms@n 00A0                     delay_ms@x 00A2  
                 ??i2_isdigit 0001             ?i2_set_baoundares 0001           ??i2_update_lcd_temp 0069  
                    _PIR1bits 0F9E            __end_of__div_to_l_ 2BFC      __end_of_read_adc_voltage 3AF6  
                    i2u811_45 3F3E                      i2u811_46 3F40                      i2u814_40 3224  
                    i2u904_40 41D6                      i2u770_40 3E5E                      i2u818_40 32A2  
                    i2u771_40 3E76                      i2u772_40 3E8E                      i2u880_40 27A4  
                    i2u960_40 37FC                      i2u873_40 3A56                      i2u890_40 2848  
                    i2u962_40 2DF0                      i2u970_40 2A22                      i2u883_40 27CC  
                    i2u867_40 370A                      i2u893_40 287C                      i2u886_40 280A  
                    i2u984_40 30AE                      i2u992_40 3BE6                      i2u968_40 2EC6  
                    i2u985_40 30DE                      i2u977_40 2AF4                      i2u985_45 30D6  
                    i2u989_40 313E            ??i2_set_baoundares 0001    read_adc_raw_no_lib@channel 00A6  
                 ??i2_sprintf 0046                   _lcd_welcome 1D78               i2__div_to_l_@f1 0001  
             i2__div_to_l_@f2 0004                    _ADCON0bits 0FC2             ___wmul@multiplier 00A0  
                    i2___ftge 3938                      i2___wmul 4460                     lcd_init@i 00AA  
                   lcd_putc@c 00AD             i2___awdiv@divisor 0009                     lcd_puts@s 00AE  
                    i2_fround 23D6                ??i2_lcd_gotoxy 000C     __end_ofi2_update_lcd_temp 4294  
            ??_set_baoundares 00A0             i2___awdiv@counter 000B                  ??_lcd_gotoxy 00AB  
               ??_setupSerial 00A0                   _INTCON3bits 0FF0                     copy_data0 3FD4  
          i2___awmod@dividend 0001           i2_update_lcd_COOLER 3534             ??_update_lcd_temp 00DB  
             _lcd_send_nibble 443A                  _reloadTimer0 45F8                      __Hrparam 0000  
           i2___lbdiv@divisor 0005             i2___lbdiv@counter 0007              ??_set_clock_mode 0005  
                    __Lrparam 0000                  ??_initTimer0 00A0            __end_of_lcd_gotoxy 3FC0  
       i2___wmul@multiplicand 0003                      ___awtoft 41F4                      ___ftpack 3166  
        ?i2_update_lcd_COOLER 0001                   _fround$1746 00C5                   _fround$1747 00C2  
                    ___lltoft 3C2A         __end_ofi2__tdiv_to_l_ 2B06                    sprintf@len 0117  
                  sprintf@val 011D     i2update_lcd_COOLER@Buffer 0069                      _delay_ms 43A0  
               ?i2_update_lcd 0001                      __ptext10 42F2                      __ptext11 45DC  
                    __ptext20 39AC                      __ptext12 45F8                      __ptext21 35BC  
                    __ptext13 3A8C                      __ptext30 3C2A                      __ptext22 44F4  
                    __ptext14 4104                      __ptext31 3AF6                      __ptext23 21EE  
                    __ptext15 2ED8                      __ptext40 3D9A                      __ptext32 3640  
                    __ptext24 431E                      __ptext16 41F4                      __ptext41 3F7C  
                    __ptext33 2FBE                      __ptext25 417E                      __ptext17 1D78  
                    __ptext42 3C86                      __ptext34 4044                      __ptext26 2BFC  
                    __ptext18 0012                      __ptext51 45C6                      __ptext43 3E9C  
                    __ptext35 25BA                      __ptext27 290A                      __ptext19 16A4  
                    __ptext60 3A1C                      __ptext52 4084                      __ptext44 443A  
                    __ptext36 3166                      __ptext28 2B06                      __ptext61 36C4  
                    __ptext53 3CE2                      __ptext45 422C                      __ptext37 43EE  
                    __ptext29 43C8                      __ptext70 3D3E                      __ptext62 4578  
                    __ptext54 4260                      __ptext46 43A0                      __ptext38 38C4  
                    __ptext71 3BC4                      __ptext63 23D6                      __ptext55 3748  
                    __ptext47 45EC                      __ptext39 4414                      __ptext80 3DF4  
                    __ptext72 37CA                      __ptext64 4376                      __ptext56 3368  
                    __ptext48 4558                      __ptext81 4002                      __ptext73 3094  
                    __ptext65 41BA                      __ptext57 3534                      __ptext49 4610  
                    __ptext82 3F34                      __ptext74 40C4                      __ptext66 2CF0  
                    __ptext58 0B78                      __ptext83 4516                      __ptext75 2762  
                    __ptext67 2A08                      __ptext59 1A10                      __ptext84 42C4  
                    __ptext76 3214                      __ptext68 2DE4                      __ptext85 434A  
                    __ptext77 44AC                      __ptext69 4460                      __ptext86 4294  
                    __ptext78 3938                      __ptext87 4486                      __ptext79 44D0  
                    __ptext88 3E4A                      __ptext89 4602                      __powers_ FE9B  
                    _lcd_init 3C86                      _lcd_putc 3D9A                      _lcd_puts 4414  
          i2___lbmod@dividend 0002            __end_of_initTimer0 4578                i2_isdigit$1506 0002  
                    _initMode 4610                 ?_delay_cycles 0001           __end_of_setupSerial 4558  
        __end_ofi2__div_to_l_ 2ED8             ??_init_adc_no_lib 00A0                      isa$xinst 0000  
       update_lcd_COOLER@mode 013D                      int$flags 007D         ??i2_update_lcd_COOLER 0069  
                ??_setupPorts 00A0             i2___awmod@divisor 0003             i2___awmod@counter 0005  
                  _INTCONbits 0FF2                ??i2_update_lcd 007B                  ??_update_lcd 00DB  
                    isdigit@c 00A2           _read_adc_raw_no_lib 4104                      scale@scl 00C3  
            ??i2_delay_cycles 0001                      intlevel2 0000                     sprintf@ap 0115  
                   sprintf@cp 0113       __end_of_lcd_send_nibble 4460              __tdiv_to_l_@exp1 00AE  
            __tdiv_to_l_@cntr 00AD                     sprintf@sp 0100                ??_delay_cycles 00A0  
            __tdiv_to_l_@quot 00A9              ___lldiv@dividend 00A0             i2___lbmod@divisor 0001  
           i2___lbmod@counter 0003            __end_of_setupPorts 45B0          __end_ofi2_lcd_gotoxy 4044  
        ?_read_adc_raw_no_lib 00A0              ??_set_setup_mode 0005            __end_of_update_lcd 45C6  
  __end_of_send_string_no_lib 431E                 _lcd_send_byte 3E9C                  ?__tdiv_to_l_ 00A0  
                    sprintf@c 012C                      sprintf@f 0102              ___lldiv@quotient 00A8  
             i2delay_cycles@n 0004               i2delay_cycles@x 0005                   _setupSerial 4538  
           i2__div_to_l_@exp1 000C             i2__div_to_l_@cntr 000B             i2__div_to_l_@quot 0007  
       ??_read_adc_raw_no_lib 00A2  
